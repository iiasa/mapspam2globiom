GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  *******************************************************************************
   2  ********************               SPAMc                   ********************
   3  *******************************************************************************
   4   
      Basic model to run the Spatial Production Allocation Model (SPAM) for
      at Country level assessments at various resolutions.
       
      The input (gdx_input) and output data files are parameters and need to be set
      before the code can be run.
       
      version 0.1
  14   
  15   
  16  *******************************************************************************
  17  * Sets, parameters, variables, scalars
  18  *******************************************************************************
  19   
  21   
  22  sets
  23      i            grid cells
  24      j            crop system combinations
  25      j_s(j)       subsistence system
  26      s            crop list
  27      k            adm list
  28   
  29      n(s,j)       crops with corresponding systems
  30      l(k,i)       adm with corresponding grid cells
  31      m(k,s)       adm with corresponding crops
  32      d(i,j)       grid cells and system for spatial detail
  33      system_grid(i,j)  All system grid cell combinatons
  34      sign sign for negative slacks /plus,minus/
  35  ;
  36   
  37  scalars
  38      scalef         scaling parameter for GAMS: number of grid cells
  39      rps_factor     base value for alloc_s  /1/
  40  ;
  41   
  42  parameters
  43      report(*,*)     report on model performance
  44      score(i,j)      score per grid cell and crop-system
  45      adm_area(k,s)   crop area per adm
  46      cl(i)           crop cover per grid cell
  47      crop_area(j)    total area per crop-system
  48      priors(i,j)     prior information about area shares
  49      ir_area(i)      irrigated area per grid cell
  50      ir_crop(j)      total irrigated crop area
  51      rur_pop_share(i,j)  rural population share per grid cell
  52      slackweights(k,s) weights for adm slacks
  53  ;
  54   
  55  variables
  56      alloc(i,j)          allocation of crop j to plot i
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  57      adm_slack(k,s,sign) slack variable for adm area
  58      sum_score           weighted sum of score
  59      cl_slack(i)         slack for land cover
  60      ir_slack(i)         slack for ir_area
  61      s_slack(i,j,sign)   slack for subsistence allocation
  62      sum_ir_slack        sum of ir slack
  63      sum_cl_slack        sum of cl slack
  64      sum_adm_slack       weighted sum of adm slacks
  65      sum_all_slack       weighted sum of all slacks
  66      sum_s_slack         sum of subsistence slack
  67  ;
  68   
  69  equations
  70      obj_max_score        objective function: maximize score
  71      sum_one(j)           sum of land allocation shares is 1
  72      adm_stat_slack(k,s)  adm statistics constraint with slack
  73      ir_cover_slack(i)    irrigated crops constraint with slack
  74      cl_cover_slack(i)    land cover constraint with slack
  75      s_alloc_slack(i,j)   allocate subsistence share proportional to rural population
  76      rps_con(i,j)         ensure that s_alloc_slack is equal or larger than 1
  77  ;
  78   
  79   
  80  *******************************************************************************
  81  * load data from GDX file
  82  *******************************************************************************
  83   
GDXIN   C:\Users\dijk158\Dropbox\mapspam2globiom_mwi\processed_data\intermediate_output\MI02\5min\input_5min_2010_MI02_MWI.gdx
--- LOAD  i = 8:i
--- LOAD  j = 9:j
--- LOAD  s = 14:s
--- LOAD  k = 10:k
--- LOAD  j_s = 6:j_s
--- LOAD  n = 11:n
--- LOAD  l = 12:l
--- LOAD  m = 13:m
--- LOAD  adm_area = 2:adm_area
--- LOAD  cl = 1:cl
--- LOAD  crop_area = 5:crop_area
--- LOAD  scalef = 16:scalef
--- LOAD  ir_crop = 3:ir_crop
--- LOAD  ir_area = 4:ir_area
--- LOAD  score = 7:score
--- LOAD  rur_pop_share = 15:rur_pop_share
  88   
  89  system_grid(i,j) = yes;
  90   
  91  * abort in case of negative values due to errors in pre processing
  92  abort$sum(j$(ir_crop(j) < 0), 1) "ir_crop should be positive", ir_crop;
  93  abort$sum(j$(crop_area(j) < 0), 1) "crop_area should be positive", crop_area;
  94  abort$sum(i$(cl(i) < 0), 1) "cl should be positive", cl;
  95  abort$sum(system_grid(i,j)$(score(i,j) < 0), 1) "score should be positive", score;
  96   
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  97   
  98  *******************************************************************************
  99  * Prepare
 100  *******************************************************************************
 101   
 102  * Initialize report
 103  report('min_all_slack', 'mstat') = 13;
 104  report('min_all_slack', 'sstat') = 13;
 105  report('max_score', 'mstat') = 13;
 106  report('max_score', 'sstat') = 13;
 107   
 108   
 109  *******************************************************************************
 110  * Set boundary values
 111  *******************************************************************************
 112   
 113  * Ensure that variables are positive
 114  positive variable alloc, cl_slack, ir_slack, adm_slack, s_slack;
 115   
 116  * Alloc can not be higher than scalef (=100% or 1 after scaling)
 117  * meaning all crop_area in one grid cell i or scalef*cl(i)/crop_area(j),
 118  * or grid-cell area/total crop area when crop area is divided over more grid cells
 119  alloc.up(i,j) = min(scalef, scalef*cl(i)/crop_area(j))$crop_area(j);
 120   
 121  *******************************************************************************
 122  * Objective functions
 123  *******************************************************************************
 124   
 125  * Objective function to allocate using score including slack
 126  * We prefer to have s_slack over adm, cl and ir slack and therefore add weights.
 127  * Of these slacks with weights we would like to minize ir and cl slack so add
 128  * a higher weight than for adm.
 129  slackweights(k,s)$adm_area(k,s) = 1/adm_area(k,s);
 130  obj_max_score.. sum_score =e= sum(system_grid(i,j), (1/scalef)*alloc(i,j)*score(i,j)) -
 131  (sum(system_grid(i,j), (s_slack(i,j, 'plus') + s_slack(i,j, 'minus'))) +
 132      1e5*sum(m$adm_area(m), slackweights(m)*(adm_slack(m,'plus') + adm_slack(m,'minus'))) +
 133      1e6*sum(i,cl_slack(i)) +
 134      1e6*sum(i,ir_slack(i)));
 135   
 136   
 137   
 138  *******************************************************************************
 139  * Constraints
 140  *******************************************************************************
 141  * Constraint 1
 142  * Allocated shares are in between 0 and 1
 143  * Set by postive values and alloc.up statements above.
 144  *
 145   
 146  * Constraint 2
 147  * sum of allocated shares for each crop over all grid cells is 1
 148  *
 149  sum_one(j)$crop_area(j)..
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 150      (1/scalef)*sum(i, alloc(i,j)) =e= 1;
 151   
 152  * Constraint 3
 153  * Sum of allocated area over all crops should not exceed actual cropland in a grid cell.
 154  *
 155  cl_cover_slack(i)..
 156      (1/scalef)*sum(system_grid(i,j), alloc(i,j)*crop_area(j)) =l= cl(i) + cl_slack(i);
 157   
 158   
 159  * Contstraint 4
 160  * Irrigated grid cells are allocated
 161  *
 162  ir_cover_slack(i)..
 163      (1/scalef)*sum(j, alloc(i,j)*ir_crop(j)) =l= ir_area(i) + ir_slack(i);
 164   
 165   
 166  * Constraint 5
 167  * Total allocation per crop should be equal to land use in adm
 168  * allow slack between adm_area and total allocation into (k,s)
 169  * if adm_area = 0 then we don't allow any slack
 170  * CHECK: SPAM uses additional constraint on artificial adms, for which no slack is allowed
 171  *
 172  adm_stat_slack(m(k,s))$(adm_area(k,s) > 0)..
 173   (1/scalef)*sum((l(k,i),n(s,j)), alloc(i,j)*crop_area(j)) =e=
 174      adm_area(k,s) + (adm_slack(k,s,'plus') - adm_slack(k,s,'minus'))$adm_area(k,s);
 175   
 176   
 177  * Constraint 6
 178  * Subsistence allocation should be similar to rural population share in sample
 179  *
 180  * For S crops we want the crop area to be allocated in line with rural population.
 181  * If we do not use weights, the model will push the allocated area to zero
 182  * for crops with small total area = very low rural area starting values.
 183   
 184  parameters
 185      small_area_weights(i,j)  Large weight for crops with small S area
 186      max_area                 Maximum of area otherwise slack becomes very large;
 187   
 188  max_area = smax((j),crop_area(j));
 189  small_area_weights(i,j)$rur_pop_share(i,j) = 1/crop_area(j)*max_area;
 190   
 191  s_alloc_slack(i,j)$j_s(j)..
 192      alloc(i,j) =e= scalef*(rps_factor + small_area_weights(i,j)*
 193      (s_slack(i,j,'plus')- s_slack(i,j,'minus')))* rur_pop_share(i,j);
 194   
 195   
 196  *******************************************************************************
 197  * Model: mazimize suitability score
 198  *******************************************************************************
 199   
 200  * solver options
 201  option
 202      limrow = 5
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 203      limcol = 5
 204      solprint = off
 205      sysout = off
 206      lp  = cplex
 207      reslim = 900000
 208      BRatio = 1
 209  ;
 210   
 211  * Initial values
 212  adm_slack.l(k,s,sign) = 0.0 ;
 213  ir_slack.l(i) = 0;
 214  cl_slack.l(i) = 0;
 215  alloc.l(i,j) = 0;
 216  s_slack.l(i,j,sign) = 0;
 217   
 218  * Model
 219  model max_score  /obj_max_score, sum_one, cl_cover_slack, adm_stat_slack, ir_cover_slack, s_alloc_slack/;
 220   
 221  * Fixes constant variables (where lower and upper bound is equal) and simplifies model
 222  max_score.holdfixed = 1;
 223   
 224  * Solve model
 225  solve max_score using lp maximize sum_score;
 226   
 227  * check sum_score
 228  parameters sum_score_l sum of weighted score;
 229  sum_score_l = sum_score.l
 230  display sum_score_l;
 231   
 232  * Abort if max_score model does not result in solution
 233  if (max_score.modelstat > 2,
 234      abort$1 "max_score was not solved!"
 235  );
 236   
 237   
 238  *******************************************************************************
 239  * Post-process
 240  *******************************************************************************
 241   
 242  parameters
 243      ir_slack_l(i)                ir_slack
 244      adm_slack_l(k,s,sign)        adm_slack
 245      cl_slack_l(i)                cl_slack
 246      s_slack_l(i,j,sign)          s_slack
 247      sum_ir_slack_l               sum of ir_slack
 248      sum_adm_slack_l              sum of adm_slack
 249      sum_cl_slack_l               sum of cl_slack
 250      sum_s_slack_l                sum of s_slack
 251      sum_all_slack_l              sum of all_slack
 252  ;
 253   
 254   
 255  * Extract slacks
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 256  ir_slack_l(i) = ir_slack.l(i);
 257  adm_slack_l(k,s,sign) = adm_slack.l(k,s,sign);
 258  cl_slack_l(i) = cl_slack.l(i);
 259  s_slack_l(i,j, sign) = s_slack.l(i,j, sign);
 260   
 261  * Calculate sum of slacks
 262  sum_ir_slack_l = sum(i, ir_slack.l(i));
 263  sum_cl_slack_l = sum(i, cl_slack.l(i));
 264  sum_s_slack_l = sum(system_grid(i,j),
 265                   small_area_weights(i,j)*(s_slack.l(i,j, 'plus') + s_slack.l(i,j, 'minus')));
 266   
 267  * we sum up plus and min. Normally plus and min slack are the same.
 268  * However in case of statistical inconsistencies in the adm data there might be differences.
 269  sum_adm_slack_l = sum(m,
 270                (adm_slack.l(m,'plus')+ adm_slack.l(m,'minus')));
 271  sum_all_slack_l = sum_s_slack_l + sum_ir_slack_l + sum_cl_slack_l + sum_adm_slack_l;
 272   
 273  display sum_all_slack_l;
 274  display sum_s_slack_l;
 275  display sum_ir_slack_l;
 276  display sum_cl_slack_l;
 277  display sum_adm_slack_l;
 278   
 279   
 280  parameters
 281      palloc(i,j)           Allocations
 282      rur_pop_alloc(i,j)    Allocation based on rural population
 283  ;
 284   
 285  * Allocation
 286  palloc(i,j) = alloc.l(i,j)*crop_area(j)/scalef;
 287  rur_pop_alloc(i,j) = rur_pop_share(i,j)*crop_area(j);
 288   
 289   
 290  * Reporting
 291  report('max_score', 'mstat') = max_score.modelstat;
 292  report('max_score', 'sstat') = max_score.solvestat;
 293  report('max_score', 'resusd') = max_score.resusd;
 294  report('min_all_slack', 'sum_all_slack') = sum_all_slack_l;
 295  report('min_all_slack', 'sum_adm_slack') = sum_adm_slack_l;
 296  report('min_all_slack', 'sum_cl_slack') = sum_cl_slack_l;
 297  report('min_all_slack', 'sum_ir_slack') = sum_ir_slack_l;
 298  report('min_all_slack', 'sum_s_slack') = sum_s_slack_l;
 299   
 300   
 301  *******************************************************************************
 302  * Save
 303  *******************************************************************************
 304   
 305  execute_unload "C:\Users\dijk158\Dropbox\mapspam2globiom_mwi\processed_data\intermediate_output\MI02\5min\output_5min_2010_MI02_MWI.gdx",
 306  adm_area, cl crop_area, scalef, ir_crop, ir_area, score, rur_pop_share,
 307  alloc, palloc, report, sum_cl_slack_l, sum_adm_slack_l, sum_ir_slack_l, sum_s_slack_l, sum_score_l,
 308  ir_slack_l, adm_slack_l, s_slack_l, cl_slack_l, rur_pop_alloc;
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 309   
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  D:\R\library\3.6.3\mapspam2globiom\gams\max_score.gms
     2       84 GDXIN          1      84  C:\Users\dijk158\Dropbox\mapspam2globiom_mwi\processed_data\intermediate_output\MI02\5min\input_5min_2010_MI02_MWI.gdx


COMPILATION TIME     =        0.016 SECONDS      4 MB  24.6.1 r55820 WEX-WEI
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                 05/03/20 10:55:31 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


---- obj_max_score  =E=  objective function: maximize score

obj_max_score..  - 0.0277985544347396*alloc(1454,bean_H) - 0.0691480467877357*alloc(1454,bean_L) - 0.0824315779287806*alloc(1454,cass_L) - 0.0333846533462585*alloc(1454,chic_H) - 0.112557254485795*alloc(1454,chic_L) - 0.068749213060993*alloc(1454,coff_L)
     
      - 0.13145486140512*alloc(1454,cott_L) - 0.0318773208317234*alloc(1454,cowp_H) - 0.120840317301335*alloc(1454,cowp_L) - 0.0359724803637879*alloc(1454,grou_H) - 0.0858674894374638*alloc(1454,grou_L) - 0.0330704216514518*alloc(1454,lent_H)
     
      - 0.112557254485795*alloc(1454,lent_L) - 0.0302903471184213*alloc(1454,maiz_H) - 0.0684117833795024*alloc(1454,maiz_L) - 0.0373163077290248*alloc(1454,mill_H) - 0.113569643003182*alloc(1454,mill_L) - 0.13145486140512*alloc(1454,ofib_L)
     
      - 0.12108574623921*alloc(1454,ooil_L) - 0.0288192991639838*alloc(1454,opul_H) - 0.112557254485795*alloc(1454,opul_L) - 0.0391174884975706*alloc(1454,pige_H) - 0.144738404248861*alloc(1454,pige_L) - 0.0909389531644572*alloc(1454,pota_H)
     
      - 0.0858674835861159*alloc(1454,pota_L) - 0.0391784607326472*alloc(1454,rest_H) - 0.0684117833795024*alloc(1454,rest_L) - 0.0388952453513131*alloc(1454,rice_H) - 0.12108574623921*alloc(1454,rice_L) - 0.117435066855842*alloc(1454,sorg_L)
     
      - 0.12108574623921*alloc(1454,soyb_L) - 0.12108574623921*alloc(1454,sunf_L) - 0.0584273318997919*alloc(1454,temf_H) - 0.0684117833795024*alloc(1454,temf_L) - 0.0628660035551513*alloc(1454,toba_H) - 0.11185168724884*alloc(1454,toba_L)
     
      - 0.000398813018456724*alloc(1454,trof_L) - 0.167775535268056*alloc(1454,vege_H) - 0.12985960841702*alloc(1454,vege_L) - 0.0565024804251111*alloc(1460,bean_H) - 0.106022843595875*alloc(1460,bean_L) - 0.0601593757758054*alloc(1460,cass_L)
     
      - 0.0347563361733952*alloc(1460,chic_H) - 0.0646076582478314*alloc(1460,chic_L) - 0.0569998496447244*alloc(1460,coff_H) - 0.0460475395234762*alloc(1460,coff_L) - 0.0723998573362731*alloc(1460,cott_L) - 0.0447963346391011*alloc(1460,cowp_H)
     
      - 0.116207910463771*alloc(1460,cowp_L) - 0.0581901941348529*alloc(1460,grou_H) - 0.0723998573362731*alloc(1460,grou_L) - 0.0344291935696436*alloc(1460,lent_H) - 0.0646076582478314*alloc(1460,lent_L) - 0.0656481202234065*alloc(1460,maiz_H)
     
      - 0.116207910463771*alloc(1460,maiz_L) - 0.03743616663797*alloc(1460,mill_H) - 0.0963899801355023*alloc(1460,mill_L) - 0.0723998573362731*alloc(1460,ofib_L) - 0.115747737056603*alloc(1460,ooil_L) - 0.0300034042479379*alloc(1460,opul_H)
     
      - 0.0646076582478314*alloc(1460,opul_L) - 0.0526174069228201*alloc(1460,pige_H) - 0.116207910463771*alloc(1460,pige_L) - 0.0867622225359526*alloc(1460,pota_H) - 0.0515081988101928*alloc(1460,pota_L) - 0.0849112851130272*alloc(1460,rest_H)
     
      - 0.116207910463771*alloc(1460,rest_L) - 0.0500083182766612*alloc(1460,rice_H) - 0.106483005300347*alloc(1460,rice_L) - 0.120318751551611*alloc(1460,sorg_L) - 0.0963899801355023*alloc(1460,soyb_L) - 0.115747737056603*alloc(1460,sunf_L)
     
      - 0.126629268852378*alloc(1460,temf_H) - 0.116207910463771*alloc(1460,temf_L) - 0.086683319681039*alloc(1460,toba_H) - 0.0635952989871845*alloc(1460,toba_L) - 0.00319050414765379*alloc(1460,trof_L) - 0.215295461055529*alloc(1460,vege_H)
     
      - 0.0820940721797668*alloc(1460,vege_L) - 0.199223719045578*alloc(1461,rice_I) - 0.29832224671165*alloc(1461,sugc_I) - 0.0391369136166215*alloc(1461,bean_H) - 0.0372123142598491*alloc(1461,bean_L) - 0.0141425207209115*alloc(1461,cass_L)
     
      - 0.0417136043756418*alloc(1461,coff_H) - 0.015615060702911*alloc(1461,coff_L) - 0.0178238714073287*alloc(1461,cott_L) - 0.0312693058194713*alloc(1461,cowp_H) - 0.0391757048034137*alloc(1461,cowp_L) - 0.0399239693959567*alloc(1461,grou_H)
     
      - 0.0178238714073287*alloc(1461,grou_L) - 0.0466685021682094*alloc(1461,maiz_H) - 0.0391757048034137*alloc(1461,maiz_L) - 0.0256768115843739*alloc(1461,mill_H) - 0.0260455521201709*alloc(1461,mill_L) - 0.0178238714073287*alloc(1461,ofib_L)
     
      - 0.0281930085157939*alloc(1461,ooil_L) - 0.0366151559118171*alloc(1461,pige_H) - 0.0391757048034137*alloc(1461,pige_L) - 0.0603624670427331*alloc(1461,rest_H) - 0.0391757048034137*alloc(1461,rest_L) - 0.0348112440600022*alloc(1461,rice_H)
     
      - 0.0381940095316314*alloc(1461,rice_L) - 0.0480109417697366*alloc(1461,sorg_L) - 0.0260455521201709*alloc(1461,soyb_L) - 0.0281930085157939*alloc(1461,sunf_L) - 0.0900193072990523*alloc(1461,temf_H) - 0.0391757048034137*alloc(1461,temf_L)
     
      - 0.0594397089978505*alloc(1461,toba_H) - 0.018805565216274*alloc(1461,toba_L) - 0.00592083781381382*alloc(1461,trof_L) - 0.150591272747765*alloc(1461,vege_H) - 0.018805565216274*alloc(1461,vege_L) - 0.0537522186924755*alloc(1490,bean_H)
     
      - 0.137437057184821*alloc(1490,bean_L) - 0.154309910474765*alloc(1490,cass_L) - 0.0404680191623793*alloc(1490,chic_H) - 0.102249496554354*alloc(1490,chic_L) - 0.0929234075636284*alloc(1490,coff_L) - 0.139921972518674*alloc(1490,cott_L)
     
      - 0.0427189483371159*alloc(1490,cowp_H) - 0.165722098626644*alloc(1490,cowp_L) - 0.0510234090417985*alloc(1490,grou_H) - 0.111606258310965*alloc(1490,grou_L) - 0.0400871155742852*alloc(1490,lent_H) - 0.102249496554354*alloc(1490,lent_L)
     
      - 0.0620521892205383*alloc(1490,maiz_H) - 0.165722098626644*alloc(1490,maiz_L) - 0.047020557548104*alloc(1490,mill_H) - 0.136209947603534*alloc(1490,mill_L) - 0.139921972518674*alloc(1490,ofib_L) - 0.165722098626644*alloc(1490,ooil_L)
     
      - 0.0349340141027746*alloc(1490,opul_H) - 0.102249496554354*alloc(1490,opul_L) - 0.0511424712976239*alloc(1490,pige_H) - 0.170875989295061*alloc(1490,pige_L) - 0.109712730766628*alloc(1490,pota_H) - 0.0961752649229493*alloc(1490,pota_L)
     
      - 0.0802601980507894*alloc(1490,rest_H) - 0.165722098626644*alloc(1490,rest_L) - 0.0519064818231546*alloc(1490,rice_H) - 0.165722098626644*alloc(1490,rice_L) - 0.174557341444315*alloc(1490,sorg_L) - 0.165722098626644*alloc(1490,soyb_L)
     
      - 0.165722098626644*alloc(1490,sunf_L) - 0.119693044141187*alloc(1490,temf_H) - 0.165722098626644*alloc(1490,temf_L) - 0.0852914441873551*alloc(1490,toba_H) - 0.163574642231021*alloc(1490,toba_L) - 0.000920337488749678*alloc(1490,trof_L)
     
      - 0.207901216879498*alloc(1490,vege_H) - 0.129215375009142*alloc(1490,vege_L) - 0.0583728466171886*alloc(1492,bean_H) - 0.144769077014747*alloc(1492,bean_L) - 0.155107542820163*alloc(1492,cass_L) - 0.044655114753986*alloc(1492,chic_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.118263348561735*alloc(1492,chic_L) - 0.101727965912717*alloc(1492,coff_L) - 0.14068892039549*alloc(1492,cott_L) - 0.0460796222602822*alloc(1492,cowp_H) - 0.168513788430145*alloc(1492,cowp_L) - 0.0545991812007226*alloc(1492,grou_H)
     
      - 0.116974893448674*alloc(1492,grou_L) - 0.0442348002985565*alloc(1492,lent_H) - 0.118263348561735*alloc(1492,lent_L) - 0.0671777540911025*alloc(1492,maiz_H) - 0.168513788430145*alloc(1492,maiz_L) - 0.0509717046253742*alloc(1492,mill_H)
     
      - 0.143112478494874*alloc(1492,mill_L) - 0.14068892039549*alloc(1492,ofib_L) - 0.168513788430145*alloc(1492,ooil_L) - 0.0385485240163914*alloc(1492,opul_H) - 0.118263348561735*alloc(1492,opul_L) - 0.0553889692556511*alloc(1492,pige_H)
     
      - 0.17556970655631*alloc(1492,pige_L) - 0.123369672943663*alloc(1492,pota_H) - 0.0958071273674847*alloc(1492,pota_L) - 0.0868897603079981*alloc(1492,rest_H) - 0.168513788430145*alloc(1492,rest_L) - 0.0560170180022197*alloc(1492,rice_H)
     
      - 0.168513788430145*alloc(1492,rice_L) - 0.180600882755789*alloc(1492,sorg_L) - 0.168513788430145*alloc(1492,soyb_L) - 0.168513788430145*alloc(1492,sunf_L) - 0.129579793827335*alloc(1492,temf_H) - 0.168513788430145*alloc(1492,temf_L)
     
      - 0.0924100657402003*alloc(1492,toba_H) - 0.165538026923238*alloc(1492,toba_L) - 0.00251558864830346*alloc(1492,trof_L) - 0.225862791901755*alloc(1492,vege_H) - 0.133510287800388*alloc(1492,vege_L) - 0.0575302439688844*alloc(1493,bean_H)
     
      - 0.134246539505925*alloc(1493,bean_L) - 0.153512278129367*alloc(1493,cass_L) - 0.0440747826102171*alloc(1493,chic_H) - 0.101267792505549*alloc(1493,chic_L) - 0.0976171189735295*alloc(1493,coff_L) - 0.139185685705049*alloc(1493,cott_L)
     
      - 0.045715146263577*alloc(1493,cowp_H) - 0.164280221170672*alloc(1493,cowp_L) - 0.0544216637163548*alloc(1493,grou_H) - 0.109152015742998*alloc(1493,grou_L) - 0.0436599305075398*alloc(1493,lent_H) - 0.101267792505549*alloc(1493,lent_L)
     
      - 0.0663311113502298*alloc(1493,maiz_H) - 0.164280221170672*alloc(1493,maiz_L) - 0.0502179730261312*alloc(1493,mill_H) - 0.133142144393575*alloc(1493,mill_L) - 0.139185685705049*alloc(1493,ofib_L) - 0.164280221170672*alloc(1493,ooil_L)
     
      - 0.0380475523426021*alloc(1493,opul_H) - 0.101267792505549*alloc(1493,opul_L) - 0.0549906202650352*alloc(1493,pige_H) - 0.168636491196387*alloc(1493,pige_L) - 0.120869807201055*alloc(1493,pota_H) - 0.0960832232198982*alloc(1493,pota_L)
     
      - 0.0857946867108491*alloc(1493,rest_H) - 0.164280221170672*alloc(1493,rest_L) - 0.0554504254970165*alloc(1493,rice_H) - 0.164280221170672*alloc(1493,rice_L) - 0.171949699938829*alloc(1493,sorg_L) - 0.164280221170672*alloc(1493,soyb_L)
     
      - 0.164280221170672*alloc(1493,sunf_L) - 0.127946696780671*alloc(1493,temf_H) - 0.164280221170672*alloc(1493,temf_L) - 0.0912206834019304*alloc(1493,toba_H) - 0.162347509244342*alloc(1493,toba_L) - 0.00165660711404017*alloc(1493,trof_L)
     
      - 0.222315419790521*alloc(1493,vege_H) - 0.127098591379406*alloc(1493,vege_L) - 0.205108752583209*alloc(1500,rice_I) - 0.298350668667883*alloc(1500,sugc_I) - 3.1111408954147E-5*alloc(1500,whea_I) - 0.0605154112947393*alloc(1500,bean_H)
     
      - 0.0883523930686211*alloc(1500,bean_L) - 0.0369362096304137*alloc(1500,cass_L) - 8.57096246692149E-6*alloc(1500,chic_H) - 3.05525365611136E-9*alloc(1500,chic_L) - 0.0633667980871823*alloc(1500,coff_H) - 0.0398199323599439*alloc(1500,coff_L)
     
      - 0.0441455208427501*alloc(1500,cott_L) - 0.0482636496907232*alloc(1500,cowp_H) - 0.0921871324526993*alloc(1500,cowp_L) - 0.0618637017896569*alloc(1500,grou_H) - 0.0441455208427501*alloc(1500,grou_L) - 8.49028863052811E-6*alloc(1500,lent_H)
     
      - 3.05525365611136E-9*alloc(1500,lent_L) - 0.0715435564967845*alloc(1500,maiz_H) - 0.0921871324526993*alloc(1500,maiz_L) - 0.0397779610197746*alloc(1500,mill_H) - 0.0655587070847929*alloc(1500,mill_L) - 0.0441455208427501*alloc(1500,ofib_L)
     
      - 0.0902851049949513*alloc(1500,ooil_L) - 7.39888262117209E-6*alloc(1500,opul_H) - 3.05525365611136E-9*alloc(1500,opul_L) - 0.0565609761218795*alloc(1500,pige_H) - 0.0921871324526993*alloc(1500,pige_L) - 2.16212628628508E-5*alloc(1500,pota_H)
     
      - 2.92824543145541E-9*alloc(1500,pota_L) - 0.0925366225723624*alloc(1500,rest_H) - 0.0921871324526993*alloc(1500,rest_L) - 0.0537703083602771*alloc(1500,rice_H) - 0.0902851049949513*alloc(1500,rice_L) - 0.109520159149811*alloc(1500,sorg_L)
     
      - 0.0655587070847929*alloc(1500,soyb_L) - 0.0902851049949513*alloc(1500,sunf_L) - 0.13800103063814*alloc(1500,temf_H) - 0.0921871324526993*alloc(1500,temf_L) - 0.0924291239109746*alloc(1500,toba_H) - 0.0460782298434064*alloc(1500,toba_L)
     
      - 0.0115348953066318*alloc(1500,trof_L) - 0.23175142737874*alloc(1500,vege_H) - 0.0460782298434064*alloc(1500,vege_L) - 0.0490793382396317*alloc(1527,bean_H) - 0.129368762243966*alloc(1527,bean_L) - 0.150720600028562*alloc(1527,cass_L)
     
      - 0.036132505563684*alloc(1527,chic_H) - 0.0995498367512076*alloc(1527,chic_L) - 0.000674914219367971*alloc(1527,coff_L) - 0.13749841441929*alloc(1527,cott_L) - 0.0396424954684824*alloc(1527,cowp_H) - 0.161120411365751*alloc(1527,cowp_L)
     
      - 0.0483663010658019*alloc(1527,grou_H) - 0.105746777000201*alloc(1527,grou_L) - 0.0357924098213939*alloc(1527,lent_H) - 0.0995498367512076*alloc(1527,lent_L) - 0.0570309560202722*alloc(1527,maiz_H) - 0.161120411365751*alloc(1527,maiz_L)
     
      - 0.0431210105368453*alloc(1527,mill_H) - 0.161120411365751*alloc(1527,mill_L) - 0.13749841441929*alloc(1527,ofib_L) - 0.161120411365751*alloc(1527,ooil_L) - 0.0311913823571518*alloc(1527,opul_H) - 0.0995498367512076*alloc(1527,opul_L)
     
      - 0.0471622791905296*alloc(1527,pige_H) - 0.164525661811243*alloc(1527,pige_L) - 0.0954046062057252*alloc(1527,pota_H) - 0.0954696742806024*alloc(1527,pota_L) - 0.0737655815646532*alloc(1527,rest_H) - 0.161120411365751*alloc(1527,rest_L)
     
      - 0.0475866498128922*alloc(1527,rice_H) - 0.161120411365751*alloc(1527,rice_L) - 0.167194637145807*alloc(1527,sorg_L) - 0.164525661811243*alloc(1527,soyb_L) - 0.161120411365751*alloc(1527,sunf_L) - 0.110007540782931*alloc(1527,temf_H)
     
      - 0.161120411365751*alloc(1527,temf_L) - 0.0781608170726341*alloc(1527,toba_H) - 0.159555831143537*alloc(1527,toba_L) - 0.000674914219367971*alloc(1527,trof_L) - 0.19009927393557*alloc(1527,vege_H) - 0.123724037105191*alloc(1527,vege_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0563131908523216*alloc(1530,bean_H) - 0.134154521208266*alloc(1530,bean_L) - 0.15832872156225*alloc(1530,cass_L) - 0.0420420934284133*alloc(1530,chic_H) - 0.102034740382365*alloc(1530,chic_L) - 0.0951015367251378*alloc(1530,coff_L)
     
      - 0.141210439334431*alloc(1530,cott_L) - 0.0454251064934624*alloc(1530,cowp_H) - 0.16648904650346*alloc(1530,cowp_L) - 0.0553027306098578*alloc(1530,grou_H) - 0.108875925741933*alloc(1530,grou_L) - 0.0416463739301692*alloc(1530,lent_H)
     
      - 0.102034740382365*alloc(1530,lent_L) - 0.0653262682995016*alloc(1530,maiz_H) - 0.16648904650346*alloc(1530,maiz_L) - 0.0493906303141976*alloc(1530,mill_H) - 0.133295555033791*alloc(1530,mill_L) - 0.141210439334431*alloc(1530,ofib_L)
     
      - 0.16648904650346*alloc(1530,ooil_L) - 0.0362928335791567*alloc(1530,opul_H) - 0.102034740382365*alloc(1530,opul_L) - 0.0540702397588895*alloc(1530,pige_H) - 0.170231755887183*alloc(1530,pige_L) - 0.11298551774584*alloc(1530,pota_H)
     
      - 0.0976478034421118*alloc(1530,pota_L) - 0.0844949919978265*alloc(1530,rest_H) - 0.16648904650346*alloc(1530,rest_L) - 0.0545201370741427*alloc(1530,rice_H) - 0.16648904650346*alloc(1530,rice_L) - 0.172839373987278*alloc(1530,sorg_L)
     
      - 0.16648904650346*alloc(1530,soyb_L) - 0.16648904650346*alloc(1530,sunf_L) - 0.12600844568693*alloc(1530,temf_H) - 0.16648904650346*alloc(1530,temf_L) - 0.0896456299298908*alloc(1530,toba_H) - 0.164985823515715*alloc(1530,toba_L)
     
      - 0.000644236882115955*alloc(1530,trof_L) - 0.218036376413732*alloc(1530,vege_H) - 0.128264367131616*alloc(1530,vege_L) - 0.0596578339217185*alloc(1531,bean_H) - 0.143910099137577*alloc(1531,bean_L) - 0.159525158377651*alloc(1531,cass_L)
     
      - 0.0451090801791172*alloc(1531,chic_H) - 0.104765084654093*alloc(1531,chic_L) - 0.0972796658866472*alloc(1531,coff_L) - 0.142775019556644*alloc(1531,cott_L) - 0.047629169858892*alloc(1531,cowp_H) - 0.170753274826123*alloc(1531,cowp_L)
     
      - 0.0574435090888695*alloc(1531,grou_H) - 0.115962516633984*alloc(1531,grou_L) - 0.0446844927925465*alloc(1531,lent_H) - 0.104765084654093*alloc(1531,lent_L) - 0.0689810135486425*alloc(1531,maiz_H) - 0.170753274826123*alloc(1531,maiz_L)
     
      - 0.0522095785625801*alloc(1531,mill_H) - 0.142406876149832*alloc(1531,mill_L) - 0.142775019556644*alloc(1531,ofib_L) - 0.170753274826123*alloc(1531,ooil_L) - 0.038940409631056*alloc(1531,opul_H) - 0.104765084654093*alloc(1531,opul_L)
     
      - 0.0569008800717387*alloc(1531,pige_H) - 0.176888857840649*alloc(1531,pige_L) - 0.123293657200231*alloc(1531,pota_H) - 0.0974944162072878*alloc(1531,pota_L) - 0.0892221512037445*alloc(1531,rest_H) - 0.170753274826123*alloc(1531,rest_L)
     
      - 0.0573599258947739*alloc(1531,rice_H) - 0.170753274826123*alloc(1531,rice_L) - 0.181429187867074*alloc(1531,sorg_L) - 0.170753274826123*alloc(1531,soyb_L) - 0.170753274826123*alloc(1531,sunf_L) - 0.133058117744035*alloc(1531,temf_H)
     
      - 0.170753274826123*alloc(1531,temf_L) - 0.0946278557359647*alloc(1531,toba_H) - 0.168114972257446*alloc(1531,toba_L) - 0.00223948749310587*alloc(1531,trof_L) - 0.230969578158852*alloc(1531,vege_H) - 0.134001133973442*alloc(1531,vege_L)
     
      - 0.0582774233873566*alloc(1532,bean_H) - 0.1344919684438*alloc(1532,bean_L) - 0.155598377290521*alloc(1532,cass_L) - 0.0441081814486454*alloc(1532,chic_H) - 0.101574566975197*alloc(1532,chic_L) - 0.0984147454675795*alloc(1532,coff_L)
     
      - 0.13986060358151*alloc(1532,cott_L) - 0.0468230405654309*alloc(1532,cowp_H) - 0.165139210750539*alloc(1532,cowp_L) - 0.0568551498270004*alloc(1532,grou_H) - 0.109213372977467*alloc(1532,grou_L) - 0.0436930149807568*alloc(1532,lent_H)
     
      - 0.101574566975197*alloc(1532,lent_L) - 0.0674994231095718*alloc(1532,maiz_H) - 0.165139210750539*alloc(1532,maiz_L) - 0.0509961029710036*alloc(1532,mill_H) - 0.133448918863223*alloc(1532,mill_L) - 0.13986060358151*alloc(1532,ofib_L)
     
      - 0.165139210750539*alloc(1532,ooil_L) - 0.0380763838870369*alloc(1532,opul_H) - 0.101574566975197*alloc(1532,opul_L) - 0.0560117109046415*alloc(1532,pige_H) - 0.169342081838734*alloc(1532,pige_L) - 0.120079703281202*alloc(1532,pota_H)
     
      - 0.0966047480101868*alloc(1532,pota_L) - 0.0873058168477181*alloc(1532,rest_H) - 0.165139210750539*alloc(1532,rest_L) - 0.0562044349366147*alloc(1532,rice_H) - 0.165139210750539*alloc(1532,rice_L) - 0.172379177174718*alloc(1532,sorg_L)
     
      - 0.165139210750539*alloc(1532,soyb_L) - 0.165139210750539*alloc(1532,sunf_L) - 0.13020026418479*alloc(1532,temf_H) - 0.165139210750539*alloc(1532,temf_L) - 0.0925937601359106*alloc(1532,toba_H) - 0.163359886059033*alloc(1532,toba_L)
     
      - 0.00153389520506739*alloc(1532,trof_L) - 0.225464461429477*alloc(1532,vege_H) - 0.127742824787284*alloc(1532,vege_L) - 0.0503558682358728*alloc(1539,bean_H) - 0.067552770394244*alloc(1539,bean_L) - 0.0369362096304137*alloc(1539,cass_L)
     
      - 0.0295964141568185*alloc(1539,chic_H) - 0.0398506109771783*alloc(1539,chic_L) - 0.0515586556227241*alloc(1539,coff_H) - 0.0375804459639658*alloc(1539,coff_L) - 0.0385007840012793*alloc(1539,cott_L) - 0.0399465539694576*alloc(1539,cowp_H)
     
      - 0.0684117482714148*alloc(1539,cowp_L) - 0.0518819662705183*alloc(1539,grou_H) - 0.0385007840012793*alloc(1539,grou_L) - 0.0293178391096482*alloc(1539,lent_H) - 0.0398506109771783*alloc(1539,lent_L) - 0.0578295963250973*alloc(1539,maiz_H)
     
      - 0.0684117482714148*alloc(1539,maiz_L) - 0.0333181525799093*alloc(1539,mill_H) - 0.0582880386379877*alloc(1539,mill_L) - 0.0385007840012793*alloc(1539,ofib_L) - 0.0679822593328294*alloc(1539,ooil_L) - 0.0255491020056408*alloc(1539,opul_H)
     
      - 0.0398506109771783*alloc(1539,opul_L) - 0.0469434932540395*alloc(1539,pige_H) - 0.0684117482714148*alloc(1539,pige_L) - 0.0746604438172381*alloc(1539,pota_H) - 0.0381940036802835*alloc(1539,pota_L) - 0.0747985673439105*alloc(1539,rest_H)
     
      - 0.0684117482714148*alloc(1539,rest_L) - 0.0446994418343388*alloc(1539,rice_H) - 0.0679822593328294*alloc(1539,rice_L) - 0.0721237790379034*alloc(1539,sorg_L) - 0.0582880386379877*alloc(1539,soyb_L) - 0.0679822593328294*alloc(1539,sunf_L)
     
      - 0.111548045484846*alloc(1539,temf_H) - 0.0684117482714148*alloc(1539,temf_L) - 0.078406098375596*alloc(1539,toba_H) - 0.0389302729398647*alloc(1539,toba_L) - 0.00291440189532846*alloc(1539,trof_L) - 0.189528302598333*alloc(1539,vege_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0389302729398647*alloc(1539,vege_L) - 0.0432006743165479*alloc(1565,bean_H) - 0.117158953449385*alloc(1565,bean_L) - 0.137927903357875*alloc(1565,cass_L) - 0.0311685160327375*alloc(1565,chic_H) - 0.093997129910092*alloc(1565,chic_L)
     
      - 0.000368135086927183*alloc(1565,coff_L) - 0.0977705237623972*alloc(1565,cott_L) - 0.035021389792656*alloc(1565,cowp_H) - 0.149462805978692*alloc(1565,cowp_L) - 0.0428239128828202*alloc(1565,grou_H) - 0.0977705237623972*alloc(1565,grou_L)
     
      - 0.0308751436404591*alloc(1565,lent_H) - 0.093997129910092*alloc(1565,lent_L) - 0.0505209882236409*alloc(1565,maiz_H) - 0.149462805978692*alloc(1565,maiz_L) - 0.0381316913446633*alloc(1565,mill_H) - 0.149462805978692*alloc(1565,mill_L)
     
      - 0.0977705237623972*alloc(1565,ofib_L) - 0.149462805978692*alloc(1565,ooil_L) - 0.0269062188164238*alloc(1565,opul_H) - 0.093997129910092*alloc(1565,opul_L) - 0.0419997839642069*alloc(1565,pige_H) - 0.15151823237396*alloc(1565,pige_L)
     
      - 0.0799559406959975*alloc(1565,pota_H) - 0.0915735776620555*alloc(1565,pota_L) - 0.0653453902510974*alloc(1565,rest_H) - 0.149462805978692*alloc(1565,rest_L) - 0.0419835484081117*alloc(1565,rice_H) - 0.149462805978692*alloc(1565,rice_L)
     
      - 0.152960098127236*alloc(1565,sorg_L) - 0.15151823237396*alloc(1565,soyb_L) - 0.149462805978692*alloc(1565,sunf_L) - 0.097450403434069*alloc(1565,temf_H) - 0.149462805978692*alloc(1565,temf_L) - 0.0690488988220606*alloc(1565,toba_H)
     
      - 0.148634500867408*alloc(1565,toba_L) - 0.000368135086927183*alloc(1565,trof_L) - 0.167515683655264*alloc(1565,vege_H) - 0.113907101941412*alloc(1565,vege_L) - 0.0573381864368846*alloc(1569,bean_H) - 0.135320285257781*alloc(1569,bean_L)
     
      - 0.15547567452428*alloc(1569,cass_L) - 0.0418366300363903*alloc(1569,chic_H) - 0.101758638678603*alloc(1569,chic_L) - 0.0934756051198034*alloc(1569,coff_L) - 0.139983329753143*alloc(1569,cott_L) - 0.0464877181380769*alloc(1569,cowp_H)
     
      - 0.174342596975022*alloc(1569,cowp_L) - 0.0570098605794068*alloc(1569,grou_H) - 0.10991897532251*alloc(1569,grou_L) - 0.0414428444539855*alloc(1569,lent_H) - 0.101758638678603*alloc(1569,lent_L) - 0.0670336866087051*alloc(1569,maiz_H)
     
      - 0.165384639688414*alloc(1569,maiz_L) - 0.0505460389238778*alloc(1569,mill_H) - 0.164341578405141*alloc(1569,mill_L) - 0.139983329753143*alloc(1569,ofib_L) - 0.165384639688414*alloc(1569,ooil_L) - 0.0361154673234541*alloc(1569,opul_H)
     
      - 0.101758638678603*alloc(1569,opul_L) - 0.0554577440673516*alloc(1569,pige_H) - 0.16986361248037*alloc(1569,pige_L) - 0.109984074555225*alloc(1569,pota_H) - 0.0965127180098316*alloc(1569,pota_L) - 0.0867034190231031*alloc(1569,rest_H)
     
      - 0.165384639688414*alloc(1569,rest_L) - 0.0553775914819348*alloc(1569,rice_H) - 0.165384639688414*alloc(1569,rice_L) - 0.173023445690684*alloc(1569,sorg_L) - 0.165384639688414*alloc(1569,soyb_L) - 0.165384639688414*alloc(1569,sunf_L)
     
      - 0.12930190072241*alloc(1569,temf_H) - 0.165384639688414*alloc(1569,temf_L) - 0.0914378886858108*alloc(1569,toba_H) - 0.163574642231021*alloc(1569,toba_L) - 0.000797625945486136*alloc(1569,trof_L) - 0.222677047895253*alloc(1569,vege_H)
     
      - 0.128233682663034*alloc(1569,vege_L) - 0.056097730274487*alloc(1570,bean_H) - 0.127436050317636*alloc(1570,bean_L) - 0.147315337880373*alloc(1570,cass_L) - 0.041655962572197*alloc(1570,chic_H) - 0.0982613582327555*alloc(1570,chic_L)
     
      - 0.0888432333903273*alloc(1570,coff_L) - 0.135350946320971*alloc(1570,cott_L) - 0.0454888401047839*alloc(1570,cowp_H) - 0.165139210750539*alloc(1570,cowp_L) - 0.0557170904933327*alloc(1570,grou_H) - 0.104673042951042*alloc(1570,grou_L)
     
      - 0.0412638775149671*alloc(1570,lent_H) - 0.0982613582327555*alloc(1570,lent_L) - 0.0653175082157905*alloc(1570,maiz_H) - 0.158113965390261*alloc(1570,maiz_L) - 0.0492957091347576*alloc(1570,mill_H) - 0.126607745206351*alloc(1570,mill_L)
     
      - 0.135350946320971*alloc(1570,ofib_L) - 0.158113965390261*alloc(1570,ooil_L) - 0.0359595061503432*alloc(1570,opul_H) - 0.0982613582327555*alloc(1570,opul_L) - 0.0542889420602812*alloc(1570,pige_H) - 0.161611245836109*alloc(1570,pige_L)
     
      - 0.111317450216912*alloc(1570,pota_H) - 0.0941198443790295*alloc(1570,pota_L) - 0.0844836614378185*alloc(1570,rest_H) - 0.158113965390261*alloc(1570,rest_L) - 0.0542431408774588*alloc(1570,rice_H) - 0.158113965390261*alloc(1570,rice_L)
     
      - 0.164034803935493*alloc(1570,sorg_L) - 0.158113965390261*alloc(1570,soyb_L) - 0.158113965390261*alloc(1570,sunf_L) - 0.125991548280094*alloc(1570,temf_H) - 0.158113965390261*alloc(1570,temf_L) - 0.0893357156365387*alloc(1570,toba_H)
     
      - 0.156672099636985*alloc(1570,toba_L) - 0.00122711643833584*alloc(1570,trof_L) - 0.217336445682561*alloc(1570,vege_H) - 0.121883355179216*alloc(1570,vege_L) - 0.0518482656524996*alloc(1571,bean_H) - 0.113508297471409*alloc(1571,bean_L)
     
      - 0.128663195007011*alloc(1571,cass_L) - 0.038954895960462*alloc(1571,chic_H) - 0.0913281545755284*alloc(1571,chic_L) - 0.0770629252370273*alloc(1571,coff_L) - 0.125319278390595*alloc(1571,cott_L) - 0.0420049824437656*alloc(1571,cowp_H)
     
      - 0.147928921927757*alloc(1571,cowp_L) - 0.0514121214459504*alloc(1571,grou_H) - 0.0957151149211733*alloc(1571,grou_L) - 0.0385882345831004*alloc(1571,lent_H) - 0.0913281545755284*alloc(1571,lent_L) - 0.0603638405513683*alloc(1571,maiz_H)
     
      - 0.143112478494874*alloc(1571,maiz_L) - 0.0455295594382393*alloc(1571,mill_H) - 0.112956094063886*alloc(1571,mill_L) - 0.125319278390595*alloc(1571,ofib_L) - 0.143112478494874*alloc(1571,ooil_L) - 0.0336278106273113*alloc(1571,opul_H)
     
      - 0.0913281545755284*alloc(1571,opul_L) - 0.0501375184270484*alloc(1571,pige_H) - 0.145536024891563*alloc(1571,pige_L) - 0.104678055721692*alloc(1571,pota_H) - 0.0884751075375586*alloc(1571,pota_L) - 0.0780764362807611*alloc(1571,rest_H)
     
      - 0.143112478494874*alloc(1571,rest_L) - 0.0502181086815431*alloc(1571,rice_H) - 0.143112478494874*alloc(1571,rice_L) - 0.147253992348601*alloc(1571,sorg_L) - 0.143112478494874*alloc(1571,soyb_L) - 0.143112478494874*alloc(1571,sunf_L)
     
      - 0.11643637271149*alloc(1571,temf_H) - 0.143112478494874*alloc(1571,temf_L) - 0.0825394152453542*alloc(1571,toba_H) - 0.142130786148766*alloc(1571,toba_L) - 0.000858981351408661*alloc(1571,trof_L) - 0.200587386558078*alloc(1571,vege_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.109704230853217*alloc(1571,vege_L) - 0.0558298518126879*alloc(1572,bean_H) - 0.138786881235046*alloc(1572,bean_L) - 0.172256486111172*alloc(1572,cass_L) - 0.0416722033146891*alloc(1572,chic_H) - 0.0967581410963586*alloc(1572,chic_L)
     
      - 0.083720021339145*alloc(1572,coff_L) - 0.133172817159462*alloc(1572,cott_L) - 0.0459372421179285*alloc(1572,cowp_H) - 0.18290171468354*alloc(1572,cowp_L) - 0.0568109974080277*alloc(1572,grou_H) - 0.133172817159462*alloc(1572,grou_L)
     
      - 0.0412799653921296*alloc(1572,lent_H) - 0.0967581410963586*alloc(1572,lent_L) - 0.0659297328646508*alloc(1572,maiz_H) - 0.146302961065683*alloc(1572,maiz_L) - 0.0496244521829898*alloc(1572,mill_H) - 0.138572125063058*alloc(1572,mill_L)
     
      - 0.133172817159462*alloc(1572,ofib_L) - 0.146302961065683*alloc(1572,ooil_L) - 0.0359735259699192*alloc(1572,opul_H) - 0.0967581410963586*alloc(1572,opul_L) - 0.0540086881556399*alloc(1572,pige_H) - 0.147315337880373*alloc(1572,pige_L)
     
      - 0.113090803594218*alloc(1572,pota_H) - 0.0869105273153451*alloc(1572,pota_L) - 0.0852755315101937*alloc(1572,rest_H) - 0.146302961065683*alloc(1572,rest_L) - 0.0541058428429733*alloc(1572,rice_H) - 0.146302961065683*alloc(1572,rice_L)
     
      - 0.14802092852272*alloc(1572,sorg_L) - 0.146302961065683*alloc(1572,soyb_L) - 0.146302961065683*alloc(1572,sunf_L) - 0.127172474091751*alloc(1572,temf_H) - 0.146302961065683*alloc(1572,temf_L) - 0.0883364067947666*alloc(1572,toba_H)
     
      - 0.14590415659568*alloc(1572,toba_L) - 0.000337456903972535*alloc(1572,trof_L) - 0.21026441713935*alloc(1572,vege_H) - 0.137191628246946*alloc(1572,vege_L) - 0.0465489896959069*alloc(1578,bean_H) - 0.0690252855080147*alloc(1578,bean_L)
     
      - 0.0375190741011272*alloc(1578,cass_L) - 0.0289331973279689*alloc(1578,chic_H) - 0.0410470331642095*alloc(1578,chic_L) - 0.0474253097408963*alloc(1578,coff_H) - 0.0353716206311782*alloc(1578,coff_L) - 0.0405255112995949*alloc(1578,cott_L)
     
      - 0.0368951551883154*alloc(1578,cowp_H) - 0.0700069720027751*alloc(1578,cowp_L) - 0.0477169986601432*alloc(1578,grou_H) - 0.0417526267322303*alloc(1578,grou_L) - 0.0286608647822855*alloc(1578,lent_H) - 0.0410470331642095*alloc(1578,lent_L)
     
      - 0.0534028859358071*alloc(1578,maiz_H) - 0.0700069720027751*alloc(1578,maiz_L) - 0.0306518310595698*alloc(1578,mill_H) - 0.057735811825073*alloc(1578,mill_L) - 0.0405255112995949*alloc(1578,ofib_L) - 0.0695161316810689*alloc(1578,ooil_L)
     
      - 0.0249765801344995*alloc(1578,opul_H) - 0.0410470331642095*alloc(1578,opul_L) - 0.0433907379921115*alloc(1578,pige_H) - 0.0700069720027751*alloc(1578,pige_L) - 0.0714913239713015*alloc(1578,pota_H) - 0.0382860219779428*alloc(1578,pota_L)
     
      - 0.069072924832005*alloc(1578,rest_H) - 0.0700069720027751*alloc(1578,rest_L) - 0.0412914428750025*alloc(1578,rice_H) - 0.0679515573102033*alloc(1578,rice_L) - 0.0743632361771418*alloc(1578,sorg_L) - 0.057735811825073*alloc(1578,soyb_L)
     
      - 0.0695161316810689*alloc(1578,sunf_L) - 0.103009322698734*alloc(1578,temf_H) - 0.0700069720027751*alloc(1578,temf_L) - 0.0717758911423208*alloc(1578,toba_H) - 0.0394517831017834*alloc(1578,toba_L) - 0.00340524751981876*alloc(1578,trof_L)
     
      - 0.175297063953997*alloc(1578,vege_H) - 0.0425809318435147*alloc(1578,vege_L) - 0.0138307473694237*alloc(1579,bean_H) - 0.00493914656483323*alloc(1579,bean_L) - 0.00190203202911349*alloc(1579,cass_L) - 0.0144260904715112*alloc(1579,coff_H)
     
      - 0.00208609952686342*alloc(1579,coff_L) - 0.00236220068206101*alloc(1579,cott_L) - 0.0110529156956913*alloc(1579,cowp_H) - 0.00515389176554443*alloc(1579,cowp_L) - 0.0141674803255193*alloc(1579,grou_H) - 0.00236220068206101*alloc(1579,grou_L)
     
      - 0.0164700396867506*alloc(1579,maiz_H) - 0.00515389176554443*alloc(1579,maiz_L) - 0.009091316808408*alloc(1579,mill_H) - 0.0034666062171245*alloc(1579,mill_L) - 0.00236220068206101*alloc(1579,ofib_L) - 0.00503118022228088*alloc(1579,ooil_L)
     
      - 0.0129331536015353*alloc(1579,pige_H) - 0.00515389176554443*alloc(1579,pige_L) - 0.021302852707821*alloc(1579,rest_H) - 0.00515389176554443*alloc(1579,rest_L) - 0.0123495402994689*alloc(1579,rice_H) - 0.00503118022228088*alloc(1579,rice_L)
     
      - 0.00622761886622815*alloc(1579,sorg_L) - 0.0034666062171245*alloc(1579,soyb_L) - 0.00503118022228088*alloc(1579,sunf_L) - 0.031769212528941*alloc(1579,temf_H) - 0.00515389176554443*alloc(1579,temf_L) - 0.0211097064921428*alloc(1579,toba_H)
     
      - 0.00248491240817918*alloc(1579,toba_L) - 0.000705592150897512*alloc(1579,trof_L) - 0.0531415360156972*alloc(1579,vege_H) - 0.00248491240817918*alloc(1579,vege_L) - 0.0540087541027619*alloc(1603,bean_H) - 0.131393515873347*alloc(1603,bean_L)
     
      - 0.153389575363126*alloc(1603,cass_L) - 0.0388056827136762*alloc(1603,chic_H) - 0.100531529097316*alloc(1603,chic_L) - 0.000644236242124774*alloc(1603,coff_L) - 0.107188631050782*alloc(1603,cott_L) - 0.0437493333901978*alloc(1603,cowp_H)
     
      - 0.170385143122007*alloc(1603,cowp_L) - 0.053568807924679*alloc(1603,grou_H) - 0.107188631050782*alloc(1603,grou_L) - 0.0384404257999446*alloc(1603,lent_H) - 0.100531529097316*alloc(1603,lent_L) - 0.0630701974286426*alloc(1603,maiz_H)
     
      - 0.163114468823854*alloc(1603,maiz_L) - 0.0475973604015543*alloc(1603,mill_H) - 0.163114468823854*alloc(1603,mill_L) - 0.107188631050782*alloc(1603,ofib_L) - 0.163114468823854*alloc(1603,ooil_L) - 0.0334990023047043*alloc(1603,opul_H)
     
      - 0.100531529097316*alloc(1603,opul_L) - 0.0523093699205139*alloc(1603,pige_H) - 0.166765148207221*alloc(1603,pige_L) - 0.0998756279517769*alloc(1603,pota_H) - 0.096236622157418*alloc(1603,pota_L) - 0.0815769209807313*alloc(1603,rest_H)
     
      - 0.163114468823854*alloc(1603,rest_L) - 0.0522448693651218*alloc(1603,rice_H) - 0.163114468823854*alloc(1603,rice_L) - 0.16934209354143*alloc(1603,sorg_L) - 0.166765148207221*alloc(1603,soyb_L) - 0.163114468823854*alloc(1603,sunf_L)
     
      - 0.121656689629272*alloc(1603,temf_H) - 0.163114468823854*alloc(1603,temf_L) - 0.086153076149714*alloc(1603,toba_H) - 0.161580573070222*alloc(1603,toba_L) - 0.000644236242124774*alloc(1603,trof_L) - 0.209500604290692*alloc(1603,vege_H)
     
      - 0.12556470732847*alloc(1603,vege_L) - 0.0452151921673058*alloc(1604,bean_H) - 0.132497910985697*alloc(1604,bean_L) - 0.153573647066532*alloc(1604,cass_L) - 0.0319859494478037*alloc(1604,chic_H) - 0.100776946332495*alloc(1604,chic_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.00076694773967466*alloc(1604,coff_L) - 0.107802191692773*alloc(1604,cott_L) - 0.036601958738341*alloc(1604,cowp_H) - 0.163666672231377*alloc(1604,cowp_L) - 0.0448415908739536*alloc(1604,grou_H) - 0.107802191692773*alloc(1604,grou_L)
     
      - 0.0316848829966789*alloc(1604,lent_H) - 0.100776946332495*alloc(1604,lent_L) - 0.0530144895854635*alloc(1604,maiz_H) - 0.163666672231377*alloc(1604,maiz_L) - 0.0399619665891426*alloc(1604,mill_H) - 0.163666672231377*alloc(1604,mill_L)
     
      - 0.107802191692773*alloc(1604,ofib_L) - 0.163666672231377*alloc(1604,ooil_L) - 0.0276118681425106*alloc(1604,opul_H) - 0.100776946332495*alloc(1604,opul_L) - 0.0439065750455012*alloc(1604,pige_H) - 0.167532096084037*alloc(1604,pige_L)
     
      - 0.0814535787692173*alloc(1604,pota_H) - 0.0961445863057149*alloc(1604,pota_L) - 0.0685705611218386*alloc(1604,rest_H) - 0.163666672231377*alloc(1604,rest_L) - 0.0436439545314601*alloc(1604,rice_H) - 0.163666672231377*alloc(1604,rice_L)
     
      - 0.170569203122717*alloc(1604,sorg_L) - 0.167532096084037*alloc(1604,soyb_L) - 0.163666672231377*alloc(1604,sunf_L) - 0.10226014137105*alloc(1604,temf_H) - 0.163666672231377*alloc(1604,temf_L) - 0.0721570647849404*alloc(1604,toba_H)
     
      - 0.161887359242566*alloc(1604,toba_L) - 0.00076694773967466*alloc(1604,trof_L) - 0.175633300505284*alloc(1604,vege_H) - 0.126086226267411*alloc(1604,vege_L) - 0.05921935510673*alloc(1608,bean_H) - 0.13734501548177*alloc(1608,bean_L)
     
      - 0.153389575363126*alloc(1608,cass_L) - 0.0425305155610368*alloc(1608,chic_H) - 0.101635935912362*alloc(1608,chic_L) - 0.0920950907496482*alloc(1608,coff_L) - 0.111544901076496*alloc(1608,cott_L) - 0.0480243326402816*alloc(1608,cowp_H)
     
      - 0.175385623150208*alloc(1608,cowp_L) - 0.0590259768068724*alloc(1608,grou_H) - 0.111544901076496*alloc(1608,grou_L) - 0.0421301988092905*alloc(1608,lent_H) - 0.101635935912362*alloc(1608,lent_L) - 0.0695994122073269*alloc(1608,maiz_H)
     
      - 0.164556322874434*alloc(1608,maiz_L) - 0.0523950604578813*alloc(1608,mill_H) - 0.16332920159045*alloc(1608,mill_L) - 0.111544901076496*alloc(1608,ofib_L) - 0.164556322874434*alloc(1608,ooil_L) - 0.0367144639436358*alloc(1608,opul_H)
     
      - 0.101635935912362*alloc(1608,opul_L) - 0.0574469316337426*alloc(1608,pige_H) - 0.169986315246612*alloc(1608,pige_L) - 0.110549251046612*alloc(1608,pota_H) - 0.0953162811944305*alloc(1608,pota_L) - 0.0900220069291236*alloc(1608,rest_H)
     
      - 0.164556322874434*alloc(1608,rest_L) - 0.0570459618954623*alloc(1608,rice_H) - 0.164556322874434*alloc(1608,rice_L) - 0.173636982927284*alloc(1608,sorg_L) - 0.164556322874434*alloc(1608,soyb_L) - 0.164556322874434*alloc(1608,sunf_L)
     
      - 0.134250952660587*alloc(1608,temf_H) - 0.164556322874434*alloc(1608,temf_L) - 0.0945216037865478*alloc(1608,toba_H) - 0.162408878181507*alloc(1608,toba_L) - 0.000920337397322366*alloc(1608,trof_L) - 0.230574651685263*alloc(1608,vege_H)
     
      - 0.12884723160233*alloc(1608,vege_L) - 0.0540574988434629*alloc(1609,bean_H) - 0.118048615795138*alloc(1609,bean_L) - 0.139032310172921*alloc(1609,cass_L) - 0.0389356583295417*alloc(1609,chic_H) - 0.0937823854407993*alloc(1609,chic_L)
     
      - 0.0593617609844512*alloc(1609,coff_L) - 0.0980466196148108*alloc(1609,cott_L) - 0.0438824352997447*alloc(1609,cowp_H) - 0.154125850474055*alloc(1609,cowp_L) - 0.053673946215583*alloc(1609,grou_H) - 0.0980466196148108*alloc(1609,grou_L)
     
      - 0.0385691780256005*alloc(1609,lent_H) - 0.0937823854407993*alloc(1609,lent_L) - 0.0635997895408711*alloc(1609,maiz_H) - 0.149493478744579*alloc(1609,maiz_L) - 0.0478300033178439*alloc(1609,mill_H) - 0.117527096856197*alloc(1609,mill_L)
     
      - 0.0980466196148108*alloc(1609,ofib_L) - 0.149493478744579*alloc(1609,ooil_L) - 0.0336112037440543*alloc(1609,opul_H) - 0.0937823854407993*alloc(1609,opul_L) - 0.0528400074121206*alloc(1609,pige_H) - 0.151825006843608*alloc(1609,pige_L)
     
      - 0.101077638359189*alloc(1609,pota_H) - 0.0910827314890014*alloc(1609,pota_L) - 0.0822619116047129*alloc(1609,rest_H) - 0.149493478744579*alloc(1609,rest_L) - 0.0523864512786306*alloc(1609,rice_H) - 0.149493478744579*alloc(1609,rice_L)
     
      - 0.153420248129012*alloc(1609,sorg_L) - 0.149493478744579*alloc(1609,soyb_L) - 0.149493478744579*alloc(1609,sunf_L) - 0.122678224773512*alloc(1609,temf_H) - 0.149493478744579*alloc(1609,temf_L) - 0.0864922510026361*alloc(1609,toba_H)
     
      - 0.148573143632939*alloc(1609,toba_L) - 0.000797625671204201*alloc(1609,trof_L) - 0.210085004048003*alloc(1609,vege_H) - 0.114397948114466*alloc(1609,vege_L) - 0.0538438489979653*alloc(1610,bean_H) - 0.124214894980941*alloc(1610,bean_L)
     
      - 0.150996713435019*alloc(1610,cass_L) - 0.0391034261956926*alloc(1610,chic_H) - 0.0956537401326607*alloc(1610,chic_L) - 0.0452499422861658*alloc(1610,coff_L) - 0.107495428925821*alloc(1610,cott_L) - 0.0438848256063201*alloc(1610,cowp_H)
     
      - 0.163421266698893*alloc(1610,cowp_L) - 0.0537393006484414*alloc(1610,grou_H) - 0.107495428925821*alloc(1610,grou_L) - 0.0387353667835196*alloc(1610,lent_H) - 0.0956537401326607*alloc(1610,lent_L) - 0.0634976033865705*alloc(1610,maiz_H)
     
      - 0.151272803436085*alloc(1610,maiz_L) - 0.047733939360775*alloc(1610,mill_H) - 0.123816078808242*alloc(1610,mill_L) - 0.107495428925821*alloc(1610,ofib_L) - 0.151272803436085*alloc(1610,ooil_L) - 0.0337560293402514*alloc(1610,opul_H)
     
      - 0.0956537401326607*alloc(1610,opul_L) - 0.0523978465142879*alloc(1610,pige_H) - 0.152898729190071*alloc(1610,pige_L) - 0.102334484614623*alloc(1610,pota_H) - 0.0914815418103524*alloc(1610,pota_L) - 0.0821297409096054*alloc(1610,rest_H)
     
      - 0.151272803436085*alloc(1610,rest_L) - 0.0522159523019275*alloc(1610,rice_H) - 0.151272803436085*alloc(1610,rice_L) - 0.154095166005472*alloc(1610,sorg_L) - 0.151272803436085*alloc(1610,soyb_L) - 0.151272803436085*alloc(1610,sunf_L)
     
      - 0.122481116951355*alloc(1610,temf_H) - 0.151272803436085*alloc(1610,temf_L) - 0.0859759337657142*alloc(1610,toba_H) - 0.150597885559624*alloc(1610,toba_L) - 0.000582880150497413*alloc(1610,trof_L) - 0.207520473773657*alloc(1610,vege_H)
     
      - 0.12160726517815*alloc(1610,vege_L) - 0.0563676220979498*alloc(1611,bean_H) - 0.146149573830859*alloc(1611,bean_L) - 0.18735001470961*alloc(1611,cass_L) - 0.0406934677619906*alloc(1611,chic_H) - 0.0984147571702753*alloc(1611,chic_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0835666341043211*alloc(1611,coff_L) - 0.146149573830859*alloc(1611,cott_L) - 0.0466403728601837*alloc(1611,cowp_H) - 0.19391508666272*alloc(1611,cowp_L) - 0.0579041679144515*alloc(1611,grou_H) - 0.146149573830859*alloc(1611,grou_L)
     
      - 0.0403104421481018*alloc(1611,lent_H) - 0.0984147571702753*alloc(1611,lent_L) - 0.0675319014948471*alloc(1611,maiz_H) - 0.146149573830859*alloc(1611,maiz_L) - 0.0506658845630117*alloc(1611,mill_H) - 0.146149573830859*alloc(1611,mill_L)
     
      - 0.146149573830859*alloc(1611,ofib_L) - 0.146149573830859*alloc(1611,ooil_L) - 0.0351286325872294*alloc(1611,opul_H) - 0.0984147571702753*alloc(1611,opul_L) - 0.0549415810028604*alloc(1611,pige_H) - 0.146149573830859*alloc(1611,pige_L)
     
      - 0.107942310919906*alloc(1611,pota_H) - 0.0864810383767596*alloc(1611,pota_L) - 0.0873478253838763*alloc(1611,rest_H) - 0.146149573830859*alloc(1611,rest_L) - 0.0547376563453613*alloc(1611,rice_H) - 0.146149573830859*alloc(1611,rice_L)
     
      - 0.146149573830859*alloc(1611,sorg_L) - 0.146149573830859*alloc(1611,soyb_L) - 0.146149573830859*alloc(1611,sunf_L) - 0.130262912043813*alloc(1611,temf_H) - 0.146149573830859*alloc(1611,temf_L) - 0.0893294132578775*alloc(1611,toba_H)
     
      - 0.146149573830859*alloc(1611,toba_L) - 1.70712461825167E-11*alloc(1611,trof_L) - 0.211165311665992*alloc(1611,vege_H) - 0.146149573830859*alloc(1611,vege_L) - 0.0507203233975892*alloc(1612,bean_H) - 0.126393000737059*alloc(1612,bean_L)
     
      - 0.160598857318722*alloc(1612,cass_L) - 0.036275051494615*alloc(1612,chic_H) - 0.0862049366729982*alloc(1612,chic_L) - 0.0703444543463971*alloc(1612,coff_L) - 0.12381605540285*alloc(1612,cott_L) - 0.0421067102226699*alloc(1612,cowp_H)
     
      - 0.166581053098423*alloc(1612,cowp_L) - 0.0522807888908508*alloc(1612,grou_H) - 0.126393000737059*alloc(1612,grou_L) - 0.0359336140445349*alloc(1612,lent_H) - 0.0862049366729982*alloc(1612,lent_L) - 0.0610226205234603*alloc(1612,maiz_H)
     
      - 0.126393000737059*alloc(1612,maiz_L) - 0.0456557514294718*alloc(1612,mill_H) - 0.126393000737059*alloc(1612,mill_L) - 0.12381605540285*alloc(1612,ofib_L) - 0.126393000737059*alloc(1612,ooil_L) - 0.0313144351199138*alloc(1612,opul_H)
     
      - 0.0862049366729982*alloc(1612,opul_L) - 0.0495481527950619*alloc(1612,pige_H) - 0.126393000737059*alloc(1612,pige_L) - 0.0958497622540057*alloc(1612,pota_H) - 0.0761732570399263*alloc(1612,pota_L) - 0.0789285224310834*alloc(1612,rest_H)
     
      - 0.126393000737059*alloc(1612,rest_L) - 0.0491613735172319*alloc(1612,rice_H) - 0.126393000737059*alloc(1612,rice_L) - 0.126393000737059*alloc(1612,sorg_L) - 0.126393000737059*alloc(1612,soyb_L) - 0.126393000737059*alloc(1612,sunf_L)
     
      - 0.117707099518544*alloc(1612,temf_H) - 0.126393000737059*alloc(1612,temf_L) - 0.080501344790019*alloc(1612,toba_H) - 0.126393000737059*alloc(1612,toba_L) - 9.31158721674997E-12*alloc(1612,trof_L) - 0.19017819638731*alloc(1612,vege_H)
     
      - 0.126393000737059*alloc(1612,vege_L) - 0.194692731257993*alloc(1618,rice_I) - 0.28022863820369*alloc(1618,sugc_I) - 0.0401798028528808*alloc(1618,bean_H) - 0.0442375537687793*alloc(1618,bean_L) - 0.0219960653411261*alloc(1618,cass_L)
     
      - 0.0399731887822765*alloc(1618,coff_H) - 0.0225789459030464*alloc(1618,coff_L) - 0.0234379267058912*alloc(1618,cott_L) - 0.0320059909779557*alloc(1618,cowp_H) - 0.0450045016455949*alloc(1618,cowp_L) - 0.0414359799385587*alloc(1618,grou_H)
     
      - 0.0234379267058912*alloc(1618,grou_L) - 0.0466237106819955*alloc(1618,maiz_H) - 0.0450045016455949*alloc(1618,maiz_L) - 0.0271187439137982*alloc(1618,mill_H) - 0.0361079074448033*alloc(1618,mill_L) - 0.0234379267058912*alloc(1618,ofib_L)
     
      - 0.0446056883985699*alloc(1618,ooil_L) - 0.03745402054854*alloc(1618,pige_H) - 0.0450045016455949*alloc(1618,pige_L) - 0.0603045323654932*alloc(1618,rest_H) - 0.0450045016455949*alloc(1618,rest_L) - 0.0358595781931808*alloc(1618,rice_H)
     
      - 0.0446056883985699*alloc(1618,rice_L) - 0.0484404277826481*alloc(1618,sorg_L) - 0.0361079074448033*alloc(1618,soyb_L) - 0.0446056883985699*alloc(1618,sunf_L) - 0.0899329085852615*alloc(1618,temf_H) - 0.0450045016455949*alloc(1618,temf_L)
     
      - 0.062602956060127*alloc(1618,toba_H) - 0.0246650436013636*alloc(1618,toba_L) - 0.00230084363044688*alloc(1618,trof_L) - 0.152026703895816*alloc(1618,vege_H) - 0.0238060627985188*alloc(1618,vege_L) - 0.059845585370285*alloc(1647,bean_H)
     
      - 0.137866546123407*alloc(1647,bean_L) - 0.158635496031897*alloc(1647,cass_L) - 0.0418541251807496*alloc(1647,chic_H) - 0.102985759962587*alloc(1647,chic_L) - 0.0727986910630159*alloc(1647,coff_L) - 0.111452871076141*alloc(1647,cott_L)
     
      - 0.0487579897858183*alloc(1647,cowp_H) - 0.177379704013703*alloc(1647,cowp_L) - 0.0598828139002703*alloc(1647,grou_H) - 0.111452871076141*alloc(1647,grou_L) - 0.0414601749260085*alloc(1647,lent_H) - 0.102985759962587*alloc(1647,lent_L)
     
      - 0.0707023620029994*alloc(1647,maiz_H) - 0.168053615022978*alloc(1647,maiz_L) - 0.0530955107877547*alloc(1647,mill_H) - 0.166887862676159*alloc(1647,mill_L) - 0.111452871076141*alloc(1647,ofib_L) - 0.168053615022978*alloc(1647,ooil_L)
     
      - 0.0361305700053354*alloc(1647,opul_H) - 0.102985759962587*alloc(1647,opul_L) - 0.0581767512831153*alloc(1647,pige_H) - 0.17271665951834*alloc(1647,pige_L) - 0.107094082717141*alloc(1647,pota_H) - 0.0974637375900535*alloc(1647,pota_L)
     
      - 0.0914485959045122*alloc(1647,rest_H) - 0.168053615022978*alloc(1647,rest_L) - 0.0575749922308959*alloc(1647,rice_H) - 0.168053615022978*alloc(1647,rice_L) - 0.176213939964188*alloc(1647,sorg_L) - 0.168053615022978*alloc(1647,soyb_L)
     
      - 0.168053615022978*alloc(1647,sunf_L) - 0.136378442765887*alloc(1647,temf_H) - 0.168053615022978*alloc(1647,temf_L) - 0.0956545622660472*alloc(1647,toba_H) - 0.166028873096292*alloc(1647,toba_L) - 0.000858981534263284*alloc(1647,trof_L)
     
      - 0.233090367490123*alloc(1647,vege_H) - 0.130319781824188*alloc(1647,vege_L) - 0.059545678919986*alloc(1648,bean_H) - 0.130411811824543*alloc(1648,bean_L) - 0.156396009635919*alloc(1648,cass_L) - 0.0419125584035791*alloc(1648,chic_H)
     
      - 0.100746273566609*alloc(1648,chic_L) - 0.0685651413575867*alloc(1648,coff_L) - 0.106145581470205*alloc(1648,cott_L) - 0.0485614815017876*alloc(1648,cowp_H) - 0.170262428653069*alloc(1648,cowp_L) - 0.0594050702771343*alloc(1648,grou_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.106145581470205*alloc(1648,grou_L) - 0.0415180581484995*alloc(1648,lent_H) - 0.100746273566609*alloc(1648,lent_L) - 0.0703182164185325*alloc(1648,maiz_H) - 0.164310917341951*alloc(1648,maiz_L) - 0.0528008047864395*alloc(1648,mill_H)
     
      - 0.163605326699604*alloc(1648,mill_L) - 0.106145581470205*alloc(1648,ofib_L) - 0.164310917341951*alloc(1648,ooil_L) - 0.0361810124799771*alloc(1648,opul_H) - 0.100746273566609*alloc(1648,opul_L) - 0.0580500960753167*alloc(1648,pige_H)
     
      - 0.167286655443466*alloc(1648,pige_L) - 0.10764352562411*alloc(1648,pota_H) - 0.0972489931207608*alloc(1648,pota_L) - 0.0909517302648477*alloc(1648,rest_H) - 0.164310917341951*alloc(1648,rest_L) - 0.0575137937498169*alloc(1648,rice_H)
     
      - 0.164310917341951*alloc(1648,rice_L) - 0.169434111839089*alloc(1648,sorg_L) - 0.164310917341951*alloc(1648,soyb_L) - 0.164310917341951*alloc(1648,sunf_L) - 0.135637460779985*alloc(1648,temf_H) - 0.164310917341951*alloc(1648,temf_L)
     
      - 0.0953276902961381*alloc(1648,toba_H) - 0.163053123292081*alloc(1648,toba_L) - 0.000552202538963462*alloc(1648,trof_L) - 0.231691268767245*alloc(1648,vege_H) - 0.125656737328825*alloc(1648,vege_L) - 0.0542395743463845*alloc(1649,bean_H)
     
      - 0.120472173894522*alloc(1649,bean_L) - 0.144186200841338*alloc(1649,cass_L) - 0.0384980103122913*alloc(1649,chic_H) - 0.0934449265025691*alloc(1649,chic_L) - 0.0613865146138325*alloc(1649,coff_L) - 0.10320050443188*alloc(1649,cott_L)
     
      - 0.0443836550012014*alloc(1649,cowp_H) - 0.15851278156296*alloc(1649,cowp_L) - 0.0544261929836139*alloc(1649,grou_H) - 0.10320050443188*alloc(1649,grou_L) - 0.0381356493525519*alloc(1649,lent_H) - 0.0934449265025691*alloc(1649,lent_L)
     
      - 0.0643129752070234*alloc(1649,maiz_H) - 0.14976958044834*alloc(1649,maiz_L) - 0.0482289949254504*alloc(1649,mill_H) - 0.149370752572945*alloc(1649,mill_L) - 0.10320050443188*alloc(1649,ofib_L) - 0.14976958044834*alloc(1649,ooil_L)
     
      - 0.0332334041303562*alloc(1649,opul_H) - 0.0934449265025691*alloc(1649,opul_L) - 0.0531605985903603*alloc(1649,pige_H) - 0.151456863436795*alloc(1649,pige_L) - 0.0996297639985457*alloc(1649,pota_H) - 0.091450863193118*alloc(1649,pota_L)
     
      - 0.0831843677425444*alloc(1649,rest_H) - 0.14976958044834*alloc(1649,rest_L) - 0.0525516861781041*alloc(1649,rice_H) - 0.14976958044834*alloc(1649,rice_L) - 0.152683984720779*alloc(1649,sorg_L) - 0.14976958044834*alloc(1649,soyb_L)
     
      - 0.14976958044834*alloc(1649,sunf_L) - 0.124053895229171*alloc(1649,temf_H) - 0.14976958044834*alloc(1649,temf_L) - 0.0867941821273713*alloc(1649,toba_H) - 0.149063989805993*alloc(1649,toba_L) - 0.000613558219167922*alloc(1649,trof_L)
     
      - 0.209995524614018*alloc(1649,vege_H) - 0.117772514091376*alloc(1649,vege_L) - 0.0533776004460291*alloc(1650,bean_H) - 0.125932839032587*alloc(1650,bean_L) - 0.153819064301711*alloc(1650,cass_L) - 0.0382212811236761*alloc(1650,chic_H)
     
      - 0.0929234075636284*alloc(1650,chic_L) - 0.0788729168430721*alloc(1650,coff_L) - 0.117005566214561*alloc(1650,cott_L) - 0.0439313691324667*alloc(1650,cowp_H) - 0.166212944799698*alloc(1650,cowp_L) - 0.0542198508010552*alloc(1650,grou_H)
     
      - 0.117005566214561*alloc(1650,grou_L) - 0.0378615248661943*alloc(1650,lent_H) - 0.0929234075636284*alloc(1650,lent_L) - 0.0636575256267094*alloc(1650,maiz_H) - 0.14194671444536*alloc(1650,maiz_L) - 0.0477186591301566*alloc(1650,mill_H)
     
      - 0.125687421797408*alloc(1650,mill_L) - 0.117005566214561*alloc(1650,ofib_L) - 0.14194671444536*alloc(1650,ooil_L) - 0.0329945176818017*alloc(1650,opul_H) - 0.0929234075636284*alloc(1650,opul_L) - 0.0522834582283038*alloc(1650,pige_H)
     
      - 0.142867049556999*alloc(1650,pige_L) - 0.10015910748746*alloc(1650,pota_H) - 0.0862049425243461*alloc(1650,pota_L) - 0.0823365892227352*alloc(1650,rest_H) - 0.14194671444536*alloc(1650,rest_L) - 0.0517624135705914*alloc(1650,rice_H)
     
      - 0.14194671444536*alloc(1650,rice_L) - 0.143572640199346*alloc(1650,sorg_L) - 0.14194671444536*alloc(1650,soyb_L) - 0.14194671444536*alloc(1650,sunf_L) - 0.12278959244575*alloc(1650,temf_H) - 0.14194671444536*alloc(1650,temf_L)
     
      - 0.0850453086703961*alloc(1650,toba_H) - 0.141547898272661*alloc(1650,toba_L) - 0.000337457018256674*alloc(1650,trof_L) - 0.20356882047797*alloc(1650,vege_H) - 0.124429627747538*alloc(1650,vege_L) - 0.0500749236262817*alloc(1651,bean_H)
     
      - 0.117189637917967*alloc(1651,bean_L) - 0.142529590618769*alloc(1651,cass_L) - 0.0368896646163156*alloc(1651,chic_H) - 0.0874934268941462*alloc(1651,chic_L) - 0.0715102183959117*alloc(1651,coff_L) - 0.110992697668973*alloc(1651,cott_L)
     
      - 0.0411118830345858*alloc(1651,cowp_H) - 0.154739387710655*alloc(1651,cowp_L) - 0.050704962214062*alloc(1651,grou_H) - 0.110992697668973*alloc(1651,grou_L) - 0.0365424421451697*alloc(1651,lent_H) - 0.0874934268941462*alloc(1651,lent_L)
     
      - 0.0593600570011212*alloc(1651,maiz_H) - 0.131148086935472*alloc(1651,maiz_L) - 0.0445697529685308*alloc(1651,mill_H) - 0.11706692344903*alloc(1651,mill_L) - 0.110992697668973*alloc(1651,ofib_L) - 0.131148086935472*alloc(1651,ooil_L)
     
      - 0.0318449998449894*alloc(1651,opul_H) - 0.0874934268941462*alloc(1651,opul_L) - 0.0487715800539414*alloc(1651,pige_H) - 0.131638933108526*alloc(1651,pige_L) - 0.0981275927780909*alloc(1651,pota_H) - 0.0812351177079878*alloc(1651,pota_L)
     
      - 0.0767781119580426*alloc(1651,rest_H) - 0.131148086935472*alloc(1651,rest_L) - 0.0485934160328765*alloc(1651,rice_H) - 0.131148086935472*alloc(1651,rice_L) - 0.132007064812643*alloc(1651,sorg_L) - 0.131148086935472*alloc(1651,soyb_L)
     
      - 0.131148086935472*alloc(1651,sunf_L) - 0.114500165298067*alloc(1651,temf_H) - 0.131148086935472*alloc(1651,temf_L) - 0.0795259211779918*alloc(1651,toba_H) - 0.13093334246618*alloc(1651,toba_L) - 0.000184067440607866*alloc(1651,trof_L)
     
      - 0.189859487342201*alloc(1651,vege_H) - 0.116361332806683*alloc(1651,vege_L) - 0.0478208268020163*alloc(1652,bean_H) - 0.121821997944747*alloc(1652,bean_L) - 0.153328206425961*alloc(1652,cass_L) - 0.0365659324353828*alloc(1652,chic_H)
     
      - 0.121361836240275*alloc(1652,chic_L) - 2.90534485181225E-5*alloc(1652,coff_H) - 0.0674300559253065*alloc(1652,coff_L) - 0.122865047525324*alloc(1652,cott_L) - 0.0391469275689538*alloc(1652,cowp_H) - 0.123386578166961*alloc(1652,cowp_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0480617615925186*alloc(1652,grou_H) - 0.121331151771693*alloc(1652,grou_L) - 0.0362217570802522*alloc(1652,lent_H) - 0.121361836240275*alloc(1652,lent_L) - 0.056264941969917*alloc(1652,maiz_H) - 0.123386578166961*alloc(1652,maiz_L)
     
      - 0.0423784194316441*alloc(1652,mill_H) - 0.121821997944747*alloc(1652,mill_L) - 0.122865047525324*alloc(1652,ofib_L) - 0.123386578166961*alloc(1652,ooil_L) - 0.0315655380673113*alloc(1652,opul_H) - 0.121361836240275*alloc(1652,opul_L)
     
      - 0.0460443985090316*alloc(1652,pige_H) - 0.123417250932847*alloc(1652,pige_L) - 0.101563597047541*alloc(1652,pota_H) - 0.0753449577799898*alloc(1652,pota_L) - 0.0727747955800895*alloc(1652,rest_H) - 0.123386578166961*alloc(1652,rest_L)
     
      - 0.0463374866266537*alloc(1652,rice_H) - 0.123386578166961*alloc(1652,rice_L) - 0.12344793540143*alloc(1652,sorg_L) - 0.123386578166961*alloc(1652,soyb_L) - 0.123386578166961*alloc(1652,sunf_L) - 0.108529969166303*alloc(1652,temf_H)
     
      - 0.123386578166961*alloc(1652,temf_L) - 0.0753508944506277*alloc(1652,toba_H) - 0.123355893698379*alloc(1652,toba_L) - 3.06779143869203E-5*alloc(1652,trof_L) - 0.177987480864729*alloc(1652,vege_H) - 0.121760640710279*alloc(1652,vege_L)
     
      - 0.0424080799278011*alloc(1653,bean_H) - 0.117803186857263*alloc(1653,bean_L) - 0.13249787587761*alloc(1653,cass_L) - 0.0327541701016439*alloc(1653,chic_H) - 0.113569631300486*alloc(1653,chic_L) - 0.0425954149406456*alloc(1653,coff_H)
     
      - 0.062521576640721*alloc(1653,coff_L) - 0.116852167277041*alloc(1653,cott_L) - 0.034199808809002*alloc(1653,cowp_H) - 0.117803186857263*alloc(1653,cowp_L) - 0.0414197983356833*alloc(1653,grou_H) - 0.113569631300486*alloc(1653,grou_L)
     
      - 0.0324458728047909*alloc(1653,lent_H) - 0.113569631300486*alloc(1653,lent_L) - 0.0496522841447095*alloc(1653,maiz_H) - 0.117803186857263*alloc(1653,maiz_L) - 0.0374763621537635*alloc(1653,mill_H) - 0.113569631300486*alloc(1653,mill_L)
     
      - 0.116852167277041*alloc(1653,ofib_L) - 0.117803186857263*alloc(1653,ooil_L) - 0.0282750345566515*alloc(1653,opul_H) - 0.113569631300486*alloc(1653,opul_L) - 0.0404467294401711*alloc(1653,pige_H) - 0.117803186857263*alloc(1653,pige_L)
     
      - 0.0914474219864718*alloc(1653,pota_H) - 0.0676754731604856*alloc(1653,pota_L) - 0.0642217818450384*alloc(1653,rest_H) - 0.117803186857263*alloc(1653,rest_L) - 0.0406636608419967*alloc(1653,rice_H) - 0.113569631300486*alloc(1653,rice_L)
     
      - 0.117833859623149*alloc(1653,sorg_L) - 0.113569631300486*alloc(1653,soyb_L) - 0.117803186857263*alloc(1653,sunf_L) - 0.0957747520675132*alloc(1653,temf_H) - 0.117803186857263*alloc(1653,temf_L) - 0.0659722103578027*alloc(1653,toba_H)
     
      - 0.112649296188846*alloc(1653,toba_L) - 0.15832083290527*alloc(1653,vege_H) - 0.117803186857263*alloc(1653,vege_L) - 0.0259251699144835*alloc(1654,bean_H) - 0.0950401794906691*alloc(1654,bean_L) - 0.0589936234289866*alloc(1654,cass_L)
     
      - 0.0190659321074701*alloc(1654,chic_H) - 0.0750074988417596*alloc(1654,chic_L) - 0.0226502403650813*alloc(1654,coff_H) - 0.0400039952863282*alloc(1654,coff_L) - 0.0908373025511263*alloc(1654,cott_L) - 0.0205095679825918*alloc(1654,cowp_H)
     
      - 0.0950401794906691*alloc(1654,cowp_L) - 0.0261848476743679*alloc(1654,grou_H) - 0.0908373084024743*alloc(1654,grou_L) - 0.0188864747952415*alloc(1654,lent_H) - 0.0750074988417596*alloc(1654,lent_L) - 0.0307426136264593*alloc(1654,maiz_H)
     
      - 0.0950401794906691*alloc(1654,maiz_L) - 0.0231297800408776*alloc(1654,mill_H) - 0.0750075046931075*alloc(1654,mill_L) - 0.0908373025511263*alloc(1654,ofib_L) - 0.0950401794906691*alloc(1654,ooil_L) - 0.0164586642714672*alloc(1654,opul_H)
     
      - 0.0750074988417596*alloc(1654,opul_L) - 0.0244494063653493*alloc(1654,pige_H) - 0.0950401794906691*alloc(1654,pige_L) - 0.0469861064498*alloc(1654,pota_H) - 0.0550055026614325*alloc(1654,pota_L) - 0.0397634360568514*alloc(1654,rest_H)
     
      - 0.0950401794906691*alloc(1654,rest_L) - 0.0226692755831264*alloc(1654,rice_H) - 0.0750075046931075*alloc(1654,rice_L) - 0.0950095008734347*alloc(1654,sorg_L) - 0.0750075046931075*alloc(1654,soyb_L) - 0.0950401794906691*alloc(1654,sunf_L)
     
      - 0.0592997129678921*alloc(1654,temf_H) - 0.0950401794906691*alloc(1654,temf_L) - 0.0367642930262244*alloc(1654,toba_H) - 0.0708353063707992*alloc(1654,toba_L) - 0.103615489169241*alloc(1654,vege_H) - 0.0950401794906691*alloc(1654,vege_L)
     
      - 0.195405726070457*alloc(1657,rice_I) - 0.279802374109028*alloc(1657,sugc_I) - 0.0470064862485678*alloc(1657,bean_H) - 0.0640554606916564*alloc(1657,bean_L) - 0.0363533217543084*alloc(1657,cass_L) - 0.0333775602474011*alloc(1657,coff_L)
     
      - 0.0349421346182667*alloc(1657,cott_L) - 0.0375725413570463*alloc(1657,cowp_H) - 0.0673993539026803*alloc(1657,cowp_L) - 0.0485512160378373*alloc(1657,grou_H) - 0.0374884013352407*alloc(1657,grou_L) - 0.0546175371665169*alloc(1657,maiz_H)
     
      - 0.0648530871857064*alloc(1657,maiz_L) - 0.0319632868829364*alloc(1657,mill_H) - 0.0542078586133387*alloc(1657,mill_L) - 0.0349421346182667*alloc(1657,ofib_L) - 0.0644542768643553*alloc(1657,ooil_L) - 0.0439638324375677*alloc(1657,pige_H)
     
      - 0.0648530871857064*alloc(1657,pige_L) - 0.0706439918574233*alloc(1657,rest_H) - 0.0648530871857064*alloc(1657,rest_L) - 0.0421663334892686*alloc(1657,rice_H) - 0.0644542768643553*alloc(1657,rice_L) - 0.0685344393349606*alloc(1657,sorg_L)
     
      - 0.0551281937249782*alloc(1657,soyb_L) - 0.0644542768643553*alloc(1657,sunf_L) - 0.105352274739585*alloc(1657,temf_H) - 0.0648530871857064*alloc(1657,temf_L) - 0.0735030428634825*alloc(1657,toba_H) - 0.0388075496939053*alloc(1657,toba_L)
     
      - 0.00285304484371433*alloc(1657,trof_L) - 0.177442447289169*alloc(1657,vege_H) - 0.0378872145822657*alloc(1657,vege_L) - 0.0606653191565249*alloc(1686,bean_H) - 0.134860111850613*alloc(1686,bean_L) - 0.158788883266721*alloc(1686,cass_L)
     
      - 0.0422523962122707*alloc(1686,chic_H) - 0.10228016932024*alloc(1686,chic_L) - 0.0712647953093846*alloc(1686,coff_L) - 0.101513221443424*alloc(1686,cott_L) - 0.0495020207034569*alloc(1686,cowp_H) - 0.174802758679494*alloc(1686,cowp_L)
     
      - 0.0606803344828261*alloc(1686,grou_H) - 0.109059985742643*alloc(1686,grou_L) - 0.041854697247608*alloc(1686,lent_H) - 0.10228016932024*alloc(1686,lent_L) - 0.0716905624367539*alloc(1686,maiz_H) - 0.167255994380276*alloc(1686,maiz_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0538142058727158*alloc(1686,mill_H) - 0.166243617565585*alloc(1686,mill_L) - 0.101513221443424*alloc(1686,ofib_L) - 0.167255994380276*alloc(1686,ooil_L) - 0.0364743774394492*alloc(1686,opul_H) - 0.10228016932024*alloc(1686,opul_L)
     
      - 0.0590164485251505*alloc(1686,pige_H) - 0.171029376529885*alloc(1686,pige_L) - 0.107730222200741*alloc(1686,pota_H) - 0.0963286521577732*alloc(1686,pota_L) - 0.0927267645480895*alloc(1686,rest_H) - 0.167255994380276*alloc(1686,rest_L)
     
      - 0.0584340740329806*alloc(1686,rice_H) - 0.167255994380276*alloc(1686,rice_L) - 0.174035810802679*alloc(1686,sorg_L) - 0.167255994380276*alloc(1686,soyb_L) - 0.167255994380276*alloc(1686,sunf_L) - 0.138284591761168*alloc(1686,temf_H)
     
      - 0.167255994380276*alloc(1686,temf_L) - 0.0970090877399578*alloc(1686,toba_H) - 0.165507354157352*alloc(1686,toba_L) - 0.000766947968242939*alloc(1686,trof_L) - 0.236150937365436*alloc(1686,vege_H) - 0.128571141601264*alloc(1686,vege_L)
     
      - 0.0626575879193658*alloc(1687,bean_H) - 0.139216370173632*alloc(1687,bean_L) - 0.15869684156367*alloc(1687,cass_L) - 0.044459528220415*alloc(1687,chic_H) - 0.103261861666348*alloc(1687,chic_L) - 0.0735656330884836*alloc(1687,coff_L)
     
      - 0.112495897251326*alloc(1687,cott_L) - 0.0508758212718655*alloc(1687,cowp_H) - 0.178514771891939*alloc(1687,cowp_L) - 0.0625252694556072*alloc(1687,grou_H) - 0.112495897251326*alloc(1687,grou_L) - 0.0440410547152955*alloc(1687,lent_H)
     
      - 0.103261861666348*alloc(1687,lent_L) - 0.0737845163335003*alloc(1687,maiz_H) - 0.168391062258512*alloc(1687,maiz_L) - 0.0554885358723968*alloc(1687,mill_H) - 0.167194625443111*alloc(1687,mill_L) - 0.112495897251326*alloc(1687,ofib_L)
     
      - 0.168391062258512*alloc(1687,ooil_L) - 0.0383796839579081*alloc(1687,opul_H) - 0.103261861666348*alloc(1687,opul_L) - 0.060932804049648*alloc(1687,pige_H) - 0.173452922926573*alloc(1687,pige_L) - 0.114923850303152*alloc(1687,pota_H)
     
      - 0.0972796600352993*alloc(1687,pota_L) - 0.0954351485160553*alloc(1687,rest_H) - 0.168391062258512*alloc(1687,rest_L) - 0.0602740626086045*alloc(1687,rice_H) - 0.168391062258512*alloc(1687,rice_L) - 0.177072917841359*alloc(1687,sorg_L)
     
      - 0.168391062258512*alloc(1687,soyb_L) - 0.168391062258512*alloc(1687,sunf_L) - 0.142323638881684*alloc(1687,temf_H) - 0.168391062258512*alloc(1687,temf_L) - 0.100084437030234*alloc(1687,toba_H) - 0.166274290331471*alloc(1687,toba_L)
     
      - 0.000889659511506481*alloc(1687,trof_L) - 0.243973832149821*alloc(1687,vege_H) - 0.131148075232776*alloc(1687,vege_L) - 0.0545062659492664*alloc(1688,bean_H) - 0.115287610460219*alloc(1688,bean_L) - 0.135964518665659*alloc(1688,cass_L)
     
      - 0.0391496577953514*alloc(1688,chic_H) - 0.0918190007485826*alloc(1688,chic_L) - 0.0577665196990471*alloc(1688,coff_L) - 0.0958684963046493*alloc(1688,cott_L) - 0.0442916744225062*alloc(1688,cowp_H) - 0.150536528325156*alloc(1688,cowp_L)
     
      - 0.0542226243341814*alloc(1688,grou_H) - 0.0958684846019534*alloc(1688,grou_L) - 0.0387811632301227*alloc(1688,lent_H) - 0.0918190007485826*alloc(1688,lent_L) - 0.0642298806684834*alloc(1688,maiz_H) - 0.146118912767668*alloc(1688,maiz_L)
     
      - 0.0482481824837884*alloc(1688,mill_H) - 0.145628054891918*alloc(1688,mill_L) - 0.0958684963046493*alloc(1688,ofib_L) - 0.146118912767668*alloc(1688,ooil_L) - 0.0337959387647279*alloc(1688,opul_H) - 0.0918190007485826*alloc(1688,opul_L)
     
      - 0.0532570109251087*alloc(1688,pige_H) - 0.148327714695064*alloc(1688,pige_L) - 0.101612896336435*alloc(1688,pota_H) - 0.0892420554143743*alloc(1688,pota_L) - 0.0830768907267625*alloc(1688,rest_H) - 0.146118912767668*alloc(1688,rest_L)
     
      - 0.0527902858992213*alloc(1688,rice_H) - 0.146118912767668*alloc(1688,rice_L) - 0.14976958044834*alloc(1688,sorg_L) - 0.146118912767668*alloc(1688,soyb_L) - 0.146118912767668*alloc(1688,sunf_L) - 0.123893613401981*alloc(1688,temf_H)
     
      - 0.146118912767668*alloc(1688,temf_L) - 0.087260012739262*alloc(1688,toba_H) - 0.145259923187802*alloc(1688,toba_L) - 0.000736269945286086*alloc(1688,trof_L) - 0.211875522063627*alloc(1688,vege_H) - 0.111851675546144*alloc(1688,vege_L)
     
      - 0.0540972661058334*alloc(1689,bean_H) - 0.116361332806683*alloc(1689,bean_L) - 0.137068925480705*alloc(1689,cass_L) - 0.0401005438201307*alloc(1689,chic_H) - 0.0933528965022139*alloc(1689,chic_L) - 0.0825235903750919*alloc(1689,coff_L)
     
      - 0.129399446712548*alloc(1689,cott_L) - 0.043885206480673*alloc(1689,cowp_H) - 0.152776014721134*alloc(1689,cowp_L) - 0.0536402839942425*alloc(1689,grou_H) - 0.0970342428001201*alloc(1689,grou_L) - 0.0397230990787827*alloc(1689,lent_H)
     
      - 0.0933528965022139*alloc(1689,lent_L) - 0.0632170071249167*alloc(1689,maiz_H) - 0.148726530867763*alloc(1689,maiz_L) - 0.0475756462759059*alloc(1689,mill_H) - 0.115901159399515*alloc(1689,mill_L) - 0.129399446712548*alloc(1689,ofib_L)
     
      - 0.148726530867763*alloc(1689,ooil_L) - 0.0346167910448082*alloc(1689,opul_H) - 0.0933528965022139*alloc(1689,opul_L) - 0.0524740777622631*alloc(1689,pige_H) - 0.150751272794448*alloc(1689,pige_L) - 0.1065616406332*alloc(1689,pota_H)
     
      - 0.0909600170200638*alloc(1689,pota_L) - 0.0817668091288652*alloc(1689,rest_H) - 0.148726530867763*alloc(1689,rest_L) - 0.052396634722117*alloc(1689,rice_H) - 0.148726530867763*alloc(1689,rice_L) - 0.152162454079142*alloc(1689,sorg_L)
     
      - 0.148726530867763*alloc(1689,soyb_L) - 0.148726530867763*alloc(1689,sunf_L) - 0.121939872216015*alloc(1689,temf_H) - 0.148726530867763*alloc(1689,temf_L) - 0.086253393318338*alloc(1689,toba_H) - 0.147867552990592*alloc(1689,toba_L)
     
      - 0.000705592242324824*alloc(1689,trof_L) - 0.209443720264836*alloc(1689,vege_H) - 0.113140154064596*alloc(1689,vege_L) - 0.0508740006789236*alloc(1690,bean_H) - 0.110348464261095*alloc(1690,bean_L) - 0.130503853527594*alloc(1690,cass_L)
     
      - 0.0385973872063009*alloc(1690,chic_H) - 0.0906225697845295*alloc(1690,chic_L) - 0.079026309929244*alloc(1690,coff_L) - 0.125595380094357*alloc(1690,cott_L) - 0.041126948810814*alloc(1690,cowp_H) - 0.145536024891563*alloc(1690,cowp_L)
     
      - 0.0500666720382918*alloc(1690,grou_H) - 0.0933529023535618*alloc(1690,grou_L) - 0.0382340908655795*alloc(1690,lent_H) - 0.0906225697845295*alloc(1690,lent_L) - 0.0591197701268178*alloc(1690,maiz_H) - 0.142560275087352*alloc(1690,maiz_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0445519305788577*alloc(1690,mill_H) - 0.110011005322865*alloc(1690,mill_L) - 0.125595380094357*alloc(1690,ofib_L) - 0.142560275087352*alloc(1690,ooil_L) - 0.0333191912256645*alloc(1690,opul_H) - 0.0906225697845295*alloc(1690,opul_L)
     
      - 0.049208467669985*alloc(1690,pige_H) - 0.1440634863724*alloc(1690,pige_L) - 0.104665823635815*alloc(1690,pota_H) - 0.0888739178589097*alloc(1690,pota_L) - 0.0764673175708849*alloc(1690,rest_H) - 0.142560275087352*alloc(1690,rest_L)
     
      - 0.0493354130915369*alloc(1690,rice_H) - 0.142560275087352*alloc(1690,rice_L) - 0.145045178718509*alloc(1690,sorg_L) - 0.142560275087352*alloc(1690,soyb_L) - 0.142560275087352*alloc(1690,sunf_L) - 0.114036673714389*alloc(1690,temf_H)
     
      - 0.142560275087352*alloc(1690,temf_L) - 0.0809734278248716*alloc(1690,toba_H) - 0.141977387211246*alloc(1690,toba_L) - 0.000490846630190724*alloc(1690,trof_L) - 0.196343673974831*alloc(1690,vege_H) - 0.108016936162066*alloc(1690,vege_L)
     
      - 0.0495279695825142*alloc(1691,bean_H) - 0.118232687498544*alloc(1691,bean_L) - 0.142682977853593*alloc(1691,cass_L) - 0.0383966036111415*alloc(1691,chic_H) - 0.108722526804413*alloc(1691,chic_L) - 0.075989191187868*alloc(1691,coff_L)
     
      - 0.127957569256576*alloc(1691,cott_L) - 0.0396601938873237*alloc(1691,cowp_H) - 0.137651789951418*alloc(1691,cowp_L) - 0.0472493107662293*alloc(1691,grou_H) - 0.108569139569589*alloc(1691,grou_L) - 0.0380351971378613*alloc(1691,lent_H)
     
      - 0.108722526804413*alloc(1691,lent_L) - 0.0574871816743851*alloc(1691,maiz_H) - 0.137651789951418*alloc(1691,maiz_L) - 0.043422722825888*alloc(1691,mill_H) - 0.118048615795138*alloc(1691,mill_L) - 0.127957569256576*alloc(1691,ofib_L)
     
      - 0.137651789951418*alloc(1691,ooil_L) - 0.0331458648042065*alloc(1691,opul_H) - 0.108722526804413*alloc(1691,opul_L) - 0.047502634824595*alloc(1691,pige_H) - 0.138480095062703*alloc(1691,pige_L) - 0.106877615120663*alloc(1691,pota_H)
     
      - 0.0849778212403628*alloc(1691,pota_L) - 0.0743556777693948*alloc(1691,rest_H) - 0.137651789951418*alloc(1691,rest_L) - 0.0479792535061926*alloc(1691,rice_H) - 0.137651789951418*alloc(1691,rice_L) - 0.139062982938808*alloc(1691,sorg_L)
     
      - 0.137651789951418*alloc(1691,soyb_L) - 0.137651789951418*alloc(1691,sunf_L) - 0.110887558684669*alloc(1691,temf_H) - 0.137651789951418*alloc(1691,temf_L) - 0.0782927698161301*alloc(1691,toba_H) - 0.137283658247301*alloc(1691,toba_L)
     
      - 0.000306779041013477*alloc(1691,trof_L) - 0.187597225710871*alloc(1691,vege_H) - 0.116882851745623*alloc(1691,vege_L) - 0.0441124894112389*alloc(1692,bean_H) - 0.110379125324286*alloc(1692,bean_L) - 0.131669559063629*alloc(1692,cass_L)
     
      - 0.0338369240071607*alloc(1692,chic_H) - 0.108262341694549*alloc(1692,chic_L) - 0.0595151423679272*alloc(1692,coff_L) - 0.110010981917473*alloc(1692,cott_L) - 0.0358339961110805*alloc(1692,cowp_H) - 0.110379125324286*alloc(1692,cowp_L)
     
      - 0.0437328330457682*alloc(1692,grou_H) - 0.108262353397245*alloc(1692,grou_L) - 0.0335184353331123*alloc(1692,lent_H) - 0.108262341694549*alloc(1692,lent_L) - 0.051741685647661*alloc(1692,maiz_H) - 0.110379125324286*alloc(1692,maiz_L)
     
      - 0.0390236803922305*alloc(1692,mill_H) - 0.108262341694549*alloc(1692,mill_L) - 0.110010981917473*alloc(1692,ofib_L) - 0.110379125324286*alloc(1692,ooil_L) - 0.0292097217735717*alloc(1692,opul_H) - 0.108262341694549*alloc(1692,opul_L)
     
      - 0.0422816880104192*alloc(1692,pige_H) - 0.110379125324286*alloc(1692,pige_L) - 0.094347957676582*alloc(1692,pota_H) - 0.0670925852843804*alloc(1692,pota_L) - 0.0669242776077342*alloc(1692,rest_H) - 0.110379125324286*alloc(1692,rest_L)
     
      - 0.0425321720000847*alloc(1692,rice_H) - 0.108262341694549*alloc(1692,rice_L) - 0.110348452558399*alloc(1692,sorg_L) - 0.108262341694549*alloc(1692,soyb_L) - 0.110379125324286*alloc(1692,sunf_L) - 0.0998050180333538*alloc(1692,temf_H)
     
      - 0.110379125324286*alloc(1692,temf_L) - 0.0690672846532096*alloc(1692,toba_H) - 0.107894198287737*alloc(1692,toba_L) - 0.164391490380226*alloc(1692,vege_H) - 0.110379125324286*alloc(1692,vege_L) - 0.0249562399674686*alloc(1693,bean_H)
     
      - 0.0769402341734816*alloc(1693,bean_L) - 0.0354023255794783*alloc(1693,cass_L) - 0.0171143807448095*alloc(1693,chic_H) - 0.0605275308853138*alloc(1693,chic_L) - 0.0318436703451178*alloc(1693,coff_L) - 0.0605275425880096*alloc(1693,cott_L)
     
      - 0.0199696251081691*alloc(1693,cowp_H) - 0.0769402341734816*alloc(1693,cowp_L) - 0.0254132783622962*alloc(1693,grou_H) - 0.0740871812841638*alloc(1693,grou_L) - 0.0169532923305843*alloc(1693,lent_H) - 0.0605275308853138*alloc(1693,lent_L)
     
      - 0.0303330639022554*alloc(1693,maiz_H) - 0.0769402341734816*alloc(1693,maiz_L) - 0.0226232399595756*alloc(1693,mill_H) - 0.0605275425880096*alloc(1693,mill_L) - 0.0605275425880096*alloc(1693,ofib_L) - 0.0769402341734816*alloc(1693,ooil_L)
     
      - 0.0147739877235019*alloc(1693,opul_H) - 0.0605275308853138*alloc(1693,opul_L) - 0.0239676944705998*alloc(1693,pige_H) - 0.0769402341734816*alloc(1693,pige_L) - 0.038530503593167*alloc(1693,pota_H) - 0.0300336992187908*alloc(1693,pota_L)
     
      - 0.0392337119264194*alloc(1693,rest_H) - 0.0769402341734816*alloc(1693,rest_L) - 0.021806914082463*alloc(1693,rice_H) - 0.0605275425880096*alloc(1693,rice_L) - 0.0769095555562472*alloc(1693,sorg_L) - 0.0605275425880096*alloc(1693,soyb_L)
     
      - 0.0769402341734816*alloc(1693,sunf_L) - 0.0585097287008918*alloc(1693,temf_H) - 0.0769402341734816*alloc(1693,temf_L) - 0.035634020973962*alloc(1693,toba_H) - 0.0577051741672742*alloc(1693,toba_L) - 0.100980252408396*alloc(1693,vege_H)
     
      - 0.0769402341734816*alloc(1693,vege_L) - 0.0326158931810884*alloc(1697,bean_H) - 0.0464156858559627*alloc(1697,bean_L) - 0.0557724505382481*alloc(1697,cass_L) - 0.0269352086145761*alloc(1697,coff_L) - 0.0308926595419178*alloc(1697,cott_L)
     
      - 0.0274097500180176*alloc(1697,cowp_H) - 0.0620614207875971*alloc(1697,cowp_L) - 0.0340707278507737*alloc(1697,grou_H) - 0.0464156858559627*alloc(1697,grou_L) - 0.0403762515217125*alloc(1697,maiz_H) - 0.0464156858559627*alloc(1697,maiz_L)
     
      - 0.0230781389372701*alloc(1697,mill_H) - 0.0464156858559627*alloc(1697,mill_L) - 0.0308926595419178*alloc(1697,ofib_L) - 0.0464156858559627*alloc(1697,ooil_L) - 0.0318772616617126*alloc(1697,pige_H) - 0.0464156858559627*alloc(1697,pige_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0522238777452922*alloc(1697,rest_H) - 0.0464156858559627*alloc(1697,rest_L) - 0.0314085900710773*alloc(1697,rice_H) - 0.0464156858559627*alloc(1697,rice_L) - 0.0464156858559627*alloc(1697,sorg_L) - 0.0464156858559627*alloc(1697,soyb_L)
     
      - 0.0464156858559627*alloc(1697,sunf_L) - 0.0778821265832864*alloc(1697,temf_H) - 0.0464156858559627*alloc(1697,temf_L) - 0.0526624514499564*alloc(1697,toba_H) - 0.0464156858559627*alloc(1697,toba_L) - 0.124133373677407*alloc(1697,vege_H)
     
      - 0.0464156858559627*alloc(1697,vege_L) - 0.0635577035145486*alloc(1725,bean_H) - 0.142744323385366*alloc(1725,bean_L) - 0.146885837239092*alloc(1725,cass_L) - 0.0445811368347671*alloc(1725,chic_H) - 0.100439487394265*alloc(1725,chic_L)
     
      - 0.0741178364960065*alloc(1725,coff_L) - 0.111759633843093*alloc(1725,cott_L) - 0.0514183818406449*alloc(1725,cowp_H) - 0.177686466780655*alloc(1725,cowp_L) - 0.0637896487789621*alloc(1725,grou_H) - 0.111759633843093*alloc(1725,grou_L)
     
      - 0.0441615186935*alloc(1725,lent_H) - 0.100439487394265*alloc(1725,lent_L) - 0.0746362471174975*alloc(1725,maiz_H) - 0.164617680108903*alloc(1725,maiz_L) - 0.0561409854608376*alloc(1725,mill_H) - 0.164464292874079*alloc(1725,mill_L)
     
      - 0.111759633843093*alloc(1725,ofib_L) - 0.164464292874079*alloc(1725,ooil_L) - 0.0384846625839126*alloc(1725,opul_H) - 0.100439487394265*alloc(1725,opul_L) - 0.0611447186387588*alloc(1725,pige_H) - 0.171152079296127*alloc(1725,pige_L)
     
      - 0.114662744046793*alloc(1725,pota_H) - 0.0920337335151794*alloc(1725,pota_L) - 0.0965368031436884*alloc(1725,rest_H) - 0.164617680108903*alloc(1725,rest_L) - 0.0605306742177228*alloc(1725,rice_H) - 0.164464292874079*alloc(1725,rice_L)
     
      - 0.177042233372777*alloc(1725,sorg_L) - 0.164464292874079*alloc(1725,soyb_L) - 0.164464292874079*alloc(1725,sunf_L) - 0.143966550301989*alloc(1725,temf_H) - 0.164617680108903*alloc(1725,temf_L) - 0.100919198629372*alloc(1725,toba_H)
     
      - 0.156886832403582*alloc(1725,toba_L) - 0.0016872860969838*alloc(1725,trof_L) - 0.246800414568427*alloc(1725,vege_H) - 0.127282663082812*alloc(1725,vege_L) - 0.064860285583366*alloc(1726,bean_H) - 0.122957089228375*alloc(1726,bean_L)
     
      - 0.10344594507245*alloc(1726,cass_L) - 0.0457453644674871*alloc(1726,chic_H) - 0.0808056287694024*alloc(1726,chic_L) - 0.0599752982210512*alloc(1726,coff_L) - 0.0858674835861159*alloc(1726,cott_L) - 0.0518260769938955*alloc(1726,cowp_H)
     
      - 0.144891791483685*alloc(1726,cowp_L) - 0.0652548456040878*alloc(1726,grou_H) - 0.0858674835861159*alloc(1726,grou_L) - 0.0453147880808738*alloc(1726,lent_H) - 0.0808056287694024*alloc(1726,lent_L) - 0.0750905591500174*alloc(1726,maiz_H)
     
      - 0.136639436542119*alloc(1726,maiz_L) - 0.0565559575919699*alloc(1726,mill_H) - 0.133295531628399*alloc(1726,mill_L) - 0.0858674835861159*alloc(1726,ofib_L) - 0.136056548666014*alloc(1726,ooil_L) - 0.0394896819889171*alloc(1726,opul_H)
     
      - 0.0808056287694024*alloc(1726,opul_L) - 0.0616220148241487*alloc(1726,pige_H) - 0.140750277629959*alloc(1726,pige_L) - 0.118932006439854*alloc(1726,pota_H) - 0.0730134413836565*alloc(1726,pota_L) - 0.0971244242117753*alloc(1726,rest_H)
     
      - 0.136639436542119*alloc(1726,rest_L) - 0.060591398946923*alloc(1726,rice_H) - 0.136056548666014*alloc(1726,rice_L) - 0.149033317040107*alloc(1726,sorg_L) - 0.136056548666014*alloc(1726,soyb_L) - 0.136056548666014*alloc(1726,sunf_L)
     
      - 0.144842877001262*alloc(1726,temf_H) - 0.136639436542119*alloc(1726,temf_L) - 0.101352162653604*alloc(1726,toba_H) - 0.114029816410349*alloc(1726,toba_L) - 0.00294507904972585*alloc(1726,trof_L) - 0.248647033526491*alloc(1726,vege_H)
     
      - 0.0953162811944305*alloc(1726,vege_L) - 0.0623289251255426*alloc(1727,bean_H) - 0.121637926241341*alloc(1727,bean_L) - 0.126055530096133*alloc(1727,cass_L) - 0.044989328085255*alloc(1727,chic_H) - 0.0872479804022273*alloc(1727,chic_L)
     
      - 0.000828327328121082*alloc(1727,coff_L) - 0.0902237360577867*alloc(1727,cott_L) - 0.0500718430631657*alloc(1727,cowp_H) - 0.150843291092108*alloc(1727,cowp_L) - 0.0622288437872789*alloc(1727,grou_H) - 0.0900396702057284*alloc(1727,grou_L)
     
      - 0.0445658678604079*alloc(1727,lent_H) - 0.0872479804022273*alloc(1727,lent_L) - 0.0719412618564696*alloc(1727,maiz_H) - 0.146977878942143*alloc(1727,maiz_L) - 0.0541857182105002*alloc(1727,mill_H) - 0.120870978364525*alloc(1727,mill_L)
     
      - 0.0902237360577867*alloc(1727,ofib_L) - 0.146824491707319*alloc(1727,ooil_L) - 0.0388370336462064*alloc(1727,opul_H) - 0.0872479804022273*alloc(1727,opul_L) - 0.0597637702903561*alloc(1727,pige_H) - 0.148910590868473*alloc(1727,pige_L)
     
      - 0.118209017613349*alloc(1727,pota_H) - 0.0841188316604961*alloc(1727,pota_L) - 0.0930510268397241*alloc(1727,rest_H) - 0.146977878942143*alloc(1727,rest_L) - 0.0591778497601108*alloc(1727,rice_H) - 0.146824491707319*alloc(1727,rice_L)
     
      - 0.15179431067233*alloc(1727,sorg_L) - 0.146824491707319*alloc(1727,soyb_L) - 0.146824491707319*alloc(1727,sunf_L) - 0.138768168200407*alloc(1727,temf_H) - 0.146977878942143*alloc(1727,temf_L) - 0.0984652601257865*alloc(1727,toba_H)
     
      - 0.13206839864172*alloc(1727,toba_L) - 0.000981696826046598*alloc(1727,trof_L) - 0.23875523404224*alloc(1727,vege_H) - 0.104427614013167*alloc(1727,vege_L) - 0.0646840678356544*alloc(1728,bean_H) - 0.107894221693128*alloc(1728,bean_L)
     
      - 0.0665097325163628*alloc(1728,cass_L) - 0.0475501614884289*alloc(1728,chic_H) - 0.0645156633555638*alloc(1728,chic_L) - 0.0555883905375377*alloc(1728,coff_L) - 0.0686265102947513*alloc(1728,cott_L) - 0.0508612181657178*alloc(1728,cowp_H)
     
      - 0.117251006855132*alloc(1728,cowp_L) - 0.0643570125438996*alloc(1728,grou_H) - 0.0604048222677242*alloc(1728,grou_L) - 0.0471025975230981*alloc(1728,lent_H) - 0.0645156633555638*alloc(1728,lent_L) - 0.073018556873024*alloc(1728,maiz_H)
     
      - 0.116115903868808*alloc(1728,maiz_L) - 0.0551138443338083*alloc(1728,mill_H) - 0.0903157894635337*alloc(1728,mill_L) - 0.0686265102947513*alloc(1728,ofib_L) - 0.114919478756102*alloc(1728,ooil_L) - 0.0410476728638655*alloc(1728,opul_H)
     
      - 0.0645156633555638*alloc(1728,opul_L) - 0.0601162845871899*alloc(1728,pige_H) - 0.116698803447609*alloc(1728,pige_L) - 0.128532100492009*alloc(1728,pota_H) - 0.0577665196990471*alloc(1728,pota_L) - 0.0944444331397095*alloc(1728,rest_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.116115903868808*alloc(1728,rest_L) - 0.0591605478860963*alloc(1728,rice_H) - 0.114919478756102*alloc(1728,rice_L) - 0.127957580959272*alloc(1728,sorg_L) - 0.114919478756102*alloc(1728,soyb_L) - 0.114919478756102*alloc(1728,sunf_L)
     
      - 0.140846172563979*alloc(1728,temf_H) - 0.116115903868808*alloc(1728,temf_L) - 0.0987305831034523*alloc(1728,toba_H) - 0.0761119173595013*alloc(1728,toba_L) - 0.00868184680582502*alloc(1728,trof_L) - 0.243042186185398*alloc(1728,vege_H)
     
      - 0.0656814215537304*alloc(1728,vege_L) - 0.0599188750076726*alloc(1729,bean_H) - 0.114397948114466*alloc(1729,bean_L) - 0.0993351156873067*alloc(1729,cass_L) - 0.0445212822483123*alloc(1729,chic_H) - 0.0754063208658065*alloc(1729,chic_L)
     
      - 0.071694290099318*alloc(1729,coff_L) - 0.093690361291792*alloc(1729,cott_L) - 0.0474252629339994*alloc(1729,cowp_H) - 0.133909103973087*alloc(1729,cowp_L) - 0.0596038500310031*alloc(1729,grou_H) - 0.077676491730367*alloc(1729,grou_L)
     
      - 0.0441022274859112*alloc(1729,lent_H) - 0.0754063208658065*alloc(1729,lent_L) - 0.067614439392915*alloc(1729,maiz_H) - 0.130411811824543*alloc(1729,maiz_L) - 0.0510195195119151*alloc(1729,mill_H) - 0.10629899211042*alloc(1729,mill_L)
     
      - 0.093690361291792*alloc(1729,ofib_L) - 0.13019706735525*alloc(1729,ooil_L) - 0.0384329931172422*alloc(1729,opul_H) - 0.0754063208658065*alloc(1729,opul_L) - 0.056233169364161*alloc(1729,pige_H) - 0.132160463750163*alloc(1729,pige_L)
     
      - 0.122640967592752*alloc(1729,pota_H) - 0.0722771721240753*alloc(1729,pota_L) - 0.0874545824238588*alloc(1729,rest_H) - 0.130411811824543*alloc(1729,rest_L) - 0.0558545592361733*alloc(1729,rice_H) - 0.13019706735525*alloc(1729,rice_L)
     
      - 0.135350958023667*alloc(1729,sorg_L) - 0.13019706735525*alloc(1729,soyb_L) - 0.13019706735525*alloc(1729,sunf_L) - 0.130422120162026*alloc(1729,temf_H) - 0.130411811824543*alloc(1729,temf_L) - 0.0934654633332869*alloc(1729,toba_H)
     
      - 0.105225258061261*alloc(1729,toba_L) - 0.00211677558413308*alloc(1729,trof_L) - 0.226051301332928*alloc(1729,vege_H) - 0.0868798721035024*alloc(1729,vege_L) - 0.052349228202969*alloc(1730,bean_H) - 0.127221282442951*alloc(1730,bean_L)
     
      - 0.150689880451892*alloc(1730,cass_L) - 0.0387799494488102*alloc(1730,chic_H) - 0.0848550950687294*alloc(1730,chic_L) - 0.0750995171394189*alloc(1730,coff_L) - 0.112373182782389*alloc(1730,cott_L) - 0.0429155555399771*alloc(1730,cowp_H)
     
      - 0.146548366598166*alloc(1730,cowp_L) - 0.0538127756503761*alloc(1730,grou_H) - 0.111391490436281*alloc(1730,grou_L) - 0.0384149347483899*alloc(1730,lent_H) - 0.0848550950687294*alloc(1730,lent_L) - 0.0609937633687124*alloc(1730,maiz_H)
     
      - 0.13636329973027*alloc(1730,maiz_L) - 0.0458733672029455*alloc(1730,mill_H) - 0.126024857330246*alloc(1730,mill_L) - 0.112373182782389*alloc(1730,ofib_L) - 0.136301942495801*alloc(1730,ooil_L) - 0.0334767880659957*alloc(1730,opul_H)
     
      - 0.0848550950687294*alloc(1730,opul_L) - 0.0499879643807125*alloc(1730,pige_H) - 0.136639401434032*alloc(1730,pige_L) - 0.106163089919444*alloc(1730,pota_H) - 0.0823701855862242*alloc(1730,pota_L) - 0.0788911977051657*alloc(1730,rest_H)
     
      - 0.13636329973027*alloc(1730,rest_L) - 0.0504374148249606*alloc(1730,rice_H) - 0.136301942495801*alloc(1730,rice_L) - 0.138081255484612*alloc(1730,sorg_L) - 0.136301942495801*alloc(1730,soyb_L) - 0.136301942495801*alloc(1730,sunf_L)
     
      - 0.11765143668472*alloc(1730,temf_H) - 0.13636329973027*alloc(1730,temf_L) - 0.0839401171741371*alloc(1730,toba_H) - 0.133295508223008*alloc(1730,toba_L) - 0.000828303374165464*alloc(1730,trof_L) - 0.203869774501053*alloc(1730,vege_H)
     
      - 0.123601299230862*alloc(1730,vege_L) - 0.0314677755740548*alloc(1731,bean_H) - 0.0536556786112075*alloc(1731,bean_L) - 0.0655280226162106*alloc(1731,cass_L) - 0.0233775470674267*alloc(1731,chic_H) - 0.0385314684698616*alloc(1731,chic_L)
     
      - 0.0263523265898188*alloc(1731,coff_L) - 0.0536249999939731*alloc(1731,cott_L) - 0.0259745025259544*alloc(1731,cowp_H) - 0.0685344685917002*alloc(1731,cowp_L) - 0.0322491708507999*alloc(1731,grou_H) - 0.0533795710560981*alloc(1731,grou_L)
     
      - 0.0231575068543614*alloc(1731,lent_H) - 0.0385314684698616*alloc(1731,lent_L) - 0.037324468361018*alloc(1731,maiz_H) - 0.0536556786112075*alloc(1731,maiz_L) - 0.0280515850465952*alloc(1731,mill_H) - 0.0533795710560981*alloc(1731,mill_L)
     
      - 0.0536249999939731*alloc(1731,ofib_L) - 0.0536556786112075*alloc(1731,ooil_L) - 0.0201806655192299*alloc(1731,opul_H) - 0.0385314684698616*alloc(1731,opul_L) - 0.0304395166253593*alloc(1731,pige_H) - 0.0536556786112075*alloc(1731,pige_L)
     
      - 0.0632526349787112*alloc(1731,pota_H) - 0.0344819758394689*alloc(1731,pota_L) - 0.0482766081330167*alloc(1731,rest_H) - 0.0536556786112075*alloc(1731,rest_L) - 0.0304616588013983*alloc(1731,rice_H) - 0.0533795710560981*alloc(1731,rice_L)
     
      - 0.0536556786112075*alloc(1731,sorg_L) - 0.0533795710560981*alloc(1731,soyb_L) - 0.0536556786112075*alloc(1731,sunf_L) - 0.0719955136990236*alloc(1731,temf_H) - 0.0536556786112075*alloc(1731,temf_L) - 0.0495994294678514*alloc(1731,toba_H)
     
      - 0.0533488924388637*alloc(1731,toba_L) - 7.51858721487791E-13*alloc(1731,trof_L) - 0.117504324858603*alloc(1731,vege_H) - 0.0536556786112075*alloc(1731,vege_L) - 0.0280476199473116*alloc(1732,bean_H) - 0.0647304312302482*alloc(1732,bean_L)
     
      - 0.0472133182013606*alloc(1732,cass_L) - 0.0199750646443355*alloc(1732,chic_H) - 0.0491153544361304*alloc(1732,chic_L) - 0.0201860678837334*alloc(1732,coff_L) - 0.0633192323915107*alloc(1732,cott_L) - 0.0227289896585386*alloc(1732,cowp_H)
     
      - 0.0717556648878305*alloc(1732,cowp_L) - 0.0284361679834793*alloc(1732,grou_H) - 0.0554350208567576*alloc(1732,grou_L) - 0.0197870501589981*alloc(1732,lent_H) - 0.0491153544361304*alloc(1732,lent_L) - 0.0335875753130814*alloc(1732,maiz_H)
     
      - 0.0647304312302482*alloc(1732,maiz_L) - 0.0251674013619752*alloc(1732,mill_H) - 0.0554350091540617*alloc(1732,mill_L) - 0.0633192323915107*alloc(1732,ofib_L) - 0.0647304312302482*alloc(1732,ooil_L) - 0.0172434728566542*alloc(1732,opul_H)
     
      - 0.0491153544361304*alloc(1732,opul_L) - 0.0269970566750088*alloc(1732,pige_H) - 0.0647304312302482*alloc(1732,pige_L) - 0.0501196180368699*alloc(1732,pota_H) - 0.0308006470956064*alloc(1732,pota_L) - 0.0434431964534375*alloc(1732,rest_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0647304312302482*alloc(1732,rest_L) - 0.0257939209196935*alloc(1732,rice_H) - 0.0554350091540617*alloc(1732,rice_L) - 0.0647304312302482*alloc(1732,sorg_L) - 0.0554350091540617*alloc(1732,soyb_L) - 0.0647304312302482*alloc(1732,sunf_L)
     
      - 0.0647873859898158*alloc(1732,temf_H) - 0.0647304312302482*alloc(1732,temf_L) - 0.0423321032974932*alloc(1732,toba_H) - 0.054023827869368*alloc(1732,toba_L) - 0.108883494998555*alloc(1732,vege_H) - 0.0647304312302482*alloc(1732,vege_L)
     
      - 0.0505259117300968*alloc(1735,bean_H) - 0.141455833164218*alloc(1735,bean_L) - 0.174526610164949*alloc(1735,cass_L) - 0.0277178626551254*alloc(1735,chic_H) - 0.0811737253654314*alloc(1735,chic_L) - 0.0796398471658439*alloc(1735,coff_L)
     
      - 0.0954696508752107*alloc(1735,cott_L) - 0.0424989231892452*alloc(1735,cowp_H) - 0.189742853232324*alloc(1735,cowp_L) - 0.0528021180627839*alloc(1735,grou_H) - 0.14191599486869*alloc(1735,grou_L) - 0.0274569693977294*alloc(1735,lent_H)
     
      - 0.0811737253654314*alloc(1735,lent_L) - 0.0625642573845303*alloc(1735,maiz_H) - 0.142468198276213*alloc(1735,maiz_L) - 0.0362865643741073*alloc(1735,mill_H) - 0.141455833164218*alloc(1735,mill_L) - 0.0954696508752107*alloc(1735,ofib_L)
     
      - 0.142468198276213*alloc(1735,ooil_L) - 0.0239274425814518*alloc(1735,opul_H) - 0.0811737253654314*alloc(1735,opul_L) - 0.0495557675560428*alloc(1735,pige_H) - 0.142468198276213*alloc(1735,pige_L) - 0.080922522664534*alloc(1735,rest_H)
     
      - 0.142468198276213*alloc(1735,rest_L) - 0.0486029620125688*alloc(1735,rice_H) - 0.141455833164218*alloc(1735,rice_L) - 0.142437525510326*alloc(1735,sorg_L) - 0.141455833164218*alloc(1735,soyb_L) - 0.142468198276213*alloc(1735,sunf_L)
     
      - 0.120680777178907*alloc(1735,temf_H) - 0.142468198276213*alloc(1735,temf_L) - 0.0816355776547274*alloc(1735,toba_H) - 0.140903629756695*alloc(1735,toba_L) - 0.192386890786739*alloc(1735,vege_H) - 0.142468198276213*alloc(1735,vege_L)
     
      - 0.038284700325426*alloc(1736,bean_H) - 0.0646997233562742*alloc(1736,bean_L) - 0.0739030978780617*alloc(1736,cass_L) - 0.0376418031984345*alloc(1736,coff_L) - 0.0431331498794074*alloc(1736,cott_L) - 0.0321283236639403*alloc(1736,cowp_H)
     
      - 0.0863890083764045*alloc(1736,cowp_L) - 0.0399449623324146*alloc(1736,grou_H) - 0.0646997233562742*alloc(1736,grou_L) - 0.0472950766535549*alloc(1736,maiz_H) - 0.0646997233562742*alloc(1736,maiz_L) - 0.0274997680808161*alloc(1736,mill_H)
     
      - 0.0646997233562742*alloc(1736,mill_L) - 0.0431331498794074*alloc(1736,ofib_L) - 0.0646997233562742*alloc(1736,ooil_L) - 0.0373910959344812*alloc(1736,pige_H) - 0.0646997233562742*alloc(1736,pige_L) - 0.061172897632195*alloc(1736,rest_H)
     
      - 0.0646997233562742*alloc(1736,rest_L) - 0.0368241163268966*alloc(1736,rice_H) - 0.0646997233562742*alloc(1736,rice_L) - 0.0646997233562742*alloc(1736,sorg_L) - 0.0646997233562742*alloc(1736,soyb_L) - 0.0646997233562742*alloc(1736,sunf_L)
     
      - 0.0912279126435899*alloc(1736,temf_H) - 0.0646997233562742*alloc(1736,temf_L) - 0.0616995728495166*alloc(1736,toba_H) - 0.0646997233562742*alloc(1736,toba_L) - 0.145539141384204*alloc(1736,vege_H) - 0.0646997233562742*alloc(1736,vege_L)
     
      - 0.066085526349009*alloc(1764,bean_H) - 0.100408814628378*alloc(1764,bean_L) - 0.0411084050270481*alloc(1764,cass_L) - 0.0462129830707709*alloc(1764,chic_H) - 0.0565393984150637*alloc(1764,chic_L) - 0.0401573912981741*alloc(1764,coff_L)
     
      - 0.0487778837952043*alloc(1764,cott_L) - 0.0519534737268446*alloc(1764,cowp_H) - 0.104488982950332*alloc(1764,cowp_L) - 0.0665005410766203*alloc(1764,grou_H) - 0.0487778837952043*alloc(1764,grou_L) - 0.045778005243031*alloc(1764,lent_H)
     
      - 0.0565393984150637*alloc(1764,lent_L) - 0.0753553567616643*alloc(1764,maiz_H) - 0.104458298481749*alloc(1764,maiz_L) - 0.0567783696453058*alloc(1764,mill_H) - 0.0970956000345889*alloc(1764,mill_L) - 0.0487778837952043*alloc(1764,ofib_L)
     
      - 0.10261762825847*alloc(1764,ooil_L) - 0.0398933537084615*alloc(1764,opul_H) - 0.0565393984150637*alloc(1764,opul_L) - 0.0613604568360153*alloc(1764,pige_H) - 0.104488982950332*alloc(1764,pige_L) - 0.118410615123748*alloc(1764,pota_H)
     
      - 0.0473360238932762*alloc(1764,pota_L) - 0.0974669215357395*alloc(1764,rest_H) - 0.104458298481749*alloc(1764,rest_L) - 0.059772060217071*alloc(1764,rice_H) - 0.10261762825847*alloc(1764,rice_L) - 0.121024377302045*alloc(1764,sorg_L)
     
      - 0.10261762825847*alloc(1764,soyb_L) - 0.10261762825847*alloc(1764,sunf_L) - 0.145353647573863*alloc(1764,temf_H) - 0.104458298481749*alloc(1764,temf_L) - 0.0999685432116197*alloc(1764,toba_H) - 0.0553736343655491*alloc(1764,toba_L)
     
      - 0.00687185373694325*alloc(1764,trof_L) - 0.248722610552946*alloc(1764,vege_H) - 0.0508333043391241*alloc(1764,vege_L) - 0.0687486876967478*alloc(1765,bean_H) - 0.0996725512201451*alloc(1765,bean_L) - 0.0381940036802835*alloc(1765,cass_L)
     
      - 0.0485809078602613*alloc(1765,chic_H) - 0.0567541428843564*alloc(1765,chic_L) - 0.0381940036802835*alloc(1765,coff_L) - 0.0477348371403012*alloc(1765,cott_L) - 0.0540890671464418*alloc(1765,cowp_H) - 0.103936779542809*alloc(1765,cowp_L)
     
      - 0.0691354750803107*alloc(1765,grou_H) - 0.0477348371403012*alloc(1765,grou_L) - 0.0481236420365354*alloc(1765,lent_H) - 0.0567541428843564*alloc(1765,lent_L) - 0.0785557888082483*alloc(1765,maiz_H) - 0.103936779542809*alloc(1765,maiz_L)
     
      - 0.0592737737217593*alloc(1765,mill_H) - 0.095438995663368*alloc(1765,mill_L) - 0.0477348371403012*alloc(1765,ofib_L) - 0.101819995913072*alloc(1765,ooil_L) - 0.0419374645817525*alloc(1765,opul_H) - 0.0567541428843564*alloc(1765,opul_L)
     
      - 0.0638494468840826*alloc(1765,pige_H) - 0.103936779542809*alloc(1765,pige_L) - 0.124837913796407*alloc(1765,pota_H) - 0.0461395841522012*alloc(1765,pota_L) - 0.101606458160209*alloc(1765,rest_H) - 0.103936779542809*alloc(1765,rest_L)
     
      - 0.0621706844535514*alloc(1765,rice_H) - 0.101819995913072*alloc(1765,rice_L) - 0.122987761994262*alloc(1765,sorg_L) - 0.101819995913072*alloc(1765,soyb_L) - 0.101819995913072*alloc(1765,sunf_L) - 0.1515269906748*alloc(1765,temf_H)
     
      - 0.103936779542809*alloc(1765,temf_L) - 0.10356888567737*alloc(1765,toba_H) - 0.0546373651059679*alloc(1765,toba_L) - 0.00794558339759171*alloc(1765,trof_L) - 0.259399382860716*alloc(1765,vege_H) - 0.0498516119930158*alloc(1765,vege_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0688207558225935*alloc(1766,bean_H) - 0.0993657650478014*alloc(1766,bean_L) - 0.0381633279887231*alloc(1766,cass_L) - 0.0491905467649936*alloc(1766,chic_H) - 0.0575824479956408*alloc(1766,chic_L) - 0.0418139985950689*alloc(1766,coff_L)
     
      - 0.0496982247581918*alloc(1766,cott_L) - 0.0541484115713132*alloc(1766,cowp_H) - 0.104243554012457*alloc(1766,cowp_L) - 0.0689934551292559*alloc(1766,grou_H) - 0.0472746666588075*alloc(1766,grou_L) - 0.0487275427398172*alloc(1766,lent_H)
     
      - 0.0575824479956408*alloc(1766,lent_L) - 0.0787870162118175*alloc(1766,maiz_H) - 0.104243554012457*alloc(1766,maiz_L) - 0.0594108426852383*alloc(1766,mill_H) - 0.0945186547003805*alloc(1766,mill_L) - 0.0496982247581918*alloc(1766,ofib_L)
     
      - 0.101819995913072*alloc(1766,ooil_L) - 0.0424637353144528*alloc(1766,opul_H) - 0.0575824479956408*alloc(1766,opul_L) - 0.0638320596368036*alloc(1766,pige_H) - 0.104243554012457*alloc(1766,pige_L) - 0.127120493795847*alloc(1766,pota_H)
     
      - 0.0454339935098543*alloc(1766,pota_L) - 0.101905534751033*alloc(1766,rest_H) - 0.104243554012457*alloc(1766,rest_L) - 0.0621127024219062*alloc(1766,rice_H) - 0.101819995913072*alloc(1766,rice_L) - 0.126086226267411*alloc(1766,sorg_L)
     
      - 0.101819995913072*alloc(1766,soyb_L) - 0.101819995913072*alloc(1766,sunf_L) - 0.151973007361233*alloc(1766,temf_H) - 0.104243554012457*alloc(1766,temf_L) - 0.10301146989429*alloc(1766,toba_H) - 0.0551588898962564*alloc(1766,toba_L)
     
      - 0.0169955619075334*alloc(1766,trof_L) - 0.259942632496497*alloc(1766,vege_H) - 0.0496982247581918*alloc(1766,vege_L) - 0.0649628788299649*alloc(1767,bean_H) - 0.102004079319174*alloc(1767,bean_L) - 0.0433785934456523*alloc(1767,cass_L)
     
      - 0.0470354560528215*alloc(1767,chic_H) - 0.0550055085127804*alloc(1767,chic_L) - 0.0455567109044658*alloc(1767,coff_L) - 0.0502811126342971*alloc(1767,cott_L) - 0.0510705003688595*alloc(1767,cowp_H) - 0.10344594507245*alloc(1767,cowp_L)
     
      - 0.0656105041655723*alloc(1767,grou_H) - 0.0488085741151346*alloc(1767,grou_L) - 0.0465927367315156*alloc(1767,lent_H) - 0.0550055085127804*alloc(1767,lent_L) - 0.0730700234185744*alloc(1767,maiz_H) - 0.10344594507245*alloc(1767,maiz_L)
     
      - 0.0551672301041055*alloc(1767,mill_H) - 0.0976478092934597*alloc(1767,mill_L) - 0.0502811126342971*alloc(1767,ofib_L) - 0.102004079319174*alloc(1767,ooil_L) - 0.0406033534403193*alloc(1767,opul_H) - 0.0550055085127804*alloc(1767,opul_L)
     
      - 0.0600146403756369*alloc(1767,pige_H) - 0.10344594507245*alloc(1767,pige_L) - 0.126294782541541*alloc(1767,pota_H) - 0.0477348429916491*alloc(1767,pota_L) - 0.0945110015427064*alloc(1767,rest_H) - 0.10344594507245*alloc(1767,rest_L)
     
      - 0.0588139420032313*alloc(1767,rice_H) - 0.102004079319174*alloc(1767,rice_L) - 0.116514720041507*alloc(1767,sorg_L) - 0.102004079319174*alloc(1767,soyb_L) - 0.102004079319174*alloc(1767,sunf_L) - 0.140945446861724*alloc(1767,temf_H)
     
      - 0.10344594507245*alloc(1767,temf_L) - 0.0985268210907665*alloc(1767,toba_H) - 0.0535329758449659*alloc(1767,toba_L) - 0.0101543867878245*alloc(1767,trof_L) - 0.242700727725955*alloc(1767,vege_H) - 0.0502811126342971*alloc(1767,vege_L)
     
      - 0.0615453912457139*alloc(1768,bean_H) - 0.119275760484513*alloc(1768,bean_L) - 0.086389055187188*alloc(1768,cass_L) - 0.0443972106477318*alloc(1768,chic_H) - 0.0654973615530201*alloc(1768,chic_L) - 0.0612944846134773*alloc(1768,coff_L)
     
      - 0.0735656681965712*alloc(1768,cott_L) - 0.0489159964604015*alloc(1768,cowp_H) - 0.12553404626528*alloc(1768,cowp_L) - 0.062465454397027*alloc(1768,grou_H) - 0.0723078741467014*alloc(1768,grou_L) - 0.0439793237042361*alloc(1768,lent_H)
     
      - 0.0654973615530201*alloc(1768,lent_L) - 0.0691939816294367*alloc(1768,maiz_H) - 0.120134738361684*alloc(1768,maiz_L) - 0.0521057786818002*alloc(1768,mill_H) - 0.106145604875596*alloc(1768,mill_L) - 0.0735656681965712*alloc(1768,ofib_L)
     
      - 0.119705249423098*alloc(1768,ooil_L) - 0.0383258883185853*alloc(1768,opul_H) - 0.0654973615530201*alloc(1768,opul_L) - 0.0572302076594036*alloc(1768,pige_H) - 0.120134738361684*alloc(1768,pige_L) - 0.120187557123507*alloc(1768,pota_H)
     
      - 0.0625522786633471*alloc(1768,pota_L) - 0.089497610628428*alloc(1768,rest_H) - 0.120134738361684*alloc(1768,rest_L) - 0.0566382809484825*alloc(1768,rice_H) - 0.119705249423098*alloc(1768,rice_L) - 0.124705752856691*alloc(1768,sorg_L)
     
      - 0.119705249423098*alloc(1768,soyb_L) - 0.119705249423098*alloc(1768,sunf_L) - 0.13346891385317*alloc(1768,temf_H) - 0.120134738361684*alloc(1768,temf_L) - 0.0957001321870483*alloc(1768,toba_H) - 0.0827383699524723*alloc(1768,toba_L)
     
      - 0.00334389211389623*alloc(1768,trof_L) - 0.231861525437768*alloc(1768,vege_H) - 0.08160329037154*alloc(1768,vege_L) - 0.0611664799100135*alloc(1769,bean_H) - 0.164188179467621*alloc(1769,bean_L) - 0.192350518143203*alloc(1769,cass_L)
     
      - 0.0446389071734505*alloc(1769,chic_H) - 0.0980772865293493*alloc(1769,chic_L) - 0.093751695120869*alloc(1769,coff_L) - 0.137467729950708*alloc(1769,cott_L) - 0.0502897302229926*alloc(1769,cowp_H) - 0.17952714870663*alloc(1769,cowp_L)
     
      - 0.0627761311182431*alloc(1769,grou_H) - 0.135105529085792*alloc(1769,grou_L) - 0.044218745271215*alloc(1769,lent_H) - 0.0980772865293493*alloc(1769,lent_L) - 0.0710656326543776*alloc(1769,maiz_H) - 0.16424953670209*alloc(1769,maiz_L)
     
      - 0.0534210781901161*alloc(1769,mill_H) - 0.162684968182572*alloc(1769,mill_L) - 0.137467729950708*alloc(1769,ofib_L) - 0.164218852233508*alloc(1769,ooil_L) - 0.0385345328238715*alloc(1769,opul_H) - 0.0980772865293493*alloc(1769,opul_L)
     
      - 0.0576728935618548*alloc(1769,pige_H) - 0.16424953670209*alloc(1769,pige_L) - 0.121173183709972*alloc(1769,pota_H) - 0.0955616925782617*alloc(1769,pota_L) - 0.0919184612677153*alloc(1769,rest_H) - 0.16424953670209*alloc(1769,rest_L)
     
      - 0.0587700955219306*alloc(1769,rice_H) - 0.164218852233508*alloc(1769,rice_L) - 0.166857154802185*alloc(1769,sorg_L) - 0.164218852233508*alloc(1769,soyb_L) - 0.164218852233508*alloc(1769,sunf_L) - 0.137079158899464*alloc(1769,temf_H)
     
      - 0.16424953670209*alloc(1769,temf_L) - 0.0984526425637823*alloc(1769,toba_H) - 0.160905655193762*alloc(1769,toba_L) - 0.00138050559313334*alloc(1769,trof_L) - 0.240836749409831*alloc(1769,vege_H) - 0.160261421785884*alloc(1769,vege_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0528953168560298*alloc(1770,bean_H) - 0.12136182453758*alloc(1770,bean_L) - 0.154217857069018*alloc(1770,cass_L) - 0.0389208955245887*alloc(1770,chic_H) - 0.0827076503758023*alloc(1770,chic_L) - 0.0671846269874315*alloc(1770,coff_L)
     
      - 0.120840293895943*alloc(1770,cott_L) - 0.0437041320534036*alloc(1770,cowp_H) - 0.158972943267432*alloc(1770,cowp_L) - 0.0542032192322506*alloc(1770,grou_H) - 0.120809621130057*alloc(1770,grou_L) - 0.03855455417495*alloc(1770,lent_H)
     
      - 0.0827076503758023*alloc(1770,lent_L) - 0.0628665086552002*alloc(1770,maiz_H) - 0.12136182453758*alloc(1770,maiz_L) - 0.0472367978228729*alloc(1770,mill_H) - 0.121331140068997*alloc(1770,mill_L) - 0.120840293895943*alloc(1770,ofib_L)
     
      - 0.12136182453758*alloc(1770,ooil_L) - 0.0335984597539333*alloc(1770,opul_H) - 0.0827076503758023*alloc(1770,opul_L) - 0.0511379993765117*alloc(1770,pige_H) - 0.12136182453758*alloc(1770,pige_L) - 0.104254209009027*alloc(1770,pota_H)
     
      - 0.0733508886191909*alloc(1770,pota_L) - 0.0813134636957819*alloc(1770,rest_H) - 0.12136182453758*alloc(1770,rest_L) - 0.0512959541069602*alloc(1770,rice_H) - 0.12136182453758*alloc(1770,rice_L) - 0.121392497303466*alloc(1770,sorg_L)
     
      - 0.12136182453758*alloc(1770,soyb_L) - 0.12136182453758*alloc(1770,sunf_L) - 0.121263792462275*alloc(1770,temf_H) - 0.12136182453758*alloc(1770,temf_L) - 0.0836389338419675*alloc(1770,toba_H) - 0.121331140068997*alloc(1770,toba_L)
     
      - 3.06779058156098E-5*alloc(1770,trof_L) - 0.197816700448818*alloc(1770,vege_H) - 0.121331140068997*alloc(1770,vege_L) - 0.0426105063574188*alloc(1771,bean_H) - 0.0959912049222389*alloc(1771,bean_L) - 0.103384552729894*alloc(1771,cass_L)
     
      - 0.0318731060844346*alloc(1771,chic_H) - 0.0694547978519919*alloc(1771,chic_L) - 0.048747196400948*alloc(1771,coff_L) - 0.0949788222562003*alloc(1771,cott_L) - 0.0349266674617918*alloc(1771,cowp_H) - 0.118109973029607*alloc(1771,cowp_L)
     
      - 0.0435587785457084*alloc(1771,grou_H) - 0.0949788281075482*alloc(1771,grou_L) - 0.0315731017668882*alloc(1771,lent_H) - 0.0694547978519919*alloc(1771,lent_L) - 0.0503235095094718*alloc(1771,maiz_H) - 0.0959912049222389*alloc(1771,maiz_L)
     
      - 0.0378562274452885*alloc(1771,mill_H) - 0.0915735776620555*alloc(1771,mill_L) - 0.0949788222562003*alloc(1771,ofib_L) - 0.0959912049222389*alloc(1771,ooil_L) - 0.0275144561186721*alloc(1771,opul_H) - 0.0694547978519919*alloc(1771,opul_L)
     
      - 0.0408690126794322*alloc(1771,pige_H) - 0.0959912049222389*alloc(1771,pige_L) - 0.0858454969500135*alloc(1771,pota_H) - 0.0585027831072804*alloc(1771,pota_L) - 0.0650899652466113*alloc(1771,rest_H) - 0.0959912049222389*alloc(1771,rest_L)
     
      - 0.0407101114629458*alloc(1771,rice_H) - 0.0915735776620555*alloc(1771,rice_L) - 0.0959912049222389*alloc(1771,sorg_L) - 0.0915735776620555*alloc(1771,soyb_L) - 0.0959912049222389*alloc(1771,sunf_L) - 0.0970694849080847*alloc(1771,temf_H)
     
      - 0.0959912049222389*alloc(1771,temf_L) - 0.0663000905869092*alloc(1771,toba_H) - 0.0905612066987128*alloc(1771,toba_L) - 0.160077497819395*alloc(1771,vege_H) - 0.0959912049222389*alloc(1771,vege_L) - 0.0455949824332562*alloc(1774,bean_H)
     
      - 0.145628019783831*alloc(1774,bean_L) - 0.159034265393813*alloc(1774,cass_L) - 3.0163903562078E-6*alloc(1774,chic_H) - 1.33518868404442E-9*alloc(1774,chic_L) - 0.0700376623227054*alloc(1774,coff_L) - 0.108783848930794*alloc(1774,cott_L)
     
      - 0.0379058070671996*alloc(1774,cowp_H) - 0.191583523455604*alloc(1774,cowp_L) - 0.0475115030998152*alloc(1774,grou_H) - 0.146916486599587*alloc(1774,grou_L) - 2.98799870439105E-6*alloc(1774,lent_H) - 1.33518868404442E-9*alloc(1774,lent_L)
     
      - 0.0562279721170605*alloc(1774,maiz_H) - 0.154125803663271*alloc(1774,maiz_L) - 0.0328244479799698*alloc(1774,mill_H) - 0.145628019783831*alloc(1774,mill_L) - 0.108783848930794*alloc(1774,ofib_L) - 0.154125791960575*alloc(1774,ooil_L)
     
      - 2.60389871865034E-6*alloc(1774,opul_H) - 1.33518868404442E-9*alloc(1774,opul_L) - 0.0442979063505697*alloc(1774,pige_H) - 0.154125803663271*alloc(1774,pige_L) - 0.0727269776424883*alloc(1774,rest_H) - 0.154125803663271*alloc(1774,rest_L)
     
      - 0.0431666912374343*alloc(1774,rice_H) - 0.145628019783831*alloc(1774,rice_L) - 0.154156476429158*alloc(1774,sorg_L) - 0.145628019783831*alloc(1774,soyb_L) - 0.154125791960575*alloc(1774,sunf_L) - 0.108458657673744*alloc(1774,temf_H)
     
      - 0.154125803663271*alloc(1774,temf_L) - 0.0723839874096634*alloc(1774,toba_H) - 0.13838802995426*alloc(1774,toba_L) - 0.175153135697902*alloc(1774,vege_H) - 0.154125803663271*alloc(1774,vege_L) - 0.0283583136278816*alloc(1775,bean_H)
     
      - 0.038316715223547*alloc(1775,bean_L) - 0.0409243391749897*alloc(1775,cass_L) - 0.0223641999709167*alloc(1775,coff_L) - 0.0255547030214428*alloc(1775,cott_L) - 0.0237970138812598*alloc(1775,cowp_H) - 0.0511094060428856*alloc(1775,cowp_L)
     
      - 0.029601189842612*alloc(1775,grou_H) - 0.038316715223547*alloc(1775,grou_L) - 0.0350806695169754*alloc(1775,maiz_H) - 0.038316715223547*alloc(1775,maiz_L) - 0.0205169274763991*alloc(1775,mill_H) - 0.038316715223547*alloc(1775,mill_L)
     
      - 0.0255547030214428*alloc(1775,ofib_L) - 0.0223641999709167*alloc(1775,ooil_L) - 0.0276707132153633*alloc(1775,pige_H) - 0.038316715223547*alloc(1775,pige_L) - 0.045374410130478*alloc(1775,rest_H) - 0.038316715223547*alloc(1775,rest_L)
     
      - 0.0272983262385394*alloc(1775,rice_H) - 0.038316715223547*alloc(1775,rice_L) - 0.038316715223547*alloc(1775,sorg_L) - 0.038316715223547*alloc(1775,soyb_L) - 0.0223641999709167*alloc(1775,sunf_L) - 0.0676674292678775*alloc(1775,temf_H)
     
      - 0.038316715223547*alloc(1775,temf_L) - 0.0457274701877358*alloc(1775,toba_H) - 0.038316715223547*alloc(1775,toba_L) - 0.105544614178919*alloc(1775,vege_H) - 0.038316715223547*alloc(1775,vege_L) - 0.0680922400360861*alloc(1805,bean_H)
     
      - 0.119367778782172*alloc(1805,bean_L) - 0.077768539284766*alloc(1805,cass_L) - 0.0481107367835892*alloc(1805,chic_H) - 0.0693014223198638*alloc(1805,chic_L) - 0.00490846502192488*alloc(1805,coff_L) - 0.0749154863954482*alloc(1805,cott_L)
     
      - 0.0541463378659661*alloc(1805,cowp_H) - 0.129552857352764*alloc(1805,cowp_L) - 0.0682626262319985*alloc(1805,grou_H) - 0.0718170162709513*alloc(1805,grou_L) - 0.047657896426042*alloc(1805,lent_H) - 0.0693014223198638*alloc(1805,lent_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0782383308407859*alloc(1805,maiz_H) - 0.122128795819787*alloc(1805,maiz_L) - 0.0588704623852277*alloc(1805,mill_H) - 0.115594396632563*alloc(1805,mill_L) - 0.0749154863954482*alloc(1805,ofib_L) - 0.12074828730098*alloc(1805,ooil_L)
     
      - 0.0415315894397725*alloc(1805,opul_H) - 0.0693014223198638*alloc(1805,opul_L) - 0.0635443449044991*alloc(1805,pige_H) - 0.122128795819787*alloc(1805,pige_L) - 0.124178045779988*alloc(1805,pota_H) - 0.0593310999212607*alloc(1805,pota_L)
     
      - 0.101195848322564*alloc(1805,rest_H) - 0.122128795819787*alloc(1805,rest_L) - 0.0624592235247981*alloc(1805,rice_H) - 0.12074828730098*alloc(1805,rice_L) - 0.137590456122341*alloc(1805,sorg_L) - 0.12074828730098*alloc(1805,soyb_L)
     
      - 0.12074828730098*alloc(1805,sunf_L) - 0.150914643052746*alloc(1805,temf_H) - 0.122128795819787*alloc(1805,temf_L) - 0.104331644564383*alloc(1805,toba_H) - 0.0873400455106702*alloc(1805,toba_L) - 0.00592083561955835*alloc(1805,trof_L)
     
      - 0.259967288157361*alloc(1805,vege_H) - 0.0834746275093576*alloc(1805,vege_L) - 0.0634577677658324*alloc(1806,bean_H) - 0.156119907932158*alloc(1806,bean_L) - 0.139983341455839*alloc(1806,cass_L) - 0.0453954392241058*alloc(1806,chic_H)
     
      - 0.0923098469216368*alloc(1806,chic_L) - 0.0012271351809347*alloc(1806,coff_L) - 0.121637937944037*alloc(1806,cott_L) - 0.0516576970967625*alloc(1806,cowp_H) - 0.174495984209846*alloc(1806,cowp_L) - 0.0639169997689824*alloc(1806,grou_H)
     
      - 0.117220310683854*alloc(1806,grou_L) - 0.0449681564946451*alloc(1806,lent_H) - 0.0923098469216368*alloc(1806,lent_L) - 0.0732322808696935*alloc(1806,maiz_H) - 0.156273295166982*alloc(1806,maiz_L) - 0.0550760110591596*alloc(1806,mill_H)
     
      - 0.154647369412995*alloc(1806,mill_L) - 0.121637937944037*alloc(1806,ofib_L) - 0.156211937932513*alloc(1806,ooil_L) - 0.0391876090523063*alloc(1806,opul_H) - 0.0923098469216368*alloc(1806,opul_L) - 0.0595661991142904*alloc(1806,pige_H)
     
      - 0.156273295166982*alloc(1806,pige_L) - 0.120443332661965*alloc(1806,pota_H) - 0.0876774810435086*alloc(1806,pota_L) - 0.0947208702890893*alloc(1806,rest_H) - 0.156273295166982*alloc(1806,rest_L) - 0.0602995786045181*alloc(1806,rice_H)
     
      - 0.156211937932513*alloc(1806,rice_L) - 0.160936339662344*alloc(1806,sorg_L) - 0.156211937932513*alloc(1806,soyb_L) - 0.156211937932513*alloc(1806,sunf_L) - 0.141258426766268*alloc(1806,temf_H) - 0.156273295166982*alloc(1806,temf_L)
     
      - 0.101070153114549*alloc(1806,toba_H) - 0.14691653341037*alloc(1806,toba_L) - 0.00128847284995879*alloc(1806,trof_L) - 0.247636871461121*alloc(1806,vege_H) - 0.145750769360856*alloc(1806,vege_L) - 0.0606643285298911*alloc(1807,bean_H)
     
      - 0.163145153292436*alloc(1807,bean_L) - 0.178177336359101*alloc(1807,cass_L) - 0.043788196749193*alloc(1807,chic_H) - 0.0976171248248774*alloc(1807,chic_L) - 0.0455873807446783*alloc(1807,coff_L) - 0.132559268220166*alloc(1807,cott_L)
     
      - 0.0496773684112905*alloc(1807,cowp_H) - 0.183668674263052*alloc(1807,cowp_L) - 0.0610889647141192*alloc(1807,grou_H) - 0.127405377551749*alloc(1807,grou_L) - 0.0433760421243024*alloc(1807,lent_H) - 0.0976171248248774*alloc(1807,lent_L)
     
      - 0.0703235338587227*alloc(1807,maiz_H) - 0.163145153292436*alloc(1807,maiz_L) - 0.0528874220750457*alloc(1807,mill_H) - 0.161580573070222*alloc(1807,mill_L) - 0.132559268220166*alloc(1807,ofib_L) - 0.163145153292436*alloc(1807,ooil_L)
     
      - 0.0378001571224284*alloc(1807,opul_H) - 0.0976171248248774*alloc(1807,opul_L) - 0.0570443233367934*alloc(1807,pige_H) - 0.163145153292436*alloc(1807,pige_L) - 0.116452214423471*alloc(1807,pota_H) - 0.0925859486253982*alloc(1807,pota_L)
     
      - 0.0909586080045077*alloc(1807,rest_H) - 0.163145153292436*alloc(1807,rest_L) - 0.0580362318310151*alloc(1807,rice_H) - 0.163145153292436*alloc(1807,rice_L) - 0.167900227788154*alloc(1807,sorg_L) - 0.163145153292436*alloc(1807,soyb_L)
     
      - 0.163145153292436*alloc(1807,sunf_L) - 0.135647717639757*alloc(1807,temf_H) - 0.163145153292436*alloc(1807,temf_L) - 0.0970581856268509*alloc(1807,toba_H) - 0.160414820723404*alloc(1807,toba_L) - 0.00236219921922403*alloc(1807,trof_L)
     
      - 0.23851300652736*alloc(1807,vege_H) - 0.159218383908003*alloc(1807,vege_L) - 0.0618594386926948*alloc(1808,bean_H) - 0.165384616283022*alloc(1808,bean_L) - 0.186705769599036*alloc(1808,cass_L) - 0.0458054743283241*alloc(1808,chic_H)
     
      - 0.0990283061095712*alloc(1808,chic_L) - 0.0470906066580971*alloc(1808,coff_L) - 0.13522824355473*alloc(1808,cott_L) - 0.0507301920543737*alloc(1808,cowp_H) - 0.184865087673061*alloc(1808,cowp_L) - 0.0625093577223541*alloc(1808,grou_H)
     
      - 0.131362819702069*alloc(1808,grou_L) - 0.045374332160085*alloc(1808,lent_H) - 0.0990283061095712*alloc(1808,lent_L) - 0.0712608498838798*alloc(1808,maiz_H) - 0.165384616283022*alloc(1808,maiz_L) - 0.0537002570808055*alloc(1808,mill_H)
     
      - 0.16424953670209*alloc(1808,mill_L) - 0.13522824355473*alloc(1808,ofib_L) - 0.165384616283022*alloc(1808,ooil_L) - 0.0395415718211762*alloc(1808,opul_H) - 0.0990283061095712*alloc(1808,opul_L) - 0.0579648973246018*alloc(1808,pige_H)
     
      - 0.165384616283022*alloc(1808,pige_L) - 0.125529525843494*alloc(1808,pota_H) - 0.0952549122572659*alloc(1808,pota_L) - 0.092170961198815*alloc(1808,rest_H) - 0.165384616283022*alloc(1808,rest_L) - 0.0593910541618494*alloc(1808,rice_H)
     
      - 0.165384616283022*alloc(1808,rice_L) - 0.168789866728515*alloc(1808,sorg_L) - 0.165384616283022*alloc(1808,soyb_L) - 0.165384616283022*alloc(1808,sunf_L) - 0.13745571522667*alloc(1808,temf_H) - 0.165384616283022*alloc(1808,temf_L)
     
      - 0.0990581681487775*alloc(1808,toba_H) - 0.163390547122223*alloc(1808,toba_L) - 0.00171796270281732*alloc(1808,trof_L) - 0.242837340403837*alloc(1808,vege_H) - 0.162531569245053*alloc(1808,vege_L) - 0.0522010991552231*alloc(1809,bean_H)
     
      - 0.116207945571859*alloc(1809,bean_L) - 0.141946691039968*alloc(1809,cass_L) - 0.0397687511311317*alloc(1809,chic_H) - 0.110195053620879*alloc(1809,chic_L) - 0.0627056483441273*alloc(1809,coff_L) - 0.111299472138621*alloc(1809,cott_L)
     
      - 0.0423990147460826*alloc(1809,cowp_H) - 0.116207945571859*alloc(1809,cowp_L) - 0.051889433584216*alloc(1809,grou_H) - 0.110072362557334*alloc(1809,grou_L) - 0.0393944293750041*alloc(1809,lent_H) - 0.110195053620879*alloc(1809,lent_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0608414995716859*alloc(1809,maiz_H) - 0.116207945571859*alloc(1809,maiz_L) - 0.0459456381551307*alloc(1809,mill_H) - 0.115103527054117*alloc(1809,mill_L) - 0.111299472138621*alloc(1809,ofib_L) - 0.116207945571859*alloc(1809,ooil_L)
     
      - 0.034330371034227*alloc(1809,opul_H) - 0.110195053620879*alloc(1809,opul_L) - 0.0494002902173612*alloc(1809,pige_H) - 0.116207945571859*alloc(1809,pige_L) - 0.111313189446628*alloc(1809,pota_H) - 0.0705898774329242*alloc(1809,pota_L)
     
      - 0.0786942550564241*alloc(1809,rest_H) - 0.116207945571859*alloc(1809,rest_L) - 0.0504888715561403*alloc(1809,rice_H) - 0.115256914288941*alloc(1809,rice_L) - 0.116760148979382*alloc(1809,sorg_L) - 0.116207933869163*alloc(1809,soyb_L)
     
      - 0.116207945571859*alloc(1809,sunf_L) - 0.117357733632378*alloc(1809,temf_H) - 0.116207945571859*alloc(1809,temf_L) - 0.0826025228469502*alloc(1809,toba_H) - 0.114704710881418*alloc(1809,toba_L) - 0.000245423223668051*alloc(1809,trof_L)
     
      - 0.198194771937434*alloc(1809,vege_H) - 0.11580912939916*alloc(1809,vege_L) - 0.0413268748163155*alloc(1810,bean_H) - 0.118017943029251*alloc(1810,bean_L) - 0.0732588469161398*alloc(1810,cass_L) - 0.0299032262245768*alloc(1810,chic_H)
     
      - 0.0925859427740503*alloc(1810,chic_L) - 0.0372123113341751*alloc(1810,coff_L) - 0.113692345769423*alloc(1810,cott_L) - 0.0327470802540176*alloc(1810,cowp_H) - 0.124306901575905*alloc(1810,cowp_L) - 0.0418828559390787*alloc(1810,grou_H)
     
      - 0.0988749188747472*alloc(1810,grou_L) - 0.0296217633212697*alloc(1810,lent_H) - 0.0925859427740503*alloc(1810,lent_L) - 0.0486675816380649*alloc(1810,maiz_H) - 0.118017943029251*alloc(1810,maiz_L) - 0.0365341199070003*alloc(1810,mill_H)
     
      - 0.0988749071720513*alloc(1810,mill_L) - 0.113692345769423*alloc(1810,ofib_L) - 0.118017931326556*alloc(1810,ooil_L) - 0.025813957497059*alloc(1810,opul_H) - 0.0925859427740503*alloc(1810,opul_L) - 0.0388803042218569*alloc(1810,pige_H)
     
      - 0.118017943029251*alloc(1810,pige_L) - 0.0754064961491023*alloc(1810,pota_H) - 0.0535943096740429*alloc(1810,pota_L) - 0.0629481375272929*alloc(1810,rest_H) - 0.118017943029251*alloc(1810,rest_L) - 0.0372636230881411*alloc(1810,rice_H)
     
      - 0.0988749071720513*alloc(1810,rice_L) - 0.118017943029251*alloc(1810,sorg_L) - 0.0988749071720513*alloc(1810,soyb_L) - 0.118017931326556*alloc(1810,sunf_L) - 0.093875350256324*alloc(1810,temf_H) - 0.118017943029251*alloc(1810,temf_L)
     
      - 0.0605485901540444*alloc(1810,toba_H) - 0.094549327466267*alloc(1810,toba_L) - 0.160870446169045*alloc(1810,vege_H) - 0.118017931326556*alloc(1810,vege_L) - 0.035207940147175*alloc(1811,bean_H) - 0.106667135517233*alloc(1811,bean_L)
     
      - 0.0502197612511763*alloc(1811,cass_L) - 0.0228546254221816*alloc(1811,chic_H) - 0.074485979902819*alloc(1811,chic_L) - 0.034175195518473*alloc(1811,coff_L) - 0.0830144541021899*alloc(1811,cott_L) - 0.0276270549291231*alloc(1811,cowp_H)
     
      - 0.0981080002546713*alloc(1811,cowp_L) - 0.0347429059191064*alloc(1811,grou_H) - 0.094733422575065*alloc(1811,grou_L) - 0.0226395071878809*alloc(1811,lent_H) - 0.074485979902819*alloc(1811,lent_L) - 0.0419723337368224*alloc(1811,maiz_H)
     
      - 0.106667135517233*alloc(1811,maiz_L) - 0.0312949211778326*alloc(1811,mill_H) - 0.0830144599535379*alloc(1811,mill_L) - 0.0830144541021899*alloc(1811,ofib_L) - 0.0981080002546713*alloc(1811,ooil_L) - 0.0197292534534122*alloc(1811,opul_H)
     
      - 0.074485979902819*alloc(1811,opul_L) - 0.0332806292708752*alloc(1811,pige_H) - 0.106667135517233*alloc(1811,pige_L) - 0.0533996178017471*alloc(1811,pota_H) - 0.0386848527790116*alloc(1811,pota_L) - 0.0542882992636818*alloc(1811,rest_H)
     
      - 0.106667135517233*alloc(1811,rest_L) - 0.0304762157963206*alloc(1811,rice_H) - 0.0830144599535379*alloc(1811,rice_L) - 0.106667135517233*alloc(1811,sorg_L) - 0.0830144599535379*alloc(1811,soyb_L) - 0.0981080002546713*alloc(1811,sunf_L)
     
      - 0.0809608243927567*alloc(1811,temf_H) - 0.106667135517233*alloc(1811,temf_L) - 0.0516839844528814*alloc(1811,toba_H) - 0.0796705608911659*alloc(1811,toba_L) - 0.13615997062547*alloc(1811,vege_H) - 0.0981080002546713*alloc(1811,vege_L)
     
      - 0.0605334452522185*alloc(1839,bean_H) - 0.0989669488751024*alloc(1839,bean_L) - 0.0341445198269126*alloc(1839,cass_L) - 0.040545303028879*alloc(1839,chic_H) - 0.0585641403417492*alloc(1839,chic_L) - 0.00837507160475862*alloc(1839,coff_L)
     
      - 0.0466917875597241*alloc(1839,cott_L) - 0.0478505168803311*alloc(1839,cowp_H) - 0.1045503401848*alloc(1839,cowp_L) - 0.0608845249721546*alloc(1839,grou_H) - 0.0466917875597241*alloc(1839,grou_L) - 0.0401636720095278*alloc(1839,lent_H)
     
      - 0.0585641403417492*alloc(1839,lent_L) - 0.0702922035679877*alloc(1839,maiz_H) - 0.1045503401848*alloc(1839,maiz_L) - 0.0527946860755551*alloc(1839,mill_H) - 0.101758638678603*alloc(1839,mill_L) - 0.0466917875597241*alloc(1839,ofib_L)
     
      - 0.101758638678603*alloc(1839,ooil_L) - 0.0350007293939626*alloc(1839,opul_H) - 0.0585641403417492*alloc(1839,opul_L) - 0.0565650896168752*alloc(1839,pige_H) - 0.1045503401848*alloc(1839,pige_L) - 0.0990555285788836*alloc(1839,pota_H)
     
      - 0.0446056883985699*alloc(1839,pota_L) - 0.0909180844489174*alloc(1839,rest_H) - 0.1045503401848*alloc(1839,rest_L) - 0.0542977235237448*alloc(1839,rice_H) - 0.101758638678603*alloc(1839,rice_L) - 0.129644863947727*alloc(1839,sorg_L)
     
      - 0.1045503401848*alloc(1839,soyb_L) - 0.101758638678603*alloc(1839,sunf_L) - 0.135587284350956*alloc(1839,temf_H) - 0.1045503401848*alloc(1839,temf_L) - 0.0903183792415884*alloc(1839,toba_H) - 0.0557724505382481*alloc(1839,toba_L)
     
      - 0.0104611700344943*alloc(1839,trof_L) - 0.229712264811901*alloc(1839,vege_H) - 0.0494834744375512*alloc(1839,vege_L) - 0.0682516244141135*alloc(1842,bean_H) - 0.098384072701693*alloc(1842,bean_L) - 0.031782318961997*alloc(1842,cass_L)
     
      - 0.0469522215083577*alloc(1842,chic_H) - 0.0595458326878575*alloc(1842,chic_L) - 0.00951015264852789*alloc(1842,coff_L) - 0.046047551226172*alloc(1842,cott_L) - 0.0538061804993168*alloc(1842,cowp_H) - 0.104734400185511*alloc(1842,cowp_L)
     
      - 0.0682947560771791*alloc(1842,grou_H) - 0.046047551226172*alloc(1842,grou_L) - 0.0465102856288238*alloc(1842,lent_H) - 0.0595458326878575*alloc(1842,lent_L) - 0.0794402960919714*alloc(1842,maiz_H) - 0.104734400185511*alloc(1842,maiz_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0597543235968299*alloc(1842,mill_H) - 0.101574578677893*alloc(1842,mill_L) - 0.046047551226172*alloc(1842,ofib_L) - 0.101574578677893*alloc(1842,ooil_L) - 0.0405315012268846*alloc(1842,opul_H) - 0.0595458326878575*alloc(1842,opul_L)
     
      - 0.0638250249984373*alloc(1842,pige_H) - 0.104734400185511*alloc(1842,pige_L) - 0.115628982823542*alloc(1842,pota_H) - 0.0436853503612564*alloc(1842,pota_L) - 0.102750506914342*alloc(1842,rest_H) - 0.104734400185511*alloc(1842,rest_L)
     
      - 0.0612904142258288*alloc(1842,rice_H) - 0.101574578677893*alloc(1842,rice_L) - 0.133295543331095*alloc(1842,sorg_L) - 0.104734400185511*alloc(1842,soyb_L) - 0.101574578677893*alloc(1842,sunf_L) - 0.153233124989862*alloc(1842,temf_H)
     
      - 0.104734400185511*alloc(1842,temf_L) - 0.101238712202751*alloc(1842,toba_H) - 0.0563860053288918*alloc(1842,toba_L) - 0.0119030306678409*alloc(1842,trof_L) - 0.260036041083819*alloc(1842,vege_H) - 0.0492380513510241*alloc(1842,vege_L)
     
      - 0.0645330590779943*alloc(1845,bean_H) - 0.157285671981672*alloc(1845,bean_L) - 0.166673118206866*alloc(1845,cass_L) - 0.0463178147281868*alloc(1845,chic_H) - 0.093997129910092*alloc(1845,chic_L) - 0.0417219481149959*alloc(1845,coff_L)
     
      - 0.129031315008432*alloc(1845,cott_L) - 0.0527020737163365*alloc(1845,cowp_H) - 0.177533091248527*alloc(1845,cowp_L) - 0.0647802597236482*alloc(1845,grou_H) - 0.122312844117801*alloc(1845,grou_L) - 0.0458818501767258*alloc(1845,lent_H)
     
      - 0.093997129910092*alloc(1845,lent_L) - 0.074850111323895*alloc(1845,maiz_H) - 0.157285671981672*alloc(1845,maiz_L) - 0.0562708151747813*alloc(1845,mill_H) - 0.155168900054632*alloc(1845,mill_L) - 0.129031315008432*alloc(1845,ofib_L)
     
      - 0.157285671981672*alloc(1845,ooil_L) - 0.0399838496278167*alloc(1845,opul_H) - 0.093997129910092*alloc(1845,opul_L) - 0.0604610406378777*alloc(1845,pige_H) - 0.157285671981672*alloc(1845,pige_L) - 0.12243615384739*alloc(1845,pota_H)
     
      - 0.0873707007225128*alloc(1845,pota_L) - 0.0968134216446156*alloc(1845,rest_H) - 0.157285671981672*alloc(1845,rest_L) - 0.0615337780521291*alloc(1845,rice_H) - 0.157285671981672*alloc(1845,rice_L) - 0.16363599946549*alloc(1845,sorg_L)
     
      - 0.157285671981672*alloc(1845,soyb_L) - 0.157285671981672*alloc(1845,sunf_L) - 0.144379074956125*alloc(1845,temf_H) - 0.157285671981672*alloc(1845,temf_L) - 0.102804397443564*alloc(1845,toba_H) - 0.153573647066532*alloc(1845,toba_L)
     
      - 0.00159525170811765*alloc(1845,trof_L) - 0.253437529348991*alloc(1845,vege_H) - 0.152009066844318*alloc(1845,vege_L) - 0.0645770386663253*alloc(1846,bean_H) - 0.159586515612119*alloc(1846,bean_L) - 0.16093635136504*alloc(1846,cass_L)
     
      - 0.0472039668509802*alloc(1846,chic_H) - 0.0953469773657087*alloc(1846,chic_L) - 0.00199410207463113*alloc(1846,coff_L) - 0.130105037354895*alloc(1846,cott_L) - 0.0525895555840731*alloc(1846,cowp_H) - 0.181827992337077*alloc(1846,cowp_L)
     
      - 0.0644093816860251*alloc(1846,grou_H) - 0.121484550709213*alloc(1846,grou_L) - 0.0467596614286252*alloc(1846,lent_H) - 0.0953469773657087*alloc(1846,lent_L) - 0.0743434320075333*alloc(1846,maiz_H) - 0.159586515612119*alloc(1846,maiz_L)
     
      - 0.0559736484301064*alloc(1846,mill_H) - 0.156917540277556*alloc(1846,mill_L) - 0.130105037354895*alloc(1846,ofib_L) - 0.159586515612119*alloc(1846,ooil_L) - 0.0407488203725091*alloc(1846,opul_H) - 0.0953469773657087*alloc(1846,opul_L)
     
      - 0.0600657568981147*alloc(1846,pige_H) - 0.159586515612119*alloc(1846,pige_L) - 0.126540382534884*alloc(1846,pota_H) - 0.0868798604008066*alloc(1846,pota_L) - 0.0961580671310964*alloc(1846,rest_H) - 0.159586515612119*alloc(1846,rest_L)
     
      - 0.0612973939541033*alloc(1846,rice_H) - 0.159586515612119*alloc(1846,rice_L) - 0.167532096084037*alloc(1846,sorg_L) - 0.159586515612119*alloc(1846,soyb_L) - 0.159586515612119*alloc(1846,sunf_L) - 0.143401736516651*alloc(1846,temf_H)
     
      - 0.159586515612119*alloc(1846,temf_L) - 0.102238292035597*alloc(1846,toba_H) - 0.154923471116757*alloc(1846,toba_L) - 0.00199406422372416*alloc(1846,trof_L) - 0.252491934428206*alloc(1846,vege_H) - 0.15296008642454*alloc(1846,vege_L)
     
      - 0.0630392850433237*alloc(1847,bean_H) - 0.164157483296343*alloc(1847,bean_L) - 0.193516258787326*alloc(1847,cass_L) - 0.0478258617868*alloc(1847,chic_H) - 0.136700793776588*alloc(1847,chic_L) - 0.0931381403302253*alloc(1847,coff_L)
     
      - 0.139001637407035*alloc(1847,cott_L) - 0.0508783237810712*alloc(1847,cowp_H) - 0.164157518404431*alloc(1847,cowp_L) - 0.061662458918493*alloc(1847,grou_H) - 0.136025875900128*alloc(1847,grou_L) - 0.0473757028035993*alloc(1847,lent_H)
     
      - 0.136700793776588*alloc(1847,lent_L) - 0.0722408853762129*alloc(1847,maiz_H) - 0.164157483296343*alloc(1847,maiz_L) - 0.0546175413497445*alloc(1847,mill_H) - 0.163267856058678*alloc(1847,mill_L) - 0.139001637407035*alloc(1847,ofib_L)
     
      - 0.164157518404431*alloc(1847,ooil_L) - 0.0412856711230042*alloc(1847,opul_H) - 0.136700793776588*alloc(1847,opul_L) - 0.0586289627467015*alloc(1847,pige_H) - 0.164157518404431*alloc(1847,pige_L) - 0.135166405702768*alloc(1847,pota_H)
     
      - 0.0975864403562951*alloc(1847,pota_L) - 0.0934385690576112*alloc(1847,rest_H) - 0.164157483296343*alloc(1847,rest_L) - 0.0608092480548707*alloc(1847,rice_H) - 0.164157506701735*alloc(1847,rice_L) - 0.166826493738994*alloc(1847,sorg_L)
     
      - 0.164157518404431*alloc(1847,soyb_L) - 0.164157518404431*alloc(1847,sunf_L) - 0.139346114790605*alloc(1847,temf_H) - 0.164157483296343*alloc(1847,temf_L) - 0.101029715287751*alloc(1847,toba_H) - 0.162592938182217*alloc(1847,toba_L)
     
      - 0.00134982789017207*alloc(1847,trof_L) - 0.247470751266142*alloc(1847,vege_H) - 0.161918032008453*alloc(1847,vege_L) - 0.0346856088908537*alloc(1848,bean_H) - 0.0825235962264399*alloc(1848,bean_L) - 0.114888770882128*alloc(1848,cass_L)
     
      - 0.043136856616626*alloc(1848,chic_H) - 0.129491453307512*alloc(1848,chic_L) - 0.0675527586915481*alloc(1848,coff_L) - 0.138602797828944*alloc(1848,cott_L) - 0.0432684040890432*alloc(1848,cowp_H) - 0.154463274304197*alloc(1848,cowp_L)
     
      - 0.0512598569709489*alloc(1848,grou_H) - 0.127804170319057*alloc(1848,grou_L) - 0.0427308327043005*alloc(1848,lent_H) - 0.129491453307512*alloc(1848,lent_L) - 0.0374101908331999*alloc(1848,maiz_H) - 0.0836586816587201*alloc(1848,maiz_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0481537828010334*alloc(1848,mill_H) - 0.129491453307512*alloc(1848,mill_L) - 0.138602797828944*alloc(1848,ofib_L) - 0.154770060476541*alloc(1848,ooil_L) - 0.0372378878083436*alloc(1848,opul_H) - 0.129491453307512*alloc(1848,opul_L)
     
      - 0.0510129892914498*alloc(1848,pige_H) - 0.154770060476541*alloc(1848,pige_L) - 0.121630217011309*alloc(1848,pota_H) - 0.0871866231677586*alloc(1848,pota_L) - 0.0483874841984891*alloc(1848,rest_H) - 0.0836586816587201*alloc(1848,rest_L)
     
      - 0.0522274536143757*alloc(1848,rice_H) - 0.140658212521516*alloc(1848,rice_L) - 0.130687901825609*alloc(1848,sorg_L) - 0.154770060476541*alloc(1848,soyb_L) - 0.154770060476541*alloc(1848,sunf_L) - 0.0721608645718236*alloc(1848,temf_H)
     
      - 0.0836586816587201*alloc(1848,temf_L) - 0.0857785551456495*alloc(1848,toba_H) - 0.134614671210042*alloc(1848,toba_L) - 0.000460168561520216*alloc(1848,trof_L) - 0.218039264467231*alloc(1848,vege_H) - 0.154003112599725*alloc(1848,vege_L)
     
      - 0.0381440449597584*alloc(1849,bean_H) - 0.103353903369399*alloc(1849,bean_L) - 0.0511400905114679*alloc(1849,cass_L) - 0.0283016918522698*alloc(1849,chic_H) - 0.0823395186716857*alloc(1849,chic_L) - 0.0322118254546262*alloc(1849,coff_L)
     
      - 0.0953162811944305*alloc(1849,cott_L) - 0.0290999982353748*alloc(1849,cowp_H) - 0.0992123778129774*alloc(1849,cowp_L) - 0.0363336440577585*alloc(1849,grou_H) - 0.0781980165206555*alloc(1849,grou_L) - 0.0280353033262487*alloc(1849,lent_H)
     
      - 0.0823395186716857*alloc(1849,lent_L) - 0.0439910002850817*alloc(1849,maiz_H) - 0.0992123895156733*alloc(1849,maiz_L) - 0.0331999299408489*alloc(1849,mill_H) - 0.0823395303743815*alloc(1849,mill_L) - 0.0953162811944305*alloc(1849,ofib_L)
     
      - 0.0992123778129774*alloc(1849,ooil_L) - 0.0244314330862704*alloc(1849,opul_H) - 0.0823395186716857*alloc(1849,opul_L) - 0.0350077559488994*alloc(1849,pige_H) - 0.103353903369399*alloc(1849,pige_L) - 0.0724716247702648*alloc(1849,pota_H)
     
      - 0.06132513982532*alloc(1849,pota_L) - 0.0568993042740928*alloc(1849,rest_H) - 0.0992123895156733*alloc(1849,rest_L) - 0.033357136797079*alloc(1849,rice_H) - 0.0823395303743815*alloc(1849,rice_L) - 0.103353903369399*alloc(1849,sorg_L)
     
      - 0.0992123778129774*alloc(1849,soyb_L) - 0.0992123778129774*alloc(1849,sunf_L) - 0.0848546490474907*alloc(1849,temf_H) - 0.0992123895156733*alloc(1849,temf_L) - 0.0547511561256292*alloc(1849,toba_H) - 0.0784127609899482*alloc(1849,toba_L)
     
      - 0.147687749334986*alloc(1849,vege_H) - 0.0992123778129774*alloc(1849,vege_L) - 0.0426404672531039*alloc(1850,bean_H) - 0.132405904390734*alloc(1850,bean_L) - 0.0676755024172253*alloc(1850,cass_L) - 0.0287650123262144*alloc(1850,chic_H)
     
      - 0.0683504202936857*alloc(1850,chic_L) - 0.0651905402725887*alloc(1850,coff_L) - 0.100500868034125*alloc(1850,cott_L) - 0.0324897421265333*alloc(1850,cowp_H) - 0.100592921439872*alloc(1850,cowp_L) - 0.0396701054300468*alloc(1850,grou_H)
     
      - 0.100500879736821*alloc(1850,grou_L) - 0.0284942628150347*alloc(1850,lent_H) - 0.0683504202936857*alloc(1850,lent_L) - 0.0492674016173026*alloc(1850,maiz_H) - 0.13240591609343*alloc(1850,maiz_L) - 0.0368726082981554*alloc(1850,mill_H)
     
      - 0.100163432501287*alloc(1850,mill_L) - 0.100500868034125*alloc(1850,ofib_L) - 0.100592921439872*alloc(1850,ooil_L) - 0.024831394446028*alloc(1850,opul_H) - 0.0683504202936857*alloc(1850,opul_L) - 0.0396117024644758*alloc(1850,pige_H)
     
      - 0.13240591609343*alloc(1850,pige_L) - 0.0681486656259422*alloc(1850,pota_H) - 0.0394518094328491*alloc(1850,pota_L) - 0.0637239630208519*alloc(1850,rest_H) - 0.13240591609343*alloc(1850,rest_L) - 0.0365080194229938*alloc(1850,rice_H)
     
      - 0.100163432501287*alloc(1850,rice_L) - 0.13240591609343*alloc(1850,sorg_L) - 0.100592921439872*alloc(1850,soyb_L) - 0.100592921439872*alloc(1850,sunf_L) - 0.0950323485855288*alloc(1850,temf_H) - 0.13240591609343*alloc(1850,temf_L)
     
      - 0.0651235849319338*alloc(1850,toba_H) - 0.100102063564122*alloc(1850,toba_L) - 0.15356331117194*alloc(1850,vege_H) - 0.100592921439872*alloc(1850,vege_L) - 0.0515374728643499*alloc(1851,bean_H) - 0.195203553478477*alloc(1851,bean_L)
     
      - 0.118662188139825*alloc(1851,cass_L) - 0.0300311255949056*alloc(1851,chic_H) - 0.118263336859039*alloc(1851,chic_L) - 4.56583243374904E-11*alloc(1851,coff_L) - 0.144677023609*alloc(1851,cott_L) - 0.0399563907068737*alloc(1851,cowp_H)
     
      - 0.195203565181173*alloc(1851,cowp_L) - 0.0503427326322344*alloc(1851,grou_H) - 0.183269846387657*alloc(1851,grou_L) - 0.0297484588439657*alloc(1851,lent_H) - 0.118263336859039*alloc(1851,lent_L) - 0.0613809120322867*alloc(1851,maiz_H)
     
      - 0.230759234110365*alloc(1851,maiz_L) - 0.0357926413195303*alloc(1851,mill_H) - 0.180232727646281*alloc(1851,mill_L) - 0.144677023609*alloc(1851,ofib_L) - 0.195203553478477*alloc(1851,ooil_L) - 0.0259243666176258*alloc(1851,opul_H)
     
      - 0.118263336859039*alloc(1851,opul_L) - 0.0482104348295103*alloc(1851,pige_H) - 0.230759234110365*alloc(1851,pige_L) - 0.0687972410827159*alloc(1851,pota_H) - 0.0697615781729877*alloc(1851,pota_L) - 0.0793919476191315*alloc(1851,rest_H)
     
      - 0.230759234110365*alloc(1851,rest_L) - 0.0445908023149375*alloc(1851,rice_H) - 0.180232727646281*alloc(1851,rice_L) - 0.230759234110365*alloc(1851,sorg_L) - 0.180232727646281*alloc(1851,soyb_L) - 0.195203553478477*alloc(1851,sunf_L)
     
      - 0.118398211337806*alloc(1851,temf_H) - 0.230759234110365*alloc(1851,temf_L) - 0.0781414173643281*alloc(1851,toba_H) - 0.168299020555461*alloc(1851,toba_L) - 0.195743976536965*alloc(1851,vege_H) - 0.195203553478477*alloc(1851,vege_L)
     
      - 0.211789768957401*alloc(1853,rice_I) - 0.306748466257669*alloc(1853,sugc_I) - 0.016292971151666*alloc(1853,bean_H) - 0.0107065923896029*alloc(1853,bean_L) - 0.0107065923896029*alloc(1853,cass_L) - 1.263196840127E-11*alloc(1853,coff_L)
     
      - 0.00711727609205185*alloc(1853,cott_L) - 0.0136688771901105*alloc(1853,cowp_H) - 0.0142652308013381*alloc(1853,cowp_L) - 0.0169743953178377*alloc(1853,grou_H) - 0.0107065923896029*alloc(1853,grou_L) - 0.0201467868316796*alloc(1853,maiz_H)
     
      - 0.0107065923896029*alloc(1853,maiz_L) - 0.0120913142439748*alloc(1853,mill_H) - 0.0107065923896029*alloc(1853,mill_L) - 0.00711727609205185*alloc(1853,ofib_L) - 0.00625829455778856*alloc(1853,ooil_L) - 0.0158757106748595*alloc(1853,pige_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0107065923896029*alloc(1853,pige_L) - 0.0260584698381995*alloc(1853,rest_H) - 0.0107065923896029*alloc(1853,rest_L) - 0.0156906396395336*alloc(1853,rice_H) - 0.0107065923896029*alloc(1853,rice_L) - 0.0107065923896029*alloc(1853,sorg_L)
     
      - 0.0107065923896029*alloc(1853,soyb_L) - 0.00625829455778856*alloc(1853,sunf_L) - 0.0388613242471898*alloc(1853,temf_H) - 0.0107065923896029*alloc(1853,temf_L) - 0.0263081874507509*alloc(1853,toba_H) - 0.0107065923896029*alloc(1853,toba_L)
     
      - 0.0597041412187566*alloc(1853,vege_H) - 0.0107065923896029*alloc(1853,vege_L) - 0.05899461096313*alloc(1876,bean_H) - 0.124705717748604*alloc(1876,bean_L) - 0.0743632537311856*alloc(1876,cass_L) - 0.0388853959066393*alloc(1876,chic_H)
     
      - 0.0739030920267138*alloc(1876,chic_L) - 0.00647304048991825*alloc(1876,coff_L) - 0.0777685100280263*alloc(1876,cott_L) - 0.0472279652872726*alloc(1876,cowp_H) - 0.139400430174342*alloc(1876,cowp_L) - 0.0589716315699061*alloc(1876,grou_H)
     
      - 0.078780880991369*alloc(1876,grou_L) - 0.0385193886957139*alloc(1876,lent_H) - 0.0739030920267138*alloc(1876,lent_L) - 0.0689951538520944*alloc(1876,maiz_H) - 0.127313347551394*alloc(1876,maiz_L) - 0.0516378562025951*alloc(1876,mill_H)
     
      - 0.126024869032942*alloc(1876,mill_L) - 0.0777685100280263*alloc(1876,ofib_L) - 0.126024869032942*alloc(1876,ooil_L) - 0.0335678147117553*alloc(1876,opul_H) - 0.0739030920267138*alloc(1876,opul_L) - 0.055533672285337*alloc(1876,pige_H)
     
      - 0.127313347551394*alloc(1876,pige_L) - 0.0948539319034136*alloc(1876,pota_H) - 0.0581959969349366*alloc(1876,pota_L) - 0.089240440704402*alloc(1876,rest_H) - 0.127313347551394*alloc(1876,rest_L) - 0.0537817103837912*alloc(1876,rice_H)
     
      - 0.126024869032942*alloc(1876,rice_L) - 0.149278734275286*alloc(1876,sorg_L) - 0.127313347551394*alloc(1876,soyb_L) - 0.126024869032942*alloc(1876,sunf_L) - 0.133085393106701*alloc(1876,temf_H) - 0.127313347551394*alloc(1876,temf_L)
     
      - 0.0900075752195333*alloc(1876,toba_H) - 0.100684904629444*alloc(1876,toba_L) - 0.00745473429886357*alloc(1876,trof_L) - 0.227594405648621*alloc(1876,vege_H) - 0.092954068626819*alloc(1876,vege_L) - 0.0621668371053751*alloc(1879,bean_H)
     
      - 0.0981693282324003*alloc(1879,bean_L) - 0.0300950359735418*alloc(1879,cass_L) - 0.0418264556835806*alloc(1879,chic_H) - 0.0603127805646731*alloc(1879,chic_L) - 0.0103691356456282*alloc(1879,coff_L) - 0.0456180593619127*alloc(1879,cott_L)
     
      - 0.0491082276791084*alloc(1879,cowp_H) - 0.105071859123741*alloc(1879,cowp_L) - 0.0621923714263259*alloc(1879,grou_H) - 0.0456180593619127*alloc(1879,grou_L) - 0.0414327658668587*alloc(1879,lent_H) - 0.0603127805646731*alloc(1879,lent_L)
     
      - 0.0727665543699503*alloc(1879,maiz_H) - 0.105071859123741*alloc(1879,maiz_L) - 0.0546092654040267*alloc(1879,mill_H) - 0.101635935912362*alloc(1879,mill_L) - 0.0456180593619127*alloc(1879,ofib_L) - 0.101635935912362*alloc(1879,ooil_L)
     
      - 0.0361066843142557*alloc(1879,opul_H) - 0.0603127805646731*alloc(1879,opul_L) - 0.0581720162603156*alloc(1879,pige_H) - 0.105071859123741*alloc(1879,pige_L) - 0.100891824338257*alloc(1879,pota_H) - 0.0430411140277043*alloc(1879,pota_L)
     
      - 0.0941184854002332*alloc(1879,rest_H) - 0.105071859123741*alloc(1879,rest_L) - 0.0555686956888119*alloc(1879,rice_H) - 0.101635935912362*alloc(1879,rice_L) - 0.136209947603534*alloc(1879,sorg_L) - 0.105071859123741*alloc(1879,soyb_L)
     
      - 0.101635935912362*alloc(1879,sunf_L) - 0.140360082595149*alloc(1879,temf_H) - 0.105071859123741*alloc(1879,temf_L) - 0.0917515554325586*alloc(1879,toba_H) - 0.056876857353294*alloc(1879,toba_L) - 0.0129460795169995*alloc(1879,trof_L)
     
      - 0.237257202009764*alloc(1879,vege_H) - 0.0490846641162002*alloc(1879,vege_L) - 0.0639376338687212*alloc(1880,bean_H) - 0.098384072701693*alloc(1880,bean_L) - 0.0311380826284449*alloc(1880,cass_L) - 0.0435962396491128*alloc(1880,chic_H)
     
      - 0.0598526130088533*alloc(1880,chic_L) - 0.00984761085533962*alloc(1880,coff_L) - 0.0459248396829085*alloc(1880,cott_L) - 0.0504259459378665*alloc(1880,cowp_H) - 0.104949144654803*alloc(1880,cowp_L) - 0.063944169042052*alloc(1880,grou_H)
     
      - 0.0459248396829085*alloc(1880,grou_L) - 0.0431858918126367*alloc(1880,lent_H) - 0.0598526130088533*alloc(1880,lent_L) - 0.0745980028414825*alloc(1880,maiz_H) - 0.104949144654803*alloc(1880,maiz_L) - 0.0560265973824676*alloc(1880,mill_H)
     
      - 0.101666608678248*alloc(1880,mill_L) - 0.0459248396829085*alloc(1880,ofib_L) - 0.101666608678248*alloc(1880,ooil_L) - 0.0376344501720974*alloc(1880,opul_H) - 0.0598526130088533*alloc(1880,opul_L) - 0.0598651578327673*alloc(1880,pige_H)
     
      - 0.104949144654803*alloc(1880,pige_L) - 0.106506749315188*alloc(1880,pota_H) - 0.0434399272747293*alloc(1880,pota_L) - 0.0964873368282235*alloc(1880,rest_H) - 0.104949144654803*alloc(1880,rest_L) - 0.0573312901064051*alloc(1880,rice_H)
     
      - 0.101666608678248*alloc(1880,rice_L) - 0.134491980146496*alloc(1880,sorg_L) - 0.104949144654803*alloc(1880,soyb_L) - 0.101666608678248*alloc(1880,sunf_L) - 0.143892780562763*alloc(1880,temf_H) - 0.104949144654803*alloc(1880,temf_L)
     
      - 0.0945987107247397*alloc(1880,toba_H) - 0.0565700770322981*alloc(1880,toba_L) - 0.0123018446462844*alloc(1880,trof_L) - 0.2436660545466*alloc(1880,vege_H) - 0.0491766999679033*alloc(1880,vege_L) - 0.066672847123163*alloc(1881,bean_H)
     
      - 0.0982000009982868*alloc(1881,bean_L) - 0.0328560471598084*alloc(1881,cass_L) - 0.0456907152427822*alloc(1881,chic_H) - 0.0589015992799794*alloc(1881,chic_L) - 0.00895795143526045*alloc(1881,coff_L) - 0.0462316170782304*alloc(1881,cott_L)
     
      - 0.0525676626270319*alloc(1881,cowp_H) - 0.104151524012101*alloc(1881,cowp_L) - 0.0667989806396693*alloc(1881,grou_H) - 0.0462316170782304*alloc(1881,grou_L) - 0.0452606532397786*alloc(1881,lent_H) - 0.0589015992799794*alloc(1881,lent_L)
     
      - 0.0775228948705067*alloc(1881,maiz_H) - 0.104151524012101*alloc(1881,maiz_L) - 0.0582427021463069*alloc(1881,mill_H) - 0.101175762505194*alloc(1881,mill_L) - 0.0462316170782304*alloc(1881,ofib_L) - 0.101175762505194*alloc(1881,ooil_L)
     
      - 0.0394425060503348*alloc(1881,opul_H) - 0.0589015992799794*alloc(1881,opul_L) - 0.0623202991481143*alloc(1881,pige_H) - 0.104151524012101*alloc(1881,pige_L) - 0.112756765656942*alloc(1881,pota_H) - 0.0439921306822522*alloc(1881,pota_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.100270481572599*alloc(1881,rest_H) - 0.104151524012101*alloc(1881,rest_L) - 0.0598831833225641*alloc(1881,rice_H) - 0.101175762505194*alloc(1881,rice_L) - 0.130994699700648*alloc(1881,sorg_L) - 0.104151524012101*alloc(1881,soyb_L)
     
      - 0.101175762505194*alloc(1881,sunf_L) - 0.149534631964556*alloc(1881,temf_H) - 0.104151524012101*alloc(1881,temf_L) - 0.0991377208556235*alloc(1881,toba_H) - 0.0559258377730721*alloc(1881,toba_L) - 0.0111974392940756*alloc(1881,trof_L)
     
      - 0.25365027218356*alloc(1881,vege_H) - 0.0492073785851377*alloc(1881,vege_L) - 0.067481176899498*alloc(1882,bean_H) - 0.0988749305774431*alloc(1882,bean_L) - 0.0337150572193929*alloc(1882,cass_L) - 0.0466498305418756*alloc(1882,chic_H)
     
      - 0.0587482120451554*alloc(1882,chic_L) - 0.00858981387979585*alloc(1882,coff_L) - 0.0465690964961784*alloc(1882,cott_L) - 0.0531399399919669*alloc(1882,cowp_H) - 0.104581024653383*alloc(1882,cowp_L) - 0.0676021699285*alloc(1882,grou_H)
     
      - 0.0465690935705044*alloc(1882,grou_L) - 0.046210740905042*alloc(1882,lent_H) - 0.0587482120451554*alloc(1882,lent_L) - 0.0782454554967783*alloc(1882,maiz_H) - 0.104581024653383*alloc(1882,maiz_L) - 0.0588140359247931*alloc(1882,mill_H)
     
      - 0.093138169586965*alloc(1882,mill_L) - 0.0465690964961784*alloc(1882,ofib_L) - 0.101727977615413*alloc(1882,ooil_L) - 0.0402704622507674*alloc(1882,opul_H) - 0.0587482120451554*alloc(1882,opul_L) - 0.0627833922951519*alloc(1882,pige_H)
     
      - 0.104581024653383*alloc(1882,pige_L) - 0.11593019714674*alloc(1882,pota_H) - 0.0444216283978596*alloc(1882,pota_L) - 0.101205063570377*alloc(1882,rest_H) - 0.104581024653383*alloc(1882,rest_L) - 0.060727240549202*alloc(1882,rice_H)
     
      - 0.101727977615413*alloc(1882,rice_L) - 0.130319793526884*alloc(1882,sorg_L) - 0.101727977615413*alloc(1882,soyb_L) - 0.101727977615413*alloc(1882,sunf_L) - 0.150928385867865*alloc(1882,temf_H) - 0.104581024653383*alloc(1882,temf_L)
     
      - 0.100526029545398*alloc(1882,toba_H) - 0.055864503943995*alloc(1882,toba_L) - 0.0107372673497448*alloc(1882,trof_L) - 0.256296098913591*alloc(1882,vege_H) - 0.0494528250770565*alloc(1882,vege_L) - 0.0669344747881427*alloc(1883,bean_H)
     
      - 0.132405892688038*alloc(1883,bean_L) - 0.106022902109355*alloc(1883,cass_L) - 0.0474389915222005*alloc(1883,chic_H) - 0.0774617414097263*alloc(1883,chic_L) - 0.00365068779468041*alloc(1883,coff_L) - 0.0942425705506629*alloc(1883,cott_L)
     
      - 0.0536734883870102*alloc(1883,cowp_H) - 0.146210954470719*alloc(1883,cowp_L) - 0.0671222421192255*alloc(1883,grou_H) - 0.0885057978574889*alloc(1883,grou_L) - 0.0469924739396653*alloc(1883,lent_H) - 0.0774617414097263*alloc(1883,lent_L)
     
      - 0.0770436494613786*alloc(1883,maiz_H) - 0.134093175676493*alloc(1883,maiz_L) - 0.0579266377880906*alloc(1883,mill_H) - 0.12924607118042*alloc(1883,mill_L) - 0.0942425705506629*alloc(1883,ofib_L) - 0.133264870565209*alloc(1883,ooil_L)
     
      - 0.0409517053999665*alloc(1883,opul_H) - 0.0774617414097263*alloc(1883,opul_L) - 0.0623319866530574*alloc(1883,pige_H) - 0.134093175676493*alloc(1883,pige_L) - 0.123246755774006*alloc(1883,pota_H) - 0.0684424327399971*alloc(1883,pota_L)
     
      - 0.0996506109131632*alloc(1883,rest_H) - 0.134093175676493*alloc(1883,rest_L) - 0.0621950580046913*alloc(1883,rice_H) - 0.133264870565209*alloc(1883,rice_L) - 0.146118924470364*alloc(1883,sorg_L) - 0.133264870565209*alloc(1883,soyb_L)
     
      - 0.133264870565209*alloc(1883,sunf_L) - 0.148610211043557*alloc(1883,temf_H) - 0.134093175676493*alloc(1883,temf_L) - 0.10386273818464*alloc(1883,toba_H) - 0.109244080851441*alloc(1883,toba_L) - 0.00429490693989793*alloc(1883,trof_L)
     
      - 0.25753890383317*alloc(1883,vege_H) - 0.106237646578647*alloc(1883,vege_L) - 0.0672911395853635*alloc(1884,bean_H) - 0.159617200080702*alloc(1884,bean_L) - 0.166427689268991*alloc(1884,cass_L) - 0.0487795591942118*alloc(1884,chic_H)
     
      - 0.0953469656630128*alloc(1884,chic_L) - 0.0415379202966992*alloc(1884,coff_L) - 0.130841312465824*alloc(1884,cott_L) - 0.0548865136760731*alloc(1884,cowp_H) - 0.180570209989903*alloc(1884,cowp_L) - 0.0674285821907946*alloc(1884,grou_H)
     
      - 0.12344793540143*alloc(1884,grou_L) - 0.0483204235728667*alloc(1884,lent_H) - 0.0953469656630128*alloc(1884,lent_L) - 0.0777191084514017*alloc(1884,maiz_H) - 0.159617200080702*alloc(1884,maiz_L) - 0.0584831504801566*alloc(1884,mill_H)
     
      - 0.15725498751309*alloc(1884,mill_L) - 0.130841312465824*alloc(1884,ofib_L) - 0.159617200080702*alloc(1884,ooil_L) - 0.042108950328903*alloc(1884,opul_H) - 0.0953469656630128*alloc(1884,opul_L) - 0.0627175444292595*alloc(1884,pige_H)
     
      - 0.159617200080702*alloc(1884,pige_L) - 0.130179607789271*alloc(1884,pota_H) - 0.0880456244503212*alloc(1884,pota_L) - 0.100524270215042*alloc(1884,rest_H) - 0.159617200080702*alloc(1884,rest_L) - 0.0640892089378528*alloc(1884,rice_H)
     
      - 0.159617188378006*alloc(1884,rice_L) - 0.166734475441335*alloc(1884,sorg_L) - 0.159617200080702*alloc(1884,soyb_L) - 0.159617200080702*alloc(1884,sunf_L) - 0.149913110163217*alloc(1884,temf_H) - 0.159617200080702*alloc(1884,temf_L)
     
      - 0.10695281655676*alloc(1884,toba_H) - 0.155506347290166*alloc(1884,toba_L) - 0.00177931865730372*alloc(1884,trof_L) - 0.263714938346786*alloc(1884,vege_H) - 0.153727046004052*alloc(1884,vege_L) - 0.0681379913632983*alloc(1885,bean_H)
     
      - 0.180110001474647*alloc(1885,bean_L) - 0.154187196005828*alloc(1885,cass_L) - 0.0509769901777886*alloc(1885,chic_H) - 0.11436727534858*alloc(1885,chic_L) - 0.096788819713593*alloc(1885,coff_L) - 0.144339588076162*alloc(1885,cott_L)
     
      - 0.0542581099714793*alloc(1885,cowp_H) - 0.17464937144467*alloc(1885,cowp_L) - 0.0649916815206259*alloc(1885,grou_H) - 0.134093163973797*alloc(1885,grou_L) - 0.0504971713264867*alloc(1885,lent_H) - 0.11436727534858*alloc(1885,lent_L)
     
      - 0.077759028496738*alloc(1885,maiz_H) - 0.174649348039279*alloc(1885,maiz_L) - 0.0587665031739433*alloc(1885,mill_H) - 0.170477161419666*alloc(1885,mill_L) - 0.144339588076162*alloc(1885,ofib_L) - 0.17464937144467*alloc(1885,ooil_L)
     
      - 0.0440058824387284*alloc(1885,opul_H) - 0.11436727534858*alloc(1885,opul_L) - 0.0627741944083817*alloc(1885,pige_H) - 0.180110036582735*alloc(1885,pige_L) - 0.139876356558906*alloc(1885,pota_H) - 0.105071859123741*alloc(1885,pota_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.100575904021764*alloc(1885,rest_H) - 0.174649348039279*alloc(1885,rest_L) - 0.0645326677225718*alloc(1885,rice_H) - 0.171949711641525*alloc(1885,rice_L) - 0.184558324906109*alloc(1885,sorg_L) - 0.180110036582735*alloc(1885,soyb_L)
     
      - 0.17464937144467*alloc(1885,sunf_L) - 0.149990112309452*alloc(1885,temf_H) - 0.174649348039279*alloc(1885,temf_L) - 0.107349343982727*alloc(1885,toba_H) - 0.169372766307316*alloc(1885,toba_L) - 0.0011044048950723*alloc(1885,trof_L)
     
      - 0.264345596259523*alloc(1885,vege_H) - 0.16826835949227*alloc(1885,vege_L) - 0.0419339149829891*alloc(1886,bean_H) - 0.106360325939497*alloc(1886,bean_L) - 0.159525146674955*alloc(1886,cass_L) - 0.0516053797561191*alloc(1886,chic_H)
     
      - 0.15010703938657*alloc(1886,chic_L) - 0.104090166777633*alloc(1886,coff_L) - 0.15118077343573*alloc(1886,cott_L) - 0.0523938048138394*alloc(1886,cowp_H) - 0.175784451025603*alloc(1886,cowp_L) - 0.0609229604332991*alloc(1886,grou_H)
     
      - 0.137498402716594*alloc(1886,grou_L) - 0.0511196462134125*alloc(1886,lent_H) - 0.15010703938657*alloc(1886,lent_L) - 0.0448648308860321*alloc(1886,maiz_H) - 0.117987270263365*alloc(1886,maiz_L) - 0.0575187987840198*alloc(1886,mill_H)
     
      - 0.15010703938657*alloc(1886,mill_L) - 0.15118077343573*alloc(1886,ofib_L) - 0.176367338901708*alloc(1886,ooil_L) - 0.0445483396888189*alloc(1886,opul_H) - 0.15010703938657*alloc(1886,opul_L) - 0.0611984884355504*alloc(1886,pige_H)
     
      - 0.182779023619994*alloc(1886,pige_L) - 0.146406520004407*alloc(1886,pota_H) - 0.0962059493915316*alloc(1886,pota_L) - 0.0580295434804141*alloc(1886,rest_H) - 0.117987270263365*alloc(1886,rest_L) - 0.0636148927311252*alloc(1886,rice_H)
     
      - 0.173146148456926*alloc(1886,rice_L) - 0.152377210251131*alloc(1886,sorg_L) - 0.182779023619994*alloc(1886,soyb_L) - 0.176367338901708*alloc(1886,sunf_L) - 0.0865401890099849*alloc(1886,temf_H) - 0.117987270263365*alloc(1886,temf_L)
     
      - 0.105648311008976*alloc(1886,toba_H) - 0.172164456110817*alloc(1886,toba_L) - 0.000858981442835972*alloc(1886,trof_L) - 0.259307770846426*alloc(1886,vege_H) - 0.171734967172232*alloc(1886,vege_L) - 0.0418028987576576*alloc(1887,bean_H)
     
      - 0.109244045743353*alloc(1887,bean_L) - 0.140474152520806*alloc(1887,cass_L) - 0.0499925097250603*alloc(1887,chic_H) - 0.161089680086385*alloc(1887,chic_L) - 0.101206435271081*alloc(1887,coff_L) - 0.16569139075267*alloc(1887,cott_L)
     
      - 0.0483949629657326*alloc(1887,cowp_H) - 0.172195117174008*alloc(1887,cowp_L) - 0.0541204886819507*alloc(1887,grou_H) - 0.115072830882839*alloc(1887,grou_L) - 0.0495219572560675*alloc(1887,lent_H) - 0.161089680086385*alloc(1887,lent_L)
     
      - 0.0451702203277621*alloc(1887,maiz_H) - 0.155843771120309*alloc(1887,maiz_L) - 0.0550975143368541*alloc(1887,mill_H) - 0.161089703491776*alloc(1887,mill_L) - 0.16569139075267*alloc(1887,ofib_L) - 0.18032474594394*alloc(1887,ooil_L)
     
      - 0.0431560297715761*alloc(1887,opul_H) - 0.161089680086385*alloc(1887,opul_L) - 0.0578176673679496*alloc(1887,pige_H) - 0.197443016469063*alloc(1887,pige_L) - 0.141712387130226*alloc(1887,pota_H) - 0.115072842585535*alloc(1887,pota_L)
     
      - 0.0584245435180236*alloc(1887,rest_H) - 0.155843771120309*alloc(1887,rest_L) - 0.0596200620826242*alloc(1887,rice_H) - 0.172440534409187*alloc(1887,rice_L) - 0.172348504408832*alloc(1887,sorg_L) - 0.197443016469063*alloc(1887,soyb_L)
     
      - 0.18032474594394*alloc(1887,sunf_L) - 0.0871292575406588*alloc(1887,temf_H) - 0.155843771120309*alloc(1887,temf_L) - 0.0992982048338508*alloc(1887,toba_H) - 0.169096641198163*alloc(1887,toba_L) - 0.000398812698461133*alloc(1887,trof_L)
     
      - 0.245734019374358*alloc(1887,vege_H) - 0.175876469323262*alloc(1887,vege_L) - 0.0324345483503768*alloc(1888,bean_H) - 0.0700070188135586*alloc(1888,bean_L) - 0.0723998748903169*alloc(1888,cass_L) - 0.0201525227495898*alloc(1888,chic_H)
     
      - 0.04574078845922*alloc(1888,chic_L) - 0.0700069954081669*alloc(1888,coff_L) - 0.107249976582554*alloc(1888,cott_L) - 0.0334318749139903*alloc(1888,cowp_H) - 0.104918460186221*alloc(1888,cowp_L) - 0.0301356433702202*alloc(1888,grou_H)
     
      - 0.04574078845922*alloc(1888,grou_L) - 0.0199628379470383*alloc(1888,lent_H) - 0.04574078845922*alloc(1888,lent_L) - 0.0352240826243398*alloc(1888,maiz_H) - 0.0700070188135586*alloc(1888,maiz_L) - 0.0404214744203495*alloc(1888,mill_H)
     
      - 0.104918460186221*alloc(1888,mill_L) - 0.107249976582554*alloc(1888,ofib_L) - 0.108108966162421*alloc(1888,ooil_L) - 0.0173966635509338*alloc(1888,opul_H) - 0.04574078845922*alloc(1888,opul_L) - 0.0407076269671725*alloc(1888,pige_H)
     
      - 0.104918471888917*alloc(1888,pige_L) - 0.0997158566375809*alloc(1888,pota_H) - 0.0746086709663648*alloc(1888,pota_L) - 0.0455599050267054*alloc(1888,rest_H) - 0.0700070188135586*alloc(1888,rest_L) - 0.0417932795659452*alloc(1888,rice_H)
     
      - 0.104918460186221*alloc(1888,rice_L) - 0.104918471888917*alloc(1888,sorg_L) - 0.108108966162421*alloc(1888,soyb_L) - 0.108108966162421*alloc(1888,sunf_L) - 0.0679440601427236*alloc(1888,temf_H) - 0.0700070188135586*alloc(1888,temf_L)
     
      - 0.0717300263577641*alloc(1888,toba_H) - 0.104028797840468*alloc(1888,toba_L) - 0.173316088349505*alloc(1888,vege_H) - 0.108108966162421*alloc(1888,vege_L) - 0.0397941335214054*alloc(1889,bean_H) - 0.109244092554137*alloc(1889,bean_L)
     
      - 0.0595151833273628*alloc(1889,cass_L) - 0.0279051945736356*alloc(1889,chic_H) - 0.0843949626209972*alloc(1889,chic_L) - 0.0577664904423074*alloc(1889,coff_L) - 0.0843949626209972*alloc(1889,cott_L) - 0.0302487828054874*alloc(1889,cowp_H)
     
      - 0.084394986026389*alloc(1889,cowp_L) - 0.0372878218381251*alloc(1889,grou_H) - 0.084394986026389*alloc(1889,grou_L) - 0.0276425380621589*alloc(1889,lent_H) - 0.0843949626209972*alloc(1889,lent_L) - 0.0454987094830566*alloc(1889,maiz_H)
     
      - 0.109244104256833*alloc(1889,maiz_L) - 0.0341856960541292*alloc(1889,mill_H) - 0.084394986026389*alloc(1889,mill_L) - 0.0843949626209972*alloc(1889,ofib_L) - 0.084394986026389*alloc(1889,ooil_L) - 0.0240891568441854*alloc(1889,opul_H)
     
      - 0.0843949626209972*alloc(1889,opul_L) - 0.0366627263273021*alloc(1889,pige_H) - 0.109244104256833*alloc(1889,pige_L) - 0.0679287458189232*alloc(1889,pota_H) - 0.0357704631349429*alloc(1889,pota_L) - 0.0588494214311586*alloc(1889,rest_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.109244104256833*alloc(1889,rest_L) - 0.034495633030032*alloc(1889,rice_H) - 0.084394986026389*alloc(1889,rice_L) - 0.109244104256833*alloc(1889,sorg_L) - 0.084394986026389*alloc(1889,soyb_L) - 0.084394986026389*alloc(1889,sunf_L)
     
      - 0.0877628833233823*alloc(1889,temf_H) - 0.109244104256833*alloc(1889,temf_L) - 0.0606181905065735*alloc(1889,toba_H) - 0.084394986026389*alloc(1889,toba_L) - 0.144195574378088*alloc(1889,vege_H) - 0.084394986026389*alloc(1889,vege_L)
     
      - 0.0517600612237869*alloc(1890,bean_H) - 0.183822026389788*alloc(1890,bean_L) - 0.124705717748604*alloc(1890,cass_L) - 0.0303700726521188*alloc(1890,chic_H) - 0.125135194984493*alloc(1890,chic_L) - 0.129153994369282*alloc(1890,cott_L)
     
      - 0.0400114835261094*alloc(1890,cowp_H) - 0.184711700438237*alloc(1890,cowp_L) - 0.0494587960274261*alloc(1890,grou_H) - 0.182502886808145*alloc(1890,grou_L) - 0.030084215575758*alloc(1890,lent_H) - 0.125135194984493*alloc(1890,lent_L)
     
      - 0.0613063710197994*alloc(1890,maiz_H) - 0.235238206902321*alloc(1890,maiz_L) - 0.0363097192939279*alloc(1890,mill_H) - 0.183822026389788*alloc(1890,mill_L) - 0.129153994369282*alloc(1890,ofib_L) - 0.183822026389788*alloc(1890,ooil_L)
     
      - 0.0262169626359599*alloc(1890,opul_H) - 0.125135194984493*alloc(1890,opul_L) - 0.0484851039236872*alloc(1890,pige_H) - 0.235238206902321*alloc(1890,pige_L) - 0.0693388434653995*alloc(1890,pota_H) - 0.0712647660526449*alloc(1890,pota_L)
     
      - 0.0792955339953692*alloc(1890,rest_H) - 0.235238206902321*alloc(1890,rest_L) - 0.0446569456976701*alloc(1890,rice_H) - 0.180692889350753*alloc(1890,rice_L) - 0.235238206902321*alloc(1890,sorg_L) - 0.180692889350753*alloc(1890,soyb_L)
     
      - 0.183822026389788*alloc(1890,sunf_L) - 0.118254428486467*alloc(1890,temf_H) - 0.235238206902321*alloc(1890,temf_L) - 0.0796035775624161*alloc(1890,toba_H) - 0.180692889350753*alloc(1890,toba_L) - 0.19280559447269*alloc(1890,vege_H)
     
      - 0.183822026389788*alloc(1890,vege_L) - 0.0457156205431102*alloc(1891,bean_H) - 0.0993964144082961*alloc(1891,bean_L) - 0.0947947154447064*alloc(1891,cass_L) - 0.0262943730053176*alloc(1891,chic_H) - 0.0564166605407345*alloc(1891,chic_L)
     
      - 0.0689946010394324*alloc(1891,cott_L) - 0.0383948229202271*alloc(1891,cowp_H) - 0.132773954175979*alloc(1891,cowp_L) - 0.0477547705036576*alloc(1891,grou_H) - 0.100684869521356*alloc(1891,grou_L) - 0.0260468782864825*alloc(1891,lent_H)
     
      - 0.0564166605407345*alloc(1891,lent_L) - 0.0567142750946174*alloc(1891,maiz_H) - 0.101451817398172*alloc(1891,maiz_L) - 0.0340859610055209*alloc(1891,mill_H) - 0.101451817398172*alloc(1891,mill_L) - 0.0689946010394324*alloc(1891,ofib_L)
     
      - 0.101451817398172*alloc(1891,ooil_L) - 0.0226986152622296*alloc(1891,opul_H) - 0.0564166605407345*alloc(1891,opul_L) - 0.0447995526869733*alloc(1891,pige_H) - 0.101451817398172*alloc(1891,pige_L) - 7.31014272185991E-6*alloc(1891,pota_H)
     
      - 6.82407893464936E-10*alloc(1891,pota_L) - 0.0733559767766314*alloc(1891,rest_H) - 0.101451817398172*alloc(1891,rest_L) - 0.0439187256387152*alloc(1891,rice_H) - 0.0993964144082961*alloc(1891,rice_L) - 0.101451817398172*alloc(1891,sorg_L)
     
      - 0.0993964144082961*alloc(1891,soyb_L) - 0.101451817398172*alloc(1891,sunf_L) - 0.109396692004037*alloc(1891,temf_H) - 0.101451817398172*alloc(1891,temf_L) - 0.0737716431832472*alloc(1891,toba_H) - 0.0985987820628981*alloc(1891,toba_L)
     
      - 0.174907002353937*alloc(1891,vege_H) - 0.101451817398172*alloc(1891,vege_L) - 0.0612191796537409*alloc(1915,bean_H) - 0.143449925730409*alloc(1915,bean_L) - 0.101942698679314*alloc(1915,cass_L) - 0.0402176068401372*alloc(1915,chic_H)
     
      - 0.084916469857242*alloc(1915,chic_L) - 0.00552202493249807*alloc(1915,coff_L) - 0.100991679099092*alloc(1915,cott_L) - 0.0494913201603743*alloc(1915,cowp_H) - 0.165476657986073*alloc(1915,cowp_L) - 0.0607573947064677*alloc(1915,grou_H)
     
      - 0.102924391025422*alloc(1915,grou_L) - 0.039839060247864*alloc(1915,lent_H) - 0.084916469857242*alloc(1915,lent_L) - 0.0721444891080205*alloc(1915,maiz_H) - 0.143449925730409*alloc(1915,maiz_L) - 0.0538485082596666*alloc(1915,mill_H)
     
      - 0.143449925730409*alloc(1915,mill_L) - 0.100991679099092*alloc(1915,ofib_L) - 0.143449925730409*alloc(1915,ooil_L) - 0.0347178456868803*alloc(1915,opul_H) - 0.084916469857242*alloc(1915,opul_L) - 0.0578492845887948*alloc(1915,pige_H)
     
      - 0.143449925730409*alloc(1915,pige_L) - 0.0978619374753006*alloc(1915,pota_H) - 0.0628283686644127*alloc(1915,pota_L) - 0.0933138871781535*alloc(1915,rest_H) - 0.143449925730409*alloc(1915,rest_L) - 0.0563299814782933*alloc(1915,rice_H)
     
      - 0.143449925730409*alloc(1915,rice_L) - 0.16556871139182*alloc(1915,sorg_L) - 0.143449925730409*alloc(1915,soyb_L) - 0.143449925730409*alloc(1915,sunf_L) - 0.13916017513354*alloc(1915,temf_H) - 0.143449925730409*alloc(1915,temf_L)
     
      - 0.0948756062767095*alloc(1915,toba_H) - 0.133050102690524*alloc(1915,toba_L) - 0.00552202529820731*alloc(1915,trof_L) - 0.239655579682936*alloc(1915,vege_H) - 0.125012492218251*alloc(1915,vege_L) - 0.0635940493667083*alloc(1918,bean_H)
     
      - 0.098629501639568*alloc(1918,bean_L) - 0.0344512972222345*alloc(1918,cass_L) - 0.0432661236211028*alloc(1918,chic_H) - 0.0582573600207533*alloc(1918,chic_L) - 0.00819100355844482*alloc(1918,coff_L) - 0.0466611089424897*alloc(1918,cott_L)
     
      - 0.0501062927785432*alloc(1918,cowp_H) - 0.104090166777633*alloc(1918,cowp_L) - 0.0638058046961114*alloc(1918,grou_H) - 0.0466611089424897*alloc(1918,grou_L) - 0.0428588829883435*alloc(1918,lent_H) - 0.0582573600207533*alloc(1918,lent_L)
     
      - 0.073713221982094*alloc(1918,maiz_H) - 0.104090166777633*alloc(1918,maiz_L) - 0.0553541804524286*alloc(1918,mill_H) - 0.1013598342086*alloc(1918,mill_L) - 0.0466611089424897*alloc(1918,ofib_L) - 0.1013598342086*alloc(1918,ooil_L)
     
      - 0.0373494775389725*alloc(1918,opul_H) - 0.0582573600207533*alloc(1918,opul_L) - 0.0595122548713277*alloc(1918,pige_H) - 0.104090166777633*alloc(1918,pige_L) - 0.106785239465546*alloc(1918,pota_H) - 0.0446363670158043*alloc(1918,pota_L)
     
      - 0.0953429342229635*alloc(1918,rest_H) - 0.104090166777633*alloc(1918,rest_L) - 0.0571216430385431*alloc(1918,rice_H) - 0.1013598342086*alloc(1918,rice_L) - 0.128632498835733*alloc(1918,sorg_L) - 0.104090166777633*alloc(1918,soyb_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.1013598342086*alloc(1918,sunf_L) - 0.142186118545059*alloc(1918,temf_H) - 0.104090166777633*alloc(1918,temf_L) - 0.0948856517067357*alloc(1918,toba_H) - 0.055527027451721*alloc(1918,toba_L) - 0.0102157454851302*alloc(1918,trof_L)
     
      - 0.241215759604286*alloc(1918,vege_H) - 0.049391444437196*alloc(1918,vege_L) - 0.0643645455446719*alloc(1919,bean_H) - 0.0990589905781535*alloc(1919,bean_L) - 0.0346967232344355*alloc(1919,cass_L) - 0.0443803823261348*alloc(1919,chic_H)
     
      - 0.0583187172552221*alloc(1919,chic_L) - 0.00809896990099716*alloc(1919,coff_L) - 0.046845177720222*alloc(1919,cott_L) - 0.0506318537152027*alloc(1919,cowp_H) - 0.104458298481749*alloc(1919,cowp_L) - 0.0644867388059541*alloc(1919,grou_H)
     
      - 0.046845177720222*alloc(1919,grou_L) - 0.0439626537785333*alloc(1919,lent_H) - 0.0583187172552221*alloc(1919,lent_L) - 0.074492758765672*alloc(1919,maiz_H) - 0.104458298481749*alloc(1919,maiz_L) - 0.0559694630663119*alloc(1919,mill_H)
     
      - 0.101758638678603*alloc(1919,mill_L) - 0.046845177720222*alloc(1919,ofib_L) - 0.101758638678603*alloc(1919,ooil_L) - 0.0383113612713968*alloc(1919,opul_H) - 0.0583187172552221*alloc(1919,opul_L) - 0.0600640240089918*alloc(1919,pige_H)
     
      - 0.104458298481749*alloc(1919,pige_L) - 0.110296530646449*alloc(1919,pota_H) - 0.0448204328678627*alloc(1919,pota_L) - 0.0963512109239753*alloc(1919,rest_H) - 0.104458298481749*alloc(1919,rest_L) - 0.0579270682625335*alloc(1919,rice_H)
     
      - 0.101758638678603*alloc(1919,rice_L) - 0.12875521330467*alloc(1919,sorg_L) - 0.104458298481749*alloc(1919,soyb_L) - 0.101758638678603*alloc(1919,sunf_L) - 0.143689774287403*alloc(1919,temf_H) - 0.104458298481749*alloc(1919,temf_L)
     
      - 0.0960827026519889*alloc(1919,toba_H) - 0.0556190574520762*alloc(1919,toba_L) - 0.0101237118276826*alloc(1919,trof_L) - 0.244044434451072*alloc(1919,vege_H) - 0.04954483167202*alloc(1919,vege_L) - 0.0653925544332287*alloc(1920,bean_H)
     
      - 0.098384072701693*alloc(1920,bean_L) - 0.0343592672218793*alloc(1920,cass_L) - 0.045062633580788*alloc(1920,chic_H) - 0.0582573600207533*alloc(1920,chic_L) - 0.00822168144426071*alloc(1920,coff_L) - 0.046599754633695*alloc(1920,cott_L)
     
      - 0.0514679712525694*alloc(1920,cowp_H) - 0.103844737839758*alloc(1920,cowp_L) - 0.0654653328733189*alloc(1920,grou_H) - 0.046599754633695*alloc(1920,grou_L) - 0.0446384833709391*alloc(1920,lent_H) - 0.0582573600207533*alloc(1920,lent_L)
     
      - 0.0757060041836408*alloc(1920,maiz_H) - 0.103844737839758*alloc(1920,maiz_L) - 0.0568757249194252*alloc(1920,mill_H) - 0.101114405270725*alloc(1920,mill_L) - 0.046599754633695*alloc(1920,ofib_L) - 0.101114405270725*alloc(1920,ooil_L)
     
      - 0.0389003146089955*alloc(1920,opul_H) - 0.0582573600207533*alloc(1920,opul_L) - 0.0608649546913909*alloc(1920,pige_H) - 0.103844737839758*alloc(1920,pige_L) - 0.111683454399139*alloc(1920,pota_H) - 0.0445443340897752*alloc(1920,pota_L)
     
      - 0.0979204596282282*alloc(1920,rest_H) - 0.103844737839758*alloc(1920,rest_L) - 0.0587901975775347*alloc(1920,rice_H) - 0.101114405270725*alloc(1920,rice_L) - 0.128479111600909*alloc(1920,sorg_L) - 0.103844737839758*alloc(1920,soyb_L)
     
      - 0.101114405270725*alloc(1920,sunf_L) - 0.146030014643*alloc(1920,temf_H) - 0.103844737839758*alloc(1920,temf_L) - 0.0974856383797889*alloc(1920,toba_H) - 0.0554963546858346*alloc(1920,toba_L) - 0.010277101256762*alloc(1920,trof_L)
     
      - 0.248085141365237*alloc(1920,vege_H) - 0.0493607716713096*alloc(1920,vege_L) - 0.065800095872738*alloc(1921,bean_H) - 0.105102555295019*alloc(1921,bean_L) - 0.0428570803580596*alloc(1921,cass_L) - 0.0456369334182228*alloc(1921,chic_H)
     
      - 0.0628283803671086*alloc(1921,chic_L) - 0.00843642445071643*alloc(1921,coff_L) - 0.0566314518208107*alloc(1921,cott_L) - 0.0519334385235198*alloc(1921,cowp_H) - 0.113354921939281*alloc(1921,cowp_L) - 0.0657073497167084*alloc(1921,grou_H)
     
      - 0.0543306081903638*alloc(1921,grou_L) - 0.0452073776344602*alloc(1921,lent_H) - 0.0628283803671086*alloc(1921,lent_L) - 0.0764641257684173*alloc(1921,maiz_H) - 0.110317791495209*alloc(1921,maiz_L) - 0.0574177708282965*alloc(1921,mill_H)
     
      - 0.107710173395114*alloc(1921,mill_L) - 0.0566314518208107*alloc(1921,ofib_L) - 0.107710173395114*alloc(1921,ooil_L) - 0.0393960788948545*alloc(1921,opul_H) - 0.0628283803671086*alloc(1921,opul_L) - 0.061289517219448*alloc(1921,pige_H)
     
      - 0.110317791495209*alloc(1921,pige_L) - 0.113575156320396*alloc(1921,pota_H) - 0.0474280685220012*alloc(1921,pota_L) - 0.0989010372565934*alloc(1921,rest_H) - 0.110317791495209*alloc(1921,rest_L) - 0.0594292237878142*alloc(1921,rice_H)
     
      - 0.107710173395114*alloc(1921,rice_L) - 0.136240632072116*alloc(1921,sorg_L) - 0.107710173395114*alloc(1921,soyb_L) - 0.107710173395114*alloc(1921,sunf_L) - 0.147492362409467*alloc(1921,temf_H) - 0.110317791495209*alloc(1921,temf_L)
     
      - 0.0983663854252128*alloc(1921,toba_H) - 0.0665711073048753*alloc(1921,toba_L) - 0.0103998106057701*alloc(1921,trof_L) - 0.251037122107434*alloc(1921,vege_H) - 0.0600980653521201*alloc(1921,vege_L) - 0.0666935345141704*alloc(1922,bean_H)
     
      - 0.148143654694354*alloc(1922,bean_L) - 0.123969466043066*alloc(1922,cass_L) - 0.047434370655463*alloc(1922,chic_H) - 0.0880149458330868*alloc(1922,chic_L) - 0.00398814380723665*alloc(1922,coff_L) - 0.120533531128991*alloc(1922,cott_L)
     
      - 0.053725803310575*alloc(1922,cowp_H) - 0.169740909714129*alloc(1922,cowp_L) - 0.0660004959925787*alloc(1922,grou_H) - 0.107280684456529*alloc(1922,grou_L) - 0.0469878965666485*alloc(1922,lent_H) - 0.0880149458330868*alloc(1922,lent_L)
     
      - 0.0771949604784792*alloc(1922,maiz_H) - 0.148573143632939*alloc(1922,maiz_L) - 0.0578741807429235*alloc(1922,mill_H) - 0.143265865729698*alloc(1922,mill_L) - 0.120533531128991*alloc(1922,ofib_L) - 0.148358399163646*alloc(1922,ooil_L)
     
      - 0.0409477164371481*alloc(1922,opul_H) - 0.0880149458330868*alloc(1922,opul_L) - 0.0619388922183553*alloc(1922,pige_H) - 0.148573143632939*alloc(1922,pige_L) - 0.122104413172342*alloc(1922,pota_H) - 0.0738110678777065*alloc(1922,pota_L)
     
      - 0.0998463212072286*alloc(1922,rest_H) - 0.148573143632939*alloc(1922,rest_L) - 0.0622674857018141*alloc(1922,rice_H) - 0.148358399163646*alloc(1922,rice_L) - 0.163881416700669*alloc(1922,sorg_L) - 0.148358399163646*alloc(1922,soyb_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.148358399163646*alloc(1922,sunf_L) - 0.148902076269851*alloc(1922,temf_H) - 0.148573143632939*alloc(1922,temf_L) - 0.103675748391594*alloc(1922,toba_H) - 0.136363346541054*alloc(1922,toba_L) - 0.00414151787652775*alloc(1922,trof_L)
     
      - 0.259161212608723*alloc(1922,vege_H) - 0.132559279922862*alloc(1922,vege_L) - 0.0689513766188288*alloc(1923,bean_H) - 0.160506897534542*alloc(1923,bean_L) - 0.15851278156296*alloc(1923,cass_L) - 0.0502054226737666*alloc(1923,chic_H)
     
      - 0.0963900562030255*alloc(1923,chic_L) - 0.0405562484303086*alloc(1923,coff_L) - 0.132497946093785*alloc(1923,cott_L) - 0.0560389111213394*alloc(1923,cowp_H) - 0.181551925741403*alloc(1923,cowp_L) - 0.0687883010399611*alloc(1923,grou_H)
     
      - 0.123049142634122*alloc(1923,grou_L) - 0.0497328661702846*alloc(1923,lent_H) - 0.0963900562030255*alloc(1923,lent_L) - 0.0794739904839857*alloc(1923,maiz_H) - 0.160506885831846*alloc(1923,maiz_L) - 0.0597903673099522*alloc(1923,mill_H)
     
      - 0.156825521979896*alloc(1923,mill_L) - 0.132497946093785*alloc(1923,ofib_L) - 0.160046712424679*alloc(1923,ooil_L) - 0.0433398268564526*alloc(1923,opul_H) - 0.0963900562030255*alloc(1923,opul_L) - 0.0639408178725229*alloc(1923,pige_H)
     
      - 0.160506897534542*alloc(1923,pige_L) - 0.133796904950213*alloc(1923,pota_H) - 0.0857141256080317*alloc(1923,pota_L) - 0.102794088270781*alloc(1923,rest_H) - 0.160506885831846*alloc(1923,rest_L) - 0.0654125229848959*alloc(1923,rice_H)
     
      - 0.15983195625269*alloc(1923,rice_L) - 0.169495527587037*alloc(1923,sorg_L) - 0.160506897534542*alloc(1923,soyb_L) - 0.160046712424679*alloc(1923,sunf_L) - 0.153298118415579*alloc(1923,temf_H) - 0.160506885831846*alloc(1923,temf_L)
     
      - 0.108883520528202*alloc(1923,toba_H) - 0.154586035583918*alloc(1923,toba_L) - 0.00223948712739662*alloc(1923,trof_L) - 0.269431479133263*alloc(1923,vege_H) - 0.15234654918794*alloc(1923,vege_L) - 0.0755465973900935*alloc(1924,bean_H)
     
      - 0.272266449458764*alloc(1924,bean_L) - 0.164402947342306*alloc(1924,cass_L) - 0.0558279972582234*alloc(1924,chic_H) - 0.20508185757942*alloc(1924,chic_L) - 0.149401460446919*alloc(1924,coff_L) - 0.213180825286162*alloc(1924,cott_L)
     
      - 0.0572894173453976*alloc(1924,cowp_H) - 0.23750841287497*alloc(1924,cowp_L) - 0.0688927597806285*alloc(1924,grou_H) - 0.176735470605825*alloc(1924,grou_L) - 0.0553025184996403*alloc(1924,lent_H) - 0.20508185757942*alloc(1924,lent_L)
     
      - 0.0857578076257479*alloc(1924,maiz_H) - 0.237508389469578*alloc(1924,maiz_L) - 0.0648780314398401*alloc(1924,mill_H) - 0.219623182770335*alloc(1924,mill_L) - 0.213180825286162*alloc(1924,ofib_L) - 0.23750841287497*alloc(1924,ooil_L)
     
      - 0.0481935138886539*alloc(1924,opul_H) - 0.20508185757942*alloc(1924,opul_L) - 0.0689787556113103*alloc(1924,pige_H) - 0.272266496269548*alloc(1924,pige_L) - 0.146444551652474*alloc(1924,pota_H) - 0.152591931315032*alloc(1924,pota_L)
     
      - 0.110921769415444*alloc(1924,rest_H) - 0.237508389469578*alloc(1924,rest_L) - 0.0675989364506558*alloc(1924,rice_H) - 0.220144725114667*alloc(1924,rice_L) - 0.273769684149205*alloc(1924,sorg_L) - 0.272266496269548*alloc(1924,soyb_L)
     
      - 0.23750841287497*alloc(1924,sunf_L) - 0.16541903166573*alloc(1924,temf_H) - 0.237508389469578*alloc(1924,temf_L) - 0.113920643695158*alloc(1924,toba_H) - 0.219255062768914*alloc(1924,toba_L) - 0.000368134835502076*alloc(1924,trof_L)
     
      - 0.283232757978361*alloc(1924,vege_H) - 0.218886919362102*alloc(1924,vege_L) - 0.049426465206142*alloc(1925,bean_H) - 0.166703779270057*alloc(1925,bean_L) - 0.166826493738994*alloc(1925,cass_L) - 0.0585345291013954*alloc(1925,chic_H)
     
      - 0.234501920088696*alloc(1925,chic_L) - 0.166703779270057*alloc(1925,coff_L) - 0.23450196689948*alloc(1925,cott_L) - 0.0560323616856465*alloc(1925,cowp_H) - 0.23450196689948*alloc(1925,cowp_L) - 0.0634234482035872*alloc(1925,grou_H)
     
      - 0.167808162679711*alloc(1925,grou_L) - 0.0579835752216749*alloc(1925,lent_H) - 0.234501920088696*alloc(1925,lent_L) - 0.0526784494120856*alloc(1925,maiz_H) - 0.188914606634519*alloc(1925,maiz_L) - 0.0655764535700594*alloc(1925,mill_H)
     
      - 0.23450196689948*alloc(1925,mill_L) - 0.23450196689948*alloc(1925,ofib_L) - 0.256712770858551*alloc(1925,ooil_L) - 0.0505299272722592*alloc(1925,opul_H) - 0.234501920088696*alloc(1925,opul_L) - 0.0689363777833135*alloc(1925,pige_H)
     
      - 0.301165039839883*alloc(1925,pige_L) - 0.155561285350547*alloc(1925,pota_H) - 0.101145113144699*alloc(1925,pota_L) - 0.0681359164911314*alloc(1925,rest_H) - 0.188914606634519*alloc(1925,rest_L) - 0.0676843386513135*alloc(1925,rice_H)
     
      - 0.23450196689948*alloc(1925,rice_L) - 0.23450196689948*alloc(1925,sorg_L) - 0.301165063245275*alloc(1925,soyb_L) - 0.256712770858551*alloc(1925,sunf_L) - 0.10161195035941*alloc(1925,temf_H) - 0.188914606634519*alloc(1925,temf_L)
     
      - 0.114302345162324*alloc(1925,toba_H) - 0.23450196689948*alloc(1925,toba_L) - 1.62847332020618E-11*alloc(1925,trof_L) - 0.28483840589211*alloc(1925,vege_H) - 0.23450196689948*alloc(1925,vege_L) - 0.0486429846685909*alloc(1926,bean_H)
     
      - 0.145382602548651*alloc(1926,bean_L) - 0.146394979363342*alloc(1926,cass_L) - 0.0305753966150224*alloc(1926,chic_H) - 0.0890579720082721*alloc(1926,chic_L) - 0.145382602548651*alloc(1926,coff_L) - 0.206216902052265*alloc(1926,cott_L)
     
      - 0.050184256415741*alloc(1926,cowp_H) - 0.206216902052265*alloc(1926,cowp_L) - 0.047760120592996*alloc(1926,grou_H) - 0.0890579661569242*alloc(1926,grou_L) - 0.0302876069351932*alloc(1926,lent_H) - 0.0890579720082721*alloc(1926,lent_L)
     
      - 0.0520519330861567*alloc(1926,maiz_H) - 0.204161487359693*alloc(1926,maiz_L) - 0.0599738284978295*alloc(1926,mill_H) - 0.206216902052265*alloc(1926,mill_L) - 0.206216902052265*alloc(1926,ofib_L) - 0.217751804673082*alloc(1926,ooil_L)
     
      - 0.0263942085294871*alloc(1926,opul_H) - 0.0890579720082721*alloc(1926,opul_L) - 0.0612175857995696*alloc(1926,pige_H) - 0.206216902052265*alloc(1926,pige_L) - 0.148784792126956*alloc(1926,pota_H) - 0.147438028943919*alloc(1926,pota_L)
     
      - 0.0673255611268365*alloc(1926,rest_H) - 0.204161487359693*alloc(1926,rest_L) - 0.0624300634774744*alloc(1926,rice_H) - 0.206216902052265*alloc(1926,rice_L) - 0.206216925457657*alloc(1926,sorg_L) - 0.265026459629193*alloc(1926,soyb_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.217751804673082*alloc(1926,sunf_L) - 0.100403457199111*alloc(1926,temf_H) - 0.204161487359693*alloc(1926,temf_L) - 0.105879130032747*alloc(1926,toba_H) - 0.206216902052265*alloc(1926,toba_L) - 7.56076747832991E-12*alloc(1926,trof_L)
     
      - 0.259729493146187*alloc(1926,vege_H) - 0.206216902052265*alloc(1926,vege_L) - 0.0345160824837334*alloc(1927,bean_H) - 0.0691173740218493*alloc(1927,bean_L) - 0.0715102183959117*alloc(1927,cass_L) - 0.0215162764935215*alloc(1927,chic_H)
     
      - 0.0429797714216054*alloc(1927,chic_L) - 0.0691173447651096*alloc(1927,coff_L) - 0.101543894209311*alloc(1927,cott_L) - 0.0330085437630158*alloc(1927,cowp_H) - 0.101543894209311*alloc(1927,cowp_L) - 0.022803621758808*alloc(1927,grou_H)
     
      - 0.0249104988703044*alloc(1927,grou_L) - 0.0213137554141991*alloc(1927,lent_H) - 0.0429797714216054*alloc(1927,lent_L) - 0.0384039256332874*alloc(1927,maiz_H) - 0.101543905912007*alloc(1927,maiz_L) - 0.0401251028349891*alloc(1927,mill_H)
     
      - 0.101543894209311*alloc(1927,mill_L) - 0.101543894209311*alloc(1927,ofib_L) - 0.101543894209311*alloc(1927,ooil_L) - 0.0185739238544851*alloc(1927,opul_H) - 0.0429797714216054*alloc(1927,opul_L) - 0.0393678560938181*alloc(1927,pige_H)
     
      - 0.101543905912007*alloc(1927,pige_L) - 0.102288913996684*alloc(1927,pota_H) - 0.0715102066932158*alloc(1927,pota_L) - 0.0496728111606293*alloc(1927,rest_H) - 0.101543905912007*alloc(1927,rest_L) - 0.0415668218481749*alloc(1927,rice_H)
     
      - 0.101543894209311*alloc(1927,rice_L) - 0.13160826034264*alloc(1927,sorg_L) - 0.131577575874058*alloc(1927,soyb_L) - 0.101543894209311*alloc(1927,sunf_L) - 0.0740776888577286*alloc(1927,temf_H) - 0.101543905912007*alloc(1927,temf_L)
     
      - 0.0727383579598906*alloc(1927,toba_H) - 0.101543894209311*alloc(1927,toba_L) - 0.172929587731675*alloc(1927,vege_H) - 0.101543894209311*alloc(1927,vege_L) - 0.0459356974867323*alloc(1928,bean_H) - 0.134860123553309*alloc(1928,bean_L)
     
      - 0.0733202392586962*alloc(1928,cass_L) - 0.0319262149490364*alloc(1928,chic_H) - 0.0733202275560003*alloc(1928,chic_L) - 0.0708966343485283*alloc(1928,coff_L) - 0.104090178480329*alloc(1928,cott_L) - 0.0349211010853806*alloc(1928,cowp_H)
     
      - 0.104090190183024*alloc(1928,cowp_L) - 0.0430041659212013*alloc(1928,grou_H) - 0.104090190183024*alloc(1928,grou_L) - 0.0316257107464572*alloc(1928,lent_H) - 0.0733202275560003*alloc(1928,lent_L) - 0.0525947117494179*alloc(1928,maiz_H)
     
      - 0.134860135256005*alloc(1928,maiz_L) - 0.0395212272208848*alloc(1928,mill_H) - 0.10409020188572*alloc(1928,mill_L) - 0.104090178480329*alloc(1928,ofib_L) - 0.104090190183024*alloc(1928,ooil_L) - 0.0275603023415262*alloc(1928,opul_H)
     
      - 0.0733202275560003*alloc(1928,opul_L) - 0.0424565235376161*alloc(1928,pige_H) - 0.134860135256005*alloc(1928,pige_L) - 0.077247851144422*alloc(1928,pota_H) - 0.0440534966937429*alloc(1928,pota_L) - 0.0680276076389468*alloc(1928,rest_H)
     
      - 0.134860135256005*alloc(1928,rest_L) - 0.0398152451055597*alloc(1928,rice_H) - 0.104090190183024*alloc(1928,rice_L) - 0.134860135256005*alloc(1928,sorg_L) - 0.134860123553309*alloc(1928,soyb_L) - 0.104090190183024*alloc(1928,sunf_L)
     
      - 0.101450428004117*alloc(1928,temf_H) - 0.134860135256005*alloc(1928,temf_L) - 0.0699805873420564*alloc(1928,toba_H) - 0.104090190183024*alloc(1928,toba_L) - 0.166481126317059*alloc(1928,vege_H) - 0.104090190183024*alloc(1928,vege_L)
     
      - 0.0553655436091848*alloc(1929,bean_H) - 0.153052116424895*alloc(1929,bean_L) - 0.125994196267056*alloc(1929,cass_L) - 0.0336992242144793*alloc(1929,chic_H) - 0.101145078036612*alloc(1929,chic_L) - 0.125165879453075*alloc(1929,cott_L)
     
      - 0.0443871966033286*alloc(1929,cowp_H) - 0.173913108036437*alloc(1929,cowp_L) - 0.055120339318648*alloc(1929,grou_H) - 0.153052116424895*alloc(1929,grou_L) - 0.0333820316341414*alloc(1929,lent_H) - 0.101145078036612*alloc(1929,lent_L)
     
      - 0.0665390031709667*alloc(1929,maiz_H) - 0.178882915298752*alloc(1929,maiz_L) - 0.0400168721762379*alloc(1929,mill_H) - 0.178882915298752*alloc(1929,mill_L) - 0.125165879453075*alloc(1929,ofib_L) - 0.153052116424895*alloc(1929,ooil_L)
     
      - 0.0290908524392418*alloc(1929,opul_H) - 0.101145078036612*alloc(1929,opul_L) - 0.0528816202296047*alloc(1929,pige_H) - 0.178882915298752*alloc(1929,pige_L) - 0.0813089617768834*alloc(1929,pota_H) - 0.0733202217046523*alloc(1929,pota_L)
     
      - 0.0860635803456277*alloc(1929,rest_H) - 0.178882915298752*alloc(1929,rest_L) - 0.0505278399003964*alloc(1929,rice_H) - 0.153052116424895*alloc(1929,rice_L) - 0.178913588064638*alloc(1929,sorg_L) - 0.153052116424895*alloc(1929,soyb_L)
     
      - 0.153052116424895*alloc(1929,sunf_L) - 0.128347701244633*alloc(1929,temf_H) - 0.178882915298752*alloc(1929,temf_L) - 0.0869432598724405*alloc(1929,toba_H) - 0.153052116424895*alloc(1929,toba_L) - 0.207187230545582*alloc(1929,vege_H)
     
      - 0.153052116424895*alloc(1929,vege_L) - 0.0590354553769005*alloc(1930,bean_H) - 0.141026332522937*alloc(1930,bean_L) - 0.139768538473067*alloc(1930,cass_L) - 0.0338671604016497*alloc(1930,chic_H) - 0.0812044039826658*alloc(1930,chic_L)
     
      - 1.2509957699037E-9*alloc(1930,coff_L) - 0.0939357492702315*alloc(1930,cott_L) - 0.0496327332917321*alloc(1930,cowp_H) - 0.18909860812175*alloc(1930,cowp_L) - 0.0616438344047095*alloc(1930,grou_H) - 0.141026332522937*alloc(1930,grou_L)
     
      - 0.0335483871287651*alloc(1930,lent_H) - 0.0812044039826658*alloc(1930,lent_L) - 0.0731111707693376*alloc(1930,maiz_H) - 0.141026344225633*alloc(1930,maiz_L) - 0.0444934886060354*alloc(1930,mill_H) - 0.141026332522937*alloc(1930,mill_L)
     
      - 0.0939357492702315*alloc(1930,ofib_L) - 0.141026332522937*alloc(1930,ooil_L) - 0.0292358233385446*alloc(1930,opul_H) - 0.0812044039826658*alloc(1930,opul_L) - 0.057847196525966*alloc(1930,pige_H) - 0.141026344225633*alloc(1930,pige_L)
     
      - 0.0829030944197975*alloc(1930,pota_H) - 0.0812044039826658*alloc(1930,pota_L) - 0.0945642227837778*alloc(1930,rest_H) - 0.141026344225633*alloc(1930,rest_L) - 0.0569450842973172*alloc(1930,rice_H) - 0.141026332522937*alloc(1930,rice_L)
     
      - 0.141026344225633*alloc(1930,sorg_L) - 0.141026332522937*alloc(1930,soyb_L) - 0.141026332522937*alloc(1930,sunf_L) - 0.141024816368796*alloc(1930,temf_H) - 0.141026344225633*alloc(1930,temf_L) - 0.0955826800520697*alloc(1930,toba_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.141026332522937*alloc(1930,toba_L) - 1.66799441799952E-9*alloc(1930,trof_L) - 0.224926375886146*alloc(1930,vege_H) - 0.141026332522937*alloc(1930,vege_L) - 0.0352666228099272*alloc(1931,bean_H) - 0.040709594705697*alloc(1931,bean_L)
     
      - 0.0278555466518897*alloc(1931,cass_L) - 0.00303711362144662*alloc(1931,coff_L) - 0.0243275861259704*alloc(1931,cott_L) - 0.0291593620402952*alloc(1931,cowp_H) - 0.0534102496733325*alloc(1931,cowp_L) - 0.0368768647632025*alloc(1931,grou_H)
     
      - 0.0339604510491803*alloc(1931,grou_L) - 0.0439807792841451*alloc(1931,maiz_H) - 0.0447590785590679*alloc(1931,maiz_L) - 0.0262407573722216*alloc(1931,mill_H) - 0.042059421681596*alloc(1931,mill_L) - 0.0243275861259704*alloc(1931,ofib_L)
     
      - 0.0312607941717084*alloc(1931,ooil_L) - 0.0342434133720743*alloc(1931,pige_H) - 0.0434092486574949*alloc(1931,pige_L) - 0.056886084119095*alloc(1931,rest_H) - 0.0447590785590679*alloc(1931,rest_L) - 0.0327894934542981*alloc(1931,rice_H)
     
      - 0.042059421681596*alloc(1931,rice_L) - 0.0447590785590679*alloc(1931,sorg_L) - 0.042059421681596*alloc(1931,soyb_L) - 0.0312607941717084*alloc(1931,sunf_L) - 0.0848349336638493*alloc(1931,temf_H) - 0.0447590785590679*alloc(1931,temf_L)
     
      - 0.0538945810015289*alloc(1931,toba_H) - 0.0366601079266522*alloc(1931,toba_L) - 0.00404948495049858*alloc(1931,trof_L) - 0.130989779205548*alloc(1931,vege_H) - 0.030831305233123*alloc(1931,vege_L) - 0.0601626017065489*alloc(1953,bean_H)
     
      - 0.150383141090332*alloc(1953,bean_L) - 0.125810112860953*alloc(1953,cass_L) - 0.0406641715744186*alloc(1953,chic_H) - 0.0895181571181357*alloc(1953,chic_L) - 0.00303711435286512*alloc(1953,coff_L) - 0.113140154064596*alloc(1953,cott_L)
     
      - 0.0487762955781074*alloc(1953,cowp_H) - 0.150383152793028*alloc(1953,cowp_L) - 0.0600173539479182*alloc(1953,grou_H) - 0.114397948114466*alloc(1953,grou_L) - 0.0402814217097065*alloc(1953,lent_H) - 0.0895181571181357*alloc(1953,lent_L)
     
      - 0.0703071158878862*alloc(1953,maiz_H) - 0.150383141090332*alloc(1953,maiz_L) - 0.0526378273383517*alloc(1953,mill_H) - 0.150383141090332*alloc(1953,mill_L) - 0.113140154064596*alloc(1953,ofib_L) - 0.150383141090332*alloc(1953,ooil_L)
     
      - 0.0351033426557977*alloc(1953,opul_H) - 0.0895181571181357*alloc(1953,opul_L) - 0.0568532368987228*alloc(1953,pige_H) - 0.150383141090332*alloc(1953,pige_L) - 0.101914178780476*alloc(1953,pota_H) - 0.0670926028384242*alloc(1953,pota_L)
     
      - 0.0909373724992421*alloc(1953,rest_H) - 0.150383141090332*alloc(1953,rest_L) - 0.0562878363107704*alloc(1953,rice_H) - 0.150383141090332*alloc(1953,rice_L) - 0.162531592650444*alloc(1953,sorg_L) - 0.150383141090332*alloc(1953,soyb_L)
     
      - 0.150383141090332*alloc(1953,sunf_L) - 0.135616048863317*alloc(1953,temf_H) - 0.150383141090332*alloc(1953,temf_L) - 0.0948504935178014*alloc(1953,toba_H) - 0.151334160670554*alloc(1953,toba_L) - 0.00303711435286512*alloc(1953,trof_L)
     
      - 0.235765198017735*alloc(1953,vege_H) - 0.140259431456905*alloc(1953,vege_L) - 0.0630780417726644*alloc(1954,bean_H) - 0.146548401706254*alloc(1954,bean_L) - 0.108078293396535*alloc(1954,cass_L) - 0.0418130713024847*alloc(1954,chic_H)
     
      - 0.0869412117839274*alloc(1954,chic_L) - 0.00487778896465523*alloc(1954,coff_L) - 0.104642370185156*alloc(1954,cott_L) - 0.0510086766908135*alloc(1954,cowp_H) - 0.169311409072847*alloc(1954,cowp_L) - 0.0626148439180149*alloc(1954,grou_H)
     
      - 0.106575082111486*alloc(1954,grou_L) - 0.0414195074657067*alloc(1954,lent_H) - 0.0869412117839274*alloc(1954,lent_L) - 0.0741491786285916*alloc(1954,maiz_H) - 0.146548401706254*alloc(1954,maiz_L) - 0.0553848978576018*alloc(1954,mill_H)
     
      - 0.146548401706254*alloc(1954,mill_L) - 0.104642370185156*alloc(1954,ofib_L) - 0.146548401706254*alloc(1954,ooil_L) - 0.0360951302484122*alloc(1954,opul_H) - 0.0869412117839274*alloc(1954,opul_L) - 0.0596304637192986*alloc(1954,pige_H)
     
      - 0.146548401706254*alloc(1954,pige_L) - 0.102961033298438*alloc(1954,pota_H) - 0.0643009071835752*alloc(1954,pota_L) - 0.09590681387377*alloc(1954,rest_H) - 0.146548401706254*alloc(1954,rest_L) - 0.0582748477499003*alloc(1954,rice_H)
     
      - 0.146548401706254*alloc(1954,rice_L) - 0.166090230330761*alloc(1954,sorg_L) - 0.146548401706254*alloc(1954,soyb_L) - 0.146548401706254*alloc(1954,sunf_L) - 0.143027039369745*alloc(1954,temf_H) - 0.146548401706254*alloc(1954,temf_L)
     
      - 0.0979414500640692*alloc(1954,toba_H) - 0.138694851234691*alloc(1954,toba_L) - 0.00487778896465523*alloc(1954,trof_L) - 0.246903258971957*alloc(1954,vege_H) - 0.130258424589719*alloc(1954,vege_L) - 0.0640231351700423*alloc(1955,bean_H)
     
      - 0.141179743163152*alloc(1955,bean_L) - 0.100746250161217*alloc(1955,cass_L) - 0.0422703249624175*alloc(1955,chic_H) - 0.0839040871912034*alloc(1955,chic_L) - 0.00549134850951916*alloc(1955,coff_L) - 0.0986908237659492*alloc(1955,cott_L)
     
      - 0.0517679763324505*alloc(1955,cowp_H) - 0.161948693071643*alloc(1955,cowp_L) - 0.0636983336496122*alloc(1955,grou_H) - 0.1003781184571*alloc(1955,grou_L) - 0.0418724572441216*alloc(1955,lent_H) - 0.0839040871912034*alloc(1955,lent_L)
     
      - 0.0753309026615948*alloc(1955,maiz_H) - 0.141701273804789*alloc(1955,maiz_L) - 0.0562056121076369*alloc(1955,mill_H) - 0.14145585656961*alloc(1955,mill_L) - 0.0986908237659492*alloc(1955,ofib_L) - 0.14145585656961*alloc(1955,ooil_L)
     
      - 0.0364898544314897*alloc(1955,opul_H) - 0.0839040871912034*alloc(1955,opul_L) - 0.0604479432005341*alloc(1955,pige_H) - 0.141701273804789*alloc(1955,pige_L) - 0.103263496817272*alloc(1955,pota_H) - 0.0618466704669564*alloc(1955,pota_L)
     
      - 0.0974352918553143*alloc(1955,rest_H) - 0.141701273804789*alloc(1955,rest_L) - 0.0589714785652336*alloc(1955,rice_H) - 0.14145585656961*alloc(1955,rice_L) - 0.162961069886334*alloc(1955,sorg_L) - 0.141701273804789*alloc(1955,soyb_L)
     
      - 0.14145585656961*alloc(1955,sunf_L) - 0.145306477833104*alloc(1955,temf_H) - 0.141701273804789*alloc(1955,temf_L) - 0.0990065685054115*alloc(1955,toba_H) - 0.130779920123268*alloc(1955,toba_L) - 0.0057060948073581*alloc(1955,trof_L)
     
      - 0.249961918598072*alloc(1955,vege_H) - 0.121975350071484*alloc(1955,vege_L) - 0.0660704087474319*alloc(1956,bean_H) - 0.0984761027020482*alloc(1956,bean_L) - 0.0316596103444074*alloc(1956,cass_L) - 0.0445285957057059*alloc(1956,chic_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0596378685395606*alloc(1956,chic_L) - 0.00957150768874117*alloc(1956,coff_L) - 0.046047551226172*alloc(1956,cott_L) - 0.0521111296328527*alloc(1956,cowp_H) - 0.104887787420335*alloc(1956,cowp_L) - 0.066081264843483*alloc(1956,grou_H)
     
      - 0.046047551226172*alloc(1956,grou_L) - 0.0441094721056839*alloc(1956,lent_H) - 0.0596378685395606*alloc(1956,lent_L) - 0.0770279947988043*alloc(1956,maiz_H) - 0.104887787420335*alloc(1956,maiz_L) - 0.0578025556845585*alloc(1956,mill_H)
     
      - 0.101666608678248*alloc(1956,mill_L) - 0.046047551226172*alloc(1956,ofib_L) - 0.101666608678248*alloc(1956,ooil_L) - 0.0384393064587157*alloc(1956,opul_H) - 0.0596378685395606*alloc(1956,opul_L) - 0.0617973007759871*alloc(1956,pige_H)
     
      - 0.104887787420335*alloc(1956,pige_L) - 0.107927673869195*alloc(1956,pota_H) - 0.043654671744022*alloc(1956,pota_L) - 0.0996303626941332*alloc(1956,rest_H) - 0.104887787420335*alloc(1956,rest_L) - 0.0590978848188405*alloc(1956,rice_H)
     
      - 0.101666608678248*alloc(1956,rice_L) - 0.133602317800743*alloc(1956,sorg_L) - 0.104887787420335*alloc(1956,soyb_L) - 0.101666608678248*alloc(1956,sunf_L) - 0.148580014619514*alloc(1956,temf_H) - 0.104887787420335*alloc(1956,temf_L)
     
      - 0.0978660947582295*alloc(1956,toba_H) - 0.0564166839461262*alloc(1956,toba_L) - 0.0119643857080542*alloc(1956,trof_L) - 0.251470878245131*alloc(1956,vege_H) - 0.0492380513510241*alloc(1956,vege_L) - 0.0641875143085777*alloc(1957,bean_H)
     
      - 0.0997645812205003*alloc(1957,bean_L) - 0.0387462041621324*alloc(1957,cass_L) - 0.044199086908329*alloc(1957,chic_H) - 0.0565087197978294*alloc(1957,chic_L) - 0.00610490622583687*alloc(1957,coff_L) - 0.0478882243751252*alloc(1957,cott_L)
     
      - 0.0504710228384068*alloc(1957,cowp_H) - 0.103844737839758*alloc(1957,cowp_L) - 0.0645363024850804*alloc(1957,grou_H) - 0.0478882243751252*alloc(1957,grou_L) - 0.0437830647964903*alloc(1957,lent_H) - 0.0565087197978294*alloc(1957,lent_L)
     
      - 0.0735755389939265*alloc(1957,maiz_H) - 0.103844737839758*alloc(1957,maiz_L) - 0.0552731623176413*alloc(1957,mill_H) - 0.101789323147186*alloc(1957,mill_L) - 0.0478882243751252*alloc(1957,ofib_L) - 0.101789323147186*alloc(1957,ooil_L)
     
      - 0.0381548580173833*alloc(1957,opul_H) - 0.0565087197978294*alloc(1957,opul_L) - 0.0598667592236968*alloc(1957,pige_H) - 0.103844737839758*alloc(1957,pige_L) - 0.111376742076831*alloc(1957,pota_H) - 0.0463543286214939*alloc(1957,pota_L)
     
      - 0.0951648508380361*alloc(1957,rest_H) - 0.103844737839758*alloc(1957,rest_L) - 0.0578558240759552*alloc(1957,rice_H) - 0.101789323147186*alloc(1957,rice_L) - 0.122128784117091*alloc(1957,sorg_L) - 0.103844737839758*alloc(1957,soyb_L)
     
      - 0.101789323147186*alloc(1957,sunf_L) - 0.141920540550355*alloc(1957,temf_H) - 0.103844737839758*alloc(1957,temf_L) - 0.0967371041695671*alloc(1957,toba_H) - 0.0544839778711439*alloc(1957,toba_L) - 0.00763880234517737*alloc(1957,trof_L)
     
      - 0.241809472223968*alloc(1957,vege_H) - 0.0499129692274845*alloc(1957,vege_L) - 0.0630176036251223*alloc(1958,bean_H) - 0.0985681444050993*alloc(1958,bean_L) - 0.0328560500854824*alloc(1958,cass_L) - 0.0431265985020189*alloc(1958,chic_H)
     
      - 0.0590856651320377*alloc(1958,chic_L) - 0.00898862858965784*alloc(1958,coff_L) - 0.0463236529299335*alloc(1958,cott_L) - 0.0496548324038749*alloc(1958,cowp_H) - 0.104581012950687*alloc(1958,cowp_L) - 0.0630969083295252*alloc(1958,grou_H)
     
      - 0.0463236529299335*alloc(1958,grou_L) - 0.0427206711437809*alloc(1958,lent_H) - 0.0590856651320377*alloc(1958,lent_L) - 0.0732991664654497*alloc(1958,maiz_H) - 0.104581012950687*alloc(1958,maiz_L) - 0.055002547708665*alloc(1958,mill_H)
     
      - 0.101574578677893*alloc(1958,mill_L) - 0.0463236529299335*alloc(1958,ofib_L) - 0.101574578677893*alloc(1958,ooil_L) - 0.0372290324917808*alloc(1958,opul_H) - 0.0590856651320377*alloc(1958,opul_L) - 0.0587819742455848*alloc(1958,pige_H)
     
      - 0.104581012950687*alloc(1958,pige_L) - 0.105777877435501*alloc(1958,pota_H) - 0.0440841636082814*alloc(1958,pota_L) - 0.0948073821628777*alloc(1958,rest_H) - 0.104581012950687*alloc(1958,rest_L) - 0.0565724247733283*alloc(1958,rice_H)
     
      - 0.101574578677893*alloc(1958,rice_L) - 0.131577575874058*alloc(1958,sorg_L) - 0.104581012950687*alloc(1958,soyb_L) - 0.101574578677893*alloc(1958,sunf_L) - 0.14138744301317*alloc(1958,temf_H) - 0.104581012950687*alloc(1958,temf_L)
     
      - 0.0936210383521839*alloc(1958,toba_H) - 0.0560792308592439*alloc(1958,toba_L) - 0.0112587943342888*alloc(1958,trof_L) - 0.23951890034619*alloc(1958,vege_H) - 0.0493300872027273*alloc(1958,vege_L) - 0.0632320116900578*alloc(1959,bean_H)
     
      - 0.0980159585516202*alloc(1959,bean_L) - 0.03650674409722*alloc(1959,cass_L) - 0.0434095123712995*alloc(1959,chic_H) - 0.0574904238466336*alloc(1959,chic_L) - 0.0074240549502107*alloc(1959,coff_L) - 0.0473667259159023*alloc(1959,cott_L)
     
      - 0.0498193505692227*alloc(1959,cowp_H) - 0.103200527837271*alloc(1959,cowp_L) - 0.0634709100986983*alloc(1959,grou_H) - 0.0472746871385252*alloc(1959,grou_L) - 0.043000922097748*alloc(1959,lent_H) - 0.0574904238466336*alloc(1959,lent_L)
     
      - 0.0730680514999051*alloc(1959,maiz_H) - 0.102955098899396*alloc(1959,maiz_L) - 0.0548509257560404*alloc(1959,mill_H) - 0.100470183565543*alloc(1959,mill_L) - 0.0473667259159023*alloc(1959,ofib_L) - 0.100470183565543*alloc(1959,ooil_L)
     
      - 0.037473257865394*alloc(1959,opul_H) - 0.0574904238466336*alloc(1959,opul_L) - 0.0588386001381181*alloc(1959,pige_H) - 0.102955098899396*alloc(1959,pige_L) - 0.10800098694559*alloc(1959,pota_H) - 0.0450351890398512*alloc(1959,pota_L)
     
      - 0.0945084510028313*alloc(1959,rest_H) - 0.102955098899396*alloc(1959,rest_L) - 0.0568905246236512*alloc(1959,rice_H) - 0.100470183565543*alloc(1959,rice_L) - 0.125227260092936*alloc(1959,sorg_L) - 0.102955098899396*alloc(1959,soyb_L)
     
      - 0.100470183565543*alloc(1959,sunf_L) - 0.140941643209487*alloc(1959,temf_H) - 0.102955098899396*alloc(1959,temf_L) - 0.094667207368724*alloc(1959,toba_H) - 0.0556190867088159*alloc(1959,toba_L) - 0.00926472883058232*alloc(1959,trof_L)
     
      - 0.23960352068911*alloc(1959,vege_H) - 0.0500357071018138*alloc(1959,vege_L) - 0.0632189449906557*alloc(1960,bean_H) - 0.139369792516543*alloc(1960,bean_L) - 0.100623570800367*alloc(1960,cass_L) - 0.0441607929176747*alloc(1960,chic_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0829837696336076*alloc(1960,chic_L) - 0.00496982152497514*alloc(1960,coff_L) - 0.108078305099231*alloc(1960,cott_L) - 0.0506867522474248*alloc(1960,cowp_H) - 0.158144661561539*alloc(1960,cowp_L) - 0.0626453128840981*alloc(1960,grou_H)
     
      - 0.096727485884516*alloc(1960,grou_L) - 0.0437451312464689*alloc(1960,lent_H) - 0.0829837696336076*alloc(1960,lent_L) - 0.0735024845308875*alloc(1960,maiz_H) - 0.140780973801237*alloc(1960,maiz_L) - 0.0550684895897369*alloc(1960,mill_H)
     
      - 0.140075371456194*alloc(1960,mill_L) - 0.108078305099231*alloc(1960,ofib_L) - 0.140075371456194*alloc(1960,ooil_L) - 0.0381218007332053*alloc(1960,opul_H) - 0.0829837696336076*alloc(1960,opul_L) - 0.0588923636698894*alloc(1960,pige_H)
     
      - 0.140780973801237*alloc(1960,pige_L) - 0.111440189501821*alloc(1960,pota_H) - 0.068595825826169*alloc(1960,pota_L) - 0.095070359962764*alloc(1960,rest_H) - 0.140780973801237*alloc(1960,rest_L) - 0.0585812184978149*alloc(1960,rice_H)
     
      - 0.140075371456194*alloc(1960,rice_L) - 0.158543477734238*alloc(1960,sorg_L) - 0.140780973801237*alloc(1960,soyb_L) - 0.140075371456194*alloc(1960,sunf_L) - 0.141779625118054*alloc(1960,temf_H) - 0.140780973801237*alloc(1960,temf_L)
     
      - 0.0975640967384319*alloc(1960,toba_H) - 0.122466243055321*alloc(1960,toba_L) - 0.0054913455838452*alloc(1960,trof_L) - 0.245093289611725*alloc(1960,vege_H) - 0.118017954731947*alloc(1960,vege_L) - 0.0672442482199794*alloc(1961,bean_H)
     
      - 0.188515825569908*alloc(1961,bean_L) - 0.142682989556289*alloc(1961,cass_L) - 0.0480565213027511*alloc(1961,chic_H) - 0.114643412160429*alloc(1961,chic_L) - 0.00279175197407288*alloc(1961,coff_L) - 0.152745365360639*alloc(1961,cott_L)
     
      - 0.0535331284280406*alloc(1961,cowp_H) - 0.195817160931252*alloc(1961,cowp_L) - 0.0657991202461712*alloc(1961,grou_H) - 0.142192143383235*alloc(1961,grou_L) - 0.0476041912462171*alloc(1961,lent_H) - 0.114643412160429*alloc(1961,lent_L)
     
      - 0.0775975785281718*alloc(1961,maiz_H) - 0.188515825569908*alloc(1961,maiz_L) - 0.0583240596987097*alloc(1961,mill_H) - 0.169127372477529*alloc(1961,mill_L) - 0.152745365360639*alloc(1961,ofib_L) - 0.178054645295555*alloc(1961,ooil_L)
     
      - 0.0414847879305464*alloc(1961,opul_H) - 0.114643412160429*alloc(1961,opul_L) - 0.0623334296304258*alloc(1961,pige_H) - 0.188515825569908*alloc(1961,pige_L) - 0.123880473198422*alloc(1961,pota_H) - 0.0830451444221202*alloc(1961,pota_L)
     
      - 0.100367079697994*alloc(1961,rest_H) - 0.188515825569908*alloc(1961,rest_L) - 0.0619912711257467*alloc(1961,rice_H) - 0.172839397392669*alloc(1961,rice_L) - 0.199621239252139*alloc(1961,sorg_L) - 0.188515825569908*alloc(1961,soyb_L)
     
      - 0.178054645295555*alloc(1961,sunf_L) - 0.149678689965503*alloc(1961,temf_H) - 0.188515825569908*alloc(1961,temf_L) - 0.103851754183109*alloc(1961,toba_H) - 0.166335682674028*alloc(1961,toba_L) - 0.0027916894377918*alloc(1961,trof_L)
     
      - 0.259109168520008*alloc(1961,vege_H) - 0.163574665636413*alloc(1961,vege_L) - 0.0753019690050952*alloc(1962,bean_H) - 0.286501046990815*alloc(1962,bean_L) - 0.164924466281246*alloc(1962,cass_L) - 0.0546789802904285*alloc(1962,chic_H)
     
      - 0.21919369383175*alloc(1962,chic_L) - 0.152499913017372*alloc(1962,coff_L) - 0.223979464498746*alloc(1962,cott_L) - 0.0572620991930159*alloc(1962,cowp_H) - 0.247110615272152*alloc(1962,cowp_L) - 0.0703724765670693*alloc(1962,grou_H)
     
      - 0.182963083620705*alloc(1962,grou_L) - 0.0541643166074254*alloc(1962,lent_H) - 0.21919369383175*alloc(1962,lent_L) - 0.0858241034642257*alloc(1962,maiz_H) - 0.286501023585423*alloc(1962,maiz_L) - 0.0648268363689661*alloc(1962,mill_H)
     
      - 0.226893857068488*alloc(1962,mill_L) - 0.223979464498746*alloc(1962,ofib_L) - 0.247110615272152*alloc(1962,ooil_L) - 0.0472016250888534*alloc(1962,opul_H) - 0.21919369383175*alloc(1962,opul_L) - 0.068810317894485*alloc(1962,pige_H)
     
      - 0.286501046990815*alloc(1962,pige_L) - 0.140528993023261*alloc(1962,pota_H) - 0.158482108797073*alloc(1962,pota_L) - 0.111007518479143*alloc(1962,rest_H) - 0.286501023585423*alloc(1962,rest_L) - 0.0667944758328627*alloc(1962,rice_H)
     
      - 0.227384714944238*alloc(1962,rice_L) - 0.288004258275863*alloc(1962,sorg_L) - 0.286501046990815*alloc(1962,soyb_L) - 0.247110615272152*alloc(1962,sunf_L) - 0.165546910324339*alloc(1962,temf_H) - 0.286501023585423*alloc(1962,temf_L)
     
      - 0.112988403139609*alloc(1962,toba_H) - 0.226525713661676*alloc(1962,toba_L) - 0.000368134881215732*alloc(1962,trof_L) - 0.281394344785081*alloc(1962,vege_H) - 0.226157593660255*alloc(1962,vege_L) - 0.0780234808721851*alloc(1963,bean_H)
     
      - 0.302729596656705*alloc(1963,bean_L) - 0.168207013960497*alloc(1963,cass_L) - 0.0572845361331321*alloc(1963,chic_H) - 0.235606397119917*alloc(1963,chic_L) - 0.167869555022267*alloc(1963,coff_L) - 0.235606397119917*alloc(1963,cott_L)
     
      - 0.0584144750781967*alloc(1963,cowp_H) - 0.257970576611116*alloc(1963,cowp_L) - 0.0707352406498468*alloc(1963,grou_H) - 0.190816622389571*alloc(1963,grou_L) - 0.0567453477614981*alloc(1963,lent_H) - 0.235606397119917*alloc(1963,lent_L)
     
      - 0.0884850988988755*alloc(1963,maiz_H) - 0.257970553205725*alloc(1963,maiz_L) - 0.0669688836199076*alloc(1963,mill_H) - 0.235606397119917*alloc(1963,mill_L) - 0.235606397119917*alloc(1963,ofib_L) - 0.257970576611116*alloc(1963,ooil_L)
     
      - 0.0494508709486357*alloc(1963,opul_H) - 0.235606397119917*alloc(1963,opul_L) - 0.0710340812050329*alloc(1963,pige_H) - 0.30272966687288*alloc(1963,pige_L) - 0.147660523725521*alloc(1963,pota_H) - 0.168452396087589*alloc(1963,pota_L)
     
      - 0.114449331302832*alloc(1963,rest_H) - 0.257970553205725*alloc(1963,rest_L) - 0.0686952494218386*alloc(1963,rice_H) - 0.235606397119917*alloc(1963,rice_L) - 0.302760327936071*alloc(1963,sorg_L) - 0.30272966687288*alloc(1963,soyb_L)
     
      - 0.257970576611116*alloc(1963,sunf_L) - 0.170679729134116*alloc(1963,temf_H) - 0.257970553205725*alloc(1963,temf_L) - 0.116262630181363*alloc(1963,toba_H) - 0.235606397119917*alloc(1963,toba_L) - 1.01794311469134E-11*alloc(1963,trof_L)
     
      - 0.289723638466589*alloc(1963,vege_H) - 0.235606397119917*alloc(1963,vege_L) - 0.0470895081503132*alloc(1964,bean_H) - 0.158758198798139*alloc(1964,bean_L) - 0.16044549348929*alloc(1964,cass_L) - 0.0569392502109295*alloc(1964,chic_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.225022455565843*alloc(1964,chic_L) - 0.158758198798139*alloc(1964,coff_L) - 0.225022502376627*alloc(1964,cott_L) - 0.0555896385572078*alloc(1964,cowp_H) - 0.246190245052425*alloc(1964,cowp_L) - 0.0645921946321134*alloc(1964,grou_H)
     
      - 0.161519204133058*alloc(1964,grou_L) - 0.0564033118290259*alloc(1964,lent_H) - 0.225022455565843*alloc(1964,lent_L) - 0.0496945772880081*alloc(1964,maiz_H) - 0.222261485339012*alloc(1964,maiz_L) - 0.0645844341091499*alloc(1964,mill_H)
     
      - 0.225022502376627*alloc(1964,mill_L) - 0.225022502376627*alloc(1964,ofib_L) - 0.246190268457816*alloc(1964,ooil_L) - 0.0491528029056383*alloc(1964,opul_H) - 0.225022455565843*alloc(1964,opul_L) - 0.0680892857706835*alloc(1964,pige_H)
     
      - 0.288525777214804*alloc(1964,pige_L) - 0.149548288345231*alloc(1964,pota_H) - 0.0980159644029681*alloc(1964,pota_L) - 0.0642764850891943*alloc(1964,rest_H) - 0.222261485339012*alloc(1964,rest_L) - 0.0665784867863539*alloc(1964,rice_H)
     
      - 0.225022502376627*alloc(1964,rice_L) - 0.225022502376627*alloc(1964,sorg_L) - 0.288525800620196*alloc(1964,soyb_L) - 0.246190268457816*alloc(1964,sunf_L) - 0.0958563317044495*alloc(1964,temf_H) - 0.222261485339012*alloc(1964,temf_L)
     
      - 0.112434281889664*alloc(1964,toba_H) - 0.225022502376627*alloc(1964,toba_L) - 0.280154205457997*alloc(1964,vege_H) - 0.225022502376627*alloc(1964,vege_L) - 0.0480769812329153*alloc(1965,bean_H) - 0.142314811041389*alloc(1965,bean_L)
     
      - 0.146793783833345*alloc(1965,cass_L) - 0.0302160786922994*alloc(1965,chic_H) - 0.0910213508491408*alloc(1965,chic_L) - 0.142314811041389*alloc(1965,coff_L) - 0.206677075459433*alloc(1965,cott_L) - 0.0498079985274523*alloc(1965,cowp_H)
     
      - 0.206677075459433*alloc(1965,cowp_L) - 0.0468031338309239*alloc(1965,grou_H) - 0.0910213508491408*alloc(1965,grou_L) - 0.0299316710778361*alloc(1965,lent_H) - 0.0910213508491408*alloc(1965,lent_L) - 0.05176383918436*alloc(1965,maiz_H)
     
      - 0.200541492444908*alloc(1965,maiz_L) - 0.0596983871901813*alloc(1965,mill_H) - 0.206677075459433*alloc(1965,mill_L) - 0.206677075459433*alloc(1965,ofib_L) - 0.219101593615219*alloc(1965,ooil_L) - 0.0260840273632329*alloc(1965,opul_H)
     
      - 0.0910213508491408*alloc(1965,opul_L) - 0.0603107269083339*alloc(1965,pige_H) - 0.206677075459433*alloc(1965,pige_L) - 0.147895145267761*alloc(1965,pota_H) - 0.148450394055914*alloc(1965,pota_L) - 0.0669529316691835*alloc(1965,rest_H)
     
      - 0.200541492444908*alloc(1965,rest_L) - 0.0621404085685301*alloc(1965,rice_H) - 0.206677075459433*alloc(1965,rice_L) - 0.206646390990851*alloc(1965,sorg_L) - 0.264873037286282*alloc(1965,soyb_L) - 0.219101593615219*alloc(1965,sunf_L)
     
      - 0.0998477501960593*alloc(1965,temf_H) - 0.200541492444908*alloc(1965,temf_L) - 0.105347091243137*alloc(1965,toba_H) - 0.206677075459433*alloc(1965,toba_L) - 0.258509413523224*alloc(1965,vege_H) - 0.206677075459433*alloc(1965,vege_L)
     
      - 0.0284730427129928*alloc(1966,bean_H) - 0.0519990976453784*alloc(1966,bean_L) - 0.05402382201802*alloc(1966,cass_L) - 0.0177503088553841*alloc(1966,chic_H) - 0.0324572543925012*alloc(1966,chic_L) - 0.0519990800913346*alloc(1966,coff_L)
     
      - 0.0768481924704305*alloc(1966,cott_L) - 0.0293987591037443*alloc(1966,cowp_H) - 0.0768481924704305*alloc(1966,cowp_L) - 0.0265738947833348*alloc(1966,grou_H) - 0.0324572690208711*alloc(1966,grou_L) - 0.0175832347936253*alloc(1966,lent_H)
     
      - 0.0324572543925012*alloc(1966,lent_L) - 0.0308000954322149*alloc(1966,maiz_H) - 0.0748234680977889*alloc(1966,maiz_L) - 0.0356046486517736*alloc(1966,mill_H) - 0.0768481924704305*alloc(1966,mill_L) - 0.0768481924704305*alloc(1966,ofib_L)
     
      - 0.0768481924704305*alloc(1966,ooil_L) - 0.0153229526109114*alloc(1966,opul_H) - 0.0324572543925012*alloc(1966,opul_L) - 0.0357286445187189*alloc(1966,pige_H) - 0.0768482100244743*alloc(1966,pige_L) - 0.0871269223752735*alloc(1966,pota_H)
     
      - 0.0540238103153241*alloc(1966,pota_L) - 0.0398377847812432*alloc(1966,rest_H) - 0.0748234680977889*alloc(1966,rest_L) - 0.0368748438195028*alloc(1966,rice_H) - 0.0768481924704305*alloc(1966,rice_L) - 0.0768482100244743*alloc(1966,sorg_L)
     
      - 0.0996725746255369*alloc(1966,soyb_L) - 0.0768481924704305*alloc(1966,sunf_L) - 0.0594105901569172*alloc(1966,temf_H) - 0.0748234680977889*alloc(1966,temf_L) - 0.0637625978771197*alloc(1966,toba_H) - 0.0768481924704305*alloc(1966,toba_L)
     
      - 0.151553706300937*alloc(1966,vege_H) - 0.0768481924704305*alloc(1966,vege_L) - 0.0514065896479257*alloc(1967,bean_H) - 0.119214391547348*alloc(1967,bean_L) - 0.0843949684723452*alloc(1967,cass_L) - 0.0351971660857719*alloc(1967,chic_H)
     
      - 0.0843949509183013*alloc(1967,chic_L) - 0.0825542338842387*alloc(1967,coff_L) - 0.119214391547348*alloc(1967,cott_L) - 0.0390834859954042*alloc(1967,cowp_H) - 0.119214403250044*alloc(1967,cowp_L) - 0.0483015847339259*alloc(1967,grou_H)
     
      - 0.119214391547348*alloc(1967,grou_L) - 0.0348658741883598*alloc(1967,lent_H) - 0.0843949509183013*alloc(1967,lent_L) - 0.059156360977075*alloc(1967,maiz_H) - 0.154064504942282*alloc(1967,maiz_L) - 0.0443694593242548*alloc(1967,mill_H)
     
      - 0.119214403250044*alloc(1967,mill_L) - 0.119214391547348*alloc(1967,ofib_L) - 0.119214391547348*alloc(1967,ooil_L) - 0.0303839506323334*alloc(1967,opul_H) - 0.0843949509183013*alloc(1967,opul_L) - 0.0476086263551003*alloc(1967,pige_H)
     
      - 0.154064504942282*alloc(1967,pige_L) - 0.0853931715461451*alloc(1967,pota_H) - 0.0506799288069961*alloc(1967,pota_L) - 0.0765146452949406*alloc(1967,rest_H) - 0.154064504942282*alloc(1967,rest_L) - 0.0447356659515258*alloc(1967,rice_H)
     
      - 0.119214391547348*alloc(1967,rice_L) - 0.154064504942282*alloc(1967,sorg_L) - 0.154064504942282*alloc(1967,soyb_L) - 0.119214391547348*alloc(1967,sunf_L) - 0.114107254145313*alloc(1967,temf_H) - 0.154064504942282*alloc(1967,temf_L)
     
      - 0.078414209252142*alloc(1967,toba_H) - 0.119214391547348*alloc(1967,toba_L) - 0.187314976996913*alloc(1967,vege_H) - 0.119214391547348*alloc(1967,vege_L) - 0.0615372547234514*alloc(1968,bean_H) - 0.156794825808618*alloc(1968,bean_L)
     
      - 0.138142647827168*alloc(1968,cass_L) - 0.0383442466687072*alloc(1968,chic_H) - 0.100378130159796*alloc(1968,chic_L) - 5.1808341930264E-10*alloc(1968,coff_L) - 0.137437057184821*alloc(1968,cott_L) - 0.0501173500885077*alloc(1968,cowp_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.188761207697*alloc(1968,cowp_L) - 0.0623059140552909*alloc(1968,grou_H) - 0.156794825808618*alloc(1968,grou_L) - 0.0379833330030229*alloc(1968,lent_H) - 0.100378130159796*alloc(1968,lent_L) - 0.0742632196011913*alloc(1968,maiz_H)
     
      - 0.173207493988698*alloc(1968,maiz_L) - 0.0450194622193389*alloc(1968,mill_H) - 0.173207493988698*alloc(1968,mill_L) - 0.137437057184821*alloc(1968,ofib_L) - 0.156794825808618*alloc(1968,ooil_L) - 0.0331006676780997*alloc(1968,opul_H)
     
      - 0.100378130159796*alloc(1968,opul_L) - 0.05931112508198*alloc(1968,pige_H) - 0.173207493988698*alloc(1968,pige_L) - 0.0937716159145649*alloc(1968,pota_H) - 0.0801920681274107*alloc(1968,pota_L) - 0.0960543179531865*alloc(1968,rest_H)
     
      - 0.173207493988698*alloc(1968,rest_L) - 0.057453406476657*alloc(1968,rice_H) - 0.156794825808618*alloc(1968,rice_L) - 0.173207493988698*alloc(1968,sorg_L) - 0.173207493988698*alloc(1968,soyb_L) - 0.156794825808618*alloc(1968,sunf_L)
     
      - 0.143247014061029*alloc(1968,temf_H) - 0.173207493988698*alloc(1968,temf_L) - 0.0970888242409839*alloc(1968,toba_H) - 0.156794825808618*alloc(1968,toba_L) - 6.94989986749152E-10*alloc(1968,trof_L) - 0.230818280951008*alloc(1968,vege_H)
     
      - 0.156794825808618*alloc(1968,vege_L) - 0.0623171952557125*alloc(1969,bean_H) - 0.146977878942143*alloc(1969,bean_L) - 0.1405048018813*alloc(1969,cass_L) - 0.0362653056445199*alloc(1969,chic_H) - 0.0857140612432043*alloc(1969,chic_L)
     
      - 0.00125780310117363*alloc(1969,coff_L) - 0.134614659507346*alloc(1969,cott_L) - 0.0521156202734218*alloc(1969,cowp_H) - 0.195080850712235*alloc(1969,cowp_L) - 0.0649585234123987*alloc(1969,grou_H) - 0.14415550467006*alloc(1969,grou_L)
     
      - 0.0359239599268583*alloc(1969,lent_H) - 0.0857140612432043*alloc(1969,lent_L) - 0.076879157256425*alloc(1969,maiz_H) - 0.148665173633294*alloc(1969,maiz_L) - 0.0473473787593399*alloc(1969,mill_H) - 0.147530094052362*alloc(1969,mill_L)
     
      - 0.134614659507346*alloc(1969,ofib_L) - 0.147530082349666*alloc(1969,ooil_L) - 0.0313060220156474*alloc(1969,opul_H) - 0.0857140612432043*alloc(1969,opul_L) - 0.0608102190142797*alloc(1969,pige_H) - 0.148665173633294*alloc(1969,pige_L)
     
      - 0.0899593720690761*alloc(1969,pota_H) - 0.0829223714397033*alloc(1969,pota_L) - 0.0994378516678694*alloc(1969,rest_H) - 0.148665173633294*alloc(1969,rest_L) - 0.0596470240094345*alloc(1969,rice_H) - 0.147530094052362*alloc(1969,rice_L)
     
      - 0.148665173633294*alloc(1969,sorg_L) - 0.147530094052362*alloc(1969,soyb_L) - 0.147530082349666*alloc(1969,sunf_L) - 0.148292920501584*alloc(1969,temf_H) - 0.148665173633294*alloc(1969,temf_L) - 0.0994900960956197*alloc(1969,toba_H)
     
      - 0.145290584250992*alloc(1969,toba_L) - 0.00168729688540656*alloc(1969,trof_L) - 0.237562305057874*alloc(1969,vege_H) - 0.144707684672191*alloc(1969,vege_L) - 0.0696706801590706*alloc(1970,bean_H) - 0.126761109035784*alloc(1970,bean_L)
     
      - 0.0326412909878199*alloc(1970,cass_L) - 0.0222721597307027*alloc(1970,coff_L) - 0.0639020734568324*alloc(1970,cott_L) - 0.0567632372719841*alloc(1970,cowp_H) - 0.162378158604837*alloc(1970,cowp_L) - 0.073018017839648*alloc(1970,grou_H)
     
      - 0.0772469676836939*alloc(1970,grou_L) - 0.0873623074003025*alloc(1970,maiz_H) - 0.156457320059605*alloc(1970,maiz_L) - 0.0522725143887626*alloc(1970,mill_H) - 0.136639389731336*alloc(1970,mill_L) - 0.0639020734568324*alloc(1970,ofib_L)
     
      - 0.129153982666586*alloc(1970,ooil_L) - 0.0673750989815607*alloc(1970,pige_H) - 0.156457320059605*alloc(1970,pige_L) - 0.112997078462487*alloc(1970,rest_H) - 0.156457320059605*alloc(1970,rest_L) - 0.0622472474105404*alloc(1970,rice_H)
     
      - 0.136639389731336*alloc(1970,rice_L) - 0.156457320059605*alloc(1970,sorg_L) - 0.136639389731336*alloc(1970,soyb_L) - 0.129153982666586*alloc(1970,sunf_L) - 0.168513966183797*alloc(1970,temf_H) - 0.156457320059605*alloc(1970,temf_L)
     
      - 0.100141820457949*alloc(1970,toba_H) - 0.0970648921606148*alloc(1970,toba_L) - 0.0296962139494949*alloc(1970,trof_L) - 0.265553352809112*alloc(1970,vege_H) - 0.0684424034832574*alloc(1970,vege_L) - 0.0356452404726472*alloc(1971,bean_H)
     
      - 0.0334082505673314*alloc(1971,bean_L) - 0.00457100937507788*alloc(1971,cass_L) - 0.00684117511970888*alloc(1971,coff_L) - 0.0159525152526303*alloc(1971,cott_L) - 0.0289609967304204*alloc(1971,cowp_H) - 0.0425195892374158*alloc(1971,cowp_L)
     
      - 0.0373822283476809*alloc(1971,grou_H) - 0.0182226817286797*alloc(1971,grou_L) - 0.0448513735529147*alloc(1971,maiz_H) - 0.0425195892374158*alloc(1971,maiz_L) - 0.0266244773436764*alloc(1971,mill_H) - 0.0364453634573595*alloc(1971,mill_L)
     
      - 0.0159525152526303*alloc(1971,ofib_L) - 0.0364453634573595*alloc(1971,ooil_L) - 0.0344269332829481*alloc(1971,pige_H) - 0.0394824763473876*alloc(1971,pige_L) - 0.058012137354461*alloc(1971,rest_H) - 0.0425195892374158*alloc(1971,rest_L)
     
      - 0.031624098004431*alloc(1971,rice_H) - 0.0364453634573595*alloc(1971,rice_L) - 0.0425195892374158*alloc(1971,sorg_L) - 0.0364453634573595*alloc(1971,soyb_L) - 0.0364453634573595*alloc(1971,sunf_L) - 0.0865142310351402*alloc(1971,temf_H)
     
      - 0.0425195892374158*alloc(1971,temf_L) - 0.0502069730515176*alloc(1971,toba_H) - 0.024296908971573*alloc(1971,toba_L) - 0.00911134086433987*alloc(1971,trof_L) - 0.134902199635864*alloc(1971,vege_H) - 0.0159525152526303*alloc(1971,vege_L)
     
      - 0.0456702629666212*alloc(1990,bean_H) - 0.103783392307985*alloc(1990,bean_L) - 0.102249496554354*alloc(1990,cass_L) - 0.0338491279534189*alloc(1990,chic_H) - 0.0617853190838356*alloc(1990,chic_L) - 0.000153389600505636*alloc(1990,coff_L)
     
      - 0.0924325555392263*alloc(1990,cott_L) - 0.0367851214620782*alloc(1990,cowp_H) - 0.103783392307985*alloc(1990,cowp_L) - 0.0456588440789648*alloc(1990,grou_H) - 0.0916349348965243*alloc(1990,grou_L) - 0.0335305244102216*alloc(1990,lent_H)
     
      - 0.0617853190838356*alloc(1990,lent_L) - 0.0524132751913394*alloc(1990,maiz_H) - 0.103783392307985*alloc(1990,maiz_L) - 0.0396927673832815*alloc(1990,mill_H) - 0.103783392307985*alloc(1990,mill_L) - 0.0924325555392263*alloc(1990,ofib_L)
     
      - 0.103783392307985*alloc(1990,ooil_L) - 0.0292202568291419*alloc(1990,opul_H) - 0.0617853190838356*alloc(1990,opul_L) - 0.0426926129552238*alloc(1990,pige_H) - 0.103783392307985*alloc(1990,pige_L) - 0.0940415926700665*alloc(1990,pota_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.06101837120702*alloc(1990,pota_L) - 0.0677929320494478*alloc(1990,rest_H) - 0.103783392307985*alloc(1990,rest_L) - 0.0440958638917873*alloc(1990,rice_H) - 0.103783392307985*alloc(1990,rice_L) - 0.104458298481749*alloc(1990,sorg_L)
     
      - 0.103783392307985*alloc(1990,soyb_L) - 0.103783392307985*alloc(1990,sunf_L) - 0.101100453342019*alloc(1990,temf_H) - 0.103783392307985*alloc(1990,temf_L) - 0.0741573571782409*alloc(1990,toba_H) - 0.109366771914987*alloc(1990,toba_L)
     
      - 0.000153389600505636*alloc(1990,trof_L) - 0.179809375160405*alloc(1990,vege_H) - 0.10320050443188*alloc(1990,vege_L) - 0.0556265253599984*alloc(1992,bean_H) - 0.137590444419645*alloc(1992,bean_L) - 0.12329453646391*alloc(1992,cass_L)
     
      - 0.0387057994313386*alloc(1992,chic_H) - 0.0819407083503346*alloc(1992,chic_L) - 0.00168728664554767*alloc(1992,coff_L) - 0.108937271273706*alloc(1992,cott_L) - 0.0453569921891905*alloc(1992,cowp_H) - 0.153819076004407*alloc(1992,cowp_L)
     
      - 0.0560613262927992*alloc(1992,grou_H) - 0.109734903619103*alloc(1992,grou_L) - 0.0383414826649486*alloc(1992,lent_H) - 0.0819407083503346*alloc(1992,lent_L) - 0.0646485084039771*alloc(1992,maiz_H) - 0.137590444419645*alloc(1992,maiz_L)
     
      - 0.0484844942188386*alloc(1992,mill_H) - 0.137590444419645*alloc(1992,mill_L) - 0.108937271273706*alloc(1992,ofib_L) - 0.137590444419645*alloc(1992,ooil_L) - 0.0334127780697148*alloc(1992,opul_H) - 0.0819407083503346*alloc(1992,opul_L)
     
      - 0.0526043056635901*alloc(1992,pige_H) - 0.137590444419645*alloc(1992,pige_L) - 0.0990786167781785*alloc(1992,pota_H) - 0.0750381716076461*alloc(1992,pota_L) - 0.0836183566344497*alloc(1992,rest_H) - 0.137590444419645*alloc(1992,rest_L)
     
      - 0.0526130290598808*alloc(1992,rice_H) - 0.137590444419645*alloc(1992,rice_L) - 0.144308927012971*alloc(1992,sorg_L) - 0.137590444419645*alloc(1992,soyb_L) - 0.137590444419645*alloc(1992,sunf_L) - 0.124701108329277*alloc(1992,temf_H)
     
      - 0.137590444419645*alloc(1992,temf_L) - 0.0885293859363512*alloc(1992,toba_H) - 0.142130786148766*alloc(1992,toba_L) - 0.00168728664554767*alloc(1992,trof_L) - 0.21808431748999*alloc(1992,vege_H) - 0.131976392046757*alloc(1992,vege_L)
     
      - 0.0644805471691677*alloc(1993,bean_H) - 0.148481113632584*alloc(1993,bean_L) - 0.111115412137911*alloc(1993,cass_L) - 0.0433330652661719*alloc(1993,chic_H) - 0.0881683272165628*alloc(1993,chic_L) - 0.00460168726089377*alloc(1993,coff_L)
     
      - 0.106483040408435*alloc(1993,cott_L) - 0.052063338576413*alloc(1993,cowp_H) - 0.171919038875638*alloc(1993,cowp_L) - 0.0638509099814155*alloc(1993,grou_H) - 0.108415752334765*alloc(1993,grou_L) - 0.042925194547895*alloc(1993,lent_H)
     
      - 0.0881683272165628*alloc(1993,lent_L) - 0.0756512686555064*alloc(1993,maiz_H) - 0.148481113632584*alloc(1993,maiz_L) - 0.0564125383430128*alloc(1993,mill_H) - 0.148481113632584*alloc(1993,mill_L) - 0.106483040408435*alloc(1993,ofib_L)
     
      - 0.148481113632584*alloc(1993,ooil_L) - 0.0374072649083894*alloc(1993,opul_H) - 0.0881683272165628*alloc(1993,opul_L) - 0.0608235708693105*alloc(1993,pige_H) - 0.148481113632584*alloc(1993,pige_L) - 0.106418813058536*alloc(1993,pota_H)
     
      - 0.0650371822945044*alloc(1993,pota_L) - 0.0978496630232468*alloc(1993,rest_H) - 0.148481113632584*alloc(1993,rest_L) - 0.0596910925396378*alloc(1993,rice_H) - 0.148481113632584*alloc(1993,rice_L) - 0.166918535442045*alloc(1993,sorg_L)
     
      - 0.148481113632584*alloc(1993,soyb_L) - 0.148481113632584*alloc(1993,sunf_L) - 0.145924434774387*alloc(1993,temf_H) - 0.148481113632584*alloc(1993,temf_L) - 0.100264158902594*alloc(1993,toba_H) - 0.141823999976422*alloc(1993,toba_L)
     
      - 0.00460168726089377*alloc(1993,trof_L) - 0.251913222480437*alloc(1993,vege_H) - 0.133142156096271*alloc(1993,vege_L) - 0.065305204247484*alloc(1994,bean_H) - 0.145842799361211*alloc(1994,bean_L) - 0.108599800632779*alloc(1994,cass_L)
     
      - 0.043951388059083*alloc(1994,chic_H) - 0.0865423897598805*alloc(1994,chic_L) - 0.00478575567291682*alloc(1994,coff_L) - 0.104274226778343*alloc(1994,cott_L) - 0.0527260758772007*alloc(1994,cowp_H) - 0.168237675023688*alloc(1994,cowp_L)
     
      - 0.0647174191764191*alloc(1994,grou_H) - 0.106114897001622*alloc(1994,grou_L) - 0.0435376974026107*alloc(1994,lent_H) - 0.0865423897598805*alloc(1994,lent_L) - 0.0766319095822443*alloc(1994,maiz_H) - 0.145842799361211*alloc(1994,maiz_L)
     
      - 0.0571708957448841*alloc(1994,mill_H) - 0.145842799361211*alloc(1994,mill_L) - 0.104274226778343*alloc(1994,ofib_L) - 0.145842799361211*alloc(1994,ooil_L) - 0.0379410320068222*alloc(1994,opul_H) - 0.0865423897598805*alloc(1994,opul_L)
     
      - 0.061588493048765*alloc(1994,pige_H) - 0.145842799361211*alloc(1994,pige_L) - 0.108020122777097*alloc(1994,pota_H) - 0.0639327696281106*alloc(1994,pota_L) - 0.0991180539694061*alloc(1994,rest_H) - 0.145842799361211*alloc(1994,rest_L)
     
      - 0.0604236956814978*alloc(1994,rice_H) - 0.145842799361211*alloc(1994,rice_L) - 0.164985811813019*alloc(1994,sorg_L) - 0.145842799361211*alloc(1994,soyb_L) - 0.145842799361211*alloc(1994,sunf_L) - 0.147816002166369*alloc(1994,temf_H)
     
      - 0.145842799361211*alloc(1994,temf_L) - 0.101445279684706*alloc(1994,toba_H) - 0.138725512297882*alloc(1994,toba_L) - 0.00478575640433531*alloc(1994,trof_L) - 0.25519670622284*alloc(1994,vege_H) - 0.129890269480211*alloc(1994,vege_L)
     
      - 0.063800517236445*alloc(1996,bean_H) - 0.11774184132549*alloc(1996,bean_L) - 0.064607687504571*alloc(1996,cass_L) - 0.0434433268361559*alloc(1996,chic_H) - 0.0695775123209294*alloc(1996,chic_L) - 0.00662642991899768*alloc(1996,coff_L)
     
      - 0.0693014164685159*alloc(1996,cott_L) - 0.0506994173243353*alloc(1996,cowp_H) - 0.129522161181486*alloc(1996,cowp_L) - 0.0637119189246747*alloc(1996,grou_H) - 0.0699149712591596*alloc(1996,grou_L) - 0.0430344182853262*alloc(1996,lent_H)
     
      - 0.0695775123209294*alloc(1996,lent_L) - 0.0741890690405637*alloc(1996,maiz_H) - 0.121147091770983*alloc(1996,maiz_L) - 0.0555594634985244*alloc(1996,mill_H) - 0.119459797079832*alloc(1996,mill_L) - 0.0693014164685159*alloc(1996,ofib_L)
     
      - 0.119459797079832*alloc(1996,ooil_L) - 0.0375024481993076*alloc(1996,opul_H) - 0.0695775123209294*alloc(1996,opul_L) - 0.0598649535783518*alloc(1996,pige_H) - 0.121147091770983*alloc(1996,pige_L) - 0.10778071395368*alloc(1996,pota_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0553429615996627*alloc(1996,pota_L) - 0.0959584093517929*alloc(1996,rest_H) - 0.121147091770983*alloc(1996,rest_L) - 0.0580544952097123*alloc(1996,rice_H) - 0.119459797079832*alloc(1996,rice_L) - 0.142498917852883*alloc(1996,sorg_L)
     
      - 0.121147091770983*alloc(1996,soyb_L) - 0.119459797079832*alloc(1996,sunf_L) - 0.143103984355908*alloc(1996,temf_H) - 0.121147091770983*alloc(1996,temf_L) - 0.0967645603917246*alloc(1996,toba_H) - 0.0864196928449868*alloc(1996,toba_L)
     
      - 0.00791490185468336*alloc(1996,trof_L) - 0.244394015037886*alloc(1996,vege_H) - 0.0811124149417461*alloc(1996,vege_L) - 0.0626668576383338*alloc(1997,bean_H) - 0.124859116686123*alloc(1997,bean_L) - 0.0735042875567107*alloc(1997,cass_L)
     
      - 0.0428111070928095*alloc(1997,chic_H) - 0.0745473312859398*alloc(1997,chic_L) - 0.00705591958900158*alloc(1997,coff_L) - 0.0882296903023795*alloc(1997,cott_L) - 0.0499637020306968*alloc(1997,cowp_H) - 0.140167389753854*alloc(1997,cowp_L)
     
      - 0.0622817483038492*alloc(1997,grou_H) - 0.0789036013116545*alloc(1997,grou_L) - 0.0424081492846573*alloc(1997,lent_H) - 0.0745473312859398*alloc(1997,lent_L) - 0.0732800357316858*alloc(1997,maiz_H) - 0.127712163724093*alloc(1997,maiz_L)
     
      - 0.0548053080770859*alloc(1997,mill_H) - 0.126270297970817*alloc(1997,mill_L) - 0.0882296903023795*alloc(1997,ofib_L) - 0.126270297970817*alloc(1997,ooil_L) - 0.0369566845595926*alloc(1997,opul_H) - 0.0745473312859398*alloc(1997,opul_L)
     
      - 0.0586630286551952*alloc(1997,pige_H) - 0.127712163724093*alloc(1997,pige_L) - 0.105296044364065*alloc(1997,pota_H) - 0.057674477995996*alloc(1997,pota_L) - 0.0947826378871312*alloc(1997,rest_H) - 0.127712163724093*alloc(1997,rest_L)
     
      - 0.0571935303608655*alloc(1997,rice_H) - 0.126270297970817*alloc(1997,rice_L) - 0.151640935140202*alloc(1997,sorg_L) - 0.127712163724093*alloc(1997,soyb_L) - 0.126270297970817*alloc(1997,sunf_L) - 0.141350541563122*alloc(1997,temf_H)
     
      - 0.127712163724093*alloc(1997,temf_L) - 0.0951377367264925*alloc(1997,toba_H) - 0.101513221443424*alloc(1997,toba_L) - 0.00812964705539456*alloc(1997,trof_L) - 0.24174776982232*alloc(1997,vege_H) - 0.093444932353917*alloc(1997,vege_L)
     
      - 0.0638632330814375*alloc(1998,bean_H) - 0.135872500367999*alloc(1998,bean_L) - 0.093935790229667*alloc(1998,cass_L) - 0.0442347510891506*alloc(1998,chic_H) - 0.0805908901514576*alloc(1998,chic_L) - 0.00518456709139559*alloc(1998,coff_L)
     
      - 0.103077801665638*alloc(1998,cott_L) - 0.0511072822843152*alloc(1998,cowp_H) - 0.153727046004052*alloc(1998,cowp_L) - 0.0633464575809017*alloc(1998,grou_H) - 0.0924018944760358*alloc(1998,grou_L) - 0.0438183932896572*alloc(1998,lent_H)
     
      - 0.0805908901514576*alloc(1998,lent_L) - 0.074292043523716*alloc(1998,maiz_H) - 0.137467753356099*alloc(1998,maiz_L) - 0.0555685585015011*alloc(1998,mill_H) - 0.136670121010702*alloc(1998,mill_L) - 0.103077801665638*alloc(1998,ofib_L)
     
      - 0.136670121010702*alloc(1998,ooil_L) - 0.0381856451184466*alloc(1998,opul_H) - 0.0805908901514576*alloc(1998,opul_L) - 0.0597132502926664*alloc(1998,pige_H) - 0.137467753356099*alloc(1998,pige_L) - 0.111105738594719*alloc(1998,pota_H)
     
      - 0.065804136022668*alloc(1998,pota_L) - 0.096091599695531*alloc(1998,rest_H) - 0.137467753356099*alloc(1998,rest_L) - 0.0589189628284469*alloc(1998,rice_H) - 0.136670121010702*alloc(1998,rice_L) - 0.155721091759459*alloc(1998,sorg_L)
     
      - 0.137467753356099*alloc(1998,soyb_L) - 0.136670121010702*alloc(1998,sunf_L) - 0.143302612792909*alloc(1998,temf_H) - 0.137467753356099*alloc(1998,temf_L) - 0.0982186235140646*alloc(1998,toba_H) - 0.116361344509379*alloc(1998,toba_L)
     
      - 0.00576744692189741*alloc(1998,trof_L) - 0.246886825693392*alloc(1998,vege_H) - 0.111790330014371*alloc(1998,vege_L) - 0.0632399318245244*alloc(1999,bean_H) - 0.156211984743297*alloc(1999,bean_L) - 0.13194571928087*alloc(1999,cass_L)
     
      - 0.0447092228784535*alloc(1999,chic_H) - 0.0931075202264703*alloc(1999,chic_L) - 0.00291440098105535*alloc(1999,coff_L) - 0.12989032799369*alloc(1999,cott_L) - 0.0512909359247267*alloc(1999,cowp_H) - 0.178361419765203*alloc(1999,cowp_L)
     
      - 0.0629329535384412*alloc(1999,grou_H) - 0.118232722606632*alloc(1999,grou_L) - 0.0442883991324983*alloc(1999,lent_H) - 0.0931075202264703*alloc(1999,lent_L) - 0.0734617379976161*alloc(1999,maiz_H) - 0.156211984743297*alloc(1999,maiz_L)
     
      - 0.0550318543957192*alloc(1999,mill_H) - 0.156211961337905*alloc(1999,mill_L) - 0.12989032799369*alloc(1999,ofib_L) - 0.156211973040601*alloc(1999,ooil_L) - 0.0385952328502396*alloc(1999,opul_H) - 0.0931075202264703*alloc(1999,opul_L)
     
      - 0.059151347579009*alloc(1999,pige_H) - 0.156211984743297*alloc(1999,pige_L) - 0.115267067232406*alloc(1999,pota_H) - 0.0814498680286284*alloc(1999,pota_L) - 0.0950176571512865*alloc(1999,rest_H) - 0.156211984743297*alloc(1999,rest_L)
     
      - 0.0596393562421572*alloc(1999,rice_H) - 0.156211961337905*alloc(1999,rice_L) - 0.167838917364468*alloc(1999,sorg_L) - 0.156211984743297*alloc(1999,soyb_L) - 0.156211973040601*alloc(1999,sunf_L) - 0.141701028751564*alloc(1999,temf_H)
     
      - 0.156211984743297*alloc(1999,temf_L) - 0.0994857441258341*alloc(1999,toba_H) - 0.149401472149615*alloc(1999,toba_L) - 0.00291440098105535*alloc(1999,trof_L) - 0.247239168513945*alloc(1999,vege_H) - 0.146487067877177*alloc(1999,vege_L)
     
      - 0.0714529642802191*alloc(2000,bean_H) - 0.270732600515917*alloc(2000,bean_L) - 0.161059054131282*alloc(2000,cass_L) - 0.0511874224598578*alloc(2000,chic_H) - 0.203762706295082*alloc(2000,chic_L) - 0.000674980367027854*alloc(2000,coff_L)
     
      - 0.212751336347577*alloc(2000,cott_L) - 0.0551182405832869*alloc(2000,cowp_H) - 0.241956724603735*alloc(2000,cowp_L) - 0.0681450253598035*alloc(2000,grou_H) - 0.209560806965985*alloc(2000,grou_L) - 0.0507056229232406*alloc(2000,lent_H)
     
      - 0.203762706295082*alloc(2000,lent_L) - 0.081842002776137*alloc(2000,maiz_H) - 0.270732577110525*alloc(2000,maiz_L) - 0.0616806627250817*alloc(2000,mill_H) - 0.218058625953513*alloc(2000,mill_L) - 0.212751336347577*alloc(2000,ofib_L)
     
      - 0.236219946059213*alloc(2000,ooil_L) - 0.0441875380883411*alloc(2000,opul_H) - 0.203762706295082*alloc(2000,opul_L) - 0.0656375714309654*alloc(2000,pige_H) - 0.270732600515917*alloc(2000,pige_L) - 0.129714596807347*alloc(2000,pota_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0971263079085629*alloc(2000,pota_L) - 0.105856947743463*alloc(2000,rest_H) - 0.270732577110525*alloc(2000,rest_L) - 0.0637922101497485*alloc(2000,rice_H) - 0.218948288299266*alloc(2000,rice_L) - 0.273462933084949*alloc(2000,sorg_L)
     
      - 0.270732600515917*alloc(2000,soyb_L) - 0.236219946059213*alloc(2000,sunf_L) - 0.157865799320502*alloc(2000,temf_H) - 0.270732577110525*alloc(2000,temf_L) - 0.107855443154463*alloc(2000,toba_H) - 0.217383708077053*alloc(2000,toba_L)
     
      - 0.000674913945086037*alloc(2000,trof_L) - 0.268500632270234*alloc(2000,vege_H) - 0.216708790200592*alloc(2000,vege_L) - 0.0746511549140688*alloc(2001,bean_H) - 0.292391154256681*alloc(2001,bean_L) - 0.162869051588675*alloc(2001,cass_L)
     
      - 0.0550869748040128*alloc(2001,chic_H) - 0.227875502603813*alloc(2001,chic_L) - 0.161273798600575*alloc(2001,coff_L) - 0.227875549414597*alloc(2001,cott_L) - 0.0554510237957978*alloc(2001,cowp_H) - 0.249380774434016*alloc(2001,cowp_L)
     
      - 0.0661471247350825*alloc(2001,grou_H) - 0.184865099375757*alloc(2001,grou_L) - 0.0545684708892078*alloc(2001,lent_H) - 0.227875502603813*alloc(2001,lent_L) - 0.0844399160955591*alloc(2001,maiz_H) - 0.249380727623233*alloc(2001,maiz_L)
     
      - 0.0639289560910793*alloc(2001,mill_H) - 0.227875549414597*alloc(2001,mill_L) - 0.227875549414597*alloc(2001,ofib_L) - 0.249380774434016*alloc(2001,ooil_L) - 0.0475538263180319*alloc(2001,opul_H) - 0.227875502603813*alloc(2001,opul_L)
     
      - 0.0676944780991765*alloc(2001,pige_H) - 0.292391201067464*alloc(2001,pige_L) - 0.143154196769548*alloc(2001,pota_H) - 0.163359874356337*alloc(2001,pota_L) - 0.109217168231326*alloc(2001,rest_H) - 0.249380727623233*alloc(2001,rest_L)
     
      - 0.0656866665460152*alloc(2001,rice_H) - 0.227875549414597*alloc(2001,rice_L) - 0.292391177662073*alloc(2001,sorg_L) - 0.292391201067464*alloc(2001,soyb_L) - 0.249380774434016*alloc(2001,sunf_L) - 0.162876938452297*alloc(2001,temf_H)
     
      - 0.249380727623233*alloc(2001,temf_L) - 0.111105388161638*alloc(2001,toba_H) - 0.227875549414597*alloc(2001,toba_L) - 1.33797763617707E-11*alloc(2001,trof_L) - 0.276719163803992*alloc(2001,vege_H) - 0.227875549414597*alloc(2001,vege_L)
     
      - 0.0486613067324598*alloc(2002,bean_H) - 0.156426694104502*alloc(2002,bean_L) - 0.158482108797073*alloc(2002,cass_L) - 0.0306012122618463*alloc(2002,chic_H) - 0.0970035700342337*alloc(2002,chic_L) - 0.156426694104502*alloc(2002,coff_L)
     
      - 0.222169455338657*alloc(2002,cott_L) - 0.0547934777903169*alloc(2002,cowp_H) - 0.222169455338657*alloc(2002,cowp_L) - 0.061510758354348*alloc(2002,grou_H) - 0.159586515612119*alloc(2002,grou_L) - 0.030313179593289*alloc(2002,lent_H)
     
      - 0.0970035700342337*alloc(2002,lent_L) - 0.0515193720380923*alloc(2002,maiz_H) - 0.156426705807197*alloc(2002,maiz_L) - 0.0644376883752834*alloc(2002,mill_H) - 0.222169455338657*alloc(2002,mill_L) - 0.222169455338657*alloc(2002,ofib_L)
     
      - 0.243030446950199*alloc(2002,ooil_L) - 0.0264164938844139*alloc(2002,opul_H) - 0.0970035700342337*alloc(2002,opul_L) - 0.067147304712604*alloc(2002,pige_H) - 0.284721698893916*alloc(2002,pige_L) - 0.153165059970688*alloc(2002,pota_H)
     
      - 0.0970035934396254*alloc(2002,pota_L) - 0.0666367303905046*alloc(2002,rest_H) - 0.156426705807197*alloc(2002,rest_L) - 0.0666463579911557*alloc(2002,rice_H) - 0.222169455338657*alloc(2002,rice_L) - 0.222169455338657*alloc(2002,sorg_L)
     
      - 0.284721722299308*alloc(2002,soyb_L) - 0.243030446950199*alloc(2002,sunf_L) - 0.0993761952469616*alloc(2002,temf_H) - 0.156426705807197*alloc(2002,temf_L) - 0.112370317034479*alloc(2002,toba_H) - 0.222169455338657*alloc(2002,toba_L)
     
      - 0.279981157355377*alloc(2002,vege_H) - 0.222169455338657*alloc(2002,vege_L) - 0.0476002782280922*alloc(2003,bean_H) - 0.143051121260406*alloc(2003,bean_L) - 0.147438064052007*alloc(2003,cass_L) - 0.0294361371005697*alloc(2003,chic_H)
     
      - 0.0915122262789347*alloc(2003,chic_L) - 0.143051121260406*alloc(2003,coff_L) - 0.205940835456591*alloc(2003,cott_L) - 0.0520563639287914*alloc(2003,cowp_H) - 0.205940835456591*alloc(2003,cowp_L) - 0.0563258744773048*alloc(2003,grou_H)
     
      - 0.148726507462371*alloc(2003,grou_L) - 0.029159070654687*alloc(2003,lent_H) - 0.0915122262789347*alloc(2003,lent_L) - 0.0505363464913815*alloc(2003,maiz_H) - 0.162102127117251*alloc(2003,maiz_L) - 0.0615829648168403*alloc(2003,mill_H)
     
      - 0.205940835456591*alloc(2003,mill_L) - 0.205940835456591*alloc(2003,ofib_L) - 0.225022502376627*alloc(2003,ooil_L) - 0.0254107428504551*alloc(2003,opul_H) - 0.0915122262789347*alloc(2003,opul_L) - 0.0635166901644904*alloc(2003,pige_H)
     
      - 0.225022502376627*alloc(2003,pige_L) - 0.149002683870898*alloc(2003,pota_H) - 0.148726530867763*alloc(2003,pota_L) - 0.0653652551039908*alloc(2003,rest_H) - 0.162102127117251*alloc(2003,rest_L) - 0.0639153984557173*alloc(2003,rice_H)
     
      - 0.205940835456591*alloc(2003,rice_L) - 0.205940835456591*alloc(2003,sorg_L) - 0.263155151748115*alloc(2003,soyb_L) - 0.225022502376627*alloc(2003,sunf_L) - 0.0974800281393646*alloc(2003,temf_H) - 0.162102127117251*alloc(2003,temf_L)
     
      - 0.107560551990426*alloc(2003,toba_H) - 0.205940835456591*alloc(2003,toba_L) - 0.267964826603754*alloc(2003,vege_H) - 0.205940835456591*alloc(2003,vege_L) - 0.0508530271151528*alloc(2004,bean_H) - 0.150137688747065*alloc(2004,bean_L)
     
      - 0.153174807488441*alloc(2004,cass_L) - 0.0318470541238402*alloc(2004,chic_H) - 0.0949174474676878*alloc(2004,chic_L) - 0.150137688747065*alloc(2004,coff_L) - 0.215727074449092*alloc(2004,cott_L) - 0.0519366072272527*alloc(2004,cowp_H)
     
      - 0.215727074449092*alloc(2004,cowp_L) - 0.0466660501435512*alloc(2004,grou_H) - 0.0949174767244274*alloc(2004,grou_L) - 0.0315472950193157*alloc(2004,lent_H) - 0.0949174474676878*alloc(2004,lent_L) - 0.0548040456499556*alloc(2004,maiz_H)
     
      - 0.210695898249613*alloc(2004,maiz_L) - 0.0623916743911333*alloc(2004,mill_H) - 0.215727074449092*alloc(2004,mill_L) - 0.215727074449092*alloc(2004,ofib_L) - 0.229071962824606*alloc(2004,ooil_L) - 0.0274919667659031*alloc(2004,opul_H)
     
      - 0.0949174474676878*alloc(2004,opul_L) - 0.0626779661319955*alloc(2004,pige_H) - 0.215727097854484*alloc(2004,pige_L) - 0.156031907129494*alloc(2004,pota_H) - 0.15516887664924*alloc(2004,pota_L) - 0.0708852276301973*alloc(2004,rest_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.210695898249613*alloc(2004,rest_L) - 0.0652059563323269*alloc(2004,rice_H) - 0.215727074449092*alloc(2004,rice_L) - 0.229071962824606*alloc(2004,sorg_L) - 0.276285272248945*alloc(2004,soyb_L) - 0.229071962824606*alloc(2004,sunf_L)
     
      - 0.105712032685619*alloc(2004,temf_H) - 0.210695898249613*alloc(2004,temf_L) - 0.110141454481429*alloc(2004,toba_H) - 0.215727074449092*alloc(2004,toba_L) - 0.270785780903325*alloc(2004,vege_H) - 0.215727074449092*alloc(2004,vege_L)
     
      - 0.0377185903375322*alloc(2005,bean_H) - 0.0992737584528379*alloc(2005,bean_L) - 0.109550820213001*alloc(2005,cass_L) - 0.0217564743350146*alloc(2005,chic_H) - 0.043593334989271*alloc(2005,chic_L) - 0.0992737233447503*alloc(2005,coff_L)
     
      - 0.153972439833839*alloc(2005,cott_L) - 0.0425254736221441*alloc(2005,cowp_H) - 0.153972439833839*alloc(2005,cowp_L) - 0.0466025148999642*alloc(2005,grou_H) - 0.109550831915697*alloc(2005,grou_L) - 0.0215516924032568*alloc(2005,lent_H)
     
      - 0.043593334989271*alloc(2005,lent_L) - 0.0402823476867747*alloc(2005,maiz_H) - 0.14372602743417*alloc(2005,maiz_L) - 0.0506815356569373*alloc(2005,mill_H) - 0.153972439833839*alloc(2005,mill_L) - 0.153972439833839*alloc(2005,ofib_L)
     
      - 0.153972439833839*alloc(2005,ooil_L) - 0.018781274620741*alloc(2005,opul_H) - 0.043593334989271*alloc(2005,opul_L) - 0.0530411254962516*alloc(2005,pige_H) - 0.198394047751981*alloc(2005,pige_L) - 0.118003039085144*alloc(2005,pota_H)
     
      - 0.109550808510305*alloc(2005,pota_L) - 0.0521024196551827*alloc(2005,rest_H) - 0.14372602743417*alloc(2005,rest_L) - 0.0520091951001968*alloc(2005,rice_H) - 0.153972439833839*alloc(2005,rice_L) - 0.153972451536535*alloc(2005,sorg_L)
     
      - 0.198394047751981*alloc(2005,soyb_L) - 0.153972439833839*alloc(2005,sunf_L) - 0.0777009946038764*alloc(2005,temf_H) - 0.14372602743417*alloc(2005,temf_L) - 0.0904712210808325*alloc(2005,toba_H) - 0.153972439833839*alloc(2005,toba_L)
     
      - 0.214555056411035*alloc(2005,vege_H) - 0.153972439833839*alloc(2005,vege_L) - 0.0538653306578867*alloc(2006,bean_H) - 0.155168900054632*alloc(2006,bean_L) - 0.0849778504971025*alloc(2006,cass_L) - 0.037244594453991*alloc(2006,chic_H)
     
      - 0.0849778329430586*alloc(2006,chic_L) - 0.083137115908996*alloc(2006,coff_L) - 0.120073369424519*alloc(2006,cott_L) - 0.0409506855285949*alloc(2006,cowp_H) - 0.120073369424519*alloc(2006,cowp_L) - 0.050582966321927*alloc(2006,grou_H)
     
      - 0.120073369424519*alloc(2006,grou_L) - 0.0368940312201517*alloc(2006,lent_H) - 0.0849778329430586*alloc(2006,lent_L) - 0.0617267477786028*alloc(2006,maiz_H) - 0.155168900054632*alloc(2006,maiz_L) - 0.0463698679215703*alloc(2006,mill_H)
     
      - 0.120073381127215*alloc(2006,mill_L) - 0.120073369424519*alloc(2006,ofib_L) - 0.120073369424519*alloc(2006,ooil_L) - 0.0321513929971992*alloc(2006,opul_H) - 0.0849778329430586*alloc(2006,opul_L) - 0.0496355115172376*alloc(2006,pige_H)
     
      - 0.155168900054632*alloc(2006,pige_L) - 0.0901582007983565*alloc(2006,pota_H) - 0.0510480663624606*alloc(2006,pota_L) - 0.0798392621432609*alloc(2006,rest_H) - 0.155168900054632*alloc(2006,rest_L) - 0.0469277437193472*alloc(2006,rice_H)
     
      - 0.120073369424519*alloc(2006,rice_L) - 0.155138215586049*alloc(2006,sorg_L) - 0.155168900054632*alloc(2006,soyb_L) - 0.120073369424519*alloc(2006,sunf_L) - 0.11906529712107*alloc(2006,temf_H) - 0.155168900054632*alloc(2006,temf_L)
     
      - 0.082059110495576*alloc(2006,toba_H) - 0.120073369424519*alloc(2006,toba_L) - 0.195964495764916*alloc(2006,vege_H) - 0.120073369424519*alloc(2006,vege_L) - 0.059596366964944*alloc(2007,bean_H) - 0.162930397120447*alloc(2007,bean_L)
     
      - 0.137252985481415*alloc(2007,cass_L) - 0.0382724716451135*alloc(2007,chic_H) - 0.0936903554404441*alloc(2007,chic_L) - 3.82876280706315E-9*alloc(2007,coff_L) - 0.140290092520095*alloc(2007,cott_L) - 0.0477638438187186*alloc(2007,cowp_H)
     
      - 0.16185668647668*alloc(2007,cowp_L) - 0.059278881128878*alloc(2007,grou_H) - 0.141210427631735*alloc(2007,grou_L) - 0.037912233558926*alloc(2007,lent_H) - 0.0936903554404441*alloc(2007,lent_L) - 0.0707089919025118*alloc(2007,maiz_H)
     
      - 0.162930408823143*alloc(2007,maiz_L) - 0.0530075349689774*alloc(2007,mill_H) - 0.162930397120447*alloc(2007,mill_L) - 0.140290092520095*alloc(2007,ofib_L) - 0.141210439334431*alloc(2007,ooil_L) - 0.0330387078950821*alloc(2007,opul_H)
     
      - 0.0936903554404441*alloc(2007,opul_L) - 0.0569279873781554*alloc(2007,pige_H) - 0.162930408823143*alloc(2007,pige_L) - 0.0929013118781944*alloc(2007,pota_H) - 0.0936903437377482*alloc(2007,pota_L) - 0.0914571712191724*alloc(2007,rest_H)
     
      - 0.162930408823143*alloc(2007,rest_L) - 0.0546849776219366*alloc(2007,rice_H) - 0.141210439334431*alloc(2007,rice_L) - 0.162930408823143*alloc(2007,sorg_L) - 0.162930397120447*alloc(2007,soyb_L) - 0.141210439334431*alloc(2007,sunf_L)
     
      - 0.136391231240637*alloc(2007,temf_H) - 0.162930408823143*alloc(2007,temf_L) - 0.0930515106094918*alloc(2007,toba_H) - 0.141210427631735*alloc(2007,toba_L) - 5.10501719234004E-9*alloc(2007,trof_L) - 0.221856588007681*alloc(2007,vege_H)
     
      - 0.141210427631735*alloc(2007,vege_L) - 0.0656369369663466*alloc(2008,bean_H) - 0.137866546123407*alloc(2008,bean_L) - 0.0973409938643763*alloc(2008,cass_L) - 0.0385371212189183*alloc(2008,chic_H) - 0.086082192947321*alloc(2008,chic_L)
     
      - 0.00929541476200162*alloc(2008,coff_L) - 0.109336064041013*alloc(2008,cott_L) - 0.0542411356299957*alloc(2008,cowp_H) - 0.180570198287207*alloc(2008,cowp_L) - 0.0685172672955955*alloc(2008,grou_H) - 0.117158930043993*alloc(2008,grou_L)
     
      - 0.0381743921293574*alloc(2008,lent_H) - 0.086082192947321*alloc(2008,lent_L) - 0.0813127310163104*alloc(2008,maiz_H) - 0.150291111089977*alloc(2008,maiz_L) - 0.0496923908651218*alloc(2008,mill_H) - 0.146149585533555*alloc(2008,mill_L)
     
      - 0.109336064041013*alloc(2008,ofib_L) - 0.142008071679829*alloc(2008,ooil_L) - 0.0332671666171781*alloc(2008,opul_H) - 0.086082192947321*alloc(2008,opul_L) - 0.063837494803436*alloc(2008,pige_H) - 0.150291111089977*alloc(2008,pige_L)
     
      - 0.0931457953171857*alloc(2008,pota_H) - 0.0654052905932293*alloc(2008,pota_L) - 0.105172371473069*alloc(2008,rest_H) - 0.150291111089977*alloc(2008,rest_L) - 0.0610648889667795*alloc(2008,rice_H) - 0.142008071679829*alloc(2008,rice_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.150291111089977*alloc(2008,sorg_L) - 0.142008071679829*alloc(2008,soyb_L) - 0.142008071679829*alloc(2008,sunf_L) - 0.156844882106986*alloc(2008,temf_H) - 0.150291111089977*alloc(2008,temf_L) - 0.1001980456933*alloc(2008,toba_H)
     
      - 0.125441981156837*alloc(2008,toba_L) - 0.0123938863493355*alloc(2008,trof_L) - 0.255144400096661*alloc(2008,vege_H) - 0.121300467303111*alloc(2008,vege_L) - 0.0716298614649134*alloc(2009,bean_H) - 0.123724025402495*alloc(2009,bean_L)
     
      - 0.0168728532899438*alloc(2009,cass_L) - 0.0253092770092417*alloc(2009,coff_L) - 0.0590549806634554*alloc(2009,cott_L) - 0.0581319645427259*alloc(2009,cowp_H) - 0.157469731982383*alloc(2009,cowp_L) - 0.0750740718775553*alloc(2009,grou_H)
     
      - 0.0674914073084273*alloc(2009,grou_L) - 0.0898343999898823*alloc(2009,maiz_H) - 0.157469731982383*alloc(2009,maiz_L) - 0.0540247263997193*alloc(2009,mill_H) - 0.146241603831214*alloc(2009,mill_L) - 0.0590549806634554*alloc(2009,ofib_L)
     
      - 0.134982814616855*alloc(2009,ooil_L) - 0.0692091092235017*alloc(2009,pige_H) - 0.157469731982383*alloc(2009,pige_L) - 0.116194558572888*alloc(2009,rest_H) - 0.157469731982383*alloc(2009,rest_L) - 0.0633888642517317*alloc(2009,rice_H)
     
      - 0.134982814616855*alloc(2009,rice_L) - 0.157469731982383*alloc(2009,sorg_L) - 0.134982814616855*alloc(2009,soyb_L) - 0.134982814616855*alloc(2009,sunf_L) - 0.17328240854115*alloc(2009,temf_H) - 0.157469731982383*alloc(2009,temf_L)
     
      - 0.101334918688115*alloc(2009,toba_H) - 0.0899783188226076*alloc(2009,toba_L) - 0.0337457036542136*alloc(2009,trof_L) - 0.287863361548944*alloc(2009,vege_H) - 0.0787501965227867*alloc(2009,vege_L) - 0.0635480464747806*alloc(2010,bean_H)
     
      - 0.101451840803564*alloc(2010,bean_L) - 0.0138357374742417*alloc(2010,cass_L) - 0.0207689455199797*alloc(2010,coff_L) - 0.0484404190056262*alloc(2010,cott_L) - 0.0516019746640644*alloc(2010,cowp_H) - 0.129123321603395*alloc(2010,cowp_L)
     
      - 0.0666323587137708*alloc(2010,grou_H) - 0.0553429498969668*alloc(2010,grou_L) - 0.079912601023752*alloc(2010,maiz_H) - 0.129123321603395*alloc(2010,maiz_L) - 0.0480860414278855*alloc(2010,mill_H) - 0.119919947081608*alloc(2010,mill_L)
     
      - 0.0484404190056262*alloc(2010,ofib_L) - 0.110685899793934*alloc(2010,ooil_L) - 0.0613624482295699*alloc(2010,pige_H) - 0.129123321603395*alloc(2010,pige_L) - 0.103361400548253*alloc(2010,rest_H) - 0.129123321603395*alloc(2010,rest_L)
     
      - 0.0563689869562868*alloc(2010,rice_H) - 0.110685899793934*alloc(2010,rice_L) - 0.129123321603395*alloc(2010,sorg_L) - 0.110685899793934*alloc(2010,soyb_L) - 0.110685899793934*alloc(2010,sunf_L) - 0.15414415835964*alloc(2010,temf_H)
     
      - 0.129123321603395*alloc(2010,temf_L) - 0.0894728099466486*alloc(2010,toba_H) - 0.0737803717064283*alloc(2010,toba_L) - 0.0276714749484834*alloc(2010,trof_L) - 0.240522381143134*alloc(2010,vege_H) - 0.0484404190056262*alloc(2010,vege_L)
     
      - 0.0496313356243396*alloc(2011,bean_H) - 0.0643315858008096*alloc(2011,bean_L) - 0.00877388338894664*alloc(2011,cass_L) - 0.0131608254491292*alloc(2011,coff_L) - 0.0307085936898595*alloc(2011,cott_L) - 0.0403025926004209*alloc(2011,cowp_H)
     
      - 0.0818793511158659*alloc(2011,cowp_L) - 0.0520423925807086*alloc(2011,grou_H) - 0.0350955335557866*alloc(2011,grou_L) - 0.062490701024508*alloc(2011,maiz_H) - 0.0818793511158659*alloc(2011,maiz_L) - 0.0376070551193764*alloc(2011,mill_H)
     
      - 0.0760505484223367*alloc(2011,mill_L) - 0.0307085936898595*alloc(2011,ofib_L) - 0.0701910671115731*alloc(2011,ooil_L) - 0.0479149427258933*alloc(2011,pige_H) - 0.0760505484223367*alloc(2011,pige_L) - 0.0808273826203641*alloc(2011,rest_H)
     
      - 0.0818793511158659*alloc(2011,rest_L) - 0.0440778687607335*alloc(2011,rice_H) - 0.0701910671115731*alloc(2011,rice_L) - 0.0818793511158659*alloc(2011,sorg_L) - 0.0701910671115731*alloc(2011,soyb_L) - 0.0701910671115731*alloc(2011,sunf_L)
     
      - 0.120538893632854*alloc(2011,temf_H) - 0.0818793511158659*alloc(2011,temf_L) - 0.0693820062721601*alloc(2011,toba_H) - 0.0467838175600793*alloc(2011,toba_L) - 0.0175477667778933*alloc(2011,trof_L) - 0.186594858030202*alloc(2011,vege_H)
     
      - 0.0307085936898595*alloc(2011,vege_L) - 0.0645633909419515*alloc(2032,bean_H) - 0.153144146425251*alloc(2032,bean_L) - 0.129000618837153*alloc(2032,cass_L) - 0.0447374866292888*alloc(2032,chic_H) - 0.0912667973410597*alloc(2032,chic_L)
     
      - 0.00279169108348341*alloc(2032,coff_L) - 0.114704722584114*alloc(2032,cott_L) - 0.0523731208561829*alloc(2032,cowp_H) - 0.175324289321131*alloc(2032,cowp_L) - 0.0641910314146564*alloc(2032,grou_H) - 0.116023873868452*alloc(2032,grou_L)
     
      - 0.0443163968519258*alloc(2032,lent_H) - 0.0912667973410597*alloc(2032,lent_L) - 0.0750653875164728*alloc(2032,maiz_H) - 0.153144146425251*alloc(2032,maiz_L) - 0.0561770696063824*alloc(2032,mill_H) - 0.153144146425251*alloc(2032,mill_L)
     
      - 0.114704722584114*alloc(2032,ofib_L) - 0.153144146425251*alloc(2032,ooil_L) - 0.0386196315307462*alloc(2032,opul_H) - 0.0912667973410597*alloc(2032,opul_L) - 0.0608641156885441*alloc(2032,pige_H) - 0.153144146425251*alloc(2032,pige_L)
     
      - 0.112936814945445*alloc(2032,pota_H) - 0.0794251143992471*alloc(2032,pota_L) - 0.0970918664516232*alloc(2032,rest_H) - 0.153144146425251*alloc(2032,rest_L) - 0.060538543598095*alloc(2032,rice_H) - 0.153144146425251*alloc(2032,rice_L)
     
      - 0.164280232873368*alloc(2032,sorg_L) - 0.153144146425251*alloc(2032,soyb_L) - 0.153144146425251*alloc(2032,sunf_L) - 0.144794323203518*alloc(2032,temf_H) - 0.153144146425251*alloc(2032,temf_L) - 0.101605970509696*alloc(2032,toba_H)
     
      - 0.155383644523925*alloc(2032,toba_L) - 0.00279169108348341*alloc(2032,trof_L) - 0.25223569872699*alloc(2032,vege_H) - 0.143848741903108*alloc(2032,vege_L) - 0.0667470823311756*alloc(2033,bean_H) - 0.148603816398825*alloc(2033,bean_L)
     
      - 0.113140154064596*alloc(2033,cass_L) - 0.0457396418704477*alloc(2033,chic_H) - 0.0882603630682659*alloc(2033,chic_L) - 0.00441761994599845*alloc(2033,coff_L) - 0.107035243815958*alloc(2033,cott_L) - 0.053779632181961*alloc(2033,cowp_H)
     
      - 0.171520222702939*alloc(2033,cowp_L) - 0.0658647628546007*alloc(2033,grou_H) - 0.10884524127335*alloc(2033,grou_L) - 0.0453091193475467*alloc(2033,lent_H) - 0.0882603630682659*alloc(2033,lent_L) - 0.0779413748166853*alloc(2033,maiz_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.148603816398825*alloc(2033,maiz_L) - 0.0581961219025856*alloc(2033,mill_H) - 0.148603816398825*alloc(2033,mill_L) - 0.107035243815958*alloc(2033,ofib_L) - 0.148603816398825*alloc(2033,ooil_L) - 0.0394847419575091*alloc(2033,opul_H)
     
      - 0.0882603630682659*alloc(2033,opul_L) - 0.0627848239758156*alloc(2033,pige_H) - 0.148603816398825*alloc(2033,pige_L) - 0.113089987575376*alloc(2033,pota_H) - 0.0716329328648492*alloc(2033,pota_L) - 0.100811756325069*alloc(2033,rest_H)
     
      - 0.148603816398825*alloc(2033,rest_L) - 0.06185473043687*alloc(2033,rice_H) - 0.148603816398825*alloc(2033,rice_L) - 0.166304974800054*alloc(2033,sorg_L) - 0.148603816398825*alloc(2033,soyb_L) - 0.148603816398825*alloc(2033,sunf_L)
     
      - 0.150341841819669*alloc(2033,temf_H) - 0.148603816398825*alloc(2033,temf_L) - 0.10372907011472*alloc(2033,toba_H) - 0.143112478494874*alloc(2033,toba_L) - 0.00441761994599845*alloc(2033,trof_L) - 0.260270863525187*alloc(2033,vege_H)
     
      - 0.133817062270036*alloc(2033,vege_L) - 0.0656067549104401*alloc(2034,bean_H) - 0.151272803436085*alloc(2034,bean_L) - 0.118754206437485*alloc(2034,cass_L) - 0.0449458810562665*alloc(2034,chic_H) - 0.0899783246739555*alloc(2034,chic_L)
     
      - 0.0040188070646827*alloc(2034,coff_L) - 0.109704219150521*alloc(2034,cott_L) - 0.0529610721094077*alloc(2034,cowp_H) - 0.174403942506795*alloc(2034,cowp_L) - 0.0648828384176603*alloc(2034,grou_H) - 0.111391513841672*alloc(2034,grou_L)
     
      - 0.0445228297748166*alloc(2034,lent_H) - 0.0899783246739555*alloc(2034,lent_L) - 0.0766827580103277*alloc(2034,maiz_H) - 0.151272803436085*alloc(2034,maiz_L) - 0.0572393007001941*alloc(2034,mill_H) - 0.151272803436085*alloc(2034,mill_L)
     
      - 0.109704219150521*alloc(2034,ofib_L) - 0.151272803436085*alloc(2034,ooil_L) - 0.0387995280021244*alloc(2034,opul_H) - 0.0899783246739555*alloc(2034,opul_L) - 0.0617330774801754*alloc(2034,pige_H) - 0.151272803436085*alloc(2034,pige_L)
     
      - 0.111683096146467*alloc(2034,pota_H) - 0.0746086885204086*alloc(2034,pota_L) - 0.0991838228803793*alloc(2034,rest_H) - 0.151272803436085*alloc(2034,rest_L) - 0.0610419363655917*alloc(2034,rice_H) - 0.151272803436085*alloc(2034,rice_L)
     
      - 0.167317351614744*alloc(2034,sorg_L) - 0.151272803436085*alloc(2034,soyb_L) - 0.151272803436085*alloc(2034,sunf_L) - 0.14791408417159*alloc(2034,temf_H) - 0.151272803436085*alloc(2034,temf_L) - 0.102361496350313*alloc(2034,toba_H)
     
      - 0.148235684694709*alloc(2034,toba_L) - 0.0040188070646827*alloc(2034,trof_L) - 0.256168060734855*alloc(2034,vege_H) - 0.137897230591989*alloc(2034,vege_L) - 0.0636938883294031*alloc(2035,bean_H) - 0.150812630028917*alloc(2035,bean_L)
     
      - 0.117373697918677*alloc(2035,cass_L) - 0.0432777289131432*alloc(2035,chic_H) - 0.0896715443529597*alloc(2035,chic_L) - 0.00411084072213035*alloc(2035,coff_L) - 0.109121342977112*alloc(2035,cott_L) - 0.0514606247876721*alloc(2035,cowp_H)
     
      - 0.174097168037147*alloc(2035,cowp_L) - 0.0631028135224451*alloc(2035,grou_H) - 0.110869983200036*alloc(2035,grou_L) - 0.0428703790460436*alloc(2035,lent_H) - 0.0896715443529597*alloc(2035,lent_L) - 0.0746121182307191*alloc(2035,maiz_H)
     
      - 0.150812630028917*alloc(2035,maiz_L) - 0.0556472101815296*alloc(2035,mill_H) - 0.150812630028917*alloc(2035,mill_L) - 0.109121342977112*alloc(2035,ofib_L) - 0.150812630028917*alloc(2035,ooil_L) - 0.0373594958063401*alloc(2035,opul_H)
     
      - 0.0896715443529597*alloc(2035,opul_L) - 0.0600798177523564*alloc(2035,pige_H) - 0.150812630028917*alloc(2035,pige_L) - 0.108118598841372*alloc(2035,pota_H) - 0.0738417406435929*alloc(2035,pota_L) - 0.0965055941040734*alloc(2035,rest_H)
     
      - 0.150812630028917*alloc(2035,rest_L) - 0.0592801512602339*alloc(2035,rice_H) - 0.150812630028917*alloc(2035,rice_L) - 0.167255994380276*alloc(2035,sorg_L) - 0.150812630028917*alloc(2035,soyb_L) - 0.150812630028917*alloc(2035,sunf_L)
     
      - 0.143920007868168*alloc(2035,temf_H) - 0.150812630028917*alloc(2035,temf_L) - 0.0993265641425609*alloc(2035,toba_H) - 0.147131277879663*alloc(2035,toba_L) - 0.00411084072213035*alloc(2035,trof_L) - 0.248838786840551*alloc(2035,vege_H)
     
      - 0.137130282715173*alloc(2035,vege_L) - 0.0631202585539244*alloc(2036,bean_H) - 0.152438555782904*alloc(2036,bean_L) - 0.121361836240275*alloc(2036,cass_L) - 0.043253922992127*alloc(2036,chic_H) - 0.0907145939335368*alloc(2036,chic_L)
     
      - 0.00377338397815561*alloc(2036,coff_L) - 0.127405377551749*alloc(2036,cott_L) - 0.0510638295234027*alloc(2036,cowp_H) - 0.175723093791134*alloc(2036,cowp_L) - 0.0626016444091193*alloc(2036,grou_H) - 0.112679980657428*alloc(2036,grou_L)
     
      - 0.0428467971972928*alloc(2036,lent_H) - 0.0907145939335368*alloc(2036,lent_L) - 0.0738805174417609*alloc(2036,maiz_H) - 0.152438555782904*alloc(2036,maiz_L) - 0.0551237023774504*alloc(2036,mill_H) - 0.152438555782904*alloc(2036,mill_L)
     
      - 0.127405377551749*alloc(2036,ofib_L) - 0.152438555782904*alloc(2036,ooil_L) - 0.037338945347046*alloc(2036,opul_H) - 0.0907145939335368*alloc(2036,opul_L) - 0.0593618839885671*alloc(2036,pige_H) - 0.152438555782904*alloc(2036,pige_L)
     
      - 0.108178659089569*alloc(2036,pota_H) - 0.0758971611875127*alloc(2036,pota_L) - 0.0955593192835798*alloc(2036,rest_H) - 0.152438555782904*alloc(2036,rest_L) - 0.0589649566087044*alloc(2036,rice_H) - 0.152438555782904*alloc(2036,rice_L)
     
      - 0.167532096084037*alloc(2036,sorg_L) - 0.152438555782904*alloc(2036,soyb_L) - 0.152438555782904*alloc(2036,sunf_L) - 0.142508816311086*alloc(2036,temf_H) - 0.152438555782904*alloc(2036,temf_L) - 0.0987174201018322*alloc(2036,toba_H)
     
      - 0.150536528325156*alloc(2036,toba_L) - 0.00377338397815561*alloc(2036,trof_L) - 0.246702305195857*alloc(2036,vege_H) - 0.139860615284206*alloc(2036,vege_L) - 0.0655687736877559*alloc(2037,bean_H) - 0.151640946842897*alloc(2037,bean_L)
     
      - 0.119858624955226*alloc(2037,cass_L) - 0.0460237405579354*alloc(2037,chic_H) - 0.0901930808459441*alloc(2037,chic_L) - 0.00392677267581655*alloc(2037,coff_L) - 0.126454381376919*alloc(2037,cott_L) - 0.0529118218370528*alloc(2037,cowp_H)
     
      - 0.174710740381835*alloc(2037,cowp_L) - 0.064780257732835*alloc(2037,grou_H) - 0.111728972779902*alloc(2037,grou_L) - 0.0455905439676677*alloc(2037,lent_H) - 0.0901930808459441*alloc(2037,lent_L) - 0.076231154733216*alloc(2037,maiz_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.151640946842897*alloc(2037,maiz_L) - 0.0570662465094575*alloc(2037,mill_H) - 0.151640946842897*alloc(2037,mill_L) - 0.126454381376919*alloc(2037,ofib_L) - 0.151640946842897*alloc(2037,ooil_L) - 0.0397299901253389*alloc(2037,opul_H)
     
      - 0.0901930808459441*alloc(2037,opul_L) - 0.0612419559951013*alloc(2037,pige_H) - 0.151640946842897*alloc(2037,pige_L) - 0.116839915234839*alloc(2037,pota_H) - 0.0752222550137482*alloc(2037,pota_L) - 0.0985997053993257*alloc(2037,rest_H)
     
      - 0.151640946842897*alloc(2037,rest_L) - 0.0611928306565179*alloc(2037,rice_H) - 0.151640946842897*alloc(2037,rice_L) - 0.167409393317795*alloc(2037,sorg_L) - 0.151640946842897*alloc(2037,soyb_L) - 0.151640946842897*alloc(2037,sunf_L)
     
      - 0.147042982415784*alloc(2037,temf_H) - 0.151640946842897*alloc(2037,temf_L) - 0.102050027681996*alloc(2037,toba_H) - 0.14243757232111*alloc(2037,toba_L) - 0.00392677267581655*alloc(2037,trof_L) - 0.25533746765147*alloc(2037,vege_H)
     
      - 0.138510802936677*alloc(2037,vege_L) - 0.0670954552411036*alloc(2038,bean_H) - 0.185632105766052*alloc(2038,bean_L) - 0.137927915060571*alloc(2038,cass_L) - 0.0476515611782678*alloc(2038,chic_H) - 0.112710711936794*alloc(2038,chic_L)
     
      - 0.0024849102139237*alloc(2038,coff_L) - 0.150781992371118*alloc(2038,cott_L) - 0.0536359551029241*alloc(2038,cowp_H) - 0.194682069647624*alloc(2038,cowp_L) - 0.0659591411772843*alloc(2038,grou_H) - 0.141026414441808*alloc(2038,grou_L)
     
      - 0.0472030427924714*alloc(2038,lent_H) - 0.112710711936794*alloc(2038,lent_L) - 0.0775345664785938*alloc(2038,maiz_H) - 0.185632105766052*alloc(2038,maiz_L) - 0.0581337532246081*alloc(2038,mill_H) - 0.172072449515854*alloc(2038,mill_L)
     
      - 0.150781992371118*alloc(2038,ofib_L) - 0.176582118479088*alloc(2038,ooil_L) - 0.0411352061375015*alloc(2038,opul_H) - 0.112710711936794*alloc(2038,opul_L) - 0.0623285190734088*alloc(2038,pige_H) - 0.185632105766052*alloc(2038,pige_L)
     
      - 0.122619448586202*alloc(2038,pota_H) - 0.0848244398568868*alloc(2038,pota_L) - 0.10028557798722*alloc(2038,rest_H) - 0.185632105766052*alloc(2038,rest_L) - 0.0621965336282499*alloc(2038,rice_H) - 0.172072449515854*alloc(2038,rice_L)
     
      - 0.195571755398769*alloc(2038,sorg_L) - 0.185632105766052*alloc(2038,soyb_L) - 0.176582118479088*alloc(2038,sunf_L) - 0.149557145437803*alloc(2038,temf_H) - 0.185632105766052*alloc(2038,temf_L) - 0.104047309023302*alloc(2038,toba_H)
     
      - 0.166274325439559*alloc(2038,toba_L) - 0.0024849102139237*alloc(2038,trof_L) - 0.258914672253351*alloc(2038,vege_H) - 0.163789421808402*alloc(2038,vege_L) - 0.0743952983230962*alloc(2039,bean_H) - 0.305582620289283*alloc(2039,bean_L)
     
      - 0.16967955247966*alloc(2039,cass_L) - 0.0532295461044014*alloc(2039,chic_H) - 0.237723157344262*alloc(2039,chic_L) - 3.03997291968298E-11*alloc(2039,coff_L) - 0.237723157344262*alloc(2039,cott_L) - 0.056434089898758*alloc(2039,cowp_H)
     
      - 0.260332789178728*alloc(2039,cowp_L) - 0.0699260071871676*alloc(2039,grou_H) - 0.237723133938871*alloc(2039,grou_L) - 0.0527285251618534*alloc(2039,lent_H) - 0.237723157344262*alloc(2039,lent_L) - 0.0849676969409679*alloc(2039,maiz_H)
     
      - 0.305582667100066*alloc(2039,maiz_L) - 0.0640931792516136*alloc(2039,mill_H) - 0.237723157344262*alloc(2039,mill_L) - 0.237723157344262*alloc(2039,ofib_L) - 0.260332789178728*alloc(2039,ooil_L) - 0.0459504011509448*alloc(2039,opul_H)
     
      - 0.237723157344262*alloc(2039,opul_L) - 0.0682142315777296*alloc(2039,pige_H) - 0.30558271391085*alloc(2039,pige_L) - 0.13387089358296*alloc(2039,pota_H) - 0.10200409102187*alloc(2039,pota_L) - 0.109899816107445*alloc(2039,rest_H)
     
      - 0.305582667100066*alloc(2039,rest_L) - 0.0654436045864882*alloc(2039,rice_H) - 0.237723157344262*alloc(2039,rice_L) - 0.305582690505458*alloc(2039,sorg_L) - 0.30558271391085*alloc(2039,soyb_L) - 0.260332789178728*alloc(2039,sunf_L)
     
      - 0.163894979827145*alloc(2039,temf_H) - 0.305582667100066*alloc(2039,temf_L) - 0.111067698775978*alloc(2039,toba_H) - 0.237723157344262*alloc(2039,toba_L) - 3.0396737425488E-11*alloc(2039,trof_L) - 0.276652598631188*alloc(2039,vege_H)
     
      - 0.237723157344262*alloc(2039,vege_L) - 0.0438508788150821*alloc(2040,bean_H) - 0.101359869316688*alloc(2040,bean_L) - 0.169127349072137*alloc(2040,cass_L) - 0.0571273233571736*alloc(2040,chic_H) - 0.236894863935674*alloc(2040,chic_L)
     
      - 7.66440386755505E-8*alloc(2040,coff_L) - 0.236894863935674*alloc(2040,cott_L) - 0.0570482025325217*alloc(2040,cowp_H) - 0.259443126832975*alloc(2040,cowp_L) - 0.0673196591109157*alloc(2040,grou_H) - 0.16934209354143*alloc(2040,grou_L)
     
      - 0.0565896147444133*alloc(2040,lent_H) - 0.236894863935674*alloc(2040,lent_L) - 0.0493677405222208*alloc(2040,maiz_H) - 0.191460890905537*alloc(2040,maiz_L) - 0.0660152979130417*alloc(2040,mill_H) - 0.236894863935674*alloc(2040,mill_L)
     
      - 0.236894863935674*alloc(2040,ofib_L) - 0.259443126832975*alloc(2040,ooil_L) - 0.0493151570331503*alloc(2040,opul_H) - 0.236894863935674*alloc(2040,opul_L) - 0.0695994341230978*alloc(2040,pige_H) - 0.304478307095804*alloc(2040,pige_L)
     
      - 0.148262171984427*alloc(2040,pota_H) - 0.16934209354143*alloc(2040,pota_L) - 0.0638537444271503*alloc(2040,rest_H) - 0.191460890905537*alloc(2040,rest_L) - 0.0679319059355583*alloc(2040,rice_H) - 0.236894863935674*alloc(2040,rice_L)
     
      - 0.236894863935674*alloc(2040,sorg_L) - 0.304478307095804*alloc(2040,soyb_L) - 0.259443126832975*alloc(2040,sunf_L) - 0.0952258932311943*alloc(2040,temf_H) - 0.191460890905537*alloc(2040,temf_L) - 0.114714758286361*alloc(2040,toba_H)
     
      - 0.236894863935674*alloc(2040,toba_L) - 0.285930559081464*alloc(2040,vege_H) - 0.236894863935674*alloc(2040,vege_L) - 0.0482936494397381*alloc(2041,bean_H) - 0.168452431195677*alloc(2041,bean_L) - 0.168513788430145*alloc(2041,cass_L)
     
      - 0.0588344075078287*alloc(2041,chic_H) - 0.236434690528506*alloc(2041,chic_L) - 0.168452431195677*alloc(2041,coff_L) - 0.236434690528506*alloc(2041,cott_L) - 0.057659668098785*alloc(2041,cowp_H) - 0.258890923425452*alloc(2041,cowp_L)
     
      - 0.0669813338871869*alloc(2041,grou_H) - 0.169065991837668*alloc(2041,grou_L) - 0.0582806310347773*alloc(2041,lent_H) - 0.236434690528506*alloc(2041,lent_L) - 0.0512444384863543*alloc(2041,maiz_H) - 0.235851802652401*alloc(2041,maiz_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.067067876850027*alloc(2041,mill_H) - 0.236434690528506*alloc(2041,mill_L) - 0.236434690528506*alloc(2041,ofib_L) - 0.258890923425452*alloc(2041,ooil_L) - 0.0507887972811278*alloc(2041,opul_H) - 0.236434690528506*alloc(2041,opul_L)
     
      - 0.0703273806270339*alloc(2041,pige_H) - 0.303834073687926*alloc(2041,pige_L) - 0.15415071537774*alloc(2041,pota_H) - 0.169065991837668*alloc(2041,pota_L) - 0.0662811229318399*alloc(2041,rest_H) - 0.235851802652401*alloc(2041,rest_L)
     
      - 0.0692137726023951*alloc(2041,rice_H) - 0.236434690528506*alloc(2041,rice_L) - 0.236434690528506*alloc(2041,sorg_L) - 0.303834073687926*alloc(2041,soyb_L) - 0.258890923425452*alloc(2041,sunf_L) - 0.0988458733653739*alloc(2041,temf_H)
     
      - 0.235851802652401*alloc(2041,temf_L) - 0.116686423175745*alloc(2041,toba_H) - 0.236434690528506*alloc(2041,toba_L) - 0.290873559405629*alloc(2041,vege_H) - 0.236434690528506*alloc(2041,vege_L) - 0.0494776468432303*alloc(2042,bean_H)
     
      - 0.167348000975239*alloc(2042,bean_L) - 0.167470715444177*alloc(2042,cass_L) - 0.0600119516646024*alloc(2042,chic_H) - 0.235238230307713*alloc(2042,chic_L) - 0.167348000975239*alloc(2042,coff_L) - 0.235238230307713*alloc(2042,cott_L)
     
      - 0.0584665100506633*alloc(2042,cowp_H) - 0.257541040861748*alloc(2042,cowp_L) - 0.0675228592787474*alloc(2042,grou_H) - 0.168268336086879*alloc(2042,grou_L) - 0.0594470916049624*alloc(2042,lent_H) - 0.235238230307713*alloc(2042,lent_L)
     
      - 0.0521624677511179*alloc(2042,maiz_H) - 0.234287222430187*alloc(2042,maiz_L) - 0.0680898591733203*alloc(2042,mill_H) - 0.235238230307713*alloc(2042,mill_L) - 0.235238230307713*alloc(2042,ofib_L) - 0.257541064267139*alloc(2042,ooil_L)
     
      - 0.0518053121743899*alloc(2042,opul_H) - 0.235238230307713*alloc(2042,opul_L) - 0.0713521654949183*alloc(2042,pige_H) - 0.302177416654574*alloc(2042,pige_L) - 0.15746607986264*alloc(2042,pota_H) - 0.168268336086879*alloc(2042,pota_L)
     
      - 0.0674685300407893*alloc(2042,rest_H) - 0.234287222430187*alloc(2042,rest_L) - 0.0703422226253814*alloc(2042,rice_H) - 0.235238230307713*alloc(2042,rice_L) - 0.235238230307713*alloc(2042,sorg_L) - 0.302177416654574*alloc(2042,soyb_L)
     
      - 0.257541064267139*alloc(2042,sunf_L) - 0.100616668541024*alloc(2042,temf_H) - 0.234287222430187*alloc(2042,temf_L) - 0.118556767194435*alloc(2042,toba_H) - 0.235238230307713*alloc(2042,toba_L) - 0.295470531606434*alloc(2042,vege_H)
     
      - 0.235238230307713*alloc(2042,vege_L) - 0.0407699040395718*alloc(2043,bean_H) - 0.112434563422249*alloc(2043,bean_L) - 0.121944712413685*alloc(2043,cass_L) - 0.048882750295119*alloc(2043,chic_H) - 0.169403392262419*alloc(2043,chic_L)
     
      - 0.112434563422249*alloc(2043,coff_L) - 0.169403450775898*alloc(2043,cott_L) - 0.0469655662814942*alloc(2043,cowp_H) - 0.169403450775898*alloc(2043,cowp_L) - 0.0532988522050285*alloc(2043,grou_H) - 0.124122841575194*alloc(2043,grou_L)
     
      - 0.0484226433917244*alloc(2043,lent_H) - 0.169403392262419*alloc(2043,lent_L) - 0.0430787196396451*alloc(2043,maiz_H) - 0.157715160920258*alloc(2043,maiz_L) - 0.0549732732010064*alloc(2043,mill_H) - 0.169403450775898*alloc(2043,mill_L)
     
      - 0.169403450775898*alloc(2043,ofib_L) - 0.183730019794825*alloc(2043,ooil_L) - 0.0421980300379915*alloc(2043,opul_H) - 0.169403392262419*alloc(2043,opul_L) - 0.0574624907672927*alloc(2043,pige_H) - 0.214653375508021*alloc(2043,pige_L)
     
      - 0.128941089513107*alloc(2043,pota_H) - 0.124122818169802*alloc(2043,pota_L) - 0.055719332605077*alloc(2043,rest_H) - 0.157715160920258*alloc(2043,rest_L) - 0.0568302661547256*alloc(2043,rice_H) - 0.169403450775898*alloc(2043,rice_L)
     
      - 0.169372766307316*alloc(2043,sorg_L) - 0.214653375508021*alloc(2043,soyb_L) - 0.183730019794825*alloc(2043,sunf_L) - 0.0830949424370548*alloc(2043,temf_H) - 0.157715160920258*alloc(2043,temf_L) - 0.0959568523445863*alloc(2043,toba_H)
     
      - 0.169403450775898*alloc(2043,toba_L) - 0.238496500277862*alloc(2043,vege_H) - 0.169403450775898*alloc(2043,vege_L) - 0.0391861527002852*alloc(2044,bean_H) - 0.106605801688156*alloc(2044,bean_L) - 0.115103538756813*alloc(2044,cass_L)
     
      - 0.0230995288251452*alloc(2044,chic_H) - 0.0430411666898357*alloc(2044,chic_L) - 0.106605754877372*alloc(2044,coff_L) - 0.161059054131282*alloc(2044,cott_L) - 0.0446583374064804*alloc(2044,cowp_H) - 0.161059054131282*alloc(2044,cowp_L)
     
      - 0.0492593489891831*alloc(2044,grou_H) - 0.115134211522699*alloc(2044,grou_L) - 0.0228821054475029*alloc(2044,lent_H) - 0.0430411666898357*alloc(2044,lent_L) - 0.0417112544775772*alloc(2044,maiz_H) - 0.152530609188651*alloc(2044,maiz_L)
     
      - 0.0529848246945231*alloc(2044,mill_H) - 0.161059054131282*alloc(2044,mill_L) - 0.161059054131282*alloc(2044,ofib_L) - 0.161120411365751*alloc(2044,ooil_L) - 0.0199406662952076*alloc(2044,opul_H) - 0.0430411666898357*alloc(2044,opul_L)
     
      - 0.0553801274630456*alloc(2044,pige_H) - 0.207014581208447*alloc(2044,pige_L) - 0.124304227727121*alloc(2044,pota_H) - 0.0712648187147764*alloc(2044,pota_L) - 0.0539506113703587*alloc(2044,rest_H) - 0.152530609188651*alloc(2044,rest_L)
     
      - 0.0546595327531701*alloc(2044,rice_H) - 0.161059054131282*alloc(2044,rice_L) - 0.16108975030256*alloc(2044,sorg_L) - 0.207014581208447*alloc(2044,soyb_L) - 0.161120411365751*alloc(2044,sunf_L) - 0.0804572261846401*alloc(2044,temf_H)
     
      - 0.152530609188651*alloc(2044,temf_L) - 0.0945648276843229*alloc(2044,toba_H) - 0.161059054131282*alloc(2044,toba_L) - 0.225326415484348*alloc(2044,vege_H) - 0.161059054131282*alloc(2044,vege_L) - 0.0655122764371173*alloc(2045,bean_H)
     
      - 0.223856750029808*alloc(2045,bean_L) - 0.123325220932492*alloc(2045,cass_L) - 0.0472233921220873*alloc(2045,chic_H) - 0.173575625692815*alloc(2045,chic_L) - 0.114796705773686*alloc(2045,coff_L) - 0.173575649098207*alloc(2045,cott_L)
     
      - 0.048640812009626*alloc(2045,cowp_H) - 0.173575649098207*alloc(2045,cowp_L) - 0.0578904209245429*alloc(2045,grou_H) - 0.123325244337884*alloc(2045,grou_L) - 0.0467789038601563*alloc(2045,lent_H) - 0.173575625692815*alloc(2045,lent_L)
     
      - 0.0738224163985719*alloc(2045,maiz_H) - 0.173575672503599*alloc(2045,maiz_L) - 0.0557463293239597*alloc(2045,mill_H) - 0.173575672503599*alloc(2045,mill_L) - 0.173575649098207*alloc(2045,ofib_L) - 0.173575649098207*alloc(2045,ooil_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0407655892361414*alloc(2045,opul_H) - 0.173575625692815*alloc(2045,opul_L) - 0.0591207771927466*alloc(2045,pige_H) - 0.223856750029808*alloc(2045,pige_L) - 0.120381804713476*alloc(2045,pota_H) - 0.1233251975271*alloc(2045,pota_L)
     
      - 0.0954841696185658*alloc(2045,rest_H) - 0.173575672503599*alloc(2045,rest_L) - 0.0568418474774186*alloc(2045,rice_H) - 0.173575649098207*alloc(2045,rice_L) - 0.223856750029808*alloc(2045,sorg_L) - 0.223856750029808*alloc(2045,soyb_L)
     
      - 0.173575649098207*alloc(2045,sunf_L) - 0.142396744669224*alloc(2045,temf_H) - 0.173575672503599*alloc(2045,temf_L) - 0.0991813971977263*alloc(2045,toba_H) - 0.173575649098207*alloc(2045,toba_L) - 0.235652198088907*alloc(2045,vege_H)
     
      - 0.173575649098207*alloc(2045,vege_L) - 0.0684631743305596*alloc(2046,bean_H) - 0.229900279638586*alloc(2046,bean_L) - 0.137130294417869*alloc(2046,cass_L) - 0.0451908112572137*alloc(2046,chic_H) - 0.127374704785863*alloc(2046,chic_L)
     
      - 1.01089621255079E-10*alloc(2046,coff_L) - 0.181275788929554*alloc(2046,cott_L) - 0.0527691528274259*alloc(2046,cowp_H) - 0.186122916831018*alloc(2046,cowp_L) - 0.0654617552262347*alloc(2046,grou_H) - 0.181521229570125*alloc(2046,grou_L)
     
      - 0.0447654545801871*alloc(2046,lent_H) - 0.127374704785863*alloc(2046,lent_L) - 0.0796336385624352*alloc(2046,maiz_H) - 0.229900303043978*alloc(2046,maiz_L) - 0.0595078281361612*alloc(2046,mill_H) - 0.229900303043978*alloc(2046,mill_L)
     
      - 0.181275788929554*alloc(2046,ofib_L) - 0.181521229570125*alloc(2046,ooil_L) - 0.0390109639772769*alloc(2046,opul_H) - 0.127374704785863*alloc(2046,opul_L) - 0.063655357327619*alloc(2046,pige_H) - 0.229900303043978*alloc(2046,pige_L)
     
      - 0.108393683826462*alloc(2046,pota_H) - 0.0780139448172492*alloc(2046,pota_L) - 0.103000581974803*alloc(2046,rest_H) - 0.229900303043978*alloc(2046,rest_L) - 0.0602066946904684*alloc(2046,rice_H) - 0.181521229570125*alloc(2046,rice_L)
     
      - 0.229930964107168*alloc(2046,sorg_L) - 0.229900303043978*alloc(2046,soyb_L) - 0.181521229570125*alloc(2046,sunf_L) - 0.153606065076945*alloc(2046,temf_H) - 0.229900303043978*alloc(2046,temf_L) - 0.104982217654016*alloc(2046,toba_H)
     
      - 0.181521252975516*alloc(2046,toba_L) - 1.38998219689121E-10*alloc(2046,trof_L) - 0.251780151499724*alloc(2046,vege_H) - 0.181521229570125*alloc(2046,vege_L) - 0.0722642273767216*alloc(2047,bean_H) - 0.2059408120512*alloc(2047,bean_L)
     
      - 0.155598342182434*alloc(2047,cass_L) - 0.0425202587456854*alloc(2047,chic_H) - 0.141854661039613*alloc(2047,chic_L) - 0.000245431497839743*alloc(2047,coff_L) - 0.155659711119598*alloc(2047,cott_L) - 0.0566501064050289*alloc(2047,cowp_H)
     
      - 0.217690459141309*alloc(2047,cowp_L) - 0.0705483264834523*alloc(2047,grou_H) - 0.205388585238285*alloc(2047,grou_L) - 0.0421200385357974*alloc(2047,lent_H) - 0.141854661039613*alloc(2047,lent_L) - 0.0861104320735099*alloc(2047,maiz_H)
     
      - 0.254902761698462*alloc(2047,maiz_L) - 0.0528617453804587*alloc(2047,mill_H) - 0.254810731698107*alloc(2047,mill_L) - 0.155659711119598*alloc(2047,ofib_L) - 0.206063526520137*alloc(2047,ooil_L) - 0.0367056097486554*alloc(2047,opul_H)
     
      - 0.141854661039613*alloc(2047,opul_L) - 0.0682795922297534*alloc(2047,pige_H) - 0.254902761698462*alloc(2047,pige_L) - 0.100147767753383*alloc(2047,pota_H) - 0.0926472649004314*alloc(2047,pota_L) - 0.111377864653508*alloc(2047,rest_H)
     
      - 0.254902761698462*alloc(2047,rest_L) - 0.0642296026399317*alloc(2047,rice_H) - 0.206155556520492*alloc(2047,rice_L) - 0.254902761698462*alloc(2047,sorg_L) - 0.254810708292715*alloc(2047,soyb_L) - 0.206063526520137*alloc(2047,sunf_L)
     
      - 0.166099212238267*alloc(2047,temf_H) - 0.254902761698462*alloc(2047,temf_L) - 0.112304769544069*alloc(2047,toba_H) - 0.264658292816989*alloc(2047,toba_L) - 0.000337467966677228*alloc(2047,trof_L) - 0.269358352751776*alloc(2047,vege_H)
     
      - 0.205480638644032*alloc(2047,vege_L) - 0.0720072237450419*alloc(2049,bean_H) - 0.123724037105191*alloc(2049,bean_L) - 0.0168728532899438*alloc(2049,cass_L) - 0.0253092799349157*alloc(2049,coff_L) - 0.0590549865148033*alloc(2049,cott_L)
     
      - 0.0584687263358421*alloc(2049,cowp_H) - 0.157469743685079*alloc(2049,cowp_L) - 0.0755021611603222*alloc(2049,grou_H) - 0.0674914131597752*alloc(2049,grou_L) - 0.0904888266465295*alloc(2049,maiz_H) - 0.157469743685079*alloc(2049,maiz_L)
     
      - 0.0549641428065286*alloc(2049,mill_H) - 0.157469743685079*alloc(2049,mill_L) - 0.0590549865148033*alloc(2049,ofib_L) - 0.13498282631955*alloc(2049,ooil_L) - 0.0695499857119114*alloc(2049,pige_H) - 0.157469743685079*alloc(2049,pige_L)
     
      - 0.117041014011963*alloc(2049,rest_H) - 0.157469743685079*alloc(2049,rest_L) - 0.06386393841033*alloc(2049,rice_H) - 0.13498282631955*alloc(2049,rice_L) - 0.157469743685079*alloc(2049,sorg_L) - 0.14624161553391*alloc(2049,soyb_L)
     
      - 0.13498282631955*alloc(2049,sunf_L) - 0.174544738197608*alloc(2049,temf_H) - 0.157469743685079*alloc(2049,temf_L) - 0.101546277065312*alloc(2049,toba_H) - 0.0899783246739555*alloc(2049,toba_L) - 0.0337457065798876*alloc(2049,trof_L)
     
      - 0.272606892118034*alloc(2049,vege_H) - 0.0590549865148033*alloc(2049,vege_L) - 0.0708403181692599*alloc(2050,bean_H) - 0.123724037105191*alloc(2050,bean_L) - 0.0168728532899438*alloc(2050,cass_L) - 0.0253092799349157*alloc(2050,coff_L)
     
      - 0.0590549865148033*alloc(2050,cott_L) - 0.0575277306178047*alloc(2050,cowp_H) - 0.157469731982383*alloc(2050,cowp_L) - 0.0742754558283529*alloc(2050,grou_H) - 0.0674914131597752*alloc(2050,grou_L) - 0.089153831509949*alloc(2050,maiz_H)
     
      - 0.157469731982383*alloc(2050,maiz_L) - 0.0541662941310564*alloc(2050,mill_H) - 0.157469731982383*alloc(2050,mill_L) - 0.0590549865148033*alloc(2050,ofib_L) - 0.134982814616855*alloc(2050,ooil_L) - 0.0683991730029917*alloc(2050,pige_H)
     
      - 0.157469731982383*alloc(2050,pige_L) - 0.115314290500598*alloc(2050,rest_H) - 0.157469731982383*alloc(2050,rest_L) - 0.0629008428290662*alloc(2050,rice_H) - 0.13498282631955*alloc(2050,rice_L) - 0.157469731982383*alloc(2050,sorg_L)
     
      - 0.146241603831214*alloc(2050,soyb_L) - 0.134982814616855*alloc(2050,sunf_L) - 0.171969653678944*alloc(2050,temf_H) - 0.157469731982383*alloc(2050,temf_L) - 0.0990925648577768*alloc(2050,toba_H) - 0.0899783188226076*alloc(2050,toba_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0337457065798876*alloc(2050,trof_L) - 0.266372117177921*alloc(2050,vege_H) - 0.0590549865148033*alloc(2050,vege_L) - 0.06653273759156*alloc(2051,bean_H) - 0.11722026387307*alloc(2051,bean_L) - 0.0159831880185167*alloc(2051,cass_L)
     
      - 0.0239901198735553*alloc(2051,coff_L) - 0.0559564929849147*alloc(2051,cott_L) - 0.0540245883642575*alloc(2051,cowp_H) - 0.149217318527338*alloc(2051,cowp_L) - 0.0697510400450716*alloc(2051,grou_H) - 0.0639327520740668*alloc(2051,grou_L)
     
      - 0.0838244771920731*alloc(2051,maiz_H) - 0.149217318527338*alloc(2051,maiz_L) - 0.050678397043256*alloc(2051,mill_H) - 0.149217318527338*alloc(2051,mill_L) - 0.0559564929849147*alloc(2051,ofib_L) - 0.117250948341652*alloc(2051,ooil_L)
     
      - 0.0641759821011269*alloc(2051,pige_H) - 0.138541405486388*alloc(2051,pige_L) - 0.10842114074378*alloc(2051,rest_H) - 0.149217318527338*alloc(2051,rest_L) - 0.0591122331721986*alloc(2051,rice_H) - 0.12789617691402*alloc(2051,rice_L)
     
      - 0.149217318527338*alloc(2051,sorg_L) - 0.12789617691402*alloc(2051,soyb_L) - 0.117250948341652*alloc(2051,sunf_L) - 0.161689812635038*alloc(2051,temf_H) - 0.149217318527338*alloc(2051,temf_L) - 0.0924842292545863*alloc(2051,toba_H)
     
      - 0.0852538936873845*alloc(2051,toba_L) - 0.0319663760370334*alloc(2051,trof_L) - 0.249150474027301*alloc(2051,vege_H) - 0.0559564929849147*alloc(2051,vege_L) - 0.0680017317229915*alloc(2072,bean_H) - 0.151518220671264*alloc(2072,bean_L)
     
      - 0.1195211543143*alloc(2072,cass_L) - 0.0467813034784269*alloc(2072,chic_H) - 0.0901317119087795*alloc(2072,chic_L) - 0.00395745092734168*alloc(2072,coff_L) - 0.110133731494498*alloc(2072,cott_L) - 0.0549026060771707*alloc(2072,cowp_H)
     
      - 0.174495984209846*alloc(2072,cowp_L) - 0.0672389926754562*alloc(2072,grou_H) - 0.111790318311675*alloc(2072,grou_L) - 0.0463409763579135*alloc(2072,lent_H) - 0.0901317119087795*alloc(2072,lent_L) - 0.0793262020954798*alloc(2072,maiz_H)
     
      - 0.151518220671264*alloc(2072,maiz_L) - 0.0592187940025849*alloc(2072,mill_H) - 0.151518220671264*alloc(2072,mill_L) - 0.110133731494498*alloc(2072,ofib_L) - 0.151518220671264*alloc(2072,ooil_L) - 0.0403839562520722*alloc(2072,opul_H)
     
      - 0.0901317119087795*alloc(2072,opul_L) - 0.0639914409446908*alloc(2072,pige_H) - 0.151518220671264*alloc(2072,pige_L) - 0.116913053934417*alloc(2072,pota_H) - 0.075038177458994*alloc(2072,pota_L) - 0.102602934252203*alloc(2072,rest_H)
     
      - 0.151518220671264*alloc(2072,rest_L) - 0.0632403088211969*alloc(2072,rice_H) - 0.151518220671264*alloc(2072,rice_L) - 0.167378708849213*alloc(2072,sorg_L) - 0.151518220671264*alloc(2072,soyb_L) - 0.151518220671264*alloc(2072,sunf_L)
     
      - 0.1530130480203*alloc(2072,temf_H) - 0.151518220671264*alloc(2072,temf_L) - 0.105990618980328*alloc(2072,toba_H) - 0.148787888102232*alloc(2072,toba_L) - 0.00395745092734168*alloc(2072,trof_L) - 0.265232496702888*alloc(2072,vege_H)
     
      - 0.138326719530574*alloc(2072,vege_L) - 0.0668499247336779*alloc(2073,bean_H) - 0.15010703938657*alloc(2073,bean_L) - 0.11580912939916*alloc(2073,cass_L) - 0.0459562732759069*alloc(2073,chic_H) - 0.0892113767971399*alloc(2073,chic_L)
     
      - 0.00426422978550053*alloc(2073,coff_L) - 0.125871481798118*alloc(2073,cott_L) - 0.0538885549158275*alloc(2073,cowp_H) - 0.173176832925508*alloc(2073,cowp_L) - 0.0659879272015875*alloc(2073,grou_H) - 0.110072362557334*alloc(2073,grou_L)
     
      - 0.0455237117186934*alloc(2073,lent_H) - 0.0892113767971399*alloc(2073,lent_L) - 0.0780415902157872*alloc(2073,maiz_H) - 0.15010703938657*alloc(2073,maiz_L) - 0.0582275802002069*alloc(2073,mill_H) - 0.15010703938657*alloc(2073,mill_L)
     
      - 0.125871481798118*alloc(2073,ofib_L) - 0.15010703938657*alloc(2073,ooil_L) - 0.0396717489998615*alloc(2073,opul_H) - 0.0892113767971399*alloc(2073,opul_L) - 0.0628657284916379*alloc(2073,pige_H) - 0.15010703938657*alloc(2073,pige_L)
     
      - 0.114712456964886*alloc(2073,pota_H) - 0.0731054713840117*alloc(2073,pota_L) - 0.10094137798517*alloc(2073,rest_H) - 0.15010703938657*alloc(2073,rest_L) - 0.0620457353899253*alloc(2073,rice_H) - 0.15010703938657*alloc(2073,rice_L)
     
      - 0.167133279911338*alloc(2073,sorg_L) - 0.15010703938657*alloc(2073,soyb_L) - 0.15010703938657*alloc(2073,sunf_L) - 0.150535148233818*alloc(2073,temf_H) - 0.15010703938657*alloc(2073,temf_L) - 0.10443122948156*alloc(2073,toba_H)
     
      - 0.145689423829083*alloc(2073,toba_L) - 0.00426422978550053*alloc(2073,trof_L) - 0.260585943071957*alloc(2073,vege_H) - 0.135872488665304*alloc(2073,vege_L) - 0.0657872357937489*alloc(2074,bean_H) - 0.152683984720779*alloc(2074,bean_L)
     
      - 0.122159456882977*alloc(2074,cass_L) - 0.0452518979258226*alloc(2074,chic_H) - 0.0908679870197086*alloc(2074,chic_L) - 0.0037120278408146*alloc(2074,coff_L) - 0.127282674785508*alloc(2074,cott_L) - 0.0531737054319443*alloc(2074,cowp_H)
     
      - 0.17590716549454*alloc(2074,cowp_L) - 0.0650918938742468*alloc(2074,grou_H) - 0.112864052360835*alloc(2074,grou_L) - 0.0448259662730068*alloc(2074,lent_H) - 0.0908679870197086*alloc(2074,lent_L) - 0.0768600039530079*alloc(2074,maiz_H)
     
      - 0.152683984720779*alloc(2074,maiz_L) - 0.0573389677738983*alloc(2074,mill_H) - 0.152683984720779*alloc(2074,mill_L) - 0.127282674785508*alloc(2074,ofib_L) - 0.152683984720779*alloc(2074,ooil_L) - 0.0390636970387621*alloc(2074,opul_H)
     
      - 0.0908679870197086*alloc(2074,opul_L) - 0.0619062345886268*alloc(2074,pige_H) - 0.152683984720779*alloc(2074,pige_L) - 0.113761940651128*alloc(2074,pota_H) - 0.0763573287433325*alloc(2074,pota_L) - 0.0994130781998436*alloc(2074,rest_H)
     
      - 0.152683984720779*alloc(2074,rest_L) - 0.0613672394575091*alloc(2074,rice_H) - 0.152683984720779*alloc(2074,rice_L) - 0.167562768849923*alloc(2074,sorg_L) - 0.152683984720779*alloc(2074,soyb_L) - 0.152683984720779*alloc(2074,sunf_L)
     
      - 0.148255975516723*alloc(2074,temf_H) - 0.152683984720779*alloc(2074,temf_L) - 0.103246654809287*alloc(2074,toba_H) - 0.151211446201616*alloc(2074,toba_L) - 0.0037120278408146*alloc(2074,trof_L) - 0.256840446422186*alloc(2074,vege_H)
     
      - 0.140290104222791*alloc(2074,vege_L) - 0.0650406808702011*alloc(2075,bean_H) - 0.152776014721134*alloc(2075,bean_L) - 0.123049130931427*alloc(2075,cass_L) - 0.0450065890091532*alloc(2075,chic_H) - 0.0909293384028295*alloc(2075,chic_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.00371202747510535*alloc(2075,coff_L) - 0.126638429674934*alloc(2075,cott_L) - 0.0525652433447511*alloc(2075,cowp_H) - 0.175692421025247*alloc(2075,cowp_L) - 0.0643497263638542*alloc(2075,grou_H) - 0.112925409595304*alloc(2075,grou_L)
     
      - 0.0445829663165605*alloc(2075,lent_H) - 0.0909293384028295*alloc(2075,lent_L) - 0.0758811656332165*alloc(2075,maiz_H) - 0.152776014721134*alloc(2075,maiz_L) - 0.0566498907715505*alloc(2075,mill_H) - 0.152776014721134*alloc(2075,mill_L)
     
      - 0.126638429674934*alloc(2075,ofib_L) - 0.152776014721134*alloc(2075,ooil_L) - 0.0388519341372947*alloc(2075,opul_H) - 0.0909293384028295*alloc(2075,opul_L) - 0.0611813512901397*alloc(2075,pige_H) - 0.152776014721134*alloc(2075,pige_L)
     
      - 0.113492348674278*alloc(2075,pota_H) - 0.0769402166194378*alloc(2075,pota_L) - 0.0981470188006024*alloc(2075,rest_H) - 0.152776014721134*alloc(2075,rest_L) - 0.0607685023255036*alloc(2075,rice_H) - 0.152776014721134*alloc(2075,rice_L)
     
      - 0.167593453318506*alloc(2075,sorg_L) - 0.152776014721134*alloc(2075,soyb_L) - 0.152776014721134*alloc(2075,sunf_L) - 0.146367885190023*alloc(2075,temf_H) - 0.152776014721134*alloc(2075,temf_L) - 0.10204634979413*alloc(2075,toba_H)
     
      - 0.151825006843608*alloc(2075,toba_L) - 0.00371202747510535*alloc(2075,trof_L) - 0.25387281681765*alloc(2075,vege_H) - 0.140443491457615*alloc(2075,vege_L) - 0.065738964223039*alloc(2076,bean_H) - 0.15903435901538*alloc(2076,bean_L)
     
      - 0.138572148468449*alloc(2076,cass_L) - 0.0468186837254096*alloc(2076,chic_H) - 0.0949481904497494*alloc(2076,chic_L) - 0.00239287673933067*alloc(2076,coff_L) - 0.1304732041671*alloc(2076,cott_L) - 0.0534627044708127*alloc(2076,cowp_H)
     
      - 0.181705312976227*alloc(2076,cowp_L) - 0.0654802029574233*alloc(2076,grou_H) - 0.120349494533672*alloc(2076,grou_L) - 0.0463780047648384*alloc(2076,lent_H) - 0.0949481904497494*alloc(2076,lent_L) - 0.076127789059097*alloc(2076,maiz_H)
     
      - 0.15903435901538*alloc(2076,maiz_L) - 0.0570614153111632*alloc(2076,mill_H) - 0.15903435901538*alloc(2076,mill_L) - 0.1304732041671*alloc(2076,ofib_L) - 0.159034335609988*alloc(2076,ooil_L) - 0.0404162247471032*alloc(2076,opul_H)
     
      - 0.0949481904497494*alloc(2076,opul_L) - 0.0613473224107229*alloc(2076,pige_H) - 0.15903435901538*alloc(2076,pige_L) - 0.121711623526708*alloc(2076,pota_H) - 0.0849778329430586*alloc(2076,pota_L) - 0.0984660090772352*alloc(2076,rest_H)
     
      - 0.15903435901538*alloc(2076,rest_L) - 0.062158284821953*alloc(2076,rice_H) - 0.159034335609988*alloc(2076,rice_L) - 0.168605853538588*alloc(2076,sorg_L) - 0.15903435901538*alloc(2076,soyb_L) - 0.159034335609988*alloc(2076,sunf_L)
     
      - 0.146843599406893*alloc(2076,temf_H) - 0.15903435901538*alloc(2076,temf_L) - 0.104031486554259*alloc(2076,toba_H) - 0.164893828623448*alloc(2076,toba_L) - 0.00239287673933067*alloc(2076,trof_L) - 0.256674909108495*alloc(2076,vege_H)
     
      - 0.151058082372184*alloc(2076,vege_L) - 0.0732332964479522*alloc(2077,bean_H) - 0.259964669177307*alloc(2077,bean_L) - 0.158052619858488*alloc(2077,cass_L) - 0.0523584368025348*alloc(2077,chic_H) - 0.193424263895058*alloc(2077,chic_L)
     
      - 0.000951015100283629*alloc(2077,coff_L) - 0.20440693970296*alloc(2077,cott_L) - 0.0566012561476665*alloc(2077,cowp_H) - 0.235729088183463*alloc(2077,cowp_L) - 0.069940278853476*alloc(2077,grou_H) - 0.200694914787819*alloc(2077,grou_L)
     
      - 0.0518656151409392*alloc(2077,lent_H) - 0.193424263895058*alloc(2077,lent_L) - 0.0839145449829921*alloc(2077,maiz_H) - 0.259964669177307*alloc(2077,maiz_L) - 0.0631519121449201*alloc(2077,mill_H) - 0.259964622366524*alloc(2077,mill_L)
     
      - 0.20440693970296*alloc(2077,ofib_L) - 0.22861181282283*alloc(2077,ooil_L) - 0.0451984161201391*alloc(2077,opul_H) - 0.193424263895058*alloc(2077,opul_L) - 0.0673886775805556*alloc(2077,pige_H) - 0.259964669177307*alloc(2077,pige_L)
     
      - 0.133468812928619*alloc(2077,pota_H) - 0.0956230615154264*alloc(2077,pota_L) - 0.108537637177314*alloc(2077,rest_H) - 0.259964669177307*alloc(2077,rest_L) - 0.0656076376557592*alloc(2077,rice_H) - 0.212935419753679*alloc(2077,rice_L)
     
      - 0.263738063029612*alloc(2077,sorg_L) - 0.259964669177307*alloc(2077,soyb_L) - 0.22861181282283*alloc(2077,sunf_L) - 0.16186354523351*alloc(2077,temf_H) - 0.259964669177307*alloc(2077,temf_L) - 0.11083582451617*alloc(2077,toba_H)
     
      - 0.24505520057958*alloc(2077,toba_L) - 0.000951015100283629*alloc(2077,trof_L) - 0.275656846613818*alloc(2077,vege_H) - 0.209775574840669*alloc(2077,vege_L) - 0.075871637249071*alloc(2078,bean_H) - 0.306748466257669*alloc(2078,bean_L)
     
      - 0.170415815887893*alloc(2078,cass_L) - 0.0546398512660324*alloc(2078,chic_H) - 0.238582135221433*alloc(2078,chic_L) - 0.238582135221433*alloc(2078,cott_L) - 0.0572043806908447*alloc(2078,cowp_H) - 0.261314481524836*alloc(2078,cowp_L)
     
      - 0.0703388636101863*alloc(2078,grou_H) - 0.193148150488601*alloc(2078,grou_L) - 0.0541255558833835*alloc(2078,lent_H) - 0.238582135221433*alloc(2078,lent_L) - 0.0864522680067558*alloc(2078,maiz_H) - 0.306748466257669*alloc(2078,maiz_L)
     
      - 0.0652104466917389*alloc(2078,mill_H) - 0.238582135221433*alloc(2078,mill_L) - 0.238582135221433*alloc(2078,ofib_L) - 0.261314481524836*alloc(2078,ooil_L) - 0.0471678469618689*alloc(2078,opul_H) - 0.238582135221433*alloc(2078,opul_L)
     
      - 0.0692293344097896*alloc(2078,pige_H) - 0.306748466257669*alloc(2078,pige_L) - 0.138389098525587*alloc(2078,pota_H) - 0.102249519959745*alloc(2078,pota_L) - 0.111820005697165*alloc(2078,rest_H) - 0.306748466257669*alloc(2078,rest_L)
     
      - 0.0667426115414269*alloc(2078,rice_H) - 0.238582135221433*alloc(2078,rice_L) - 0.306748466257669*alloc(2078,sorg_L) - 0.306748466257669*alloc(2078,soyb_L) - 0.261314481524836*alloc(2078,sunf_L) - 0.166758582744949*alloc(2078,temf_H)
     
      - 0.306748466257669*alloc(2078,temf_L) - 0.11308559597935*alloc(2078,toba_H) - 0.284016143359657*alloc(2078,toba_L) - 0.281734320568904*alloc(2078,vege_H) - 0.238582135221433*alloc(2078,vege_L) - 0.0785141395456773*alloc(2079,bean_H)
     
      - 0.306717805194478*alloc(2079,bean_L) - 0.170415815887893*alloc(2079,cass_L) - 0.0570172466954709*alloc(2079,chic_H) - 0.238582135221433*alloc(2079,chic_L) - 3.72789785224518E-15*alloc(2079,coff_L) - 0.238582135221433*alloc(2079,cott_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0588406217702544*alloc(2079,cowp_H) - 0.261283797056254*alloc(2079,cowp_L) - 0.0714988492495516*alloc(2079,grou_H) - 0.193117477722714*alloc(2079,grou_L) - 0.0564805741748218*alloc(2079,lent_H) - 0.238582135221433*alloc(2079,lent_L)
     
      - 0.089202393097872*alloc(2079,maiz_H) - 0.306717805194478*alloc(2079,maiz_L) - 0.0673632814673333*alloc(2079,mill_H) - 0.238582135221433*alloc(2079,mill_L) - 0.238582135221433*alloc(2079,ofib_L) - 0.261283797056254*alloc(2079,ooil_L)
     
      - 0.0492201333642902*alloc(2079,opul_H) - 0.238582135221433*alloc(2079,opul_L) - 0.0712573914017127*alloc(2079,pige_H) - 0.306717805194478*alloc(2079,pige_L) - 0.14549160782398*alloc(2079,pota_H) - 0.170415815887893*alloc(2079,pota_L)
     
      - 0.115377101542614*alloc(2079,rest_H) - 0.306717805194478*alloc(2079,rest_L) - 0.0691155735030885*alloc(2079,rice_H) - 0.238582135221433*alloc(2079,rice_L) - 0.306717805194478*alloc(2079,sorg_L) - 0.306717805194478*alloc(2079,soyb_L)
     
      - 0.261283797056254*alloc(2079,sunf_L) - 0.172063324576939*alloc(2079,temf_H) - 0.306717805194478*alloc(2079,temf_L) - 0.116909658217261*alloc(2079,toba_H) - 0.284016119954265*alloc(2079,toba_L) - 0.291311331691483*alloc(2079,vege_H)
     
      - 0.238582135221433*alloc(2079,vege_L) - 0.0805043422903494*alloc(2080,bean_H) - 0.305122540503682*alloc(2080,bean_L) - 0.16934209354143*alloc(2080,cass_L) - 0.0585011909362067*alloc(2080,chic_H) - 0.237385698406032*alloc(2080,chic_L)
     
      - 9.05113922198224E-9*alloc(2080,coff_L) - 0.237385698406032*alloc(2080,cott_L) - 0.0604068375537898*alloc(2080,cowp_H) - 0.259964645771915*alloc(2080,cowp_L) - 0.073573209235535*alloc(2080,grou_H) - 0.192258488142848*alloc(2080,grou_L)
     
      - 0.057950550850613*alloc(2080,lent_H) - 0.237385698406032*alloc(2080,lent_L) - 0.0914513369595768*alloc(2080,maiz_H) - 0.305122517098291*alloc(2080,maiz_L) - 0.0690778432426124*alloc(2080,mill_H) - 0.237385698406032*alloc(2080,mill_L)
     
      - 0.237385698406032*alloc(2080,ofib_L) - 0.259964645771915*alloc(2080,ooil_L) - 0.0505011481039933*alloc(2080,opul_H) - 0.237385698406032*alloc(2080,opul_L) - 0.0727885767668402*alloc(2080,pige_H) - 0.305122540503682*alloc(2080,pige_L)
     
      - 0.149138130945458*alloc(2080,pota_H) - 0.16967955247966*alloc(2080,pota_L) - 0.118285954268246*alloc(2080,rest_H) - 0.305122517098291*alloc(2080,rest_L) - 0.0709150745799153*alloc(2080,rice_H) - 0.237385698406032*alloc(2080,rice_L)
     
      - 0.305153224972265*alloc(2080,sorg_L) - 0.305122540503682*alloc(2080,soyb_L) - 0.259964645771915*alloc(2080,sunf_L) - 0.176401333280442*alloc(2080,temf_H) - 0.305122517098291*alloc(2080,temf_L) - 0.119879544466283*alloc(2080,toba_H)
     
      - 0.237385721811424*alloc(2080,toba_L) - 0.298754052722941*alloc(2080,vege_H) - 0.237385698406032*alloc(2080,vege_L) - 0.0814501004021669*alloc(2081,bean_H) - 0.302913703468199*alloc(2081,bean_L) - 0.167900227788154*alloc(2081,cass_L)
     
      - 0.0598578169413741*alloc(2081,chic_H) - 0.235790457120628*alloc(2081,chic_L) - 8.9917971267975E-9*alloc(2081,coff_L) - 0.235790457120628*alloc(2081,cott_L) - 0.0605939965717898*alloc(2081,cowp_H) - 0.258154660017219*alloc(2081,cowp_L)
     
      - 0.0725229779467494*alloc(2081,grou_H) - 0.191000682390282*alloc(2081,grou_L) - 0.0592944076685614*alloc(2081,lent_H) - 0.235790457120628*alloc(2081,lent_L) - 0.0921488559048509*alloc(2081,maiz_H) - 0.258154660017219*alloc(2081,maiz_L)
     
      - 0.069681342522634*alloc(2081,mill_H) - 0.235790457120628*alloc(2081,mill_L) - 0.235790457120628*alloc(2081,ofib_L) - 0.258154660017219*alloc(2081,ooil_L) - 0.051672255387662*alloc(2081,opul_H) - 0.235790457120628*alloc(2081,opul_L)
     
      - 0.0732479138006592*alloc(2081,pige_H) - 0.302913726873591*alloc(2081,pige_L) - 0.154731263984155*alloc(2081,pota_H) - 0.168636502899083*alloc(2081,pota_L) - 0.119188146590468*alloc(2081,rest_H) - 0.258154660017219*alloc(2081,rest_L)
     
      - 0.0717319090154202*alloc(2081,rice_H) - 0.235790457120628*alloc(2081,rice_L) - 0.302913703468199*alloc(2081,sorg_L) - 0.302913726873591*alloc(2081,soyb_L) - 0.258154660017219*alloc(2081,sunf_L) - 0.177746784052682*alloc(2081,temf_H)
     
      - 0.258154660017219*alloc(2081,temf_L) - 0.121157020050435*alloc(2081,toba_H) - 0.280549523977*alloc(2081,toba_L) - 0.301814713116718*alloc(2081,vege_H) - 0.235790457120628*alloc(2081,vege_L) - 0.077467482023949*alloc(2082,bean_H)
     
      - 0.282390217605671*alloc(2082,bean_L) - 0.156303979635564*alloc(2082,cass_L) - 0.0565872888975182*alloc(2082,chic_H) - 0.220635559585026*alloc(2082,chic_L) - 6.04123580587882E-9*alloc(2082,coff_L) - 0.220635559585026*alloc(2082,cott_L)
     
      - 0.057924676516175*alloc(2082,cowp_H) - 0.24122043779011*alloc(2082,cowp_L) - 0.0699630038850797*alloc(2082,grou_H) - 0.179465814877553*alloc(2082,grou_L) - 0.0560546633371937*alloc(2082,lent_H) - 0.220635559585026*alloc(2082,lent_L)
     
      - 0.0877987974728584*alloc(2082,maiz_H) - 0.24122043779011*alloc(2082,maiz_L) - 0.0663413216697424*alloc(2082,mill_H) - 0.220635559585026*alloc(2082,mill_L) - 0.220635559585026*alloc(2082,ofib_L) - 0.24122043779011*alloc(2082,ooil_L)
     
      - 0.0488489723317472*alloc(2082,opul_H) - 0.220635559585026*alloc(2082,opul_L) - 0.0698214000044768*alloc(2082,pige_H) - 0.282390217605671*alloc(2082,pige_L) - 0.145445946344844*alloc(2082,pota_H) - 0.158880901564381*alloc(2082,pota_L)
     
      - 0.11356164806286*alloc(2082,rest_H) - 0.24122043779011*alloc(2082,rest_L) - 0.0681905369328227*alloc(2082,rice_H) - 0.220635559585026*alloc(2082,rice_L) - 0.282359533137088*alloc(2082,sorg_L) - 0.282390217605671*alloc(2082,soyb_L)
     
      - 0.24122043779011*alloc(2082,sunf_L) - 0.169355915938961*alloc(2082,temf_H) - 0.24122043779011*alloc(2082,temf_L) - 0.11537346859401*alloc(2082,toba_H) - 0.261805292589803*alloc(2082,toba_L) - 0.287278942686265*alloc(2082,vege_H)
     
      - 0.220635559585026*alloc(2082,vege_L) - 0.0756783795325119*alloc(2083,bean_H) - 0.280365440570898*alloc(2083,bean_L) - 0.154555327709944*alloc(2083,cass_L) - 0.0534393879465469*alloc(2083,chic_H) - 0.21805857914273*alloc(2083,chic_L)
     
      - 5.72804780869713E-9*alloc(2083,coff_L) - 0.218058602548121*alloc(2083,cott_L) - 0.0576067333589134*alloc(2083,cowp_H) - 0.225912141316988*alloc(2083,cowp_L) - 0.0714077922400101*alloc(2083,grou_H) - 0.218058602548121*alloc(2083,grou_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0529363918761755*alloc(2083,lent_H) - 0.21805857914273*alloc(2083,lent_L) - 0.0863184623375652*alloc(2083,maiz_H) - 0.280365440570898*alloc(2083,maiz_L) - 0.064985763208468*alloc(2083,mill_H) - 0.218058602548121*alloc(2083,mill_L)
     
      - 0.218058602548121*alloc(2083,ofib_L) - 0.225912141316988*alloc(2083,ooil_L) - 0.0461315471033436*alloc(2083,opul_H) - 0.21805857914273*alloc(2083,opul_L) - 0.0690706911354319*alloc(2083,pige_H) - 0.280365440570898*alloc(2083,pige_L)
     
      - 0.13216117996689*alloc(2083,pota_H) - 0.0943652616142086*alloc(2083,pota_L) - 0.111646937355105*alloc(2083,rest_H) - 0.280365440570898*alloc(2083,rest_L) - 0.0663533632521056*alloc(2083,rice_H) - 0.218058602548121*alloc(2083,rice_L)
     
      - 0.28039612503948*alloc(2083,sorg_L) - 0.280365440570898*alloc(2083,soyb_L) - 0.225912141316988*alloc(2083,sunf_L) - 0.166500483746832*alloc(2083,temf_H) - 0.280365440570898*alloc(2083,temf_L) - 0.114267355503374*alloc(2083,toba_H)
     
      - 0.218058602548121*alloc(2083,toba_L) - 0.27765024554406*alloc(2083,vege_H) - 0.218058602548121*alloc(2083,vege_L) - 0.0655886603386193*alloc(2084,bean_H) - 0.229838910701422*alloc(2084,bean_L) - 0.126607745206351*alloc(2084,cass_L)
     
      - 0.0451301633881492*alloc(2084,chic_H) - 0.126607756909047*alloc(2084,chic_L) - 6.16815648988844E-9*alloc(2084,coff_L) - 0.178207997422291*alloc(2084,cott_L) - 0.0498422236190636*alloc(2084,cowp_H) - 0.178207997422291*alloc(2084,cowp_L)
     
      - 0.0613566727632667*alloc(2084,grou_H) - 0.178207997422291*alloc(2084,grou_L) - 0.0447053775567291*alloc(2084,lent_H) - 0.126607756909047*alloc(2084,lent_L) - 0.0750238469781731*alloc(2084,maiz_H) - 0.229838910701422*alloc(2084,maiz_L)
     
      - 0.0563639635455213*alloc(2084,mill_H) - 0.178208020827683*alloc(2084,mill_L) - 0.178207997422291*alloc(2084,ofib_L) - 0.178207997422291*alloc(2084,ooil_L) - 0.0389586097094611*alloc(2084,opul_H) - 0.126607756909047*alloc(2084,opul_L)
     
      - 0.0600563767433816*alloc(2084,pige_H) - 0.229838910701422*alloc(2084,pige_L) - 0.10827846355824*alloc(2084,pota_H) - 0.0775537655587336*alloc(2084,pota_L) - 0.097038136649775*alloc(2084,rest_H) - 0.229838910701422*alloc(2084,rest_L)
     
      - 0.056977049598571*alloc(2084,rice_H) - 0.178207997422291*alloc(2084,rice_L) - 0.229838910701422*alloc(2084,sorg_L) - 0.229838910701422*alloc(2084,soyb_L) - 0.178207997422291*alloc(2084,sunf_L) - 0.144714195273355*alloc(2084,temf_H)
     
      - 0.229838910701422*alloc(2084,temf_L) - 0.0998546665922057*alloc(2084,toba_H) - 0.178208020827683*alloc(2084,toba_L) - 0.237482267385771*alloc(2084,vege_H) - 0.178207997422291*alloc(2084,vege_L) - 0.0585235395459397*alloc(2085,bean_H)
     
      - 0.194620665602371*alloc(2085,bean_L) - 0.10832372233441*alloc(2085,cass_L) - 0.0372106961311969*alloc(2085,chic_H) - 0.10832372233441*alloc(2085,chic_L) - 5.43165033452052E-18*alloc(2085,coff_L) - 0.151456863436795*alloc(2085,cott_L)
     
      - 0.0448383929848754*alloc(2085,cowp_H) - 0.151456863436795*alloc(2085,cowp_L) - 0.0552473324633564*alloc(2085,grou_H) - 0.151456863436795*alloc(2085,grou_L) - 0.0368604519639452*alloc(2085,lent_H) - 0.10832372233441*alloc(2085,lent_L)
     
      - 0.0679868944122227*alloc(2085,maiz_H) - 0.194620689007763*alloc(2085,maiz_L) - 0.0507774298161854*alloc(2085,mill_H) - 0.194620689007763*alloc(2085,mill_L) - 0.151456863436795*alloc(2085,ofib_L) - 0.151456863436795*alloc(2085,ooil_L)
     
      - 0.0321221302729279*alloc(2085,opul_H) - 0.10832372233441*alloc(2085,opul_L) - 0.0543841435930944*alloc(2085,pige_H) - 0.194620689007763*alloc(2085,pige_L) - 0.0875892578117461*alloc(2085,pota_H) - 0.0582266814035189*alloc(2085,pota_L)
     
      - 0.0879363271292455*alloc(2085,rest_H) - 0.194620689007763*alloc(2085,rest_L) - 0.050588753761253*alloc(2085,rice_H) - 0.151456863436795*alloc(2085,rice_L) - 0.194620689007763*alloc(2085,sorg_L) - 0.194620689007763*alloc(2085,soyb_L)
     
      - 0.151456863436795*alloc(2085,sunf_L) - 0.131140552108208*alloc(2085,temf_H) - 0.194620689007763*alloc(2085,temf_L) - 0.0894805625061763*alloc(2085,toba_H) - 0.194620677305067*alloc(2085,toba_L) - 7.46851945357701E-18*alloc(2085,trof_L)
     
      - 0.21286067029096*alloc(2085,vege_H) - 0.151456863436795*alloc(2085,vege_L) - 0.056599089849562*alloc(2086,bean_H) - 0.143173824026647*alloc(2086,bean_L) - 0.0990589905781535*alloc(2086,cass_L) - 0.0332927959877324*alloc(2086,chic_H)
     
      - 0.0993350805792191*alloc(2086,chic_L) - 1.44109150409066E-9*alloc(2086,coff_L) - 0.13952314464328*alloc(2086,cott_L) - 0.0438211063262153*alloc(2086,cowp_H) - 0.144677058717088*alloc(2086,cowp_L) - 0.0545877361912011*alloc(2086,grou_H)
     
      - 0.142437560618414*alloc(2086,grou_L) - 0.032979428896585*alloc(2086,lent_H) - 0.0993350805792191*alloc(2086,lent_L) - 0.0670519192532496*alloc(2086,maiz_H) - 0.177962568484416*alloc(2086,maiz_L) - 0.0413987191035174*alloc(2086,mill_H)
     
      - 0.177962568484416*alloc(2086,mill_L) - 0.13952314464328*alloc(2086,ofib_L) - 0.143173824026647*alloc(2086,ooil_L) - 0.0287400033070425*alloc(2086,opul_H) - 0.0993350805792191*alloc(2086,opul_L) - 0.0531558797367377*alloc(2086,pige_H)
     
      - 0.177962568484416*alloc(2086,pige_L) - 0.0772336073213736*alloc(2086,pota_H) - 0.0575824538469888*alloc(2086,pota_L) - 0.0867270016828049*alloc(2086,rest_H) - 0.177962568484416*alloc(2086,rest_L) - 0.0494055516059953*alloc(2086,rice_H)
     
      - 0.139615186346331*alloc(2086,rice_L) - 0.177962568484416*alloc(2086,sorg_L) - 0.177962568484416*alloc(2086,soyb_L) - 0.143173824026647*alloc(2086,sunf_L) - 0.12933706983982*alloc(2086,temf_H) - 0.177962568484416*alloc(2086,temf_L)
     
      - 0.0869744767744879*alloc(2086,toba_H) - 0.175845808260071*alloc(2086,toba_L) - 1.92621700354534E-9*alloc(2086,trof_L) - 0.211448728895031*alloc(2086,vege_H) - 0.143173824026647*alloc(2086,vege_L) - 0.0714591661143809*alloc(2088,bean_H)
     
      - 0.124644372216831*alloc(2088,bean_L) - 0.0246343620584553*alloc(2088,cass_L) - 0.0236526741008579*alloc(2088,coff_L) - 0.0612024429104263*alloc(2088,cott_L) - 0.0581275247929342*alloc(2088,cowp_H) - 0.15918769943942*alloc(2088,cowp_L)
     
      - 0.0748893967162977*alloc(2088,grou_H) - 0.0720624218034346*alloc(2088,grou_L) - 0.0897442072346584*alloc(2088,maiz_H) - 0.156242622401095*alloc(2088,maiz_L) - 0.0552635045164077*alloc(2088,mill_H) - 0.156242622401095*alloc(2088,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0612024429104263*alloc(2088,ofib_L) - 0.131393515873347*alloc(2088,ooil_L) - 0.0689972129927117*alloc(2088,pige_H) - 0.156242622401095*alloc(2088,pige_L) - 0.116077900506703*alloc(2088,rest_H) - 0.156242622401095*alloc(2088,rest_L)
     
      - 0.0636586645681649*alloc(2088,rice_H) - 0.135197570788843*alloc(2088,rice_L) - 0.156211937932513*alloc(2088,sorg_L) - 0.145720096594969*alloc(2088,soyb_L) - 0.131393515873347*alloc(2088,sunf_L) - 0.173108434897869*alloc(2088,temf_H)
     
      - 0.156242622401095*alloc(2088,temf_L) - 0.101431048938892*alloc(2088,toba_H) - 0.0954083170461337*alloc(2088,toba_L) - 0.0315368958754699*alloc(2088,trof_L) - 0.269606083637136*alloc(2088,vege_H) - 0.0635953165412283*alloc(2088,vege_L)
     
      - 0.0715580726244486*alloc(2089,bean_H) - 0.123601322636254*alloc(2089,bean_L) - 0.0168728532899438*alloc(2089,cass_L) - 0.0252786013176813*alloc(2089,coff_L) - 0.0589936292803346*alloc(2089,cott_L) - 0.058112388849932*alloc(2089,cowp_H)
     
      - 0.157316344747559*alloc(2089,cowp_L) - 0.0750205375065421*alloc(2089,grou_H) - 0.0674300559253065*alloc(2089,grou_L) - 0.090095369902147*alloc(2089,maiz_H) - 0.157316344747559*alloc(2089,maiz_L) - 0.0554078470058389*alloc(2089,mill_H)
     
      - 0.157316344747559*alloc(2089,mill_L) - 0.0589936292803346*alloc(2089,ofib_L) - 0.134860111850613*alloc(2089,ooil_L) - 0.0689985734163829*alloc(2089,pige_H) - 0.146088228299086*alloc(2089,pige_L) - 0.116532105033485*alloc(2089,rest_H)
     
      - 0.157316344747559*alloc(2089,rest_L) - 0.0635465926778595*alloc(2089,rice_H) - 0.134860111850613*alloc(2089,rice_L) - 0.157316344747559*alloc(2089,sorg_L) - 0.146088228299086*alloc(2089,soyb_L) - 0.134860111850613*alloc(2089,sunf_L)
     
      - 0.17378579582886*alloc(2089,temf_H) - 0.157316344747559*alloc(2089,temf_L) - 0.0997473379184847*alloc(2089,toba_H) - 0.0898862888222524*alloc(2089,toba_L) - 0.0337150279626532*alloc(2089,trof_L) - 0.26802809120961*alloc(2089,vege_H)
     
      - 0.0589936292803346*alloc(2089,vege_L) - 0.0697396153303033*alloc(2090,bean_H) - 0.123724037105191*alloc(2090,bean_L) - 0.0168728532899438*alloc(2090,cass_L) - 0.0253092799349157*alloc(2090,coff_L) - 0.0590549865148033*alloc(2090,cott_L)
     
      - 0.0566467368081588*alloc(2090,cowp_H) - 0.157469743685079*alloc(2090,cowp_L) - 0.0731151339434483*alloc(2090,grou_H) - 0.0674914131597752*alloc(2090,grou_L) - 0.0879118534421677*alloc(2090,maiz_H) - 0.157469743685079*alloc(2090,maiz_L)
     
      - 0.0540705658954852*alloc(2090,mill_H) - 0.157469743685079*alloc(2090,mill_L) - 0.0590549865148033*alloc(2090,ofib_L) - 0.123724037105191*alloc(2090,ooil_L) - 0.0672347397619635*alloc(2090,pige_H) - 0.14624161553391*alloc(2090,pige_L)
     
      - 0.113707878108916*alloc(2090,rest_H) - 0.157469743685079*alloc(2090,rest_L) - 0.0619894539445022*alloc(2090,rice_H) - 0.13498282631955*alloc(2090,rice_L) - 0.157469743685079*alloc(2090,sorg_L) - 0.14624161553391*alloc(2090,soyb_L)
     
      - 0.123724037105191*alloc(2090,sunf_L) - 0.169573990648249*alloc(2090,temf_H) - 0.157469743685079*alloc(2090,temf_L) - 0.0966594674140239*alloc(2090,toba_H) - 0.0899783246739555*alloc(2090,toba_L) - 0.0337457065798876*alloc(2090,trof_L)
     
      - 0.260235974860014*alloc(2090,vege_H) - 0.0590549865148033*alloc(2090,vege_L) - 0.0596787324288293*alloc(2110,bean_H) - 0.138541475702563*alloc(2110,bean_L) - 0.124398943278956*alloc(2110,cass_L) - 0.0419977772424475*alloc(2110,chic_H)
     
      - 0.0824008876088503*alloc(2110,chic_L) - 0.0016259301424974*alloc(2110,coff_L) - 0.119827940486644*alloc(2110,cott_L) - 0.0487734596233551*alloc(2110,cowp_H) - 0.15378840323852*alloc(2110,cowp_L) - 0.0605228472298027*alloc(2110,grou_H)
     
      - 0.112741337891897*alloc(2110,grou_L) - 0.0416024748685054*alloc(2110,lent_H) - 0.0824008876088503*alloc(2110,lent_L) - 0.0695161624313231*alloc(2110,maiz_H) - 0.138541475702563*alloc(2110,maiz_L) - 0.0520277604055282*alloc(2110,mill_H)
     
      - 0.138541475702563*alloc(2110,mill_L) - 0.119827940486644*alloc(2110,ofib_L) - 0.138541475702563*alloc(2110,ooil_L) - 0.036254577635388*alloc(2110,opul_H) - 0.0824008876088503*alloc(2110,opul_L) - 0.0562363682463675*alloc(2110,pige_H)
     
      - 0.138541475702563*alloc(2110,pige_L) - 0.108805820008574*alloc(2110,pota_H) - 0.075436993631693*alloc(2110,pota_L) - 0.0899143291244614*alloc(2110,rest_H) - 0.138541475702563*alloc(2110,rest_L) - 0.056536653809216*alloc(2110,rice_H)
     
      - 0.138541475702563*alloc(2110,rice_L) - 0.145075874889787*alloc(2110,sorg_L) - 0.138541475702563*alloc(2110,soyb_L) - 0.138541475702563*alloc(2110,sunf_L) - 0.134090371394412*alloc(2110,temf_H) - 0.138541475702563*alloc(2110,temf_L)
     
      - 0.0953616165013762*alloc(2110,toba_H) - 0.142130797851462*alloc(2110,toba_L) - 0.0016259301424974*alloc(2110,trof_L) - 0.234116598284437*alloc(2110,vege_H) - 0.133111471627689*alloc(2110,vege_L) - 0.06798847667884*alloc(2111,bean_H)
     
      - 0.15489279835087*alloc(2111,bean_L) - 0.128724528836088*alloc(2111,cass_L) - 0.0470163596623802*alloc(2111,chic_H) - 0.0922791683044024*alloc(2111,chic_L) - 0.00325185918786707*alloc(2111,coff_L) - 0.127896223724804*alloc(2111,cott_L)
     
      - 0.0551209576018178*alloc(2111,cowp_H) - 0.177287674013347*alloc(2111,cowp_L) - 0.0675520084412075*alloc(2111,grou_H) - 0.115839802165046*alloc(2111,grou_L) - 0.0465738200850744*alloc(2111,lent_H) - 0.0922791683044024*alloc(2111,lent_L)
     
      - 0.0793040495341436*alloc(2111,maiz_H) - 0.15489279835087*alloc(2111,maiz_L) - 0.0591889227178188*alloc(2111,mill_H) - 0.15489279835087*alloc(2111,mill_L) - 0.127896223724804*alloc(2111,ofib_L) - 0.15489279835087*alloc(2111,ooil_L)
     
      - 0.0405868684828938*alloc(2111,opul_H) - 0.0922791683044024*alloc(2111,opul_L) - 0.0640663327698582*alloc(2111,pige_H) - 0.15489279835087*alloc(2111,pige_L) - 0.118583206067626*alloc(2111,pota_H) - 0.079977323658118*alloc(2111,pota_L)
     
      - 0.102574281452318*alloc(2111,rest_H) - 0.15489279835087*alloc(2111,rest_L) - 0.06360536355989*alloc(2111,rice_H) - 0.15489279835087*alloc(2111,rice_L) - 0.167930912256736*alloc(2111,sorg_L) - 0.15489279835087*alloc(2111,soyb_L)
     
      - 0.15489279835087*alloc(2111,sunf_L) - 0.152970317738981*alloc(2111,temf_H) - 0.15489279835087*alloc(2111,temf_L) - 0.107094456872888*alloc(2111,toba_H) - 0.156273295166982*alloc(2111,toba_L) - 0.00325185918786707*alloc(2111,trof_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.265582364539346*alloc(2111,vege_H) - 0.1440634863724*alloc(2111,vege_L) - 0.0687371053930986*alloc(2112,bean_H) - 0.152591954720423*alloc(2112,bean_L) - 0.122282171351915*alloc(2112,cass_L) - 0.0473318770862048*alloc(2112,chic_H)
     
      - 0.0908066297852399*alloc(2112,chic_L) - 0.00374270609233973*alloc(2112,coff_L) - 0.127037245847633*alloc(2112,cott_L) - 0.055579572219899*alloc(2112,cowp_H) - 0.175539033790424*alloc(2112,cowp_L) - 0.0680595528871*alloc(2112,grou_H)
     
      - 0.112925409595304*alloc(2112,grou_L) - 0.0468863677139515*alloc(2112,lent_H) - 0.0908066297852399*alloc(2112,lent_L) - 0.0802827754533189*alloc(2112,maiz_H) - 0.152591954720423*alloc(2112,maiz_L) - 0.0598541930007432*alloc(2112,mill_H)
     
      - 0.152591954720423*alloc(2112,mill_L) - 0.127037245847633*alloc(2112,ofib_L) - 0.152591954720423*alloc(2112,ooil_L) - 0.0408592388721963*alloc(2112,opul_H) - 0.0908066297852399*alloc(2112,opul_L) - 0.0646952494178289*alloc(2112,pige_H)
     
      - 0.152591954720423*alloc(2112,pige_L) - 0.118827506397555*alloc(2112,pota_H) - 0.0765107218295044*alloc(2112,pota_L) - 0.103840195469167*alloc(2112,rest_H) - 0.152591954720423*alloc(2112,rest_L) - 0.0640580390411528*alloc(2112,rice_H)
     
      - 0.152591954720423*alloc(2112,rice_L) - 0.167593453318506*alloc(2112,sorg_L) - 0.152591954720423*alloc(2112,soyb_L) - 0.152591954720423*alloc(2112,sunf_L) - 0.154858191255089*alloc(2112,temf_H) - 0.152591954720423*alloc(2112,temf_L)
     
      - 0.107858388461432*alloc(2112,toba_H) - 0.151150088967147*alloc(2112,toba_L) - 0.00374270609233973*alloc(2112,trof_L) - 0.268209296855694*alloc(2112,vege_H) - 0.140136716987967*alloc(2112,vege_L) - 0.0676140895781776*alloc(2114,bean_H)
     
      - 0.15707092751238*alloc(2114,bean_L) - 0.133786389504149*alloc(2114,cass_L) - 0.0475757097417526*alloc(2114,chic_H) - 0.0936903554404441*alloc(2114,chic_L) - 0.00279169053491954*alloc(2114,coff_L) - 0.1290926722429*alloc(2114,cott_L)
     
      - 0.0549052294624016*alloc(2114,cowp_H) - 0.179772577644505*alloc(2114,cowp_L) - 0.0672208439929277*alloc(2114,grou_H) - 0.117956585794783*alloc(2114,grou_L) - 0.0471279053045242*alloc(2114,lent_H) - 0.0936903554404441*alloc(2114,lent_L)
     
      - 0.0786102081138047*alloc(2114,maiz_H) - 0.15707092751238*alloc(2114,maiz_L) - 0.0587550797616547*alloc(2114,mill_H) - 0.15707092751238*alloc(2114,mill_L) - 0.1290926722429*alloc(2114,ofib_L) - 0.15707092751238*alloc(2114,ooil_L)
     
      - 0.041069727391376*alloc(2114,opul_H) - 0.0936903554404441*alloc(2114,opul_L) - 0.0634126785138644*alloc(2114,pige_H) - 0.15707092751238*alloc(2114,pige_L) - 0.121697599082958*alloc(2114,pota_H) - 0.0825235903750919*alloc(2114,pota_L)
     
      - 0.101676845753243*alloc(2114,rest_H) - 0.15707092751238*alloc(2114,rest_L) - 0.0636489767768638*alloc(2114,rice_H) - 0.15707092751238*alloc(2114,rice_L) - 0.16826835949227*alloc(2114,sorg_L) - 0.15707092751238*alloc(2114,soyb_L)
     
      - 0.15707092751238*alloc(2114,sunf_L) - 0.151631960578746*alloc(2114,temf_H) - 0.15707092751238*alloc(2114,temf_L) - 0.106754607169931*alloc(2114,toba_H) - 0.160874982427876*alloc(2114,toba_L) - 0.00279169053491954*alloc(2114,trof_L)
     
      - 0.264178003791305*alloc(2114,vege_H) - 0.147714165755768*alloc(2114,vege_L) - 0.0679059434749644*alloc(2115,bean_H) - 0.164126904152024*alloc(2115,bean_L) - 0.130227763526529*alloc(2115,cass_L) - 0.0487518036547998*alloc(2115,chic_H)
     
      - 0.0984148156837547*alloc(2115,chic_L) - 0.00303711234146426*alloc(2115,coff_L) - 0.135504392069275*alloc(2115,cott_L) - 0.0546551039139545*alloc(2115,cowp_H) - 0.183392607667378*alloc(2115,cowp_L) - 0.066875818189613*alloc(2115,grou_H)
     
      - 0.122957112633767*alloc(2115,grou_L) - 0.0482929292813431*alloc(2115,lent_H) - 0.0984148156837547*alloc(2115,lent_L) - 0.0782772779677673*alloc(2115,maiz_H) - 0.164126904152024*alloc(2115,maiz_L) - 0.0587201209241006*alloc(2115,mill_H)
     
      - 0.164126904152024*alloc(2115,mill_L) - 0.135504392069275*alloc(2115,ofib_L) - 0.1613965481776*alloc(2115,ooil_L) - 0.0420849903618644*alloc(2115,opul_H) - 0.0984148156837547*alloc(2115,opul_L) - 0.0628641741035471*alloc(2115,pige_H)
     
      - 0.164126904152024*alloc(2115,pige_L) - 0.127377270155291*alloc(2115,pota_H) - 0.0804988601511024*alloc(2115,pota_L) - 0.101246223726951*alloc(2115,rest_H) - 0.164126904152024*alloc(2115,rest_L) - 0.0633915472257514*alloc(2115,rice_H)
     
      - 0.160046712424679*alloc(2115,rice_L) - 0.176306028478023*alloc(2115,sorg_L) - 0.164126904152024*alloc(2115,soyb_L) - 0.1613965481776*alloc(2115,sunf_L) - 0.150989768527729*alloc(2115,temf_H) - 0.164126904152024*alloc(2115,temf_L)
     
      - 0.106150143983351*alloc(2115,toba_H) - 0.163697403510742*alloc(2115,toba_L) - 0.00303711234146426*alloc(2115,trof_L) - 0.263138678743021*alloc(2115,vege_H) - 0.149923002791252*alloc(2115,vege_L) - 0.0768079109257044*alloc(2116,bean_H)
     
      - 0.303864758156508*alloc(2116,bean_L) - 0.169986326949308*alloc(2116,cass_L) - 0.0553084464073872*alloc(2116,chic_H) - 0.235759772652046*alloc(2116,chic_L) - 3.0677960100576E-5*alloc(2116,coff_L) - 0.236434690528506*alloc(2116,cott_L)
     
      - 0.0579898102131377*alloc(2116,cowp_H) - 0.259320412364037*alloc(2116,cowp_L) - 0.071451381058734*alloc(2116,grou_H) - 0.191767665375185*alloc(2116,grou_L) - 0.0547878579001032*alloc(2116,lent_H) - 0.235759772652046*alloc(2116,lent_L)
     
      - 0.087562223823197*alloc(2116,maiz_H) - 0.303864758156508*alloc(2116,maiz_L) - 0.0659682345306354*alloc(2116,mill_H) - 0.303864758156508*alloc(2116,mill_L) - 0.236434690528506*alloc(2116,ofib_L) - 0.259320412364037*alloc(2116,ooil_L)
     
      - 0.0477450116608233*alloc(2116,opul_H) - 0.235759772652046*alloc(2116,opul_L) - 0.0701801494482261*alloc(2116,pige_H) - 0.303864758156508*alloc(2116,pige_L) - 0.140211568838339*alloc(2116,pota_H) - 0.102034740382365*alloc(2116,pota_L)
     
      - 0.113255656473942*alloc(2116,rest_H) - 0.303864758156508*alloc(2116,rest_L) - 0.0675634112773968*alloc(2116,rice_H) - 0.237078923936384*alloc(2116,rice_L) - 0.303987449220054*alloc(2116,sorg_L) - 0.303864758156508*alloc(2116,soyb_L)
     
      - 0.259320412364037*alloc(2116,sunf_L) - 0.168899586828784*alloc(2116,temf_H) - 0.303864758156508*alloc(2116,temf_L) - 0.114618817389231*alloc(2116,toba_H) - 0.281838014198148*alloc(2116,toba_L) - 3.0677960100576E-5*alloc(2116,trof_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.285313839700743*alloc(2116,vege_H) - 0.236956209467447*alloc(2116,vege_L) - 0.0781088302560279*alloc(2117,bean_H) - 0.306012202849435*alloc(2117,bean_L) - 0.169924969714839*alloc(2117,cass_L) - 0.055878635127971*alloc(2117,chic_H)
     
      - 0.23802993181391*alloc(2117,chic_L) - 0.23802993181391*alloc(2117,cott_L) - 0.0592671808944161*alloc(2117,cowp_H) - 0.260700932585541*alloc(2117,cowp_L) - 0.0734287623262348*alloc(2117,grou_H) - 0.23802993181391*alloc(2117,grou_L)
     
      - 0.0553526797424939*alloc(2117,lent_H) - 0.23802993181391*alloc(2117,lent_L) - 0.0892766405086386*alloc(2117,maiz_H) - 0.306012202849435*alloc(2117,maiz_L) - 0.0672029644851303*alloc(2117,mill_H) - 0.306012202849435*alloc(2117,mill_L)
     
      - 0.23802993181391*alloc(2117,ofib_L) - 0.260700932585541*alloc(2117,ooil_L) - 0.0482372270254101*alloc(2117,opul_H) - 0.23802993181391*alloc(2117,opul_L) - 0.071235395333852*alloc(2117,pige_H) - 0.306012202849435*alloc(2117,pige_L)
     
      - 0.140720987383129*alloc(2117,pota_H) - 0.102096097616834*alloc(2117,pota_L) - 0.115473135412938*alloc(2117,rest_H) - 0.306012202849435*alloc(2117,rest_L) - 0.068682564741065*alloc(2117,rice_H) - 0.23802993181391*alloc(2117,rice_L)
     
      - 0.306012202849435*alloc(2117,sorg_L) - 0.306012202849435*alloc(2117,soyb_L) - 0.260700932585541*alloc(2117,sunf_L) - 0.172206541097192*alloc(2117,temf_H) - 0.306012202849435*alloc(2117,temf_L) - 0.116560151730491*alloc(2117,toba_H)
     
      - 0.283341225483197*alloc(2117,toba_L) - 0.290180907487215*alloc(2117,vege_H) - 0.23802993181391*alloc(2117,vege_L) - 0.0797722461466975*alloc(2118,bean_H) - 0.305705428379788*alloc(2118,bean_L) - 0.169710225245546*alloc(2118,cass_L)
     
      - 0.0568634121058324*alloc(2118,chic_H) - 0.237815187344617*alloc(2118,chic_L) - 0.237815187344617*alloc(2118,cott_L) - 0.0607161865653562*alloc(2118,cowp_H) - 0.260455503647666*alloc(2118,cowp_L) - 0.0753008143837993*alloc(2118,grou_H)
     
      - 0.237815187344617*alloc(2118,grou_L) - 0.0563281875470154*alloc(2118,lent_H) - 0.237815187344617*alloc(2118,lent_L) - 0.091269520278434*alloc(2118,maiz_H) - 0.305705428379788*alloc(2118,maiz_L) - 0.0686818820476048*alloc(2118,mill_H)
     
      - 0.305705428379788*alloc(2118,mill_L) - 0.237815187344617*alloc(2118,ofib_L) - 0.260455503647666*alloc(2118,ooil_L) - 0.0490873356678583*alloc(2118,opul_H) - 0.237815187344617*alloc(2118,opul_L) - 0.0727343098161961*alloc(2118,pige_H)
     
      - 0.305705428379788*alloc(2118,pige_L) - 0.142754348305817*alloc(2118,pota_H) - 0.102034740382365*alloc(2118,pota_L) - 0.118050787015957*alloc(2118,rest_H) - 0.305705428379788*alloc(2118,rest_L) - 0.0701952548899896*alloc(2118,rice_H)
     
      - 0.237815187344617*alloc(2118,rice_L) - 0.305705428379788*alloc(2118,sorg_L) - 0.305705428379788*alloc(2118,soyb_L) - 0.260455503647666*alloc(2118,sunf_L) - 0.176050625395434*alloc(2118,temf_H) - 0.305705428379788*alloc(2118,temf_L)
     
      - 0.119072107171815*alloc(2118,toba_H) - 0.283065112076739*alloc(2118,toba_L) - 0.296502923679601*alloc(2118,vege_H) - 0.237815187344617*alloc(2118,vege_L) - 0.082142449146937*alloc(2119,bean_H) - 0.3050918560351*alloc(2119,bean_L)
     
      - 0.169311409072847*alloc(2119,cass_L) - 0.0586064090272727*alloc(2119,chic_H) - 0.237355037342841*alloc(2119,chic_L) - 0.237355037342841*alloc(2119,cott_L) - 0.0624841769055914*alloc(2119,cowp_H) - 0.259933984708725*alloc(2119,cowp_L)
     
      - 0.077458151072449*alloc(2119,grou_H) - 0.237355037342841*alloc(2119,grou_L) - 0.0580547785806668*alloc(2119,lent_H) - 0.237355037342841*alloc(2119,lent_L) - 0.0939063660020108*alloc(2119,maiz_H) - 0.3050918560351*alloc(2119,maiz_L)
     
      - 0.0706710223169802*alloc(2119,mill_H) - 0.3050918560351*alloc(2119,mill_L) - 0.237355037342841*alloc(2119,ofib_L) - 0.259933984708725*alloc(2119,ooil_L) - 0.0505919776121641*alloc(2119,opul_H) - 0.237355037342841*alloc(2119,opul_L)
     
      - 0.0746247489768225*alloc(2119,pige_H) - 0.3050918560351*alloc(2119,pige_L) - 0.147649419589881*alloc(2119,pota_H) - 0.101912037616123*alloc(2119,pota_L) - 0.121461363865252*alloc(2119,rest_H) - 0.3050918560351*alloc(2119,rest_L)
     
      - 0.0723003328429154*alloc(2119,rice_H) - 0.237355037342841*alloc(2119,rice_L) - 0.3050918560351*alloc(2119,sorg_L) - 0.3050918560351*alloc(2119,soyb_L) - 0.259933984708725*alloc(2119,sunf_L) - 0.181136861603215*alloc(2119,temf_H)
     
      - 0.3050918560351*alloc(2119,temf_L) - 0.122647611959335*alloc(2119,toba_H) - 0.282512908669217*alloc(2119,toba_L) - 0.305238255140453*alloc(2119,vege_H) - 0.237355037342841*alloc(2119,vege_L) - 0.0813679907188965*alloc(2120,bean_H)
     
      - 0.296900834922611*alloc(2120,bean_L) - 0.164310905639255*alloc(2120,cass_L) - 0.0582660806853863*alloc(2120,chic_H) - 0.231372806455053*alloc(2120,chic_L) - 0.231372829860445*alloc(2120,cott_L) - 0.061733681615185*alloc(2120,cowp_H)
     
      - 0.253215513818095*alloc(2120,cowp_L) - 0.0764178161256837*alloc(2120,grou_H) - 0.231372806455053*alloc(2120,grou_L) - 0.0577176535654872*alloc(2120,lent_H) - 0.231372806455053*alloc(2120,lent_L) - 0.0928938271505982*alloc(2120,maiz_H)
     
      - 0.296900834922611*alloc(2120,maiz_L) - 0.0699324742745011*alloc(2120,mill_H) - 0.296900834922611*alloc(2120,mill_L) - 0.231372829860445*alloc(2120,ofib_L) - 0.253215513818095*alloc(2120,ooil_L) - 0.0502981891999533*alloc(2120,opul_H)
     
      - 0.231372806455053*alloc(2120,opul_L) - 0.0738120355065266*alloc(2120,pige_H) - 0.296900834922611*alloc(2120,pige_L) - 0.146985842942876*alloc(2120,pota_H) - 0.100286100159441*alloc(2120,pota_L) - 0.120151715168417*alloc(2120,rest_H)
     
      - 0.296900834922611*alloc(2120,rest_L) - 0.0716267096675328*alloc(2120,rice_H) - 0.231372829860445*alloc(2120,rice_L) - 0.296900834922611*alloc(2120,sorg_L) - 0.296900834922611*alloc(2120,soyb_L) - 0.253215513818095*alloc(2120,sunf_L)
     
      - 0.179183766008053*alloc(2120,temf_H) - 0.296900834922611*alloc(2120,temf_L) - 0.121439808902979*alloc(2120,toba_H) - 0.275058197775745*alloc(2120,toba_L) - 0.302208029562009*alloc(2120,vege_H) - 0.231372829860445*alloc(2120,vege_L)
     
      - 0.075044459983254*alloc(2121,bean_H) - 0.265210566440687*alloc(2121,bean_L) - 0.147683481287186*alloc(2121,cass_L) - 0.0531881494662646*alloc(2121,chic_H) - 0.169832939714484*alloc(2121,chic_L) - 0.207965589085973*alloc(2121,cott_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0573054885428933*alloc(2121,cowp_H) - 0.227047256006008*alloc(2121,cowp_L) - 0.0713148143738179*alloc(2121,grou_H) - 0.207965589085973*alloc(2121,grou_L) - 0.0526875181678931*alloc(2121,lent_H) - 0.169832939714484*alloc(2121,lent_L)
     
      - 0.0859459382430379*alloc(2121,maiz_H) - 0.265210566440687*alloc(2121,maiz_L) - 0.0646235734792915*alloc(2121,mill_H) - 0.265210566440687*alloc(2121,mill_L) - 0.207965589085973*alloc(2121,ofib_L) - 0.227047256006008*alloc(2121,ooil_L)
     
      - 0.0459146655065913*alloc(2121,opul_H) - 0.169832939714484*alloc(2121,opul_L) - 0.0683316002713955*alloc(2121,pige_H) - 0.265210566440687*alloc(2121,pige_L) - 0.132153518491298*alloc(2121,pota_H) - 0.0935062895883857*alloc(2121,pota_L)
     
      - 0.111165103305719*alloc(2121,rest_H) - 0.265210566440687*alloc(2121,rest_L) - 0.0659963215699901*alloc(2121,rice_H) - 0.207965589085973*alloc(2121,rice_L) - 0.265210566440687*alloc(2121,sorg_L) - 0.265210566440687*alloc(2121,soyb_L)
     
      - 0.227047256006008*alloc(2121,sunf_L) - 0.165781918560817*alloc(2121,temf_H) - 0.265210566440687*alloc(2121,temf_L) - 0.112189788420345*alloc(2121,toba_H) - 0.246128922926044*alloc(2121,toba_L) - 0.279061789043544*alloc(2121,vege_H)
     
      - 0.207965589085973*alloc(2121,vege_L) - 0.0754516281114816*alloc(2122,bean_H) - 0.280396078228697*alloc(2122,bean_L) - 0.154892774945479*alloc(2122,cass_L) - 0.0531469964624353*alloc(2122,chic_H) - 0.171428169297192*alloc(2122,chic_L)
     
      - 0.218672151487417*alloc(2122,cott_L) - 0.0575473088673122*alloc(2122,cowp_H) - 0.233152107741167*alloc(2122,cowp_L) - 0.0715238459909092*alloc(2122,grou_H) - 0.218672151487417*alloc(2122,grou_L) - 0.0526467525150422*alloc(2122,lent_H)
     
      - 0.171428169297192*alloc(2122,lent_L) - 0.0863624146766215*alloc(2122,maiz_H) - 0.280396101634088*alloc(2122,maiz_L) - 0.06489163283922*alloc(2122,mill_H) - 0.280396101634088*alloc(2122,mill_L) - 0.218672151487417*alloc(2122,ofib_L)
     
      - 0.233152107741167*alloc(2122,ooil_L) - 0.045879140179533*alloc(2122,opul_H) - 0.171428169297192*alloc(2122,opul_L) - 0.0688596695464252*alloc(2122,pige_H) - 0.280396101634088*alloc(2122,pige_L) - 0.131368676618282*alloc(2122,pota_H)
     
      - 0.0955923711954961*alloc(2122,pota_L) - 0.111703786653765*alloc(2122,rest_H) - 0.280396101634088*alloc(2122,rest_L) - 0.0661998361693469*alloc(2122,rice_H) - 0.218672151487417*alloc(2122,rice_L) - 0.280396101634088*alloc(2122,sorg_L)
     
      - 0.280396101634088*alloc(2122,soyb_L) - 0.233152107741167*alloc(2122,sunf_L) - 0.166585263821876*alloc(2122,temf_H) - 0.280396101634088*alloc(2122,temf_L) - 0.113348402586177*alloc(2122,toba_H) - 0.265885437506364*alloc(2122,toba_L)
     
      - 0.278917947505019*alloc(2122,vege_H) - 0.218672151487417*alloc(2122,vege_L) - 0.0528284408520604*alloc(2123,bean_H) - 0.136639436542119*alloc(2123,bean_L) - 0.097739827591119*alloc(2123,cass_L) - 0.0354057491844578*alloc(2123,chic_H)
     
      - 0.0978011848255878*alloc(2123,chic_L) - 0.136455353136017*alloc(2123,cott_L) - 0.0402201704274007*alloc(2123,cowp_H) - 0.136639424839423*alloc(2123,cowp_L) - 0.0493866818864972*alloc(2123,grou_H) - 0.136455353136017*alloc(2123,grou_L)
     
      - 0.035072494007094*alloc(2123,lent_H) - 0.0978011848255878*alloc(2123,lent_L) - 0.0608690931408209*alloc(2123,maiz_H) - 0.175109521446446*alloc(2123,maiz_L) - 0.0455811274310857*alloc(2123,mill_H) - 0.175109521446446*alloc(2123,mill_L)
     
      - 0.136455353136017*alloc(2123,ofib_L) - 0.136639424839423*alloc(2123,ooil_L) - 0.0305640099745477*alloc(2123,opul_H) - 0.0978011848255878*alloc(2123,opul_L) - 0.0485965869245706*alloc(2123,pige_H) - 0.175109521446446*alloc(2123,pige_L)
     
      - 0.0832817262259925*alloc(2123,pota_H) - 0.0616319259976637*alloc(2123,pota_L) - 0.0787299454220908*alloc(2123,rest_H) - 0.175109521446446*alloc(2123,rest_L) - 0.0456930910849375*alloc(2123,rice_H) - 0.136455353136017*alloc(2123,rice_L)
     
      - 0.175109521446446*alloc(2123,sorg_L) - 0.175109521446446*alloc(2123,soyb_L) - 0.136639424839423*alloc(2123,sunf_L) - 0.117410959124177*alloc(2123,temf_H) - 0.175109521446446*alloc(2123,temf_L) - 0.0805952641851898*alloc(2123,toba_H)
     
      - 0.174894753571762*alloc(2123,toba_L) - 0.191132026531124*alloc(2123,vege_H) - 0.136455353136017*alloc(2123,vege_L) - 0.0368919751878842*alloc(2124,bean_H) - 0.115870463228237*alloc(2124,bean_L) - 0.0613558184425543*alloc(2124,cass_L)
     
      - 0.0258205174156019*alloc(2124,chic_H) - 0.0790569709924346*alloc(2124,chic_L) - 0.10307776655755*alloc(2124,cott_L) - 0.0285939257807455*alloc(2124,cowp_H) - 0.104396917841889*alloc(2124,cowp_L) - 0.0356660841092338*alloc(2124,grou_H)
     
      - 0.10307776655755*alloc(2124,grou_L) - 0.0255774828432749*alloc(2124,lent_H) - 0.0790569709924346*alloc(2124,lent_L) - 0.0428859451967947*alloc(2124,maiz_H) - 0.115870463228237*alloc(2124,maiz_L) - 0.0322380690602341*alloc(2124,mill_H)
     
      - 0.104396917841889*alloc(2124,mill_L) - 0.10307776655755*alloc(2124,ofib_L) - 0.104396917841889*alloc(2124,ooil_L) - 0.0222895594646778*alloc(2124,opul_H) - 0.0790569709924346*alloc(2124,opul_L) - 0.0339635703613383*alloc(2124,pige_H)
     
      - 0.115870463228237*alloc(2124,pige_L) - 0.0609832137069189*alloc(2124,pota_H) - 0.0443909322265814*alloc(2124,pota_L) - 0.0554699922488921*alloc(2124,rest_H) - 0.115870463228237*alloc(2124,rest_L) - 0.0320778820969864*alloc(2124,rice_H)
     
      - 0.0905305105274346*alloc(2124,rice_L) - 0.115870463228237*alloc(2124,sorg_L) - 0.115870463228237*alloc(2124,soyb_L) - 0.104396917841889*alloc(2124,sunf_L) - 0.0827230980237115*alloc(2124,temf_H) - 0.115870463228237*alloc(2124,temf_L)
     
      - 0.0544579299860662*alloc(2124,toba_H) - 0.102004044211087*alloc(2124,toba_L) - 0.139666646191445*alloc(2124,vege_H) - 0.104396917841889*alloc(2124,vege_L) - 0.0584707327003814*alloc(2127,bean_H) - 0.124398943278956*alloc(2127,bean_L)
     
      - 0.109704184042434*alloc(2127,cass_L) - 0.0326327009104288*alloc(2127,chic_H) - 0.0733815379796856*alloc(2127,chic_L) - 0.00260763144848227*alloc(2127,coff_L) - 0.108293014460436*alloc(2127,cott_L) - 0.0486508160219998*alloc(2127,cowp_H)
     
      - 0.163850743934783*alloc(2127,cowp_L) - 0.0609168010287183*alloc(2127,grou_H) - 0.118815540266562*alloc(2127,grou_L) - 0.0323255469374086*alloc(2127,lent_H) - 0.0733815379796856*alloc(2127,lent_L) - 0.072286695013364*alloc(2127,maiz_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.129491488415599*alloc(2127,maiz_L) - 0.0458568087139518*alloc(2127,mill_H) - 0.129491488415599*alloc(2127,mill_L) - 0.108293014460436*alloc(2127,ofib_L) - 0.12715996031657*alloc(2127,ooil_L) - 0.028170176287658*alloc(2127,opul_H)
     
      - 0.0733815379796856*alloc(2127,opul_L) - 0.0568604902622546*alloc(2127,pige_H) - 0.129491488415599*alloc(2127,pige_L) - 0.0745000269905285*alloc(2127,pota_H) - 0.0677368069895626*alloc(2127,pota_L) - 0.0934978206423912*alloc(2127,rest_H)
     
      - 0.129491488415599*alloc(2127,rest_L) - 0.0554079275691906*alloc(2127,rice_H) - 0.12556470732847*alloc(2127,rice_L) - 0.129430131181131*alloc(2127,sorg_L) - 0.129491488415599*alloc(2127,soyb_L) - 0.12715996031657*alloc(2127,sunf_L)
     
      - 0.139434477425196*alloc(2127,temf_H) - 0.129491488415599*alloc(2127,temf_L) - 0.0922264724991275*alloc(2127,toba_H) - 0.145873460424401*alloc(2127,toba_L) - 0.0034666157255649*alloc(2127,trof_L) - 0.22481481713168*alloc(2127,vege_H)
     
      - 0.121331128366301*alloc(2127,vege_L) - 0.0654815459951567*alloc(2150,bean_H) - 0.156303979635564*alloc(2150,bean_L) - 0.135627059727429*alloc(2150,cass_L) - 0.0458241038666386*alloc(2150,chic_H) - 0.0932608606505107*alloc(2150,chic_L)
     
      - 0.00245423324238093*alloc(2150,coff_L) - 0.12875521330467*alloc(2150,cott_L) - 0.0532865343613681*alloc(2150,cowp_H) - 0.178330723593925*alloc(2150,cowp_L) - 0.0653024912798191*alloc(2150,grou_H) - 0.118631491968547*alloc(2150,grou_L)
     
      - 0.0453927863486261*alloc(2150,lent_H) - 0.0932608606505107*alloc(2150,lent_L) - 0.0762336352545944*alloc(2150,maiz_H) - 0.156303979635564*alloc(2150,maiz_L) - 0.0571046658071978*alloc(2150,mill_H) - 0.156303979635564*alloc(2150,mill_L)
     
      - 0.12875521330467*alloc(2150,ofib_L) - 0.156303979635564*alloc(2150,ooil_L) - 0.039557653768543*alloc(2150,opul_H) - 0.0932608606505107*alloc(2150,opul_L) - 0.0615634406014401*alloc(2150,pige_H) - 0.156303979635564*alloc(2150,pige_L)
     
      - 0.116317626638605*alloc(2150,pota_H) - 0.0832598596346732*alloc(2150,pota_L) - 0.0986029137814892*alloc(2150,rest_H) - 0.156303979635564*alloc(2150,rest_L) - 0.0616236812039553*alloc(2150,rice_H) - 0.156303979635564*alloc(2150,rice_L)
     
      - 0.166059557564875*alloc(2150,sorg_L) - 0.156303979635564*alloc(2150,soyb_L) - 0.156303979635564*alloc(2150,sunf_L) - 0.14704776711651*alloc(2150,temf_H) - 0.156303979635564*alloc(2150,temf_L) - 0.103758987597092*alloc(2150,toba_H)
     
      - 0.161396513069512*alloc(2150,toba_L) - 0.00245423324238093*alloc(2150,trof_L) - 0.255974321454516*alloc(2150,vege_H) - 0.14817432746024*alloc(2150,vege_L) - 0.0681076803294982*alloc(2151,bean_H) - 0.159525158377651*alloc(2151,bean_L)
     
      - 0.140474164223501*alloc(2151,cass_L) - 0.0472621341796546*alloc(2151,chic_H) - 0.0952549239599618*alloc(2151,chic_L) - 0.00227016629319487*alloc(2151,coff_L) - 0.131945707578174*alloc(2151,cott_L) - 0.0555265772106451*alloc(2151,cowp_H)
     
      - 0.180815627225082*alloc(2151,cowp_L) - 0.0682507373323394*alloc(2151,grou_H) - 0.122803690290856*alloc(2151,grou_L) - 0.046817281259679*alloc(2151,lent_H) - 0.0952549239599618*alloc(2151,lent_L) - 0.0795750054147458*alloc(2151,maiz_H)
     
      - 0.159525158377651*alloc(2151,maiz_L) - 0.0593638063600451*alloc(2151,mill_H) - 0.159525158377651*alloc(2151,mill_L) - 0.131945707578174*alloc(2151,ofib_L) - 0.159525158377651*alloc(2151,ooil_L) - 0.0407990333140439*alloc(2151,opul_H)
     
      - 0.0952549239599618*alloc(2151,opul_L) - 0.0643110487387572*alloc(2151,pige_H) - 0.159525158377651*alloc(2151,pige_L) - 0.120828543916762*alloc(2151,pota_H) - 0.0861129008212951*alloc(2151,pota_L) - 0.102924744069565*alloc(2151,rest_H)
     
      - 0.159525158377651*alloc(2151,rest_L) - 0.0642964517026539*alloc(2151,rice_H) - 0.159525158377651*alloc(2151,rice_L) - 0.168667175664969*alloc(2151,sorg_L) - 0.159525158377651*alloc(2151,soyb_L) - 0.159525158377651*alloc(2151,sunf_L)
     
      - 0.15349296705377*alloc(2151,temf_H) - 0.159525158377651*alloc(2151,temf_L) - 0.108240932582885*alloc(2151,toba_H) - 0.165323282453945*alloc(2151,toba_L) - 0.00227016629319487*alloc(2151,trof_L) - 0.266916894779604*alloc(2151,vege_H)
     
      - 0.151947709609849*alloc(2151,vege_L) - 0.0698505624692014*alloc(2152,bean_H) - 0.155383644523925*alloc(2152,bean_L) - 0.128969957773963*alloc(2152,cass_L) - 0.0490704741162509*alloc(2152,chic_H) - 0.0925859486253982*alloc(2152,chic_L)
     
      - 0.00315982553041941*alloc(2152,coff_L) - 0.129552833947372*alloc(2152,cott_L) - 0.0566459435406885*alloc(2152,cowp_H) - 0.178023937421581*alloc(2152,cowp_L) - 0.0694324982723344*alloc(2152,grou_H) - 0.116852178979737*alloc(2152,grou_L)
     
      - 0.048608600270008*alloc(2152,lent_H) - 0.0925859486253982*alloc(2152,lent_L) - 0.0812744370666527*alloc(2152,maiz_H) - 0.155383644523925*alloc(2152,maiz_L) - 0.0609069611180029*alloc(2152,mill_H) - 0.155383644523925*alloc(2152,mill_L)
     
      - 0.129552833947372*alloc(2152,ofib_L) - 0.155383644523925*alloc(2152,ooil_L) - 0.04236008261063*alloc(2152,opul_H) - 0.0925859486253982*alloc(2152,opul_L) - 0.0654954388851929*alloc(2152,pige_H) - 0.155383644523925*alloc(2152,pige_L)
     
      - 0.125000827822239*alloc(2152,pota_H) - 0.0798852936577628*alloc(2152,pota_L) - 0.105122840908197*alloc(2152,rest_H) - 0.155383644523925*alloc(2152,rest_L) - 0.0654733493655161*alloc(2152,rice_H) - 0.155383644523925*alloc(2152,rice_L)
     
      - 0.167992257788509*alloc(2152,sorg_L) - 0.155383644523925*alloc(2152,soyb_L) - 0.155383644523925*alloc(2152,sunf_L) - 0.156771016551809*alloc(2152,temf_H) - 0.155383644523925*alloc(2152,temf_L) - 0.110034184075937*alloc(2152,toba_H)
     
      - 0.156518724104857*alloc(2152,toba_L) - 0.00315982553041941*alloc(2152,trof_L) - 0.272574580997837*alloc(2152,vege_H) - 0.144861118717798*alloc(2152,vege_L) - 0.0704255410399359*alloc(2153,bean_H) - 0.154248564942992*alloc(2153,bean_L)
     
      - 0.12648504244011*alloc(2153,cass_L) - 0.0500127753200211*alloc(2153,chic_H) - 0.0918496852171649*alloc(2153,chic_L) - 0.00340524825123725*alloc(2153,coff_L) - 0.128233682663034*alloc(2153,cott_L) - 0.0570302859279707*alloc(2153,cowp_H)
     
      - 0.176858185074762*alloc(2153,cowp_L) - 0.0698784206170748*alloc(2153,grou_H) - 0.115195580459864*alloc(2153,grou_L) - 0.0495420321019382*alloc(2153,lent_H) - 0.0918496852171649*alloc(2153,lent_L) - 0.0816699567369413*alloc(2153,maiz_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.154248564942992*alloc(2153,maiz_L) - 0.0612857542802133*alloc(2153,mill_H) - 0.154248564942992*alloc(2153,mill_L) - 0.128233682663034*alloc(2153,ofib_L) - 0.154248564942992*alloc(2153,ooil_L) - 0.0431735240447038*alloc(2153,opul_H)
     
      - 0.0918496852171649*alloc(2153,opul_L) - 0.0657533977068672*alloc(2153,pige_H) - 0.154248564942992*alloc(2153,pige_L) - 0.128553268215145*alloc(2153,pota_H) - 0.0786888568423617*alloc(2153,pota_L) - 0.105634418138091*alloc(2153,rest_H)
     
      - 0.154248564942992*alloc(2153,rest_L) - 0.0659637143819383*alloc(2153,rice_H) - 0.154248553240296*alloc(2153,rice_L) - 0.167808209490494*alloc(2153,sorg_L) - 0.154248564942992*alloc(2153,soyb_L) - 0.154248564942992*alloc(2153,sunf_L)
     
      - 0.157533938117498*alloc(2153,temf_H) - 0.154248564942992*alloc(2153,temf_L) - 0.110563510095633*alloc(2153,toba_H) - 0.154463309412285*alloc(2153,toba_L) - 0.00340524825123725*alloc(2153,trof_L) - 0.274377972338054*alloc(2153,vege_H)
     
      - 0.142928418494164*alloc(2153,vege_L) - 0.0706671141518475*alloc(2154,bean_H) - 0.172778075266288*alloc(2154,bean_L) - 0.139093679110086*alloc(2154,cass_L) - 0.0509427905629929*alloc(2154,chic_H) - 0.104090225291112*alloc(2154,chic_L)
     
      - 0.00236219848780554*alloc(2154,coff_L) - 0.140965057207339*alloc(2154,cott_L) - 0.0568409422875203*alloc(2154,cowp_H) - 0.188638540038846*alloc(2154,cowp_L) - 0.0695945292806488*alloc(2154,grou_H) - 0.131148110340864*alloc(2154,grou_L)
     
      - 0.0504632936141773*alloc(2154,lent_H) - 0.104090225291112*alloc(2154,lent_L) - 0.0813644916828449*alloc(2154,maiz_H) - 0.172778075266288*alloc(2154,maiz_L) - 0.0610309233602636*alloc(2154,mill_H) - 0.172778040158201*alloc(2154,mill_L)
     
      - 0.140965057207339*alloc(2154,ofib_L) - 0.168237721834472*alloc(2154,ooil_L) - 0.0439763596241624*alloc(2154,opul_H) - 0.104090225291112*alloc(2154,opul_L) - 0.0654592000585886*alloc(2154,pige_H) - 0.172778075266288*alloc(2154,pige_L)
     
      - 0.13366421785462*alloc(2154,pota_H) - 0.0852846366694462*alloc(2154,pota_L) - 0.105239320301136*alloc(2154,rest_H) - 0.172778075266288*alloc(2154,rest_L) - 0.0660539383295107*alloc(2154,rice_H) - 0.165967550969911*alloc(2154,rice_L)
     
      - 0.182257539789141*alloc(2154,sorg_L) - 0.172778075266288*alloc(2154,soyb_L) - 0.168237721834472*alloc(2154,sunf_L) - 0.156944723737428*alloc(2154,temf_H) - 0.172778075266288*alloc(2154,temf_L) - 0.110678623028048*alloc(2154,toba_H)
     
      - 0.17449603102063*alloc(2154,toba_L) - 0.00236219848780554*alloc(2154,trof_L) - 0.273536227895402*alloc(2154,vege_H) - 0.158083327732462*alloc(2154,vege_L) - 0.0788124223478312*alloc(2155,bean_H) - 0.306717805194478*alloc(2155,bean_L)
     
      - 0.170385143122007*alloc(2155,cass_L) - 0.0572874364105092*alloc(2155,chic_H) - 0.238582135221433*alloc(2155,chic_L) - 2.18174209851463E-12*alloc(2155,coff_L) - 0.238582135221433*alloc(2155,cott_L) - 0.0589732393658538*alloc(2155,cowp_H)
     
      - 0.261283797056254*alloc(2155,cowp_L) - 0.0716554511585434*alloc(2155,grou_H) - 0.193117477722714*alloc(2155,grou_L) - 0.0567482207401322*alloc(2155,lent_H) - 0.238582135221433*alloc(2155,lent_L) - 0.0895445984416451*alloc(2155,maiz_H)
     
      - 0.306717805194478*alloc(2155,maiz_L) - 0.0674990917502539*alloc(2155,mill_H) - 0.238582158626825*alloc(2155,mill_L) - 0.238582135221433*alloc(2155,ofib_L) - 0.261283797056254*alloc(2155,ooil_L) - 0.0494533746128351*alloc(2155,opul_H)
     
      - 0.238582135221433*alloc(2155,opul_L) - 0.0716139641665397*alloc(2155,pige_H) - 0.306717805194478*alloc(2155,pige_L) - 0.146248294520753*alloc(2155,pota_H) - 0.170415780779806*alloc(2155,pota_L) - 0.115819720393138*alloc(2155,rest_H)
     
      - 0.306717805194478*alloc(2155,rest_L) - 0.0691698366897598*alloc(2155,rice_H) - 0.238582135221433*alloc(2155,rice_L) - 0.306717805194478*alloc(2155,sorg_L) - 0.306717805194478*alloc(2155,soyb_L) - 0.261283797056254*alloc(2155,sunf_L)
     
      - 0.172723407643018*alloc(2155,temf_H) - 0.306717805194478*alloc(2155,temf_L) - 0.117341077762936*alloc(2155,toba_H) - 0.284016143359657*alloc(2155,toba_L) - 2.18174209851463E-12*alloc(2155,trof_L) - 0.291970773337426*alloc(2155,vege_H)
     
      - 0.238582135221433*alloc(2155,vege_L) - 0.080170647564349*alloc(2156,bean_H) - 0.306625751788731*alloc(2156,bean_L) - 0.170323785887538*alloc(2156,cass_L) - 0.0579021790050715*alloc(2156,chic_H) - 0.238490105221078*alloc(2156,chic_L)
     
      - 0.238490105221078*alloc(2156,cott_L) - 0.0603613057794786*alloc(2156,cowp_H) - 0.261222451524481*alloc(2156,cowp_L) - 0.0740334019773059*alloc(2156,grou_H) - 0.193086816659524*alloc(2156,grou_L) - 0.0573571770949705*alloc(2156,lent_H)
     
      - 0.238490105221078*alloc(2156,lent_L) - 0.091336034522707*alloc(2156,maiz_H) - 0.306625751788731*alloc(2156,maiz_L) - 0.0687804921228626*alloc(2156,mill_H) - 0.306625751788731*alloc(2156,mill_L) - 0.238490105221078*alloc(2156,ofib_L)
     
      - 0.261222451524481*alloc(2156,ooil_L) - 0.0499840511053475*alloc(2156,opul_H) - 0.238490105221078*alloc(2156,opul_L) - 0.0728582904820345*alloc(2156,pige_H) - 0.306625751788731*alloc(2156,pige_L) - 0.147510027970407*alloc(2156,pota_H)
     
      - 0.102218812085771*alloc(2156,pota_L) - 0.118136818572388*alloc(2156,rest_H) - 0.306625751788731*alloc(2156,rest_L) - 0.0704335050037357*alloc(2156,rice_H) - 0.238490105221078*alloc(2156,rice_L) - 0.306625751788731*alloc(2156,sorg_L)
     
      - 0.306625751788731*alloc(2156,soyb_L) - 0.261222451524481*alloc(2156,sunf_L) - 0.17617892533901*alloc(2156,temf_H) - 0.306625751788731*alloc(2156,temf_L) - 0.119454152054402*alloc(2156,toba_H) - 0.283924113359302*alloc(2156,toba_L)
     
      - 0.297265292913009*alloc(2156,vege_H) - 0.238490105221078*alloc(2156,vege_L) - 0.0814707567557949*alloc(2157,bean_H) - 0.306503060725185*alloc(2157,bean_L) - 0.170231755887183*alloc(2157,cass_L) - 0.0584571189916878*alloc(2157,chic_H)
     
      - 0.238398075220723*alloc(2157,chic_L) - 0.238398075220723*alloc(2157,cott_L) - 0.0616647949923393*alloc(2157,cowp_H) - 0.261099737055544*alloc(2157,cowp_L) - 0.0762119520245946*alloc(2157,grou_H) - 0.238398075220723*alloc(2157,grou_L)
     
      - 0.0579068937314834*alloc(2157,lent_H) - 0.238398075220723*alloc(2157,lent_L) - 0.0930154797697192*alloc(2157,maiz_H) - 0.306503060725185*alloc(2157,maiz_L) - 0.0699896121648911*alloc(2157,mill_H) - 0.306503060725185*alloc(2157,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.238398075220723*alloc(2157,ofib_L) - 0.261099737055544*alloc(2157,ooil_L) - 0.0504631030016328*alloc(2157,opul_H) - 0.238398075220723*alloc(2157,opul_L) - 0.0741797670390622*alloc(2157,pige_H) - 0.306503060725185*alloc(2157,pige_L)
     
      - 0.147728563747663*alloc(2157,pota_H) - 0.102188139319885*alloc(2157,pota_L) - 0.12030906438408*alloc(2157,rest_H) - 0.306503060725185*alloc(2157,rest_L) - 0.0716166985955893*alloc(2157,rice_H) - 0.238398075220723*alloc(2157,rice_L)
     
      - 0.306503060725185*alloc(2157,sorg_L) - 0.306503060725185*alloc(2157,soyb_L) - 0.261099737055544*alloc(2157,sunf_L) - 0.17941842287501*alloc(2157,temf_H) - 0.306503060725185*alloc(2157,temf_L) - 0.121533342646541*alloc(2157,toba_H)
     
      - 0.283801398890365*alloc(2157,toba_L) - 0.302314678301055*alloc(2157,vege_H) - 0.238398075220723*alloc(2157,vege_L) - 0.0825653204864236*alloc(2158,bean_H) - 0.30573611284837*alloc(2158,bean_L) - 0.169740909714129*alloc(2158,cass_L)
     
      - 0.0586137442617774*alloc(2158,chic_H) - 0.237845848407808*alloc(2158,chic_L) - 0.2378458718132*alloc(2158,cott_L) - 0.0629923928873193*alloc(2158,cowp_H) - 0.260455503647666*alloc(2158,cowp_L) - 0.0782313880738385*alloc(2158,grou_H)
     
      - 0.2378458718132*alloc(2158,grou_L) - 0.0580620447725745*alloc(2158,lent_H) - 0.237845848407808*alloc(2158,lent_L) - 0.0945399150960197*alloc(2158,maiz_H) - 0.30573611284837*alloc(2158,maiz_L) - 0.071056430797915*alloc(2158,mill_H)
     
      - 0.30573611284837*alloc(2158,mill_L) - 0.2378458718132*alloc(2158,ofib_L) - 0.260455503647666*alloc(2158,ooil_L) - 0.050598309752727*alloc(2158,opul_H) - 0.237845848407808*alloc(2158,opul_L) - 0.0751295595136004*alloc(2158,pige_H)
     
      - 0.30573611284837*alloc(2158,pige_L) - 0.146610329383392*alloc(2158,pota_H) - 0.102034740382365*alloc(2158,pota_L) - 0.122280815626726*alloc(2158,rest_H) - 0.30573611284837*alloc(2158,rest_L) - 0.0726017499110621*alloc(2158,rice_H)
     
      - 0.2378458718132*alloc(2158,rice_L) - 0.30573611284837*alloc(2158,sorg_L) - 0.30573611284837*alloc(2158,soyb_L) - 0.260455503647666*alloc(2158,sunf_L) - 0.182358920335185*alloc(2158,temf_H) - 0.30573611284837*alloc(2158,temf_L)
     
      - 0.123318622100411*alloc(2158,toba_H) - 0.283095796545322*alloc(2158,toba_L) - 0.306748466257669*alloc(2158,vege_H) - 0.2378458718132*alloc(2158,vege_L) - 0.0813260754860076*alloc(2159,bean_H) - 0.297084918328713*alloc(2159,bean_L)
     
      - 0.164034815638189*alloc(2159,cass_L) - 0.0568713433699019*alloc(2159,chic_H) - 0.187779515350891*alloc(2159,chic_L) - 0.231495544329382*alloc(2159,cott_L) - 0.0621452050827034*alloc(2159,cowp_H) - 0.253368889350223*alloc(2159,cowp_L)
     
      - 0.0773859578346589*alloc(2159,grou_H) - 0.231495544329382*alloc(2159,grou_L) - 0.0563360441583837*alloc(2159,lent_H) - 0.187779515350891*alloc(2159,lent_L) - 0.0935577938413061*alloc(2159,maiz_H) - 0.297084918328713*alloc(2159,maiz_L)
     
      - 0.0702033911629841*alloc(2159,mill_H) - 0.297084918328713*alloc(2159,mill_L) - 0.231495544329382*alloc(2159,ofib_L) - 0.253368889350223*alloc(2159,ooil_L) - 0.0490941823308923*alloc(2159,opul_H) - 0.187779515350891*alloc(2159,opul_L)
     
      - 0.0742418275632052*alloc(2159,pige_H) - 0.297084918328713*alloc(2159,pige_L) - 0.139826198833298*alloc(2159,pota_H) - 0.100316784628023*alloc(2159,pota_L) - 0.121010509979119*alloc(2159,rest_H) - 0.297084918328713*alloc(2159,rest_L)
     
      - 0.0715038737614501*alloc(2159,rice_H) - 0.231495544329382*alloc(2159,rice_L) - 0.297084918328713*alloc(2159,sorg_L) - 0.297084918328713*alloc(2159,soyb_L) - 0.253368889350223*alloc(2159,sunf_L) - 0.180464497524821*alloc(2159,temf_H)
     
      - 0.297084918328713*alloc(2159,temf_L) - 0.121735475934691*alloc(2159,toba_H) - 0.275211573307873*alloc(2159,toba_L) - 0.302741871360531*alloc(2159,vege_H) - 0.231495544329382*alloc(2159,vege_L) - 0.0792796249738279*alloc(2160,bean_H)
     
      - 0.290550507438794*alloc(2160,bean_L) - 0.160690922427165*alloc(2160,cass_L) - 0.0544378404397442*alloc(2160,chic_H) - 0.180662228287562*alloc(2160,chic_L) - 0.226648428130613*alloc(2160,cott_L) - 0.0605549406725389*alloc(2160,cowp_H)
     
      - 0.244533658235248*alloc(2160,cowp_L) - 0.0754084911683943*alloc(2160,grou_H) - 0.226648428130613*alloc(2160,grou_L) - 0.0539254464757997*alloc(2160,lent_H) - 0.180662228287562*alloc(2160,lent_L) - 0.0915486141466348*alloc(2160,maiz_H)
     
      - 0.290550530844185*alloc(2160,maiz_L) - 0.0685815789654465*alloc(2160,mill_H) - 0.290550530844185*alloc(2160,mill_L) - 0.226648428130613*alloc(2160,ofib_L) - 0.244533658235248*alloc(2160,ooil_L) - 0.0469934611332433*alloc(2160,opul_H)
     
      - 0.180662228287562*alloc(2160,opul_L) - 0.0726045827868362*alloc(2160,pige_H) - 0.290550530844185*alloc(2160,pige_L) - 0.132050340945743*alloc(2160,pota_H) - 0.0988749188747472*alloc(2160,pota_L) - 0.118411775555088*alloc(2160,rest_H)
     
      - 0.290550530844185*alloc(2160,rest_L) - 0.069649349385964*alloc(2160,rice_H) - 0.226648428130613*alloc(2160,rice_L) - 0.290550530844185*alloc(2160,sorg_L) - 0.290550530844185*alloc(2160,soyb_L) - 0.244533658235248*alloc(2160,sunf_L)
     
      - 0.176588972150089*alloc(2160,temf_H) - 0.290550530844185*alloc(2160,temf_L) - 0.119236407876628*alloc(2160,toba_H) - 0.272665300739551*alloc(2160,toba_L) - 0.294871717732443*alloc(2160,vege_H) - 0.226648428130613*alloc(2160,vege_L)
     
      - 0.0757844364108765*alloc(2161,bean_H) - 0.220574214053253*alloc(2161,bean_L) - 0.156610742402516*alloc(2161,cass_L) - 0.0513615340860668*alloc(2161,chic_H) - 0.157469731982383*alloc(2161,chic_L) - 0.219837927239628*alloc(2161,cott_L)
     
      - 0.0576569405235907*alloc(2161,cowp_H) - 0.220574190647861*alloc(2161,cowp_L) - 0.0715697133931525*alloc(2161,grou_H) - 0.219837927239628*alloc(2161,grou_L) - 0.0508780957308337*alloc(2161,lent_H) - 0.157469731982383*alloc(2161,lent_L)
     
      - 0.0873192249918725*alloc(2161,maiz_H) - 0.282942397607802*alloc(2161,maiz_L) - 0.0653694178643079*alloc(2161,mill_H) - 0.282942397607802*alloc(2161,mill_L) - 0.219837927239628*alloc(2161,ofib_L) - 0.220574190647861*alloc(2161,ooil_L)
     
      - 0.0443378399348693*alloc(2161,opul_H) - 0.157469731982383*alloc(2161,opul_L) - 0.0695400070274546*alloc(2161,pige_H) - 0.282942397607802*alloc(2161,pige_L) - 0.123661735205635*alloc(2161,pota_H) - 0.094549327466267*alloc(2161,pota_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.112941354358687*alloc(2161,rest_H) - 0.282942397607802*alloc(2161,rest_L) - 0.0663091275920916*alloc(2161,rice_H) - 0.219837927239628*alloc(2161,rice_L) - 0.282942397607802*alloc(2161,sorg_L) - 0.282942397607802*alloc(2161,soyb_L)
     
      - 0.220574190647861*alloc(2161,sunf_L) - 0.168430864126018*alloc(2161,temf_H) - 0.282942397607802*alloc(2161,temf_L) - 0.115560390482439*alloc(2161,toba_H) - 0.282175449730986*alloc(2161,toba_L) - 0.277083261412899*alloc(2161,vege_H)
     
      - 0.219837927239628*alloc(2161,vege_L) - 0.0644272890658394*alloc(2162,bean_H) - 0.23468602690019*alloc(2162,bean_L) - 0.129675525010918*alloc(2162,cass_L) - 0.0446907446261937*alloc(2162,chic_H) - 0.130503853527594*alloc(2162,chic_L)
     
      - 0.182533582979423*alloc(2162,cott_L) - 0.0490016218051054*alloc(2162,cowp_H) - 0.182932399152122*alloc(2162,cowp_L) - 0.0604544774995581*alloc(2162,grou_H) - 0.18225745787027*alloc(2162,grou_L) - 0.044270094806038*alloc(2162,lent_H)
     
      - 0.130503853527594*alloc(2162,lent_L) - 0.0735572055025276*alloc(2162,maiz_H) - 0.234686003494799*alloc(2162,maiz_L) - 0.0552773114280983*alloc(2162,mill_H) - 0.234686003494799*alloc(2162,mill_L) - 0.182533582979423*alloc(2162,ofib_L)
     
      - 0.182932399152122*alloc(2162,ooil_L) - 0.0385792815005467*alloc(2162,opul_H) - 0.130503853527594*alloc(2162,opul_L) - 0.0587419655790309*alloc(2162,pige_H) - 0.23468602690019*alloc(2162,pige_L) - 0.108916553461155*alloc(2162,pota_H)
     
      - 0.0795171619536461*alloc(2162,pota_L) - 0.0951411377399308*alloc(2162,rest_H) - 0.234686003494799*alloc(2162,rest_L) - 0.0560551607493056*alloc(2162,rice_H) - 0.182257469572966*alloc(2162,rice_L) - 0.23468602690019*alloc(2162,sorg_L)
     
      - 0.23468602690019*alloc(2162,soyb_L) - 0.182932399152122*alloc(2162,sunf_L) - 0.14188517690851*alloc(2162,temf_H) - 0.234686003494799*alloc(2162,temf_L) - 0.0979510221326132*alloc(2162,toba_H) - 0.234011085618338*alloc(2162,toba_L)
     
      - 0.233608828675529*alloc(2162,vege_H) - 0.182533582979423*alloc(2162,vege_L) - 0.0504344056940125*alloc(2163,bean_H) - 0.167255959272188*alloc(2163,bean_L) - 0.0865423780571846*alloc(2163,cass_L) - 0.0363923674474135*alloc(2163,chic_H)
     
      - 0.131178724593271*alloc(2163,chic_L) - 0.148082262351797*alloc(2163,cott_L) - 0.037733739469834*alloc(2163,cowp_H) - 0.151088696624591*alloc(2163,cowp_L) - 0.0459722330701887*alloc(2163,grou_H) - 0.115011497053762*alloc(2163,grou_L)
     
      - 0.0360498257656886*alloc(2163,lent_H) - 0.131178724593271*alloc(2163,lent_L) - 0.0572923827048737*alloc(2163,maiz_H) - 0.151088696624591*alloc(2163,maiz_L) - 0.0432739019533227*alloc(2163,mill_H) - 0.151088696624591*alloc(2163,mill_L)
     
      - 0.148082262351797*alloc(2163,ofib_L) - 0.151088696624591*alloc(2163,ooil_L) - 0.0314157081061971*alloc(2163,opul_H) - 0.131178724593271*alloc(2163,opul_L) - 0.0454210739075304*alloc(2163,pige_H) - 0.167255959272188*alloc(2163,pige_L)
     
      - 0.0920915693928578*alloc(2163,pota_H) - 0.095408281938046*alloc(2163,pota_L) - 0.0741037188285506*alloc(2163,rest_H) - 0.151088696624591*alloc(2163,rest_L) - 0.0436888545119685*alloc(2163,rice_H) - 0.131178724593271*alloc(2163,rice_L)
     
      - 0.167255959272188*alloc(2163,sorg_L) - 0.167255959272188*alloc(2163,soyb_L) - 0.151088696624591*alloc(2163,sunf_L) - 0.110511809143045*alloc(2163,temf_H) - 0.151088696624591*alloc(2163,temf_L) - 0.0732882460991351*alloc(2163,toba_H)
     
      - 0.147345987240868*alloc(2163,toba_L) - 0.189223129457706*alloc(2163,vege_H) - 0.151088696624591*alloc(2163,vege_L) - 0.0256316752433705*alloc(2164,bean_H) - 0.0833518837836805*alloc(2164,bean_L) - 0.0416299239659887*alloc(2164,cass_L)
     
      - 0.0166933786308579*alloc(2164,chic_H) - 0.0643929313325825*alloc(2164,chic_L) - 0.0820020538821075*alloc(2164,cott_L) - 0.0204694673652399*alloc(2164,cowp_H) - 0.0833518837836805*alloc(2164,cowp_L) - 0.026029222095218*alloc(2164,grou_H)
     
      - 0.0820020538821075*alloc(2164,grou_L) - 0.016536252881945*alloc(2164,lent_H) - 0.0643929313325825*alloc(2164,lent_L) - 0.031009001336776*alloc(2164,maiz_H) - 0.0833518837836805*alloc(2164,maiz_L) - 0.0231969261266028*alloc(2164,mill_H)
     
      - 0.0833518837836805*alloc(2164,mill_L) - 0.0820020538821075*alloc(2164,ofib_L) - 0.0833518837836805*alloc(2164,ooil_L) - 0.0144105576844117*alloc(2164,opul_H) - 0.0643929313325825*alloc(2164,opul_L) - 0.0243427635168049*alloc(2164,pige_H)
     
      - 0.0833518837836805*alloc(2164,pige_L) - 0.0389093737054802*alloc(2164,pota_H) - 0.0188975966794662*alloc(2164,pota_L) - 0.0401079900630337*alloc(2164,rest_H) - 0.0833518837836805*alloc(2164,rest_L) - 0.0224691848475462*alloc(2164,rice_H)
     
      - 0.0643929313325825*alloc(2164,rice_L) - 0.0833518837836805*alloc(2164,sorg_L) - 0.0833518837836805*alloc(2164,soyb_L) - 0.0833518837836805*alloc(2164,sunf_L) - 0.0598135506965867*alloc(2164,temf_H) - 0.0833518837836805*alloc(2164,temf_L)
     
      - 0.0365239628530564*alloc(2164,toba_H) - 0.0643929313325825*alloc(2164,toba_L) - 0.103652749073614*alloc(2164,vege_H) - 0.0833518837836805*alloc(2164,vege_L) - 0.0278260978825693*alloc(2165,bean_H) - 0.0601900895011274*alloc(2165,bean_L)
     
      - 0.0295121832055242*alloc(2165,cass_L) - 0.0191055216494438*alloc(2165,chic_H) - 0.0480109388440627*alloc(2165,chic_L) - 7.6387474909419E-17*alloc(2165,coff_L) - 0.0582880561920315*alloc(2165,cott_L) - 0.0215050149651843*alloc(2165,cowp_H)
     
      - 0.0601901070551712*alloc(2165,cowp_L) - 0.0276604799972253*alloc(2165,grou_H) - 0.0582880620433794*alloc(2165,grou_L) - 0.018925691702258*alloc(2165,lent_H) - 0.0480109388440627*alloc(2165,lent_L) - 0.0324002391051009*alloc(2165,maiz_H)
     
      - 0.0601900953524753*alloc(2165,maiz_L) - 0.0243165732870705*alloc(2165,mill_H) - 0.0601900953524753*alloc(2165,mill_L) - 0.0582880561920315*alloc(2165,ofib_L) - 0.0601900953524753*alloc(2165,ooil_L) - 0.0164928399402115*alloc(2165,opul_H)
     
      - 0.0480109388440627*alloc(2165,opul_L) - 0.025488683110679*alloc(2165,pige_H) - 0.0601900953524753*alloc(2165,pige_L) - 0.0451755628560483*alloc(2165,pota_H) - 0.0246037039209387*alloc(2165,pota_L) - 0.0419074595132514*alloc(2165,rest_H)
     
      - 0.0601900953524753*alloc(2165,rest_L) - 0.0239345929130159*alloc(2165,rice_H) - 0.0480109622494544*alloc(2165,rice_L) - 0.0601900953524753*alloc(2165,sorg_L) - 0.0601900953524753*alloc(2165,soyb_L) - 0.0601900953524753*alloc(2165,sunf_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0624971221500154*alloc(2165,temf_H) - 0.0601900953524753*alloc(2165,temf_L) - 0.0388456031044699*alloc(2165,toba_H) - 0.0480109710264763*alloc(2165,toba_L) - 1.01550409104732E-16*alloc(2165,trof_L) - 0.10901823211398*alloc(2165,vege_H)
     
      - 0.0601900953524753*alloc(2165,vege_L) - 0.0485310256630472*alloc(2166,bean_H) - 0.100715612503418*alloc(2166,bean_L) - 0.0942118685280367*alloc(2166,cass_L) - 0.0279317124485737*alloc(2166,chic_H) - 0.0573063228864876*alloc(2166,chic_L)
     
      - 5.88456176514323E-9*alloc(2166,coff_L) - 0.0965127121584836*alloc(2166,cott_L) - 0.0404232985395127*alloc(2166,cowp_H) - 0.132436565453924*alloc(2166,cowp_L) - 0.0504214752015129*alloc(2166,grou_H) - 0.103231188900462*alloc(2166,grou_L)
     
      - 0.0276688063386753*alloc(2166,lent_H) - 0.0573063228864876*alloc(2166,lent_L) - 0.0596629198406702*alloc(2166,maiz_H) - 0.104028832948556*alloc(2166,maiz_L) - 0.0380961684038711*alloc(2166,mill_H) - 0.104028832948556*alloc(2166,mill_L)
     
      - 0.0965127121584836*alloc(2166,ofib_L) - 0.104028809543164*alloc(2166,ooil_L) - 0.0241120483974721*alloc(2166,opul_H) - 0.0573063228864876*alloc(2166,opul_L) - 0.0472267511545484*alloc(2166,pige_H) - 0.104028832948556*alloc(2166,pige_L)
     
      - 0.0695174842554761*alloc(2166,pota_H) - 0.054146495527522*alloc(2166,pota_L) - 0.0771698440111703*alloc(2166,rest_H) - 0.104028832948556*alloc(2166,rest_L) - 0.0463608927191355*alloc(2166,rice_H) - 0.100715612503418*alloc(2166,rice_L)
     
      - 0.104028832948556*alloc(2166,sorg_L) - 0.104028832948556*alloc(2166,soyb_L) - 0.104028809543164*alloc(2166,sunf_L) - 0.115084360242327*alloc(2166,temf_H) - 0.104028832948556*alloc(2166,temf_L) - 0.0773089105895154*alloc(2166,toba_H)
     
      - 0.124920473920592*alloc(2166,toba_L) - 7.82850540080241E-9*alloc(2166,trof_L) - 0.185367854876213*alloc(2166,vege_H) - 0.104028809543164*alloc(2166,vege_L) - 0.066526015161271*alloc(2167,bean_H) - 0.131546903108171*alloc(2167,bean_L)
     
      - 0.0723385235071961*alloc(2167,cass_L) - 0.0138357403999157*alloc(2167,coff_L) - 0.0756517381009857*alloc(2167,cott_L) - 0.0542573861876804*alloc(2167,cowp_H) - 0.149830937682809*alloc(2167,cowp_L) - 0.0685044539008439*alloc(2167,grou_H)
     
      - 0.0958071273674847*alloc(2167,grou_L) - 0.0829611021807727*alloc(2167,maiz_H) - 0.149830937682809*alloc(2167,maiz_L) - 0.0519940081899029*alloc(2167,mill_H) - 0.149830937682809*alloc(2167,mill_L) - 0.0756517381009857*alloc(2167,ofib_L)
     
      - 0.105624062531264*alloc(2167,ooil_L) - 0.0641482303308875*alloc(2167,pige_H) - 0.143756711902753*alloc(2167,pige_L) - 0.107304425116668*alloc(2167,rest_H) - 0.149830937682809*alloc(2167,rest_L) - 0.0604121976919578*alloc(2167,rice_H)
     
      - 0.137375699950353*alloc(2167,rice_L) - 0.150260426621394*alloc(2167,sorg_L) - 0.149830937682809*alloc(2167,soyb_L) - 0.105624062531264*alloc(2167,sunf_L) - 0.160024440556533*alloc(2167,temf_H) - 0.149830937682809*alloc(2167,temf_L)
     
      - 0.0972574543548285*alloc(2167,toba_H) - 0.126730471377985*alloc(2167,toba_L) - 0.0184067490435751*alloc(2167,trof_L) - 0.24179169301168*alloc(2167,vege_H) - 0.0907759511680055*alloc(2167,vege_L) - 0.0613894760908365*alloc(2189,bean_H)
     
      - 0.158451436031187*alloc(2189,bean_L) - 0.150260426621394*alloc(2189,cass_L) - 0.043164085624144*alloc(2189,chic_H) - 0.0950401794906691*alloc(2189,chic_L) - 0.000920337580176989*alloc(2189,coff_L) - 0.140535533160666*alloc(2189,cott_L)
     
      - 0.0496699080698377*alloc(2189,cowp_H) - 0.171305478233646*alloc(2189,cowp_L) - 0.0628726619114784*alloc(2189,grou_H) - 0.137222312715529*alloc(2189,grou_L) - 0.0427578054198902*alloc(2189,lent_H) - 0.0950401794906691*alloc(2189,lent_L)
     
      - 0.0715468942408071*alloc(2189,maiz_H) - 0.158175334327426*alloc(2189,maiz_L) - 0.0536115582243502*alloc(2189,mill_H) - 0.158451436031187*alloc(2189,mill_L) - 0.140535533160666*alloc(2189,ofib_L) - 0.158819567735304*alloc(2189,ooil_L)
     
      - 0.0372613932467695*alloc(2189,opul_H) - 0.0950401794906691*alloc(2189,opul_L) - 0.0578095890222826*alloc(2189,pige_H) - 0.172225813345286*alloc(2189,pige_L) - 0.113778115981001*alloc(2189,pota_H) - 0.0911440828721222*alloc(2189,pota_L)
     
      - 0.0925409397124932*alloc(2189,rest_H) - 0.158175334327426*alloc(2189,rest_L) - 0.0579904585576317*alloc(2189,rice_H) - 0.158175334327426*alloc(2189,rice_L) - 0.176336654433126*alloc(2189,sorg_L) - 0.158819567735304*alloc(2189,soyb_L)
     
      - 0.158819567735304*alloc(2189,sunf_L) - 0.138007468843586*alloc(2189,temf_H) - 0.158175334327426*alloc(2189,temf_L) - 0.0976285941558517*alloc(2189,toba_H) - 0.177778520186402*alloc(2189,toba_L) - 0.000920337580176989*alloc(2189,trof_L)
     
      - 0.237720350379544*alloc(2189,vege_H) - 0.155414317289811*alloc(2189,vege_L) - 0.0727054707656619*alloc(2193,bean_H) - 0.188945326211189*alloc(2193,bean_L) - 0.145904180001071*alloc(2193,cass_L) - 0.052792725419139*alloc(2193,chic_H)
     
      - 0.123908143916685*alloc(2193,chic_L) - 0.00184067424608086*alloc(2193,coff_L) - 0.152960121532628*alloc(2193,cott_L) - 0.057856039327148*alloc(2193,cowp_H) - 0.197596485622758*alloc(2193,cowp_L) - 0.0710273979745085*alloc(2193,grou_H)
     
      - 0.145106559358369*alloc(2193,grou_L) - 0.0522958160335639*alloc(2193,lent_H) - 0.123908143916685*alloc(2193,lent_L) - 0.0834578292771306*alloc(2193,maiz_H) - 0.188945326211189*alloc(2193,maiz_L) - 0.0628007848597684*alloc(2193,mill_H)
     
      - 0.17529362825794*alloc(2193,mill_L) - 0.152960121532628*alloc(2193,ofib_L) - 0.179864654455643*alloc(2193,ooil_L) - 0.0455733157315149*alloc(2193,opul_H) - 0.123908143916685*alloc(2193,opul_L) - 0.067080999196785*alloc(2193,pige_H)
     
      - 0.188945326211189*alloc(2193,pige_L) - 0.139177373829855*alloc(2193,pota_H) - 0.0889353102014661*alloc(2193,pota_L) - 0.107946907124663*alloc(2193,rest_H) - 0.188945326211189*alloc(2193,rest_L) - 0.0675616421956985*alloc(2193,rice_H)
     
      - 0.17529362825794*alloc(2193,rice_L) - 0.196277346041115*alloc(2193,sorg_L) - 0.188945326211189*alloc(2193,soyb_L) - 0.179864654455643*alloc(2193,sunf_L) - 0.160982582066403*alloc(2193,temf_H) - 0.188945326211189*alloc(2193,temf_L)
     
      - 0.113404314685299*alloc(2193,toba_H) - 0.189160058977786*alloc(2193,toba_L) - 0.00184067424608086*alloc(2193,trof_L) - 0.279838104172465*alloc(2193,vege_H) - 0.169219402477884*alloc(2193,vege_L) - 0.0802033371513198*alloc(2194,bean_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.306441691788021*alloc(2194,bean_L) - 0.170201071418601*alloc(2194,cass_L) - 0.058628772040981*alloc(2194,chic_H) - 0.23836739075214*alloc(2194,chic_L) - 0.23836739075214*alloc(2194,cott_L) - 0.0597522392550334*alloc(2194,cowp_H)
     
      - 0.261038368118379*alloc(2194,cowp_L) - 0.071979112541421*alloc(2194,grou_H) - 0.19296409048789*alloc(2194,grou_L) - 0.0580769311034161*alloc(2194,lent_H) - 0.23836739075214*alloc(2194,lent_L) - 0.0909392569594032*alloc(2194,maiz_H)
     
      - 0.306441691788021*alloc(2194,maiz_L) - 0.0686181393216459*alloc(2194,mill_H) - 0.23836739075214*alloc(2194,mill_L) - 0.23836739075214*alloc(2194,ofib_L) - 0.261038368118379*alloc(2194,ooil_L) - 0.0506112824818473*alloc(2194,opul_H)
     
      - 0.23836739075214*alloc(2194,opul_L) - 0.0726135186791498*alloc(2194,pige_H) - 0.306441691788021*alloc(2194,pige_L) - 0.15052409162739*alloc(2194,pota_H) - 0.170262428653069*alloc(2194,pota_L) - 0.117623614345222*alloc(2194,rest_H)
     
      - 0.306441691788021*alloc(2194,rest_L) - 0.0703648029194494*alloc(2194,rice_H) - 0.23836739075214*alloc(2194,rice_L) - 0.306441691788021*alloc(2194,sorg_L) - 0.306441691788021*alloc(2194,soyb_L) - 0.261038368118379*alloc(2194,sunf_L)
     
      - 0.175413577411801*alloc(2194,temf_H) - 0.306441691788021*alloc(2194,temf_L) - 0.119327543659326*alloc(2194,toba_H) - 0.2837400299532*alloc(2194,toba_L) - 0.296698067161551*alloc(2194,vege_H) - 0.23836739075214*alloc(2194,vege_L)
     
      - 0.0799514680653913*alloc(2195,bean_H) - 0.306533721788376*alloc(2195,bean_L) - 0.170262428653069*alloc(2195,cass_L) - 0.0580040109563333*alloc(2195,chic_H) - 0.238428759689305*alloc(2195,chic_L) - 0.238428759689305*alloc(2195,cott_L)
     
      - 0.0599394123419207*alloc(2195,cowp_H) - 0.261130421524126*alloc(2195,cowp_L) - 0.0729685031977704*alloc(2195,grou_H) - 0.193025459425055*alloc(2195,grou_L) - 0.0574580505571237*alloc(2195,lent_H) - 0.238428759689305*alloc(2195,lent_L)
     
      - 0.0909150391418406*alloc(2195,maiz_H) - 0.306533721788376*alloc(2195,maiz_L) - 0.0685292113207485*alloc(2195,mill_H) - 0.238428783094697*alloc(2195,mill_L) - 0.238428759689305*alloc(2195,ofib_L) - 0.261130421524126*alloc(2195,ooil_L)
     
      - 0.0500719575286201*alloc(2195,opul_H) - 0.238428759689305*alloc(2195,opul_L) - 0.0725516987408745*alloc(2195,pige_H) - 0.306533721788376*alloc(2195,pige_L) - 0.148386696713653*alloc(2195,pota_H) - 0.17032375077945*alloc(2195,pota_L)
     
      - 0.117592290279813*alloc(2195,rest_H) - 0.306533721788376*alloc(2195,rest_L) - 0.0701800294387376*alloc(2195,rice_H) - 0.238428759689305*alloc(2195,rice_L) - 0.306564406256958*alloc(2195,sorg_L) - 0.306533721788376*alloc(2195,soyb_L)
     
      - 0.261130421524126*alloc(2195,sunf_L) - 0.175366863438564*alloc(2195,temf_H) - 0.306533721788376*alloc(2195,temf_L) - 0.119111384770913*alloc(2195,toba_H) - 0.283832059953555*alloc(2195,toba_L) - 0.29607660724965*alloc(2195,vege_H)
     
      - 0.238428759689305*alloc(2195,vege_L) - 0.0806421825541618*alloc(2196,bean_H) - 0.304601021564742*alloc(2196,bean_L) - 0.168973961837313*alloc(2196,cass_L) - 0.0574619551045912*alloc(2196,chic_H) - 0.237017554999219*alloc(2196,chic_L)
     
      - 0.237017578404611*alloc(2196,cott_L) - 0.0612349819060444*alloc(2196,cowp_H) - 0.25953515683333*alloc(2196,cowp_L) - 0.0759440987290538*alloc(2196,grou_H) - 0.237017578404611*alloc(2196,grou_L) - 0.0569210967840884*alloc(2196,lent_H)
     
      - 0.237017554999219*alloc(2196,lent_L) - 0.0921939460715011*alloc(2196,maiz_H) - 0.304601021564742*alloc(2196,maiz_L) - 0.0693514107891446*alloc(2196,mill_H) - 0.304601021564742*alloc(2196,mill_L) - 0.237017578404611*alloc(2196,ofib_L)
     
      - 0.25953515683333*alloc(2196,ooil_L) - 0.04960402786067*alloc(2196,opul_H) - 0.237017554999219*alloc(2196,opul_L) - 0.0734112863282156*alloc(2196,pige_H) - 0.304601021564742*alloc(2196,pige_L) - 0.145098021036864*alloc(2196,pota_H)
     
      - 0.101819995913072*alloc(2196,pota_L) - 0.119246467590113*alloc(2196,rest_H) - 0.304601021564742*alloc(2196,rest_L) - 0.0708357408949671*alloc(2196,rice_H) - 0.237017578404611*alloc(2196,rice_L) - 0.304601021564742*alloc(2196,sorg_L)
     
      - 0.304601021564742*alloc(2196,soyb_L) - 0.25953515683333*alloc(2196,sunf_L) - 0.177833758893941*alloc(2196,temf_H) - 0.304601021564742*alloc(2196,temf_L) - 0.120388133036431*alloc(2196,toba_H) - 0.282083419730631*alloc(2196,toba_L)
     
      - 0.29925272529061*alloc(2196,vege_H) - 0.237017578404611*alloc(2196,vege_L) - 0.0822623249989451*alloc(2197,bean_H) - 0.305030510503327*alloc(2197,bean_L) - 0.169250051838379*alloc(2197,cass_L) - 0.0582504066581839*alloc(2197,chic_H)
     
      - 0.192166481547884*alloc(2197,chic_L) - 0.237324352874259*alloc(2197,cott_L) - 0.0628303758073599*alloc(2197,cowp_H) - 0.25987261577156*alloc(2197,cowp_L) - 0.0781407564067947*alloc(2197,grou_H) - 0.237324352874259*alloc(2197,grou_L)
     
      - 0.0577021270694298*alloc(2197,lent_H) - 0.192166481547884*alloc(2197,lent_L) - 0.0942309887564356*alloc(2197,maiz_H) - 0.305030510503327*alloc(2197,maiz_L) - 0.0708306913175028*alloc(2197,mill_H) - 0.305030510503327*alloc(2197,mill_L)
     
      - 0.237324352874259*alloc(2197,ofib_L) - 0.25987261577156*alloc(2197,ooil_L) - 0.0502846585973028*alloc(2197,opul_H) - 0.192166481547884*alloc(2197,opul_L) - 0.0748363087922653*alloc(2197,pige_H) - 0.305030510503327*alloc(2197,pige_L)
     
      - 0.145393590107676*alloc(2197,pota_H) - 0.101912037616123*alloc(2197,pota_L) - 0.121881240857333*alloc(2197,rest_H) - 0.305030510503327*alloc(2197,rest_L) - 0.072299663464395*alloc(2197,rice_H) - 0.237324352874259*alloc(2197,rice_L)
     
      - 0.305030510503327*alloc(2197,sorg_L) - 0.305030510503327*alloc(2197,soyb_L) - 0.25987261577156*alloc(2197,sunf_L) - 0.181763029449389*alloc(2197,temf_H) - 0.305030510503327*alloc(2197,temf_L) - 0.122934964059711*alloc(2197,toba_H)
     
      - 0.282451563137444*alloc(2197,toba_L) - 0.305529967671781*alloc(2197,vege_H) - 0.237324352874259*alloc(2197,vege_L) - 0.0822972862567852*alloc(2198,bean_H) - 0.303220501343238*alloc(2198,bean_L) - 0.168114972257446*alloc(2198,cass_L)
     
      - 0.0585802562259246*alloc(2198,chic_H) - 0.235974493715947*alloc(2198,chic_L) - 0.235974517121338*alloc(2198,cott_L) - 0.0626590079481261*alloc(2198,cowp_H) - 0.258400088955094*alloc(2198,cowp_L) - 0.0776611814532118*alloc(2198,grou_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.235974517121338*alloc(2198,grou_L) - 0.0580288719415001*alloc(2198,lent_H) - 0.235974493715947*alloc(2198,lent_L) - 0.0940909388059998*alloc(2198,maiz_H) - 0.303220501343238*alloc(2198,maiz_L) - 0.0707904227970101*alloc(2198,mill_H)
     
      - 0.303220501343238*alloc(2198,mill_L) - 0.235974517121338*alloc(2198,ofib_L) - 0.258400088955094*alloc(2198,ooil_L) - 0.0505694012086229*alloc(2198,opul_H) - 0.235974493715947*alloc(2198,opul_L) - 0.0746572786239126*alloc(2198,pige_H)
     
      - 0.303220501343238*alloc(2198,pige_L) - 0.147155862908141*alloc(2198,pota_H) - 0.101543894209311*alloc(2198,pota_L) - 0.121700095971066*alloc(2198,rest_H) - 0.303220501343238*alloc(2198,rest_L) - 0.0723665486618489*alloc(2198,rice_H)
     
      - 0.235974517121338*alloc(2198,rice_L) - 0.303220501343238*alloc(2198,sorg_L) - 0.303220501343238*alloc(2198,soyb_L) - 0.258400088955094*alloc(2198,sunf_L) - 0.18149288579918*alloc(2198,temf_H) - 0.303220501343238*alloc(2198,temf_L)
     
      - 0.122946241176905*alloc(2198,toba_H) - 0.280794952914875*alloc(2198,toba_L) - 0.305484490094542*alloc(2198,vege_H) - 0.235974517121338*alloc(2198,vege_L) - 0.0758056455716813*alloc(2200,bean_H) - 0.279935975037704*alloc(2200,bean_L)
     
      - 0.154984828351226*alloc(2200,cass_L) - 0.053731296758956*alloc(2200,chic_H) - 0.218580144892454*alloc(2200,chic_L) - 0.218580144892454*alloc(2200,cott_L) - 0.0577089872596342*alloc(2200,cowp_H) - 0.234931479243457*alloc(2200,cowp_L)
     
      - 0.0715255318192296*alloc(2200,grou_H) - 0.218580121487062*alloc(2200,grou_L) - 0.053225553108734*alloc(2200,lent_H) - 0.218580144892454*alloc(2200,lent_L) - 0.0865237214140638*alloc(2200,maiz_H) - 0.279935951632312*alloc(2200,maiz_L)
     
      - 0.0651322224856916*alloc(2200,mill_H) - 0.279935951632312*alloc(2200,mill_L) - 0.218580144892454*alloc(2200,ofib_L) - 0.234931479243457*alloc(2200,ooil_L) - 0.0463835373608481*alloc(2200,opul_H) - 0.218580144892454*alloc(2200,opul_L)
     
      - 0.0687390214807991*alloc(2200,pige_H) - 0.279935975037704*alloc(2200,pige_L) - 0.134541403708546*alloc(2200,pota_H) - 0.0960218952421691*alloc(2200,pota_L) - 0.111912425718021*alloc(2200,rest_H) - 0.279935951632312*alloc(2200,rest_L)
     
      - 0.0665449685080121*alloc(2200,rice_H) - 0.218580144892454*alloc(2200,rice_L) - 0.279905290569122*alloc(2200,sorg_L) - 0.279935975037704*alloc(2200,soyb_L) - 0.234931479243457*alloc(2200,sunf_L) - 0.166896409885979*alloc(2200,temf_H)
     
      - 0.279935951632312*alloc(2200,temf_L) - 0.113646576341962*alloc(2200,toba_H) - 0.26355397962351*alloc(2200,toba_L) - 0.280412642602689*alloc(2200,vege_H) - 0.218580144892454*alloc(2200,vege_L) - 0.0733022508149298*alloc(2201,bean_H)
     
      - 0.275027489901771*alloc(2201,bean_L) - 0.152714645783969*alloc(2201,cass_L) - 0.0534652272540604*alloc(2201,chic_H) - 0.214530637633691*alloc(2201,chic_L) - 0.214530661039083*alloc(2201,cott_L) - 0.0544852625943557*alloc(2201,cowp_H)
     
      - 0.22763009707133*alloc(2201,cowp_L) - 0.0652478475447993*alloc(2201,grou_H) - 0.167133268208642*alloc(2201,grou_L) - 0.0529619879722556*alloc(2201,lent_H) - 0.214530637633691*alloc(2201,lent_L) - 0.0827756407464609*alloc(2201,maiz_H)
     
      - 0.22763009707133*alloc(2201,maiz_L) - 0.0625617109480055*alloc(2201,mill_H) - 0.214530661039083*alloc(2201,mill_L) - 0.214530661039083*alloc(2201,ofib_L) - 0.22763009707133*alloc(2201,ooil_L) - 0.0461538528833587*alloc(2201,opul_H)
     
      - 0.214530637633691*alloc(2201,opul_L) - 0.0659008522082701*alloc(2201,pige_H) - 0.275027489901771*alloc(2201,pige_L) - 0.137741620056226*alloc(2201,pota_H) - 0.154064458131498*alloc(2201,pota_L) - 0.107064543629236*alloc(2201,rest_H)
     
      - 0.22763009707133*alloc(2201,rest_L) - 0.0642868578714703*alloc(2201,rice_H) - 0.214530661039083*alloc(2201,rice_L) - 0.275027489901771*alloc(2201,sorg_L) - 0.275027489901771*alloc(2201,soyb_L) - 0.22763009707133*alloc(2201,sunf_L)
     
      - 0.159666702273284*alloc(2201,temf_H) - 0.22763009707133*alloc(2201,temf_L) - 0.109781321646594*alloc(2201,toba_H) - 0.261928030464132*alloc(2201,toba_L) - 0.269416511849948*alloc(2201,vege_H) - 0.214530661039083*alloc(2201,vege_L)
     
      - 0.0696872865535837*alloc(2202,bean_H) - 0.25198836912872*alloc(2202,bean_L) - 0.140290092520095*alloc(2202,cass_L) - 0.0498045162814836*alloc(2202,chic_H) - 0.196185257527281*alloc(2202,chic_L) - 0.196185257527281*alloc(2202,cott_L)
     
      - 0.0522840609428858*alloc(2202,cowp_H) - 0.196952205404096*alloc(2202,cowp_L) - 0.0639198642685635*alloc(2202,grou_H) - 0.141149082099962*alloc(2202,grou_L) - 0.0493357332931494*alloc(2202,lent_H) - 0.196185257527281*alloc(2202,lent_L)
     
      - 0.0788157411626114*alloc(2202,maiz_H) - 0.196952205404096*alloc(2202,maiz_L) - 0.0594687885977291*alloc(2202,mill_H) - 0.196185257527281*alloc(2202,mill_L) - 0.196185257527281*alloc(2202,ofib_L) - 0.196952205404096*alloc(2202,ooil_L)
     
      - 0.042993744447385*alloc(2202,opul_H) - 0.196185257527281*alloc(2202,opul_L) - 0.0632337045697578*alloc(2202,pige_H) - 0.25198836912872*alloc(2202,pige_L) - 0.125485961642097*alloc(2202,pota_H) - 0.085315280178593*alloc(2202,pota_L)
     
      - 0.101942688480316*alloc(2202,rest_H) - 0.196952205404096*alloc(2202,rest_L) - 0.0609369591216757*alloc(2202,rice_H) - 0.196185257527281*alloc(2202,rice_L) - 0.25198836912872*alloc(2202,sorg_L) - 0.25198836912872*alloc(2202,soyb_L)
     
      - 0.196952205404096*alloc(2202,sunf_L) - 0.152028415185623*alloc(2202,temf_H) - 0.196952205404096*alloc(2202,temf_L) - 0.105631222103929*alloc(2202,toba_H) - 0.251221421251904*alloc(2202,toba_L) - 0.253283910214356*alloc(2202,vege_H)
     
      - 0.196185257527281*alloc(2202,vege_L) - 0.0649004834659893*alloc(2203,bean_H) - 0.235452951371614*alloc(2203,bean_L) - 0.130105013949503*alloc(2203,cass_L) - 0.0463579498051439*alloc(2203,chic_H) - 0.183085762981555*alloc(2203,chic_L)
     
      - 0.184036794264472*alloc(2203,cott_L) - 0.0484843327320707*alloc(2203,cowp_H) - 0.184527640437527*alloc(2203,cowp_L) - 0.0586064968410871*alloc(2203,grou_H) - 0.132160452047467*alloc(2203,grou_L) - 0.0459216074838997*alloc(2203,lent_H)
     
      - 0.183085762981555*alloc(2203,lent_L) - 0.0732731860779114*alloc(2203,maiz_H) - 0.184527640437527*alloc(2203,maiz_L) - 0.0553401428257976*alloc(2203,mill_H) - 0.183085762981555*alloc(2203,mill_L) - 0.184036794264472*alloc(2203,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.184527640437527*alloc(2203,ooil_L) - 0.0400184962295891*alloc(2203,opul_H) - 0.183085762981555*alloc(2203,opul_L) - 0.0588537800832663*alloc(2203,pige_H) - 0.235452951371614*alloc(2203,pige_L) - 0.116373151883715*alloc(2203,pota_H)
     
      - 0.0809283373869919*alloc(2203,pota_L) - 0.0947737783355921*alloc(2203,rest_H) - 0.184527640437527*alloc(2203,rest_L) - 0.0565143354367262*alloc(2203,rice_H) - 0.183085762981555*alloc(2203,rice_L) - 0.235452951371614*alloc(2203,sorg_L)
     
      - 0.235452951371614*alloc(2203,soyb_L) - 0.184527640437527*alloc(2203,sunf_L) - 0.141337329202336*alloc(2203,temf_H) - 0.184527640437527*alloc(2203,temf_L) - 0.0982644662045746*alloc(2203,toba_H) - 0.234011085618338*alloc(2203,toba_L)
     
      - 0.235163383330009*alloc(2203,vege_H) - 0.184312895968234*alloc(2203,vege_L) - 0.047716521193043*alloc(2204,bean_H) - 0.158451400923099*alloc(2204,bean_L) - 0.084180177192269*alloc(2204,cass_L) - 0.0349215746245628*alloc(2204,chic_H)
     
      - 0.123386543058873*alloc(2204,chic_L) - 0.136332615261688*alloc(2204,cott_L) - 0.0346182520956822*alloc(2204,cowp_H) - 0.137958564421066*alloc(2204,cowp_L) - 0.0406274191804313*alloc(2204,grou_H) - 0.102863033790953*alloc(2204,grou_L)
     
      - 0.0345928767205953*alloc(2204,lent_H) - 0.123386543058873*alloc(2204,lent_L) - 0.0536234501987232*alloc(2204,maiz_H) - 0.13795855271837*alloc(2204,maiz_L) - 0.0406503121937739*alloc(2204,mill_H) - 0.123386554761569*alloc(2204,mill_L)
     
      - 0.136332615261688*alloc(2204,ofib_L) - 0.13795855271837*alloc(2204,ooil_L) - 0.0301460463268656*alloc(2204,opul_H) - 0.123386543058873*alloc(2204,opul_L) - 0.0427888547938606*alloc(2204,pige_H) - 0.158451400923099*alloc(2204,pige_L)
     
      - 0.0899492985642018*alloc(2204,pota_H) - 0.0887511741332325*alloc(2204,pota_L) - 0.0693582093908085*alloc(2204,rest_H) - 0.13795855271837*alloc(2204,rest_L) - 0.0413639568013269*alloc(2204,rice_H) - 0.123386543058873*alloc(2204,rice_L)
     
      - 0.158451400923099*alloc(2204,sorg_L) - 0.158451400923099*alloc(2204,soyb_L) - 0.13795855271837*alloc(2204,sunf_L) - 0.10343477115412*alloc(2204,temf_H) - 0.13795855271837*alloc(2204,temf_L) - 0.0701688734574166*alloc(2204,toba_H)
     
      - 0.143879391263602*alloc(2204,toba_L) - 0.176480541075094*alloc(2204,vege_H) - 0.13795855271837*alloc(2204,vege_L) - 0.0569937366819053*alloc(2206,bean_H) - 0.0986908471713409*alloc(2206,bean_L) - 0.0523058428582866*alloc(2206,cass_L)
     
      - 0.0090499858241266*alloc(2206,coff_L) - 0.0657120943196169*alloc(2206,cott_L) - 0.0456562800869333*alloc(2206,cowp_H) - 0.114060489176236*alloc(2206,cowp_L) - 0.0558467093191827*alloc(2206,grou_H) - 0.0738724192608273*alloc(2206,grou_L)
     
      - 0.0702188464071882*alloc(2206,maiz_H) - 0.114060489176236*alloc(2206,maiz_L) - 0.0435624727253083*alloc(2206,mill_H) - 0.114060489176236*alloc(2206,mill_L) - 0.0657120943196169*alloc(2206,ofib_L) - 0.0780139389659013*alloc(2206,ooil_L)
     
      - 0.0539973555819684*alloc(2206,pige_H) - 0.110317779792513*alloc(2206,pige_L) - 0.0908232020551103*alloc(2206,rest_H) - 0.114060489176236*alloc(2206,rest_L) - 0.0501989928305142*alloc(2206,rice_H) - 0.101267792505549*alloc(2206,rice_L)
     
      - 0.116668107276331*alloc(2206,sorg_L) - 0.114060489176236*alloc(2206,soyb_L) - 0.0780139389659013*alloc(2206,sunf_L) - 0.135445785042133*alloc(2206,temf_H) - 0.114060489176236*alloc(2206,temf_L) - 0.0784465953930637*alloc(2206,toba_H)
     
      - 0.0915428990448211*alloc(2206,toba_L) - 0.0118723535134435*alloc(2206,trof_L) - 0.200755745620841*alloc(2206,vege_H) - 0.0752222491624003*alloc(2206,vege_L) - 0.0631872170743166*alloc(2232,bean_H) - 0.166857189910272*alloc(2232,bean_L)
     
      - 0.110992709371669*alloc(2232,cass_L) - 0.0465488133410003*alloc(2232,chic_H) - 0.116974893448674*alloc(2232,chic_L) - 0.00153389593648588*alloc(2232,coff_L) - 0.138725547405969*alloc(2232,cott_L) - 0.0494548923399697*alloc(2232,cowp_H)
     
      - 0.166857189910272*alloc(2232,cowp_L) - 0.0606003542972558*alloc(2232,grou_H) - 0.130442496293125*alloc(2232,grou_L) - 0.0461106745244706*alloc(2232,lent_H) - 0.116974893448674*alloc(2232,lent_L) - 0.0723818718556404*alloc(2232,maiz_H)
     
      - 0.166857189910272*alloc(2232,maiz_L) - 0.0545960436713454*alloc(2232,mill_H) - 0.166857189910272*alloc(2232,mill_L) - 0.138725547405969*alloc(2232,ofib_L) - 0.166857189910272*alloc(2232,ooil_L) - 0.0401832591606967*alloc(2232,opul_H)
     
      - 0.116974893448674*alloc(2232,opul_L) - 0.0577746036533349*alloc(2232,pige_H) - 0.166857189910272*alloc(2232,pige_L) - 0.123604089467195*alloc(2232,pota_H) - 0.0813578380282732*alloc(2232,pota_L) - 0.0936209252790994*alloc(2232,rest_H)
     
      - 0.166857189910272*alloc(2232,rest_L) - 0.0582508601663561*alloc(2232,rice_H) - 0.151211457904312*alloc(2232,rice_L) - 0.172992772924797*alloc(2232,sorg_L) - 0.166857189910272*alloc(2232,soyb_L) - 0.166857189910272*alloc(2232,sunf_L)
     
      - 0.139618064920285*alloc(2232,temf_H) - 0.166857189910272*alloc(2232,temf_L) - 0.0959365483122508*alloc(2232,toba_H) - 0.152868079829577*alloc(2232,toba_L) - 0.00153389593648588*alloc(2232,trof_L) - 0.245200432520207*alloc(2232,vege_H)
     
      - 0.161795329242211*alloc(2232,vege_L) - 0.0715581107618594*alloc(2233,bean_H) - 0.189896334088715*alloc(2233,bean_L) - 0.144953148718154*alloc(2233,cass_L) - 0.0522205070490476*alloc(2233,chic_H) - 0.124981866263148*alloc(2233,chic_L)
     
      - 0.00190203038342188*alloc(2233,coff_L) - 0.153236211533693*alloc(2233,cott_L) - 0.0565881925042185*alloc(2233,cowp_H) - 0.180355488926002*alloc(2233,cowp_L) - 0.0690024686125587*alloc(2233,grou_H) - 0.135627071430124*alloc(2233,grou_L)
     
      - 0.0517289836456593*alloc(2233,lent_H) - 0.124981866263148*alloc(2233,lent_L) - 0.0819340529730458*alloc(2233,maiz_H) - 0.189896334088715*alloc(2233,maiz_L) - 0.0617308655046917*alloc(2233,mill_H) - 0.189896322386019*alloc(2233,mill_L)
     
      - 0.153236211533693*alloc(2233,ofib_L) - 0.180355488926002*alloc(2233,ooil_L) - 0.0450793482721632*alloc(2233,opul_H) - 0.124981866263148*alloc(2233,opul_L) - 0.0658524748590926*alloc(2233,pige_H) - 0.189896334088715*alloc(2233,pige_L)
     
      - 0.1382695983857*alloc(2233,pota_H) - 0.0884444406230201*alloc(2233,pota_L) - 0.105976008281493*alloc(2233,rest_H) - 0.189896334088715*alloc(2233,rest_L) - 0.0665671701670518*alloc(2233,rice_H) - 0.175600402727588*alloc(2233,rice_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.197504432217011*alloc(2233,sorg_L) - 0.189896334088715*alloc(2233,soyb_L) - 0.180355488926002*alloc(2233,sunf_L) - 0.158043355800301*alloc(2233,temf_H) - 0.189896334088715*alloc(2233,temf_L) - 0.111328277483779*alloc(2233,toba_H)
     
      - 0.189558863447789*alloc(2233,toba_L) - 0.00190203038342188*alloc(2233,trof_L) - 0.274964808966369*alloc(2233,vege_H) - 0.169219402477884*alloc(2233,vege_L) - 0.0753088547569358*alloc(2234,bean_H) - 0.244380306108511*alloc(2234,bean_L)
     
      - 0.152346537485244*alloc(2234,cass_L) - 0.0542260903650844*alloc(2234,chic_H) - 0.178852265938257*alloc(2234,chic_L) - 0.00128847184425837*alloc(2234,coff_L) - 0.193577662832578*alloc(2234,cott_L) - 0.0581004729258082*alloc(2234,cowp_H)
     
      - 0.217414415951027*alloc(2234,cowp_L) - 0.0713154447275011*alloc(2234,grou_H) - 0.161335167537739*alloc(2234,grou_L) - 0.0537156894901245*alloc(2234,lent_H) - 0.178852265938257*alloc(2234,lent_L) - 0.0861046007310877*alloc(2234,maiz_H)
     
      - 0.244380306108511*alloc(2234,maiz_L) - 0.0648406197436904*alloc(2234,mill_H) - 0.244380306108511*alloc(2234,mill_L) - 0.193577662832578*alloc(2234,ofib_L) - 0.217414415951027*alloc(2234,ooil_L) - 0.0468106678992887*alloc(2234,opul_H)
     
      - 0.178852265938257*alloc(2234,opul_L) - 0.0688828437452781*alloc(2234,pige_H) - 0.244380306108511*alloc(2234,pige_L) - 0.139886944058778*alloc(2234,pota_H) - 0.0927086689456837*alloc(2234,pota_L) - 0.111370322216994*alloc(2234,rest_H)
     
      - 0.244380306108511*alloc(2234,rest_L) - 0.0678146859787567*alloc(2234,rice_H) - 0.203916128637993*alloc(2234,rice_L) - 0.249503512308346*alloc(2234,sorg_L) - 0.244380306108511*alloc(2234,soyb_L) - 0.217414415951027*alloc(2234,sunf_L)
     
      - 0.166087964107706*alloc(2234,temf_H) - 0.244380306108511*alloc(2234,temf_L) - 0.114316751269779*alloc(2234,toba_H) - 0.231250138796899*alloc(2234,toba_L) - 0.00128847184425837*alloc(2234,trof_L) - 0.283669928572445*alloc(2234,vege_H)
     
      - 0.199621215846748*alloc(2234,vege_L) - 0.0791362527324972*alloc(2235,bean_H) - 0.296992888328358*alloc(2235,bean_L) - 0.166795820973108*alloc(2235,cass_L) - 0.0568764338142077*alloc(2235,chic_H) - 0.229992333044333*alloc(2235,chic_L)
     
      - 0.000122711600405611*alloc(2235,coff_L) - 0.231372829860445*alloc(2235,cott_L) - 0.0597320331562598*alloc(2235,cowp_H) - 0.25398246169491*alloc(2235,cowp_L) - 0.0733592371199091*alloc(2235,grou_H) - 0.187932925991107*alloc(2235,grou_L)
     
      - 0.056341086689089*alloc(2235,lent_H) - 0.229992333044333*alloc(2235,lent_L) - 0.0901634982865893*alloc(2235,maiz_H) - 0.296992888328358*alloc(2235,maiz_L) - 0.0679341402176259*alloc(2235,mill_H) - 0.296992888328358*alloc(2235,mill_L)
     
      - 0.231372829860445*alloc(2235,ofib_L) - 0.25398246169491*alloc(2235,ooil_L) - 0.0490985766565067*alloc(2235,opul_H) - 0.229992333044333*alloc(2235,opul_L) - 0.0718304987464546*alloc(2235,pige_H) - 0.296992888328358*alloc(2235,pige_L)
     
      - 0.144948218590986*alloc(2235,pota_H) - 0.100562201863202*alloc(2235,pota_L) - 0.116620224368143*alloc(2235,rest_H) - 0.296992888328358*alloc(2235,rest_L) - 0.0696694414420313*alloc(2235,rice_H) - 0.232507921144073*alloc(2235,rice_L)
     
      - 0.297453061735526*alloc(2235,sorg_L) - 0.296992888328358*alloc(2235,soyb_L) - 0.25398246169491*alloc(2235,sunf_L) - 0.173917209302401*alloc(2235,temf_H) - 0.296992888328358*alloc(2235,temf_L) - 0.118182705592391*alloc(2235,toba_H)
     
      - 0.275610377777876*alloc(2235,toba_L) - 0.000122711600405611*alloc(2235,trof_L) - 0.293620909676529*alloc(2235,vege_H) - 0.232078432205487*alloc(2235,vege_L) - 0.0807661450630582*alloc(2236,bean_H) - 0.305275939441202*alloc(2236,bean_L)
     
      - 0.169434123541785*alloc(2236,cass_L) - 0.057621762237741*alloc(2236,chic_H) - 0.23750841287497*alloc(2236,chic_L) - 0.23750841287497*alloc(2236,cott_L) - 0.0612878960919757*alloc(2236,cowp_H) - 0.260087360240853*alloc(2236,cowp_L)
     
      - 0.0759371355392503*alloc(2236,grou_H) - 0.237508389469578*alloc(2236,grou_L) - 0.0570793997390827*alloc(2236,lent_H) - 0.23750841287497*alloc(2236,lent_L) - 0.0922355954073968*alloc(2236,maiz_H) - 0.305275939441202*alloc(2236,maiz_L)
     
      - 0.0694301677904667*alloc(2236,mill_H) - 0.305275939441202*alloc(2236,mill_L) - 0.23750841287497*alloc(2236,ofib_L) - 0.260087360240853*alloc(2236,ooil_L) - 0.0497419813547805*alloc(2236,opul_H) - 0.23750841287497*alloc(2236,opul_L)
     
      - 0.073404643627094*alloc(2236,pige_H) - 0.305275939441202*alloc(2236,pige_L) - 0.144790889821036*alloc(2236,pota_H) - 0.101973394850592*alloc(2236,pota_L) - 0.119300338114097*alloc(2236,rest_H) - 0.305275939441202*alloc(2236,rest_L)
     
      - 0.070952362381923*alloc(2236,rice_H) - 0.23750841287497*alloc(2236,rice_L) - 0.305275939441202*alloc(2236,sorg_L) - 0.305275939441202*alloc(2236,soyb_L) - 0.260087360240853*alloc(2236,sunf_L) - 0.177914096684798*alloc(2236,temf_H)
     
      - 0.305275939441202*alloc(2236,temf_L) - 0.120556625957285*alloc(2236,toba_H) - 0.282666307606736*alloc(2236,toba_L) - 0.299527369920946*alloc(2236,vege_H) - 0.23750841287497*alloc(2236,vege_L) - 0.0806680693119397*alloc(2237,bean_H)
     
      - 0.301993403464647*alloc(2237,bean_L) - 0.167777513319216*alloc(2237,cass_L) - 0.0579555602027843*alloc(2237,chic_H) - 0.23499282477523*alloc(2237,chic_L) - 0.23499282477523*alloc(2237,cott_L) - 0.0608818947631772*alloc(2237,cowp_H)
     
      - 0.257326343203238*alloc(2237,cowp_L) - 0.0749777855157581*alloc(2237,grou_H) - 0.190295115153327*alloc(2237,grou_L) - 0.0574100558443262*alloc(2237,lent_H) - 0.23499282477523*alloc(2237,lent_L) - 0.091867555288249*alloc(2237,maiz_H)
     
      - 0.301993403464647*alloc(2237,maiz_L) - 0.0692346066016209*alloc(2237,mill_H) - 0.301993403464647*alloc(2237,mill_L) - 0.23499282477523*alloc(2237,ofib_L) - 0.257326343203238*alloc(2237,ooil_L) - 0.0500301324197365*alloc(2237,opul_H)
     
      - 0.23499282477523*alloc(2237,opul_L) - 0.0729783969711729*alloc(2237,pige_H) - 0.301993403464647*alloc(2237,pige_L) - 0.146698396827109*alloc(2237,pota_H) - 0.100961018035901*alloc(2237,pota_L) - 0.118824303775511*alloc(2237,rest_H)
     
      - 0.301993403464647*alloc(2237,rest_L) - 0.07090591189186*alloc(2237,rice_H) - 0.23499282477523*alloc(2237,rice_L) - 0.301993403464647*alloc(2237,sorg_L) - 0.301993403464647*alloc(2237,soyb_L) - 0.257326343203238*alloc(2237,sunf_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.17720418068054*alloc(2237,temf_H) - 0.301993403464647*alloc(2237,temf_L) - 0.120326598886014*alloc(2237,toba_H) - 0.279659885036638*alloc(2237,toba_L) - 0.298982087635119*alloc(2237,vege_H) - 0.23499282477523*alloc(2237,vege_L)
     
      - 0.0775158181795911*alloc(2238,bean_H) - 0.284108173360012*alloc(2238,bean_L) - 0.157899232623664*alloc(2238,cass_L) - 0.0550107475376208*alloc(2238,chic_H) - 0.221586590867943*alloc(2238,chic_L) - 0.221586590867943*alloc(2238,cott_L)
     
      - 0.058970098025229*alloc(2238,cowp_H) - 0.242416874605511*alloc(2238,cowp_L) - 0.0730928964065537*alloc(2238,grou_H) - 0.221586567462552*alloc(2238,grou_L) - 0.0544929611088673*alloc(2238,lent_H) - 0.221586590867943*alloc(2238,lent_L)
     
      - 0.0885330569699287*alloc(2238,maiz_H) - 0.284108149954621*alloc(2238,maiz_L) - 0.066658930798886*alloc(2238,mill_H) - 0.284108149954621*alloc(2238,mill_L) - 0.221586590867943*alloc(2238,ofib_L) - 0.242416874605511*alloc(2238,ooil_L)
     
      - 0.0474880231367972*alloc(2238,opul_H) - 0.221586590867943*alloc(2238,opul_L) - 0.0702830611197341*alloc(2238,pige_H) - 0.284108173360012*alloc(2238,pige_L) - 0.137570832051764*alloc(2238,pota_H) - 0.0964820745006848*alloc(2238,pota_L)
     
      - 0.114511361737684*alloc(2238,rest_H) - 0.284108149954621*alloc(2238,rest_L) - 0.0681072171102961*alloc(2238,rice_H) - 0.221586590867943*alloc(2238,rice_L) - 0.284108173360012*alloc(2238,sorg_L) - 0.284108173360012*alloc(2238,soyb_L)
     
      - 0.242416874605511*alloc(2238,sunf_L) - 0.170772235902816*alloc(2238,temf_H) - 0.284108149954621*alloc(2238,temf_L) - 0.115789297260756*alloc(2238,toba_H) - 0.263277866217053*alloc(2238,toba_L) - 0.287720285234605*alloc(2238,vege_H)
     
      - 0.221586590867943*alloc(2238,vege_L) - 0.0772398267976148*alloc(2239,bean_H) - 0.288372401682676*alloc(2239,bean_L) - 0.159862617315881*alloc(2239,cass_L) - 0.0562627376216566*alloc(2239,chic_H) - 0.224961156844854*alloc(2239,chic_L)
     
      - 0.224961156844854*alloc(2239,cott_L) - 0.0575697833269592*alloc(2239,cowp_H) - 0.246098238457461*alloc(2239,cowp_L) - 0.0691249578636507*alloc(2239,grou_H) - 0.182686970214247*alloc(2239,grou_L) - 0.0557331668870453*alloc(2239,lent_H)
     
      - 0.224961156844854*alloc(2239,lent_L) - 0.0874086293246269*alloc(2239,maiz_H) - 0.246098238457461*alloc(2239,maiz_L) - 0.0660600372868655*alloc(2239,mill_H) - 0.224961156844854*alloc(2239,mill_L) - 0.224961156844854*alloc(2239,ofib_L)
     
      - 0.246098238457461*alloc(2239,ooil_L) - 0.0485688034704415*alloc(2239,opul_H) - 0.224961156844854*alloc(2239,opul_L) - 0.0694145116984526*alloc(2239,pige_H) - 0.288372401682676*alloc(2239,pige_L) - 0.144271860453888*alloc(2239,pota_H)
     
      - 0.16154988860164*alloc(2239,pota_L) - 0.113056992655153*alloc(2239,rest_H) - 0.246098238457461*alloc(2239,rest_L) - 0.0678542428122523*alloc(2239,rice_H) - 0.224961156844854*alloc(2239,rice_L) - 0.288372401682676*alloc(2239,sorg_L)
     
      - 0.288372401682676*alloc(2239,soyb_L) - 0.246098238457461*alloc(2239,sunf_L) - 0.168603316973874*alloc(2239,temf_H) - 0.246098238457461*alloc(2239,temf_L) - 0.115027578899606*alloc(2239,toba_H) - 0.267235320070069*alloc(2239,toba_L)
     
      - 0.285835700632211*alloc(2239,vege_H) - 0.224961156844854*alloc(2239,vege_L) - 0.0743264890579827*alloc(2240,bean_H) - 0.275395633308583*alloc(2240,bean_L) - 0.153819064301711*alloc(2240,cass_L) - 0.0546393452175878*alloc(2240,chic_H)
     
      - 0.215113548915188*alloc(2240,chic_L) - 0.215113548915188*alloc(2240,cott_L) - 0.0550132165695792*alloc(2240,cowp_H) - 0.235207569244523*alloc(2240,cowp_L) - 0.0651639696065582*alloc(2240,grou_H) - 0.154800756647819*alloc(2240,grou_L)
     
      - 0.0541250545980993*alloc(2240,lent_H) - 0.215113548915188*alloc(2240,lent_L) - 0.0838432201156422*alloc(2240,maiz_H) - 0.235207569244523*alloc(2240,maiz_L) - 0.0634509597904599*alloc(2240,mill_H) - 0.215113548915188*alloc(2240,mill_L)
     
      - 0.215113548915188*alloc(2240,ofib_L) - 0.235207569244523*alloc(2240,ooil_L) - 0.0471674101155921*alloc(2240,opul_H) - 0.215113548915188*alloc(2240,opul_L) - 0.0666451977712771*alloc(2240,pige_H) - 0.275395633308583*alloc(2240,pige_L)
     
      - 0.141456999846405*alloc(2240,pota_H) - 0.154800756647819*alloc(2240,pota_L) - 0.108445383413968*alloc(2240,rest_H) - 0.235207569244523*alloc(2240,rest_L) - 0.06521823279147*alloc(2240,rice_H) - 0.215113548915188*alloc(2240,rice_L)
     
      - 0.275426317777166*alloc(2240,sorg_L) - 0.275395633308583*alloc(2240,soyb_L) - 0.235207569244523*alloc(2240,sunf_L) - 0.161725966034398*alloc(2240,temf_H) - 0.235207569244523*alloc(2240,temf_L) - 0.110511264867814*alloc(2240,toba_H)
     
      - 0.255301589573857*alloc(2240,toba_L) - 0.274814565181086*alloc(2240,vege_H) - 0.215113548915188*alloc(2240,vege_L) - 0.0721398394773045*alloc(2241,bean_H) - 0.259351050021836*alloc(2241,bean_L) - 0.145045178718509*alloc(2241,cass_L)
     
      - 0.0526871510827875*alloc(2241,chic_H) - 0.20262756820067*alloc(2241,chic_L) - 5.74440744653496E-8*alloc(2241,coff_L) - 0.202627638416846*alloc(2241,cott_L) - 0.0537169884627988*alloc(2241,cowp_H) - 0.221525221930779*alloc(2241,cowp_L)
     
      - 0.064309083411126*alloc(2241,grou_H) - 0.164801751812309*alloc(2241,grou_L) - 0.052191235411369*alloc(2241,lent_H) - 0.20262756820067*alloc(2241,lent_L) - 0.0815265169335982*alloc(2241,maiz_H) - 0.221525198525387*alloc(2241,maiz_L)
     
      - 0.0616731963155136*alloc(2241,mill_H) - 0.202627638416846*alloc(2241,mill_L) - 0.202627638416846*alloc(2241,ofib_L) - 0.221525221930779*alloc(2241,ooil_L) - 0.0454821786946317*alloc(2241,opul_H) - 0.20262756820067*alloc(2241,opul_L)
     
      - 0.0649773980549837*alloc(2241,pige_H) - 0.259351073427228*alloc(2241,pige_L) - 0.13461404258414*alloc(2241,pota_H) - 0.14590415659568*alloc(2241,pota_L) - 0.105448888712469*alloc(2241,rest_H) - 0.221525198525387*alloc(2241,rest_L)
     
      - 0.0632549343843909*alloc(2241,rice_H) - 0.202627638416846*alloc(2241,rice_L) - 0.259351073427228*alloc(2241,sorg_L) - 0.25935109683262*alloc(2241,soyb_L) - 0.221525221930779*alloc(2241,sunf_L) - 0.157257255748531*alloc(2241,temf_H)
     
      - 0.221525198525387*alloc(2241,temf_L) - 0.107396809459742*alloc(2241,toba_H) - 0.202627638416846*alloc(2241,toba_L) - 0.267027741643459*alloc(2241,vege_H) - 0.202627638416846*alloc(2241,vege_L) - 0.0443131782285149*alloc(2242,bean_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.139461787408811*alloc(2242,bean_L) - 0.143419229559131*alloc(2242,cass_L) - 1.98265241136406E-5*alloc(2242,chic_H) - 0.0471212940523533*alloc(2242,chic_L) - 0.139461764003419*alloc(2242,coff_L) - 0.20090963585172*alloc(2242,cott_L)
     
      - 0.0502821713043533*alloc(2242,cowp_H) - 0.20090963585172*alloc(2242,cowp_L) - 0.0551290005357178*alloc(2242,grou_H) - 0.143603289559841*alloc(2242,grou_L) - 1.96399077600203E-5*alloc(2242,lent_H) - 0.0471212940523533*alloc(2242,lent_L)
     
      - 0.0463743096819096*alloc(2242,maiz_H) - 0.19673741412402*alloc(2242,maiz_L) - 0.0594769047839211*alloc(2242,mill_H) - 0.20090963585172*alloc(2242,mill_L) - 0.20090963585172*alloc(2242,ofib_L) - 0.202750306074999*alloc(2242,ooil_L)
     
      - 1.71152452561555E-5*alloc(2242,opul_H) - 0.0471212940523533*alloc(2242,opul_L) - 0.0619354943921544*alloc(2242,pige_H) - 0.202750306074999*alloc(2242,pige_L) - 0.140452366338474*alloc(2242,pota_H) - 0.143603301262537*alloc(2242,pota_L)
     
      - 0.0599819494894916*alloc(2242,rest_H) - 0.19673741412402*alloc(2242,rest_L) - 0.0616263179197598*alloc(2242,rice_H) - 0.20090963585172*alloc(2242,rice_L) - 0.20090963585172*alloc(2242,sorg_L) - 0.258185297675017*alloc(2242,soyb_L)
     
      - 0.202750306074999*alloc(2242,sunf_L) - 0.0894518366797073*alloc(2242,temf_H) - 0.19673741412402*alloc(2242,temf_L) - 0.106010084351623*alloc(2242,toba_H) - 0.20090963585172*alloc(2242,toba_L) - 0.254698754899467*alloc(2242,vege_H)
     
      - 0.20090963585172*alloc(2242,vege_L) - 0.0336087889213449*alloc(2243,bean_H) - 0.0835666282529732*alloc(2243,bean_L) - 0.0926166096885888*alloc(2243,cass_L) - 0.0206440150065143*alloc(2243,chic_H) - 0.0611104012073752*alloc(2243,chic_L)
     
      - 0.0757130602273668*alloc(2243,coff_L) - 0.143419229559131*alloc(2243,cott_L) - 0.0353616527450518*alloc(2243,cowp_H) - 0.133510264394996*alloc(2243,cowp_L) - 0.0309260193381633*alloc(2243,grou_H) - 0.0611104070587231*alloc(2243,grou_L)
     
      - 0.0204497040530403*alloc(2243,lent_H) - 0.0611104012073752*alloc(2243,lent_L) - 0.0354858600483094*alloc(2243,maiz_H) - 0.0939971182073961*alloc(2243,maiz_L) - 0.0430983252200015*alloc(2243,mill_H) - 0.133510264394996*alloc(2243,mill_L)
     
      - 0.143419229559131*alloc(2243,ofib_L) - 0.144308891904884*alloc(2243,ooil_L) - 0.0178209441999548*alloc(2243,opul_H) - 0.0611104012073752*alloc(2243,opul_L) - 0.0428531864103567*alloc(2243,pige_H) - 0.133510276097692*alloc(2243,pige_L)
     
      - 0.104123382416642*alloc(2243,pota_H) - 0.095500329492445*alloc(2243,pota_L) - 0.0458984959476213*alloc(2243,rest_H) - 0.0939971182073961*alloc(2243,rest_L) - 0.0444291326876663*alloc(2243,rice_H) - 0.133510264394996*alloc(2243,rice_L)
     
      - 0.133479579926414*alloc(2243,sorg_L) - 0.171888319298968*alloc(2243,soyb_L) - 0.144308891904884*alloc(2243,sunf_L) - 0.0684490050472621*alloc(2243,temf_H) - 0.0939971182073961*alloc(2243,temf_L) - 0.0756442309021863*alloc(2243,toba_H)
     
      - 0.133510264394996*alloc(2243,toba_L) - 0.186235334193695*alloc(2243,vege_H) - 0.144308891904884*alloc(2243,vege_L) - 0.0174839644552482*alloc(2244,bean_H) - 0.040648266727968*alloc(2244,bean_L) - 0.0520297411545252*alloc(2244,cass_L)
     
      - 0.0105144380925547*alloc(2244,chic_H) - 0.037365707346021*alloc(2244,chic_L) - 6.95014095303644E-10*alloc(2244,coff_L) - 0.0948561019359149*alloc(2244,cott_L) - 0.0203633151858819*alloc(2244,cowp_H) - 0.0783820823727138*alloc(2244,cowp_L)
     
      - 0.0209517289246647*alloc(2244,grou_H) - 0.0523365390295648*alloc(2244,grou_L) - 0.0104154713707051*alloc(2244,lent_H) - 0.037365707346021*alloc(2244,lent_L) - 0.0193142146712903*alloc(2244,maiz_H) - 0.0624295758971055*alloc(2244,maiz_L)
     
      - 0.0249236780666822*alloc(2244,mill_H) - 0.0783820823727138*alloc(2244,mill_L) - 0.0948561019359149*alloc(2244,ofib_L) - 0.0960832290712462*alloc(2244,ooil_L) - 0.00907658778983489*alloc(2244,opul_H) - 0.037365707346021*alloc(2244,opul_L)
     
      - 0.0248391463061079*alloc(2244,pige_H) - 0.0960832290712462*alloc(2244,pige_L) - 0.0565727507150355*alloc(2244,pota_H) - 0.0566007380954887*alloc(2244,pota_L) - 0.0249815955598895*alloc(2244,rest_H) - 0.0624295758971055*alloc(2244,rest_L)
     
      - 0.0249748428196385*alloc(2244,rice_H) - 0.078382070670018*alloc(2244,rice_L) - 0.0783514096068274*alloc(2244,sorg_L) - 0.100838303566964*alloc(2244,soyb_L) - 0.0960832290712462*alloc(2244,sunf_L) - 0.0372553680739108*alloc(2244,temf_H)
     
      - 0.0624295758971055*alloc(2244,temf_L) - 0.0411372619648062*alloc(2244,toba_H) - 0.0831371451657357*alloc(2244,toba_L) - 9.09836617998974E-10*alloc(2244,trof_L) - 0.110525330708301*alloc(2244,vege_H) - 0.0960832290712462*alloc(2244,vege_L)
     
      - 0.0302719559938829*alloc(2271,bean_H) - 0.0661416242176379*alloc(2271,bean_L) - 0.0882297020050754*alloc(2271,cass_L) - 3.24330885549063E-5*alloc(2271,chic_H) - 0.0574597510807471*alloc(2271,chic_L) - 0.0477961680437042*alloc(2271,coff_L)
     
      - 0.130657240762418*alloc(2271,cott_L) - 0.0367273879687214*alloc(2271,cowp_H) - 0.148450429164002*alloc(2271,cowp_L) - 0.0430958220684533*alloc(2271,grou_H) - 0.0972796775893431*alloc(2271,grou_L) - 3.21278134250818E-5*alloc(2271,lent_H)
     
      - 0.0574597510807471*alloc(2271,lent_L) - 0.0329051402079371*alloc(2271,maiz_H) - 0.0661723028348722*alloc(2271,maiz_L) - 0.0424278355744297*alloc(2271,mill_H) - 0.118723545374294*alloc(2271,mill_L) - 0.130657240762418*alloc(2271,ofib_L)
     
      - 0.148450429164002*alloc(2271,ooil_L) - 2.79978609387172E-5*alloc(2271,opul_H) - 0.0574597510807471*alloc(2271,opul_L) - 0.0440147799063402*alloc(2271,pige_H) - 0.139339084642569*alloc(2271,pige_L) - 0.105011771678643*alloc(2271,pota_H)
     
      - 0.099089651641344*alloc(2271,pota_L) - 0.0425605140310489*alloc(2271,rest_H) - 0.0661723028348722*alloc(2271,rest_L) - 0.0447130097607976*alloc(2271,rice_H) - 0.119613207720047*alloc(2271,rice_L) - 0.118723545374294*alloc(2271,sorg_L)
     
      - 0.148450429164002*alloc(2271,soyb_L) - 0.148450429164002*alloc(2271,sunf_L) - 0.0634710305769031*alloc(2271,temf_H) - 0.0661723028348722*alloc(2271,temf_L) - 0.0728817335683511*alloc(2271,toba_H) - 0.128724540538784*alloc(2271,toba_L)
     
      - 7.93470859687116E-10*alloc(2271,trof_L) - 0.1911260699995*alloc(2271,vege_H) - 0.139339084642569*alloc(2271,vege_L) - 0.0710767145515968*alloc(2274,bean_H) - 0.18425160894994*alloc(2274,bean_L) - 0.151088731732679*alloc(2274,cass_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0516730101185282*alloc(2274,chic_H) - 0.118784926014155*alloc(2274,chic_L) - 0.00134982789017207*alloc(2274,coff_L) - 0.148174362568328*alloc(2274,cott_L) - 0.0567333657093129*alloc(2274,cowp_H) - 0.177257012950157*alloc(2274,cowp_L)
     
      - 0.0691523403950626*alloc(2274,grou_H) - 0.134952176959056*alloc(2274,grou_L) - 0.0511866400077799*alloc(2274,lent_H) - 0.118784926014155*alloc(2274,lent_L) - 0.0814419405379753*alloc(2274,maiz_H) - 0.18425160894994*alloc(2274,maiz_L)
     
      - 0.0613506161034697*alloc(2274,mill_H) - 0.18425160894994*alloc(2274,mill_L) - 0.148174362568328*alloc(2274,ofib_L) - 0.177257012950157*alloc(2274,ooil_L) - 0.044606721593421*alloc(2274,opul_H) - 0.118784926014155*alloc(2274,opul_L)
     
      - 0.0653921737400533*alloc(2274,pige_H) - 0.18425160894994*alloc(2274,pige_L) - 0.138101334566451*alloc(2274,pota_H) - 0.0917883221313482*alloc(2274,pota_L) - 0.105339495017446*alloc(2274,rest_H) - 0.18425160894994*alloc(2274,rest_L)
     
      - 0.0668289301291952*alloc(2274,rice_H) - 0.173759732504309*alloc(2274,rice_L) - 0.18965090515084*alloc(2274,sorg_L) - 0.18425160894994*alloc(2274,soyb_L) - 0.177257012950157*alloc(2274,sunf_L) - 0.15709411555345*alloc(2274,temf_H)
     
      - 0.18425160894994*alloc(2274,temf_L) - 0.111637653279356*alloc(2274,toba_H) - 0.189344130681192*alloc(2274,toba_L) - 0.00134982789017207*alloc(2274,trof_L) - 0.274729814800358*alloc(2274,vege_H) - 0.169280759712353*alloc(2274,vege_L)
     
      - 0.0762039220521852*alloc(2275,bean_H) - 0.257203652139693*alloc(2275,bean_L) - 0.159893290081767*alloc(2275,cass_L) - 0.0549710422707481*alloc(2275,chic_H) - 0.190571216857088*alloc(2275,chic_L) - 0.000736269671004152*alloc(2275,coff_L)
     
      - 0.202259518415425*alloc(2275,cott_L) - 0.058553364565014*alloc(2275,cowp_H) - 0.226955249411045*alloc(2275,cowp_L) - 0.0717088604013762*alloc(2275,grou_H) - 0.168881931836958*alloc(2275,grou_L) - 0.0544536295662077*alloc(2275,lent_H)
     
      - 0.190571216857088*alloc(2275,lent_L) - 0.0869283454806875*alloc(2275,maiz_H) - 0.257203628734301*alloc(2275,maiz_L) - 0.0655268174045026*alloc(2275,mill_H) - 0.257203652139693*alloc(2275,mill_L) - 0.202259518415425*alloc(2275,ofib_L)
     
      - 0.226955249411045*alloc(2275,ooil_L) - 0.0474537475685436*alloc(2275,opul_H) - 0.190571216857088*alloc(2275,opul_L) - 0.0692803936071782*alloc(2275,pige_H) - 0.257203652139693*alloc(2275,pige_L) - 0.141793219177683*alloc(2275,pota_H)
     
      - 0.096727491735864*alloc(2275,pota_L) - 0.112435778852395*alloc(2275,rest_H) - 0.257203628734301*alloc(2275,rest_L) - 0.0684838653419913*alloc(2275,rice_H) - 0.211800328470051*alloc(2275,rice_L) - 0.2601794136466*alloc(2275,sorg_L)
     
      - 0.257203652139693*alloc(2275,soyb_L) - 0.226955249411045*alloc(2275,sunf_L) - 0.167676893006323*alloc(2275,temf_H) - 0.257203628734301*alloc(2275,temf_L) - 0.115590999912286*alloc(2275,toba_H) - 0.244257591639574*alloc(2275,toba_L)
     
      - 0.000736269671004152*alloc(2275,trof_L) - 0.286499794543392*alloc(2275,vege_H) - 0.209315424838893*alloc(2275,vege_L) - 0.0780023114436063*alloc(2276,bean_H) - 0.287360024867985*alloc(2276,bean_L) - 0.165722098626644*alloc(2276,cass_L)
     
      - 0.0566287174838586*alloc(2276,chic_H) - 0.220114040646085*alloc(2276,chic_L) - 0.000276101360909043*alloc(2276,coff_L) - 0.224500983437686*alloc(2276,cott_L) - 0.0587264166591357*alloc(2276,cowp_H) - 0.247662818679675*alloc(2276,cowp_L)
     
      - 0.0709790204580214*alloc(2276,grou_H) - 0.183515287028228*alloc(2276,grou_L) - 0.0560957019786465*alloc(2276,lent_H) - 0.220114040646085*alloc(2276,lent_L) - 0.0885342014791934*alloc(2276,maiz_H) - 0.247662818679675*alloc(2276,maiz_L)
     
      - 0.0668451884622348*alloc(2276,mill_H) - 0.287360024867985*alloc(2276,mill_L) - 0.224500983437686*alloc(2276,ofib_L) - 0.247662818679675*alloc(2276,ooil_L) - 0.0488847355553848*alloc(2276,opul_H) - 0.220114040646085*alloc(2276,opul_L)
     
      - 0.0706378782984974*alloc(2276,pige_H) - 0.287360024867985*alloc(2276,pige_L) - 0.145412851001975*alloc(2276,pota_H) - 0.159310402205662*alloc(2276,pota_L) - 0.114512842080947*alloc(2276,rest_H) - 0.247662818679675*alloc(2276,rest_L)
     
      - 0.0690748078319295*alloc(2276,rice_H) - 0.227814203882824*alloc(2276,rice_L) - 0.288433747214449*alloc(2276,sorg_L) - 0.287360024867985*alloc(2276,soyb_L) - 0.247662818679675*alloc(2276,sunf_L) - 0.170774443557367*alloc(2276,temf_H)
     
      - 0.247662818679675*alloc(2276,temf_L) - 0.116906322063603*alloc(2276,toba_H) - 0.268217012416177*alloc(2276,toba_L) - 0.000276101360909043*alloc(2276,trof_L) - 0.290155641301878*alloc(2276,vege_H) - 0.226924541537071*alloc(2276,vege_L)
     
      - 0.0763829627119931*alloc(2277,bean_H) - 0.270855314984854*alloc(2277,bean_L) - 0.157439059216496*alloc(2277,cass_L) - 0.0554965894962169*alloc(2277,chic_H) - 0.206216948863049*alloc(2277,chic_L) - 0.000613558082026954*alloc(2277,coff_L)
     
      - 0.212137787408281*alloc(2277,cott_L) - 0.0576194388452352*alloc(2277,cowp_H) - 0.23480876477452*alloc(2277,cowp_L) - 0.069488049721028*alloc(2277,grou_H) - 0.173974465270906*alloc(2277,grou_L) - 0.0549742300997445*alloc(2277,lent_H)
     
      - 0.206216948863049*alloc(2277,lent_L) - 0.0866850141932609*alloc(2277,maiz_H) - 0.234808788179911*alloc(2277,maiz_L) - 0.065471357773633*alloc(2277,mill_H) - 0.270855291579462*alloc(2277,mill_L) - 0.212137787408281*alloc(2277,ofib_L)
     
      - 0.23480876477452*alloc(2277,ooil_L) - 0.0479074261662663*alloc(2277,opul_H) - 0.206216948863049*alloc(2277,opul_L) - 0.0690993743805343*alloc(2277,pige_H) - 0.270855314984854*alloc(2277,pige_L) - 0.142752155382317*alloc(2277,pota_H)
     
      - 0.149922967683164*alloc(2277,pota_L) - 0.112121046728257*alloc(2277,rest_H) - 0.234808788179911*alloc(2277,rest_L) - 0.0678164739454973*alloc(2277,rice_H) - 0.216770159137757*alloc(2277,rice_L) - 0.273340218616011*alloc(2277,sorg_L)
     
      - 0.270855314984854*alloc(2277,soyb_L) - 0.23480876477452*alloc(2277,sunf_L) - 0.167207529025894*alloc(2277,temf_H) - 0.234808788179911*alloc(2277,temf_L) - 0.114607228744424*alloc(2277,toba_H) - 0.252847370411282*alloc(2277,toba_L)
     
      - 0.000613558082026954*alloc(2277,trof_L) - 0.284789112904206*alloc(2277,vege_H) - 0.214745405508376*alloc(2277,vege_L) - 0.0774633494110258*alloc(2278,bean_H) - 0.29398646575826*alloc(2278,bean_L) - 0.166182260331116*alloc(2278,cass_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0566065389351048*alloc(2278,chic_H) - 0.226771142599551*alloc(2278,chic_L) - 0.000214745292138509*alloc(2278,coff_L) - 0.229348099636455*alloc(2278,cott_L) - 0.0577980395195163*alloc(2278,cowp_H) - 0.252111107003049*alloc(2278,cowp_L)
     
      - 0.0690042546132078*alloc(2278,grou_H) - 0.186521721301021*alloc(2278,grou_L) - 0.0560737321845828*alloc(2278,lent_H) - 0.226771142599551*alloc(2278,lent_L) - 0.087600003549858*alloc(2278,maiz_H) - 0.252111107003049*alloc(2278,maiz_L)
     
      - 0.0662559467059691*alloc(2278,mill_H) - 0.231158085391152*alloc(2278,mill_L) - 0.229348099636455*alloc(2278,ofib_L) - 0.252111107003049*alloc(2278,ooil_L) - 0.0488655899250579*alloc(2278,opul_H) - 0.226771142599551*alloc(2278,opul_L)
     
      - 0.0697286649137069*alloc(2278,pige_H) - 0.29398646575826*alloc(2278,pige_L) - 0.145840431673677*alloc(2278,pota_H) - 0.163728029465845*alloc(2278,pota_L) - 0.113304521927074*alloc(2278,rest_H) - 0.252111107003049*alloc(2278,rest_L)
     
      - 0.0683299046882566*alloc(2278,rice_H) - 0.231158085391152*alloc(2278,rice_L) - 0.294876128104014*alloc(2278,sorg_L) - 0.29398646575826*alloc(2278,soyb_L) - 0.252111107003049*alloc(2278,sunf_L) - 0.168972460494446*alloc(2278,temf_H)
     
      - 0.252111107003049*alloc(2278,temf_L) - 0.115656052923881*alloc(2278,toba_H) - 0.273125474146719*alloc(2278,toba_L) - 0.000214745292138509*alloc(2278,trof_L) - 0.287356215016523*alloc(2278,vege_H) - 0.230421821982918*alloc(2278,vege_L)
     
      - 0.0395575087755326*alloc(2281,bean_H) - 0.088229731261815*alloc(2281,bean_L) - 0.0955923477901044*alloc(2281,cass_L) - 0.0249163582688621*alloc(2281,chic_H) - 0.0595458385392054*alloc(2281,chic_L) - 0.0882297078564233*alloc(2281,coff_L)
     
      - 0.132927399924283*alloc(2281,cott_L) - 0.0384365350836776*alloc(2281,cowp_H) - 0.132927423329674*alloc(2281,cowp_L) - 0.026683910157786*alloc(2281,grou_H) - 0.0353716323338741*alloc(2281,grou_L) - 0.0246818340578112*alloc(2281,lent_H)
     
      - 0.0595458385392054*alloc(2281,lent_L) - 0.0427791271884708*alloc(2281,maiz_H) - 0.132927446735066*alloc(2281,maiz_L) - 0.0468112634669903*alloc(2281,mill_H) - 0.132927446735066*alloc(2281,mill_L) - 0.132927399924283*alloc(2281,ofib_L)
     
      - 0.133019476735421*alloc(2281,ooil_L) - 0.021509044158094*alloc(2281,opul_H) - 0.0595458385392054*alloc(2281,opul_L) - 0.0458652738194693*alloc(2281,pige_H) - 0.132927364816195*alloc(2281,pige_L) - 0.117779078488625*alloc(2281,pota_H)
     
      - 0.0955924063035837*alloc(2281,pota_L) - 0.0553318305722266*alloc(2281,rest_H) - 0.132927446735066*alloc(2281,rest_L) - 0.0480322973352771*alloc(2281,rice_H) - 0.132927399924283*alloc(2281,rice_L) - 0.133019476735421*alloc(2281,sorg_L)
     
      - 0.170262452058461*alloc(2281,soyb_L) - 0.133019476735421*alloc(2281,sunf_L) - 0.0825170557753074*alloc(2281,temf_H) - 0.132927446735066*alloc(2281,temf_L) - 0.0845365581291297*alloc(2281,toba_H) - 0.132927446735066*alloc(2281,toba_L)
     
      - 0.20168754993811*alloc(2281,vege_H) - 0.132927446735066*alloc(2281,vege_L) - 0.0619774997918762*alloc(2282,bean_H) - 0.193209437506894*alloc(2282,bean_L) - 3.86346210567638E-8*alloc(2282,cass_L) - 0.0321274824113029*alloc(2282,chic_H)
     
      - 0.0836586582533283*alloc(2282,chic_L) - 0.132375173111368*alloc(2282,coff_L) - 0.0836586758073722*alloc(2282,cott_L) - 0.039017961022268*alloc(2282,cowp_H) - 0.137590432716949*alloc(2282,cowp_L) - 9.94428378104659E-6*alloc(2282,grou_H)
     
      - 5.93979049625311E-9*alloc(2282,grou_L) - 0.031825083786903*alloc(2282,lent_H) - 0.0836586582533283*alloc(2282,lent_L) - 0.0629912997764609*alloc(2282,maiz_H) - 0.193209460912286*alloc(2282,maiz_L) - 0.0560742529036435*alloc(2282,mill_H)
     
      - 0.193209460912286*alloc(2282,mill_L) - 0.0836586758073722*alloc(2282,ofib_L) - 0.193209460912286*alloc(2282,ooil_L) - 0.0277340464612233*alloc(2282,opul_H) - 0.0836586582533283*alloc(2282,opul_L) - 2.67450303468335E-5*alloc(2282,pige_H)
     
      - 5.4058021796374E-8*alloc(2282,pige_L) - 0.146056607259131*alloc(2282,pota_H) - 0.137590409311558*alloc(2282,pota_L) - 0.0814748723460355*alloc(2282,rest_H) - 0.193209460912286*alloc(2282,rest_L) - 0.0415500651792842*alloc(2282,rice_H)
     
      - 0.083658687510068*alloc(2282,rice_L) - 0.193209472614982*alloc(2282,sorg_L) - 0.193209484317678*alloc(2282,soyb_L) - 0.193209460912286*alloc(2282,sunf_L) - 0.121504503215161*alloc(2282,temf_H) - 0.193209460912286*alloc(2282,temf_L)
     
      - 0.101475863276561*alloc(2282,toba_H) - 0.193209460912286*alloc(2282,toba_L) - 0.242160632785488*alloc(2282,vege_H) - 0.193209460912286*alloc(2282,vege_L) - 0.0314524959866792*alloc(2283,bean_H) - 0.0600673750321898*alloc(2283,bean_L)
     
      - 0.0719397014831492*alloc(2283,cass_L) - 0.0189192573154714*alloc(2283,chic_H) - 0.0464770372390835*alloc(2283,chic_L) - 0.0600673282214063*alloc(2283,coff_L) - 0.071939719037193*alloc(2283,cott_L) - 0.0292753064144945*alloc(2283,cowp_H)
     
      - 0.099733896751918*alloc(2283,cowp_L) - 2.36826387699552E-5*alloc(2283,grou_H) - 3.91679368101031E-8*alloc(2283,grou_L) - 0.0187411805737702*alloc(2283,lent_H) - 0.0464770372390835*alloc(2283,lent_L) - 0.0347269603643593*alloc(2283,maiz_H)
     
      - 0.099733896751918*alloc(2283,maiz_L) - 0.0367692230439964*alloc(2283,mill_H) - 0.099733896751918*alloc(2283,mill_L) - 0.071939719037193*alloc(2283,ofib_L) - 0.099733896751918*alloc(2283,ooil_L) - 0.0163320472697395*alloc(2283,opul_H)
     
      - 0.0464770372390835*alloc(2283,opul_L) - 0.0340424850730774*alloc(2283,pige_H) - 0.099733896751918*alloc(2283,pige_L) - 0.0909149523858528*alloc(2283,pota_H) - 0.0719396956318012*alloc(2283,pota_L) - 0.0449169119020039*alloc(2283,rest_H)
     
      - 0.099733896751918*alloc(2283,rest_L) - 0.0356390587541193*alloc(2283,rice_H) - 0.0997338850492222*alloc(2283,rice_L) - 0.127558764786573*alloc(2283,sorg_L) - 0.127558764786573*alloc(2283,soyb_L) - 0.099733896751918*alloc(2283,sunf_L)
     
      - 0.066985156398072*alloc(2283,temf_H) - 0.099733896751918*alloc(2283,temf_L) - 0.0660743264555051*alloc(2283,toba_H) - 0.0997338850492222*alloc(2283,toba_L) - 8.84339923910161E-17*alloc(2283,trof_L) - 0.155637952457973*alloc(2283,vege_H)
     
      - 0.099733896751918*alloc(2283,vege_L) - 0.0336766713472739*alloc(2284,bean_H) - 0.101758650381299*alloc(2284,bean_L) - 0.0527660162654544*alloc(2284,cass_L) - 0.0195846082684014*alloc(2284,chic_H) - 0.0442375362147355*alloc(2284,chic_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 3.87920609909629E-9*alloc(2284,coff_L) - 0.0801920798301066*alloc(2284,cott_L) - 0.0264349004412147*alloc(2284,cowp_H) - 0.101758662083995*alloc(2284,cowp_L) - 0.0338567069450215*alloc(2284,grou_H) - 0.0827383465470805*alloc(2284,grou_L)
     
      - 0.019400268937857*alloc(2284,lent_H) - 0.0442375362147355*alloc(2284,lent_L) - 0.0406042401001856*alloc(2284,maiz_H) - 0.104335607418204*alloc(2284,maiz_L) - 0.0249558654848059*alloc(2284,mill_H) - 0.104335607418204*alloc(2284,mill_L)
     
      - 0.0801920798301066*alloc(2284,ofib_L) - 0.101758626975908*alloc(2284,ooil_L) - 0.0169064114233118*alloc(2284,opul_H) - 0.0442375362147355*alloc(2284,opul_L) - 0.0318492238083561*alloc(2284,pige_H) - 0.104335607418204*alloc(2284,pige_L)
     
      - 0.0449814674650265*alloc(2284,pota_H) - 0.0258921473313032*alloc(2284,pota_L) - 0.0525187651407479*alloc(2284,rest_H) - 0.104335607418204*alloc(2284,rest_L) - 0.0290573644502788*alloc(2284,rice_H) - 0.0827383582497764*alloc(2284,rice_L)
     
      - 0.104304934652317*alloc(2284,sorg_L) - 0.104335607418204*alloc(2284,soyb_L) - 0.101758626975908*alloc(2284,sunf_L) - 0.0783218958699088*alloc(2284,temf_H) - 0.104335607418204*alloc(2284,temf_L) - 0.0487521648667703*alloc(2284,toba_H)
     
      - 0.0853152918812889*alloc(2284,toba_L) - 5.05456832002666E-9*alloc(2284,trof_L) - 0.132885809583499*alloc(2284,vege_H) - 0.101758638678603*alloc(2284,vege_L) - 0.0670298966206171*alloc(2313,bean_H) - 0.162715664353851*alloc(2313,bean_L)
     
      - 0.148542459164357*alloc(2313,cass_L) - 0.0492968608021508*alloc(2313,chic_H) - 0.0973103445038816*alloc(2313,chic_L) - 0.00162592959393353*alloc(2313,coff_L) - 0.13430790844309*alloc(2313,cott_L) - 0.0539477054801789*alloc(2313,cowp_H)
     
      - 0.162715664353851*alloc(2313,cowp_L) - 0.0654727686658229*alloc(2313,grou_H) - 0.12715996031657*alloc(2313,grou_L) - 0.0488328561004141*alloc(2313,lent_H) - 0.0973103445038816*alloc(2313,lent_L) - 0.076805547508133*alloc(2313,maiz_H)
     
      - 0.162715664353851*alloc(2313,maiz_L) - 0.0579326460769237*alloc(2313,mill_H) - 0.162715664353851*alloc(2313,mill_L) - 0.13430790844309*alloc(2313,ofib_L) - 0.162715664353851*alloc(2313,ooil_L) - 0.0425555108979938*alloc(2313,opul_H)
     
      - 0.0973103445038816*alloc(2313,opul_L) - 0.0618874762537597*alloc(2313,pige_H) - 0.162715664353851*alloc(2313,pige_L) - 0.13433525936162*alloc(2313,pota_H) - 0.0903157836121857*alloc(2313,pota_L) - 0.0993426425696797*alloc(2313,rest_H)
     
      - 0.162715664353851*alloc(2313,rest_L) - 0.0639541419432291*alloc(2313,rice_H) - 0.162715664353851*alloc(2313,rice_L) - 0.169158021838023*alloc(2313,sorg_L) - 0.162715664353851*alloc(2313,soyb_L) - 0.162715664353851*alloc(2313,sunf_L)
     
      - 0.148150933974401*alloc(2313,temf_H) - 0.162715664353851*alloc(2313,temf_L) - 0.106457074829393*alloc(2313,toba_H) - 0.171734967172232*alloc(2313,toba_L) - 0.00162592959393353*alloc(2313,trof_L) - 0.261551762199553*alloc(2313,vege_H)
     
      - 0.157316344747559*alloc(2313,vege_L) - 0.0686614039479795*alloc(2314,bean_H) - 0.161028346257308*alloc(2314,bean_L) - 0.143603324667929*alloc(2314,cass_L) - 0.0507377585970989*alloc(2314,chic_H) - 0.0962366338601139*alloc(2314,chic_L)
     
      - 0.00196338670361752*alloc(2314,coff_L) - 0.131270813107106*alloc(2314,cott_L) - 0.0546832436541137*alloc(2314,cowp_H) - 0.161028381365395*alloc(2314,cowp_L) - 0.0648950159790042*alloc(2314,grou_H) - 0.12237420135227*alloc(2314,grou_L)
     
      - 0.0502601915033418*alloc(2314,lent_H) - 0.0962366338601139*alloc(2314,lent_L) - 0.0782958795803058*alloc(2314,maiz_H) - 0.161028357960004*alloc(2314,maiz_L) - 0.0591467729134718*alloc(2314,mill_H) - 0.161028381365395*alloc(2314,mill_L)
     
      - 0.131270813107106*alloc(2314,ofib_L) - 0.161028381365395*alloc(2314,ooil_L) - 0.043799365797029*alloc(2314,opul_H) - 0.0962366338601139*alloc(2314,opul_L) - 0.0629216942057533*alloc(2314,pige_H) - 0.161028393068091*alloc(2314,pige_L)
     
      - 0.138144637971796*alloc(2314,pota_H) - 0.0875854451918055*alloc(2314,pota_L) - 0.101270283621133*alloc(2314,rest_H) - 0.161028357960004*alloc(2314,rest_L) - 0.0653160338304285*alloc(2314,rice_H) - 0.161028381365395*alloc(2314,rice_L)
     
      - 0.168943265666035*alloc(2314,sorg_L) - 0.161028393068091*alloc(2314,soyb_L) - 0.161028381365395*alloc(2314,sunf_L) - 0.151025649350931*alloc(2314,temf_H) - 0.161028357960004*alloc(2314,temf_L) - 0.108522665168375*alloc(2314,toba_H)
     
      - 0.169311409072847*alloc(2314,toba_L) - 0.00196338670361752*alloc(2314,trof_L) - 0.267147075779271*alloc(2314,vege_H) - 0.154463297709589*alloc(2314,vege_L) - 0.0332184502229637*alloc(2315,bean_H) - 0.0510481190245921*alloc(2315,bean_L)
     
      - 0.133356900565564*alloc(2315,cass_L) - 0.0516687261177593*alloc(2315,chic_H) - 0.0935983312914368*alloc(2315,chic_L) - 0.00282236805502618*alloc(2315,coff_L) - 0.129123356711483*alloc(2315,cott_L) - 0.0543423159012335*alloc(2315,cowp_H)
     
      - 0.156917551980252*alloc(2315,cowp_L) - 0.0629892763750411*alloc(2315,grou_H) - 0.117833883028541*alloc(2315,grou_L) - 0.0511823963299944*alloc(2315,lent_H) - 0.0935983312914368*alloc(2315,lent_L) - 0.0419977870739398*alloc(2315,maiz_H)
     
      - 0.091727005856315*alloc(2315,maiz_L) - 0.0595689830195351*alloc(2315,mill_H) - 0.12350931604129*alloc(2315,mill_L) - 0.129123356711483*alloc(2315,ofib_L) - 0.156917551980252*alloc(2315,ooil_L) - 0.0446030234301213*alloc(2315,opul_H)
     
      - 0.0935983312914368*alloc(2315,opul_L) - 0.063050082281793*alloc(2315,pige_H) - 0.156917551980252*alloc(2315,pige_L) - 0.141802107008453*alloc(2315,pota_H) - 0.0907452784021191*alloc(2315,pota_L) - 0.0543212213878447*alloc(2315,rest_H)
     
      - 0.091727005856315*alloc(2315,rest_L) - 0.0655371847144873*alloc(2315,rice_H) - 0.156917551980252*alloc(2315,rice_L) - 0.11154494788728*alloc(2315,sorg_L) - 0.156917551980252*alloc(2315,soyb_L) - 0.156917551980252*alloc(2315,sunf_L)
     
      - 0.0810099215711385*alloc(2315,temf_H) - 0.091727005856315*alloc(2315,temf_L) - 0.10860285629159*alloc(2315,toba_H) - 0.160506862426455*alloc(2315,toba_L) - 0.00282236805502618*alloc(2315,trof_L) - 0.268822902351718*alloc(2315,vege_H)
     
      - 0.147499432989171*alloc(2315,vege_L) - 0.0687915770406195*alloc(2316,bean_H) - 0.155813191975989*alloc(2316,bean_L) - 0.132681994391799*alloc(2316,cass_L) - 0.0511892943166687*alloc(2316,chic_H) - 0.0928621029912911*alloc(2316,chic_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.00288372291238484*alloc(2316,coff_L) - 0.128018973301829*alloc(2316,cott_L) - 0.0540357866358826*alloc(2316,cowp_H) - 0.155813168570598*alloc(2316,cowp_L) - 0.0629459868802034*alloc(2316,grou_H) - 0.117343048558183*alloc(2316,grou_L)
     
      - 0.0507074771612753*alloc(2316,lent_H) - 0.0928621029912911*alloc(2316,lent_L) - 0.0781570766658385*alloc(2316,maiz_H) - 0.155813168570598*alloc(2316,maiz_L) - 0.0591587033653428*alloc(2316,mill_H) - 0.155813168570598*alloc(2316,mill_L)
     
      - 0.128018973301829*alloc(2316,ofib_L) - 0.155813168570598*alloc(2316,ooil_L) - 0.0441891539685741*alloc(2316,opul_H) - 0.0928621029912911*alloc(2316,opul_L) - 0.06251729639192*alloc(2316,pige_H) - 0.155813191975989*alloc(2316,pige_L)
     
      - 0.139660142174282*alloc(2316,pota_H) - 0.0900090325479296*alloc(2316,pota_L) - 0.1010907516893*alloc(2316,rest_H) - 0.155813168570598*alloc(2316,rest_L) - 0.0650545755060547*alloc(2316,rice_H) - 0.155813168570598*alloc(2316,rice_L)
     
      - 0.167286713956945*alloc(2316,sorg_L) - 0.155813191975989*alloc(2316,soyb_L) - 0.155813168570598*alloc(2316,sunf_L) - 0.150757911119984*alloc(2316,temf_H) - 0.155813168570598*alloc(2316,temf_L) - 0.107842858935899*alloc(2316,toba_H)
     
      - 0.159218430718786*alloc(2316,toba_L) - 0.00288372291238484*alloc(2316,trof_L) - 0.266981600712926*alloc(2316,vege_H) - 0.146241650641997*alloc(2316,vege_L) - 0.0736572019048148*alloc(2317,bean_H) - 0.258093220863879*alloc(2317,bean_L)
     
      - 0.160200076254111*alloc(2317,cass_L) - 0.0542523795591473*alloc(2317,chic_H) - 0.191767665375185*alloc(2317,chic_L) - 0.000613558036313299*alloc(2317,coff_L) - 0.202811721822948*alloc(2317,cott_L) - 0.0554726220892809*alloc(2317,cowp_H)
     
      - 0.22723133941211*alloc(2317,cowp_L) - 0.0652542933919624*alloc(2317,grou_H) - 0.153911106004762*alloc(2317,grou_L) - 0.0537417312382151*alloc(2317,lent_H) - 0.191767665375185*alloc(2317,lent_L) - 0.0832102875817137*alloc(2317,maiz_H)
     
      - 0.227231316006718*alloc(2317,maiz_L) - 0.0630099269599885*alloc(2317,mill_H) - 0.211800351875442*alloc(2317,mill_L) - 0.202811721822948*alloc(2317,ofib_L) - 0.22723133941211*alloc(2317,ooil_L) - 0.0468333620438294*alloc(2317,opul_H)
     
      - 0.191767665375185*alloc(2317,opul_L) - 0.0664679927637323*alloc(2317,pige_H) - 0.258093314485446*alloc(2317,pige_L) - 0.142317027064691*alloc(2317,pota_H) - 0.144861130420494*alloc(2317,pota_L) - 0.107626729130147*alloc(2317,rest_H)
     
      - 0.227231316006718*alloc(2317,rest_L) - 0.0661324038939666*alloc(2317,rice_H) - 0.211800351875442*alloc(2317,rice_L) - 0.260547533648021*alloc(2317,sorg_L) - 0.258093314485446*alloc(2317,soyb_L) - 0.22723133941211*alloc(2317,sunf_L)
     
      - 0.160505096590894*alloc(2317,temf_H) - 0.227231316006718*alloc(2317,temf_L) - 0.111396081081685*alloc(2317,toba_H) - 0.245085885048162*alloc(2317,toba_L) - 0.000613558036313299*alloc(2317,trof_L) - 0.276038039562231*alloc(2317,vege_H)
     
      - 0.209744937182871*alloc(2317,vege_L) - 0.0427970657737062*alloc(2318,bean_H) - 0.102034787193148*alloc(2318,bean_L) - 0.170078356949663*alloc(2318,cass_L) - 0.0565338470022336*alloc(2318,chic_H) - 0.238183237129863*alloc(2318,chic_L)
     
      - 3.97908969754221E-8*alloc(2318,coff_L) - 0.23818333075143*alloc(2318,cott_L) - 0.0566226790895159*alloc(2318,cowp_H) - 0.260884969180859*alloc(2318,cowp_L) - 0.0663680965289505*alloc(2318,grou_H) - 0.170170398652714*alloc(2318,grou_L)
     
      - 0.0560017244615798*alloc(2318,lent_H) - 0.238183237129863*alloc(2318,lent_L) - 0.048266582944697*alloc(2318,maiz_H) - 0.192749369423989*alloc(2318,maiz_L) - 0.0655276672232756*alloc(2318,mill_H) - 0.23818333075143*alloc(2318,mill_L)
     
      - 0.23818333075143*alloc(2318,ofib_L) - 0.260884992586251*alloc(2318,ooil_L) - 0.0488028386201845*alloc(2318,opul_H) - 0.238183237129863*alloc(2318,opul_L) - 0.0691046017160514*alloc(2318,pige_H) - 0.306226947318728*alloc(2318,pige_L)
     
      - 0.145796984750094*alloc(2318,pota_H) - 0.170170398652714*alloc(2318,pota_L) - 0.062429473561491*alloc(2318,rest_H) - 0.192749369423989*alloc(2318,rest_L) - 0.0673732641011355*alloc(2318,rice_H) - 0.23818333075143*alloc(2318,rice_L)
     
      - 0.23818333075143*alloc(2318,sorg_L) - 0.306226947318728*alloc(2318,soyb_L) - 0.260884992586251*alloc(2318,sunf_L) - 0.093101860152127*alloc(2318,temf_H) - 0.192749369423989*alloc(2318,temf_L) - 0.114212510868115*alloc(2318,toba_H)
     
      - 0.283555969952489*alloc(2318,toba_L) - 0.283794708366957*alloc(2318,vege_H) - 0.23818333075143*alloc(2318,vege_L) - 0.0455803845467522*alloc(2319,bean_H) - 0.161028369662699*alloc(2319,bean_L) - 0.162040723071998*alloc(2319,cass_L)
     
      - 2.42511368576138E-5*alloc(2319,chic_H) - 5.17617978590513E-8*alloc(2319,chic_L) - 0.0966047538615347*alloc(2319,coff_L) - 0.227077893663807*alloc(2319,cott_L) - 0.055295846085298*alloc(2319,cowp_H) - 0.227077893663807*alloc(2319,cowp_L)
     
      - 0.0630776551770505*alloc(2319,grou_H) - 0.162684933074485*alloc(2319,grou_L) - 2.40228740161004E-5*alloc(2319,lent_H) - 5.17617978590513E-8*alloc(2319,lent_L) - 0.0492671248011095*alloc(2319,maiz_H) - 0.22545196790982*alloc(2319,maiz_L)
     
      - 0.0645890486538629*alloc(2319,mill_H) - 0.227077893663807*alloc(2319,mill_L) - 0.227077893663807*alloc(2319,ofib_L) - 0.248552410809253*alloc(2319,ooil_L) - 2.09347918313674E-5*alloc(2319,opul_H) - 5.17617978590513E-8*alloc(2319,opul_L)
     
      - 0.0679748257314924*alloc(2319,pige_H) - 0.291501491910928*alloc(2319,pige_L) - 0.148371183547787*alloc(2319,pota_H) - 0.162684956479876*alloc(2319,pota_L) - 0.0637236049783274*alloc(2319,rest_H) - 0.22545196790982*alloc(2319,rest_L)
     
      - 0.0665584966226212*alloc(2319,rice_H) - 0.227077893663807*alloc(2319,rice_L) - 0.227077893663807*alloc(2319,sorg_L) - 0.291501491910928*alloc(2319,soyb_L) - 0.248552410809253*alloc(2319,sunf_L) - 0.0950318146322029*alloc(2319,temf_H)
     
      - 0.22545196790982*alloc(2319,temf_L) - 0.112744332021499*alloc(2319,toba_H) - 0.27002695136009*alloc(2319,toba_L) - 0.280266098229413*alloc(2319,vege_H) - 0.227077893663807*alloc(2319,vege_L) - 0.0428267773799553*alloc(2320,bean_H)
     
      - 0.10467307805913*alloc(2320,bean_L) - 0.113078750019344*alloc(2320,cass_L) - 0.0263412820759074*alloc(2320,chic_H) - 0.0721237848892513*alloc(2320,chic_L) - 0.104673054653738*alloc(2320,coff_L) - 0.157346958999966*alloc(2320,cott_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.0421901002223369*alloc(2320,cowp_H) - 0.157346994108054*alloc(2320,cowp_L) - 0.0322072030514941*alloc(2320,grou_H) - 0.0473666791051188*alloc(2320,grou_L) - 0.026093345827349*alloc(2320,lent_H) - 0.0721237848892513*alloc(2320,lent_L)
     
      - 0.0450885771024923*alloc(2320,maiz_H) - 0.147622147458109*alloc(2320,maiz_L) - 0.0511876769418066*alloc(2320,mill_H) - 0.157347040918837*alloc(2320,mill_L) - 0.157346958999966*alloc(2320,ofib_L) - 0.164587030748408*alloc(2320,ooil_L)
     
      - 0.0227391095134297*alloc(2320,opul_H) - 0.0721237848892513*alloc(2320,opul_L) - 0.0506646319684374*alloc(2320,pige_H) - 0.157346958999966*alloc(2320,pige_L) - 0.127900224897177*alloc(2320,pota_H) - 0.114397959817162*alloc(2320,pota_L)
     
      - 0.0583189436751822*alloc(2320,rest_H) - 0.147622147458109*alloc(2320,rest_L) - 0.0529567697144901*alloc(2320,rice_H) - 0.157346958999966*alloc(2320,rice_L) - 0.157347040918837*alloc(2320,sorg_L) - 0.200265402443842*alloc(2320,soyb_L)
     
      - 0.164587030748408*alloc(2320,sunf_L) - 0.0869717751651166*alloc(2320,temf_H) - 0.147622147458109*alloc(2320,temf_L) - 0.0909963140072878*alloc(2320,toba_H) - 0.157347040918837*alloc(2320,toba_L) - 0.221899815725156*alloc(2320,vege_H)
     
      - 0.157347040918837*alloc(2320,vege_L) - 0.0660080398170587*alloc(2321,bean_H) - 0.198394047751981*alloc(2321,bean_L) - 3.13781168525067E-15*alloc(2321,cass_L) - 0.0332464791913524*alloc(2321,chic_H) - 0.0863889966737086*alloc(2321,chic_L)
     
      - 0.137406361013543*alloc(2321,coff_L) - 3.4940341608511E-8*alloc(2321,cott_L) - 0.0279472591718808*alloc(2321,cowp_H) - 0.0871866407218024*alloc(2321,cowp_L) - 0.0329335480551713*alloc(2321,lent_H) - 0.0863889966737086*alloc(2321,lent_L)
     
      - 0.0647580879912566*alloc(2321,maiz_H) - 0.198394047751981*alloc(2321,maiz_L) - 0.0574471953014371*alloc(2321,mill_H) - 0.198394047751981*alloc(2321,mill_L) - 3.4940341608511E-8*alloc(2321,ofib_L) - 0.199191680097379*alloc(2321,ooil_L)
     
      - 0.0287000203365037*alloc(2321,opul_H) - 0.0863889966737086*alloc(2321,opul_L) - 7.52931328178885E-9*alloc(2321,pige_H) - 4.3501171987906E-15*alloc(2321,pige_L) - 0.15593772500375*alloc(2321,pota_H) - 0.141916006571386*alloc(2321,pota_L)
     
      - 0.0837600902217389*alloc(2321,rest_H) - 0.198394047751981*alloc(2321,rest_L) - 2.51943367217056E-5*alloc(2321,rice_H) - 4.70334366787831E-8*alloc(2321,rice_L) - 0.19836338668879*alloc(2321,sorg_L) - 0.141916041679473*alloc(2321,soyb_L)
     
      - 0.199191680097379*alloc(2321,sunf_L) - 0.124912477412978*alloc(2321,temf_H) - 0.198394047751981*alloc(2321,temf_L) - 0.103788470374289*alloc(2321,toba_H) - 0.198394047751981*alloc(2321,toba_L) - 0.248866283014101*alloc(2321,vege_H)
     
      - 0.198394047751981*alloc(2321,vege_L) - 0.0458311390925805*alloc(2322,bean_H) - 0.126239590096843*alloc(2322,bean_L) - 3.23981584490137E-8*alloc(2322,cass_L) - 0.0239349427936127*alloc(2322,chic_H) - 0.0609876808870897*alloc(2322,chic_L)
     
      - 0.0765106867214168*alloc(2322,coff_L) - 0.0633192265401628*alloc(2322,cott_L) - 0.0298722181166144*alloc(2322,cowp_H) - 0.0926779786257534*alloc(2322,cowp_L) - 1.81705077478037E-5*alloc(2322,grou_H) - 2.34661944820624E-8*alloc(2322,grou_L)
     
      - 0.0237096561158949*alloc(2322,lent_H) - 0.0609876808870897*alloc(2322,lent_L) - 0.0468737972181655*alloc(2322,maiz_H) - 0.126239590096843*alloc(2322,maiz_L) - 0.0421098790382637*alloc(2322,mill_H) - 0.126239601799539*alloc(2322,mill_L)
     
      - 0.0633192265401628*alloc(2322,ofib_L) - 0.128571129898568*alloc(2322,ooil_L) - 0.02066183733249*alloc(2322,opul_H) - 0.0609876808870897*alloc(2322,opul_L) - 2.43532349781939E-5*alloc(2322,pige_H) - 5.08464310089468E-8*alloc(2322,pige_L)
     
      - 0.10827303498717*alloc(2322,pota_H) - 0.0926779669230575*alloc(2322,pota_L) - 0.0606280019348182*alloc(2322,rest_H) - 0.126239590096843*alloc(2322,rest_L) - 0.0322216376650002*alloc(2322,rice_H) - 0.0926779786257534*alloc(2322,rice_L)
     
      - 0.126239613502235*alloc(2322,sorg_L) - 0.15980123667602*alloc(2322,soyb_L) - 0.128571129898568*alloc(2322,sunf_L) - 0.0904153028277358*alloc(2322,temf_H) - 0.126239590096843*alloc(2322,temf_L) - 0.0762059386224768*alloc(2322,toba_H)
     
      - 0.126239613502235*alloc(2322,toba_L) - 0.18233430141764*alloc(2322,vege_H) - 0.126239613502235*alloc(2322,vege_L) - 0.0239755220200328*alloc(2323,bean_H) - 0.0466611528275993*alloc(2323,bean_L) - 0.0601593991811971*alloc(2323,cass_L)
     
      - 6.58277422726473E-6*alloc(2323,chic_H) - 0.040770931460448*alloc(2323,chic_L) - 5.68654229458542E-10*alloc(2323,coff_L) - 0.0908680045737525*alloc(2323,cott_L) - 0.0264658899150257*alloc(2323,cowp_H) - 0.0856220956076765*alloc(2323,cowp_L)
     
      - 0.0273294200048735*alloc(2323,grou_H) - 0.0569689224617368*alloc(2323,grou_L) - 6.52081413199253E-6*alloc(2323,lent_H) - 0.040770931460448*alloc(2323,lent_L) - 0.0250929485038642*alloc(2323,maiz_H) - 0.0466611645302951*alloc(2323,maiz_L)
     
      - 0.0317637006623325*alloc(2323,mill_H) - 0.0856220956076765*alloc(2323,mill_L) - 0.0908680045737525*alloc(2323,ofib_L) - 0.0978011848255878*alloc(2323,ooil_L) - 5.68257929225333E-6*alloc(2323,opul_H) - 0.040770931460448*alloc(2323,opul_L)
     
      - 0.0323228788579338*alloc(2323,pige_H) - 0.0978012199336754*alloc(2323,pige_L) - 0.0755689292899433*alloc(2323,pota_H) - 0.065221218889823*alloc(2323,pota_L) - 0.0324559865154896*alloc(2323,rest_H) - 0.0466611645302951*alloc(2323,rest_L)
     
      - 0.0325715955358727*alloc(2323,rice_H) - 0.0856220839049806*alloc(2323,rice_L) - 0.0856220956076765*alloc(2323,sorg_L) - 0.106299003813116*alloc(2323,soyb_L) - 0.0978011848255878*alloc(2323,sunf_L) - 0.0484020214376491*alloc(2323,temf_H)
     
      - 0.0466611645302951*alloc(2323,temf_L) - 0.05431539147003*alloc(2323,toba_H) - 0.0941198619330733*alloc(2323,toba_L) - 7.32932143157553E-10*alloc(2323,trof_L) - 0.139667217976266*alloc(2323,vege_H) - 0.0945800294888931*alloc(2323,vege_L)
     
      - 0.0498047219437932*alloc(2324,bean_H) - 0.136792812074247*alloc(2324,bean_L) - 0.0782286600298023*alloc(2324,cass_L) - 0.00138051519300105*alloc(2324,coff_L) - 0.13317279375407*alloc(2324,cott_L) - 0.0383584562533395*alloc(2324,cowp_H)
     
      - 0.168513765024754*alloc(2324,cowp_L) - 0.0499854679126411*alloc(2324,grou_H) - 0.13317279375407*alloc(2324,grou_L) - 0.0606467455847606*alloc(2324,maiz_H) - 0.169618183542495*alloc(2324,maiz_L) - 0.0374952583483298*alloc(2324,mill_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.169618183542495*alloc(2324,mill_L) - 0.13317279375407*alloc(2324,ofib_L) - 0.0820941131392024*alloc(2324,ooil_L) - 0.0464467332653557*alloc(2324,pige_H) - 0.169065980134972*alloc(2324,pige_L) - 0.0784423542974314*alloc(2324,rest_H)
     
      - 0.169618183542495*alloc(2324,rest_L) - 0.0422552362953585*alloc(2324,rice_H) - 0.137314342715884*alloc(2324,rice_L) - 0.170139702481436*alloc(2324,sorg_L) - 0.169618183542495*alloc(2324,soyb_L) - 0.0820941131392024*alloc(2324,sunf_L)
     
      - 0.116982070858081*alloc(2324,temf_H) - 0.169618183542495*alloc(2324,temf_L) - 0.0711301581468593*alloc(2324,toba_H) - 0.134798731210752*alloc(2324,toba_L) - 0.00177933090856346*alloc(2324,trof_L) - 0.181447344545655*alloc(2324,vege_H)
     
      - 0.13317279375407*alloc(2324,vege_L) - 0.0691863341357608*alloc(2325,bean_H) - 0.115931843868097*alloc(2325,bean_L) - 0.0221187768843897*alloc(2325,cass_L) - 0.0214131847792058*alloc(2325,coff_L) - 0.0591777009837408*alloc(2325,cott_L)
     
      - 0.054497627598373*alloc(2325,cowp_H) - 0.125932839032587*alloc(2325,cowp_L) - 0.0692913472933078*alloc(2325,grou_H) - 0.0591777009837408*alloc(2325,grou_L) - 0.0863634825516249*alloc(2325,maiz_H) - 0.143143151260761*alloc(2325,maiz_L)
     
      - 0.0532940589789859*alloc(2325,mill_H) - 0.143143151260761*alloc(2325,mill_L) - 0.0591777009837408*alloc(2325,ofib_L) - 0.108691854038526*alloc(2325,ooil_L) - 0.0658035587485449*alloc(2325,pige_H) - 0.134522652912383*alloc(2325,pige_L)
     
      - 0.111705167875932*alloc(2325,rest_H) - 0.143143151260761*alloc(2325,rest_L) - 0.0593335430093519*alloc(2325,rice_H) - 0.124122841575194*alloc(2325,rice_L) - 0.151334160670554*alloc(2325,sorg_L) - 0.143143151260761*alloc(2325,soyb_L)
     
      - 0.108691854038526*alloc(2325,sunf_L) - 0.166587323655889*alloc(2325,temf_H) - 0.143143151260761*alloc(2325,temf_L) - 0.0948899104163013*alloc(2325,toba_H) - 0.084916469857242*alloc(2325,toba_L) - 0.0278862252691241*alloc(2325,trof_L)
     
      - 0.245568621043872*alloc(2325,vege_H) - 0.0591777009837408*alloc(2325,vege_L) - 0.0570576110338449*alloc(2352,bean_H) - 0.17075322801534*alloc(2352,bean_L) - 0.111360841075786*alloc(2352,cass_L) - 0.042144979898181*alloc(2352,chic_H)
     
      - 0.123417239230151*alloc(2352,chic_L) - 0.000736271042413825*alloc(2352,coff_L) - 0.139921972518674*alloc(2352,cott_L) - 0.0443628656956731*alloc(2352,cowp_H) - 0.170753263123428*alloc(2352,cowp_L) - 0.0540159545343473*alloc(2352,grou_H)
     
      - 0.13522824355473*alloc(2352,grou_L) - 0.0417482919852156*alloc(2352,lent_H) - 0.123417239230151*alloc(2352,lent_L) - 0.065145766800916*alloc(2352,maiz_H) - 0.170753239718036*alloc(2352,maiz_L) - 0.0492490374028243*alloc(2352,mill_H)
     
      - 0.170753251420732*alloc(2352,mill_L) - 0.139921972518674*alloc(2352,ofib_L) - 0.170753263123428*alloc(2352,ooil_L) - 0.03638165031544*alloc(2352,opul_H) - 0.123417239230151*alloc(2352,opul_L) - 0.0520485351114439*alloc(2352,pige_H)
     
      - 0.170753263123428*alloc(2352,pige_L) - 0.112303283933631*alloc(2352,pota_H) - 0.083014442399494*alloc(2352,pota_L) - 0.084261525842854*alloc(2352,rest_H) - 0.170753239718036*alloc(2352,rest_L) - 0.0524483188633237*alloc(2352,rice_H)
     
      - 0.151456863436795*alloc(2352,rice_L) - 0.173729012927639*alloc(2352,sorg_L) - 0.170753263123428*alloc(2352,soyb_L) - 0.170753263123428*alloc(2352,sunf_L) - 0.125660274669772*alloc(2352,temf_H) - 0.170753239718036*alloc(2352,temf_L)
     
      - 0.0861336411308025*alloc(2352,toba_H) - 0.155537031758748*alloc(2352,toba_L) - 0.000736271042413825*alloc(2352,trof_L) - 0.222092791198056*alloc(2352,vege_H) - 0.168268347789574*alloc(2352,vege_L) - 0.0321609181667662*alloc(2353,bean_H)
     
      - 0.0510480663624606*alloc(2353,bean_L) - 0.12967554841631*alloc(2353,cass_L) - 0.0497433752892793*alloc(2353,chic_H) - 0.0927700144774566*alloc(2353,chic_L) - 0.0030984693930784*alloc(2353,coff_L) - 0.129031315008432*alloc(2353,cott_L)
     
      - 0.0522172229030646*alloc(2353,cowp_H) - 0.155659746227686*alloc(2353,cowp_L) - 0.060401370704984*alloc(2353,grou_H) - 0.116453362807038*alloc(2353,grou_L) - 0.049275167788053*alloc(2353,lent_H) - 0.0927700144774566*alloc(2353,lent_L)
     
      - 0.0406488340000112*alloc(2353,maiz_H) - 0.0905612125500607*alloc(2353,maiz_L) - 0.0573966568779396*alloc(2353,mill_H) - 0.122619630290145*alloc(2353,mill_L) - 0.129031315008432*alloc(2353,ofib_L) - 0.155659746227686*alloc(2353,ooil_L)
     
      - 0.0429409644910607*alloc(2353,opul_H) - 0.0927700144774566*alloc(2353,opul_L) - 0.0607964578247778*alloc(2353,pige_H) - 0.155659746227686*alloc(2353,pige_L) - 0.136216772853853*alloc(2353,pota_H) - 0.089702222970194*alloc(2353,pota_L)
     
      - 0.0525764442537142*alloc(2353,rest_H) - 0.0905612125500607*alloc(2353,rest_L) - 0.0629292040291377*alloc(2353,rice_H) - 0.155659746227686*alloc(2353,rice_L) - 0.112373217890476*alloc(2353,sorg_L) - 0.155659746227686*alloc(2353,soyb_L)
     
      - 0.155659746227686*alloc(2353,sunf_L) - 0.0784079134574797*alloc(2353,temf_H) - 0.0905612125500607*alloc(2353,temf_L) - 0.104403578900123*alloc(2353,toba_H) - 0.157500416450965*alloc(2353,toba_L) - 0.0030984693930784*alloc(2353,trof_L)
     
      - 0.258773636266844*alloc(2353,vege_H) - 0.145351964890853*alloc(2353,vege_L) - 0.0334122272987273*alloc(2354,bean_H) - 0.06580413017132*alloc(2354,bean_L) - 0.128172325428565*alloc(2354,cass_L) - 0.0499508674484127*alloc(2354,chic_H)
     
      - 0.092248489687168*alloc(2354,chic_L) - 0.00325185882215782*alloc(2354,coff_L) - 0.128110968194096*alloc(2354,cott_L) - 0.0525846074019064*alloc(2354,cowp_H) - 0.154862113882288*alloc(2354,cowp_L) - 0.0609116636488968*alloc(2354,grou_H)
     
      - 0.115594384929867*alloc(2354,grou_L) - 0.049480706935659*alloc(2354,lent_H) - 0.092248489687168*alloc(2354,lent_L) - 0.0407154649687977*alloc(2354,maiz_H) - 0.0904691708470097*alloc(2354,maiz_L) - 0.0577998301923929*alloc(2354,mill_H)
     
      - 0.122098099648509*alloc(2354,mill_L) - 0.128110968194096*alloc(2354,ofib_L) - 0.154862113882288*alloc(2354,ooil_L) - 0.043120082079799*alloc(2354,opul_H) - 0.092248489687168*alloc(2354,opul_L) - 0.0611384120310497*alloc(2354,pige_H)
     
      - 0.154862113882288*alloc(2354,pige_L) - 0.13662399319684*alloc(2354,pota_H) - 0.0889966323278472*alloc(2354,pota_L) - 0.0526626267851977*alloc(2354,rest_H) - 0.0904691708470097*alloc(2354,rest_L) - 0.0633077910459338*alloc(2354,rice_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.154862113882288*alloc(2354,rice_L) - 0.11295608236119*alloc(2354,sorg_L) - 0.154862113882288*alloc(2354,soyb_L) - 0.154862113882288*alloc(2354,sunf_L) - 0.0785364385520544*alloc(2354,temf_H) - 0.0904691708470097*alloc(2354,temf_L)
     
      - 0.105004760321844*alloc(2354,toba_H) - 0.156027877931803*alloc(2354,toba_L) - 0.00325185882215782*alloc(2354,trof_L) - 0.260532974281096*alloc(2354,vege_H) - 0.143971456372045*alloc(2354,vege_L) - 0.0334211488860131*alloc(2355,bean_H)
     
      - 0.0641475375027951*alloc(2355,bean_L) - 0.124000138808953*alloc(2355,cass_L) - 0.0502145767094394*alloc(2355,chic_H) - 0.0911441062775139*alloc(2355,chic_L) - 0.00361999272052996*alloc(2355,coff_L) - 0.127006596487138*alloc(2355,cott_L)
     
      - 0.0527033514613992*alloc(2355,cowp_H) - 0.153113497064756*alloc(2355,cowp_L) - 0.0608756406778872*alloc(2355,grou_H) - 0.113631011940346*alloc(2355,grou_L) - 0.0497419340439681*alloc(2355,lent_H) - 0.0911441062775139*alloc(2355,lent_L)
     
      - 0.0407821630560809*alloc(2355,maiz_H) - 0.0895795377579962*alloc(2355,maiz_L) - 0.0581005929158163*alloc(2355,mill_H) - 0.120901686238499*alloc(2355,mill_L) - 0.127006596487138*alloc(2355,ofib_L) - 0.153113497064756*alloc(2355,ooil_L)
     
      - 0.0433477290769692*alloc(2355,opul_H) - 0.0911441062775139*alloc(2355,opul_L) - 0.0613913084942291*alloc(2355,pige_H) - 0.153113497064756*alloc(2355,pige_L) - 0.136967013505348*alloc(2355,pota_H) - 0.0874934268941462*alloc(2355,pota_L)
     
      - 0.0527488961297963*alloc(2355,rest_H) - 0.0895795377579962*alloc(2355,rest_L) - 0.0634783274099745*alloc(2355,rice_H) - 0.15311348536206*alloc(2355,rice_L) - 0.114152542581983*alloc(2355,sorg_L) - 0.153113497064756*alloc(2355,soyb_L)
     
      - 0.153113497064756*alloc(2355,sunf_L) - 0.0786650931121208*alloc(2355,temf_H) - 0.0895795377579962*alloc(2355,temf_L) - 0.105218755483264*alloc(2355,toba_H) - 0.152377221953827*alloc(2355,toba_L) - 0.00361999272052996*alloc(2355,trof_L)
     
      - 0.261701549152614*alloc(2355,vege_H) - 0.14099571827053*alloc(2355,vege_L) - 0.0369931661515089*alloc(2356,bean_H) - 0.0833212519772296*alloc(2356,bean_L) - 0.151763661311835*alloc(2356,cass_L) - 0.0516930920128863*alloc(2356,chic_H)
     
      - 0.149524128105073*alloc(2356,chic_L) - 0.00138050550170602*alloc(2356,coff_L) - 0.171704329514433*alloc(2356,cott_L) - 0.0532065699276537*alloc(2356,cowp_H) - 0.197964605624179*alloc(2356,cowp_L) - 0.0617525588947471*alloc(2356,grou_H)
     
      - 0.133847758441314*alloc(2356,grou_L) - 0.0512065328821223*alloc(2356,lent_H) - 0.149524128105073*alloc(2356,lent_L) - 0.0432835988705899*alloc(2356,maiz_H) - 0.122588980929651*alloc(2356,maiz_L) - 0.0596290217864301*alloc(2356,mill_H)
     
      - 0.168789925241994*alloc(2356,mill_L) - 0.171704329514433*alloc(2356,ofib_L) - 0.197964605624179*alloc(2356,ooil_L) - 0.044624057287019*alloc(2356,opul_H) - 0.149524128105073*alloc(2356,opul_L) - 0.0631107377408091*alloc(2356,pige_H)
     
      - 0.215205625726327*alloc(2356,pige_L) - 0.139154650877319*alloc(2356,pota_H) - 0.122282194757307*alloc(2356,pota_L) - 0.0559843296641442*alloc(2356,rest_H) - 0.122588980929651*alloc(2356,rest_L) - 0.0639508915553427*alloc(2356,rice_H)
     
      - 0.189313434509914*alloc(2356,rice_L) - 0.158267411138564*alloc(2356,sorg_L) - 0.215205625726327*alloc(2356,soyb_L) - 0.197964605624179*alloc(2356,sunf_L) - 0.0834901358885854*alloc(2356,temf_H) - 0.122588980929651*alloc(2356,temf_L)
     
      - 0.107056702145119*alloc(2356,toba_H) - 0.210573230591459*alloc(2356,toba_L) - 0.00138050550170602*alloc(2356,trof_L) - 0.264680504393618*alloc(2356,vege_H) - 0.18471174724902*alloc(2356,vege_L) - 0.0433900510004615*alloc(2357,bean_H)
     
      - 0.122558284758372*alloc(2357,bean_L) - 0.167624126084392*alloc(2357,cass_L) - 1.88071459465851E-5*alloc(2357,chic_H) - 0.0509560480648013*alloc(2357,chic_L) - 4.05237886615479E-8*alloc(2357,coff_L) - 0.23480876477452*alloc(2357,cott_L)
     
      - 0.0545164104363339*alloc(2357,cowp_H) - 0.23480876477452*alloc(2357,cowp_L) - 0.0619469547152716*alloc(2357,grou_H) - 0.167961585022622*alloc(2357,grou_L) - 1.86301244485939E-5*alloc(2357,lent_H) - 0.0509560480648013*alloc(2357,lent_L)
     
      - 0.0484938518065083*alloc(2357,maiz_H) - 0.167133279911338*alloc(2357,maiz_L) - 0.0637148218159019*alloc(2357,mill_H) - 0.23480876477452*alloc(2357,mill_L) - 0.23480876477452*alloc(2357,ofib_L) - 0.257080937670755*alloc(2357,ooil_L)
     
      - 1.62352671400761E-5*alloc(2357,opul_H) - 0.0509560480648013*alloc(2357,opul_L) - 0.067143386674396*alloc(2357,pige_H) - 0.301655944526417*alloc(2357,pige_L) - 0.145952226345199*alloc(2357,pota_H) - 0.167961585022622*alloc(2357,pota_L)
     
      - 0.0627234300534196*alloc(2357,rest_H) - 0.167133279911338*alloc(2357,rest_L) - 0.0656897004023262*alloc(2357,rice_H) - 0.23480876477452*alloc(2357,rice_L) - 0.23480876477452*alloc(2357,sorg_L) - 0.301655944526417*alloc(2357,soyb_L)
     
      - 0.257080937670755*alloc(2357,sunf_L) - 0.0935402411705956*alloc(2357,temf_H) - 0.167133279911338*alloc(2357,temf_L) - 0.111240188196138*alloc(2357,toba_H) - 0.279383748224789*alloc(2357,toba_L) - 0.276251830355734*alloc(2357,vege_H)
     
      - 0.23480876477452*alloc(2357,vege_L) - 0.0468570229150006*alloc(2358,bean_H) - 0.163973446701024*alloc(2358,bean_L) - 0.164556322874434*alloc(2358,cass_L) - 1.86792653074085E-5*alloc(2358,chic_H) - 0.0668165011346627*alloc(2358,chic_L)
     
      - 0.0983840844043889*alloc(2358,coff_L) - 0.230789941984339*alloc(2358,cott_L) - 0.0540797202205343*alloc(2358,cowp_H) - 0.230789941984339*alloc(2358,cowp_L) - 0.0590114587980219*alloc(2358,grou_H) - 0.165200521174224*alloc(2358,grou_L)
     
      - 1.85034474807438E-5*alloc(2358,lent_H) - 0.0668165011346627*alloc(2358,lent_L) - 0.0503631761112477*alloc(2358,maiz_H) - 0.163973470106416*alloc(2358,maiz_L) - 0.0638504923863814*alloc(2358,mill_H) - 0.230789941984339*alloc(2358,mill_L)
     
      - 0.230789941984339*alloc(2358,ofib_L) - 0.25266328700518*alloc(2358,ooil_L) - 1.61248741891747E-5*alloc(2358,opul_H) - 0.0668165011346627*alloc(2358,opul_L) - 0.0662660459542195*alloc(2358,pige_H) - 0.296379292578279*alloc(2358,pige_L)
     
      - 0.150699981566687*alloc(2358,pota_H) - 0.165200556282312*alloc(2358,pota_L) - 0.0651412712416863*alloc(2358,rest_H) - 0.163973470106416*alloc(2358,rest_L) - 0.0660170230900592*alloc(2358,rice_H) - 0.230789941984339*alloc(2358,rice_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.230789941984339*alloc(2358,sorg_L) - 0.296379315983671*alloc(2358,soyb_L) - 0.25266328700518*alloc(2358,sunf_L) - 0.0971459981846819*alloc(2358,temf_H) - 0.163973470106416*alloc(2358,temf_L) - 0.111611523601535*alloc(2358,toba_H)
     
      - 0.230789941984339*alloc(2358,toba_L) - 0.277395660970417*alloc(2358,vege_H) - 0.230789941984339*alloc(2358,vege_L) - 0.0481141606291589*alloc(2359,bean_H) - 0.124767098388464*alloc(2359,bean_L) - 0.131362772891286*alloc(2359,cass_L)
     
      - 0.0295100030769855*alloc(2359,chic_H) - 0.0842108792148951*alloc(2359,chic_L) - 0.124767074983072*alloc(2359,coff_L) - 0.184006051282411*alloc(2359,cott_L) - 0.0459730759909453*alloc(2359,cowp_H) - 0.18400610979589*alloc(2359,cowp_L)
     
      - 0.031522528418625*alloc(2359,grou_H) - 0.0467838000060355*alloc(2359,grou_L) - 0.0292322413705973*alloc(2359,lent_H) - 0.0842108792148951*alloc(2359,lent_L) - 0.0509914920158584*alloc(2359,maiz_H) - 0.184006121498586*alloc(2359,maiz_L)
     
      - 0.0560746817377394*alloc(2359,mill_H) - 0.184006133201282*alloc(2359,mill_L) - 0.184006051282411*alloc(2359,ofib_L) - 0.200664253724629*alloc(2359,ooil_L) - 0.0254745076483186*alloc(2359,opul_H) - 0.0842108792148951*alloc(2359,opul_L)
     
      - 0.0546419627632038*alloc(2359,pige_H) - 0.184006051282411*alloc(2359,pige_L) - 0.141383439111769*alloc(2359,pota_H) - 0.13412384844238*alloc(2359,pota_L) - 0.0659539542360491*alloc(2359,rest_H) - 0.184006121498586*alloc(2359,rest_L)
     
      - 0.0570313742598462*alloc(2359,rice_H) - 0.184006051282411*alloc(2359,rice_L) - 0.200633545850655*alloc(2359,sorg_L) - 0.233919079023375*alloc(2359,soyb_L) - 0.200664253724629*alloc(2359,sunf_L) - 0.0983579625690148*alloc(2359,temf_H)
     
      - 0.184006121498586*alloc(2359,temf_L) - 0.0984406213273995*alloc(2359,toba_H) - 0.184006133201282*alloc(2359,toba_L) - 0.244707720378176*alloc(2359,vege_H) - 0.184006133201282*alloc(2359,vege_L) - 0.059720990377124*alloc(2361,bean_H)
     
      - 0.173544917818841*alloc(2361,bean_L) - 2.83943900312498E-15*alloc(2361,cass_L) - 0.0324306937281597*alloc(2361,chic_H) - 0.0818486607959356*alloc(2361,chic_L) - 0.106298957002333*alloc(2361,coff_L) - 2.91419868027172E-8*alloc(2361,cott_L)
     
      - 0.0278263145765289*alloc(2361,cowp_H) - 0.125748755626485*alloc(2361,cowp_L) - 6.19057634726983E-9*alloc(2361,grou_H) - 2.68885153981827E-15*alloc(2361,grou_L) - 0.0321254411395447*alloc(2361,lent_H) - 0.0818486607959356*alloc(2361,lent_L)
     
      - 0.0587300430177956*alloc(2361,maiz_H) - 0.173544917818841*alloc(2361,maiz_L) - 0.0524033216583253*alloc(2361,mill_H) - 0.17167356312698*alloc(2361,mill_L) - 2.91419868027172E-8*alloc(2361,ofib_L) - 0.189834894935376*alloc(2361,ooil_L)
     
      - 0.0279957936047316*alloc(2361,opul_H) - 0.0818486607959356*alloc(2361,opul_L) - 7.32168161568209E-9*alloc(2361,pige_H) - 4.61607897149626E-15*alloc(2361,pige_L) - 0.139858988124854*alloc(2361,pota_H) - 0.129583483307867*alloc(2361,pota_L)
     
      - 0.0759632326167712*alloc(2361,rest_H) - 0.173544917818841*alloc(2361,rest_L) - 1.90918785784067E-5*alloc(2361,rice_H) - 2.96375212686645E-8*alloc(2361,rice_L) - 0.173544917818841*alloc(2361,sorg_L) - 0.165630033518201*alloc(2361,soyb_L)
     
      - 0.189834894935376*alloc(2361,sunf_L) - 0.113284925473929*alloc(2361,temf_H) - 0.173544917818841*alloc(2361,temf_L) - 0.0923653611397721*alloc(2361,toba_H) - 0.178300004017255*alloc(2361,toba_L) - 0.23021991936442*alloc(2361,vege_H)
     
      - 0.173544917818841*alloc(2361,vege_L) - 0.0346982417424371*alloc(2362,bean_H) - 0.0829837871876514*alloc(2362,bean_L) - 3.94329443188906E-8*alloc(2362,cass_L) - 0.0184588780832005*alloc(2362,chic_H) - 0.0461702744721314*alloc(2362,chic_L)
     
      - 0.0440841402028897*alloc(2362,coff_L) - 0.0531341830776586*alloc(2362,cott_L) - 0.0221126068967217*alloc(2362,cowp_H) - 0.0643623053774795*alloc(2362,cowp_L) - 3.11645434549263E-5*alloc(2362,grou_H) - 5.9248262772438E-8*alloc(2362,grou_L)
     
      - 0.01828513464234*alloc(2362,lent_H) - 0.0461702744721314*alloc(2362,lent_L) - 0.0351131544160443*alloc(2362,maiz_H) - 0.0829837871876514*alloc(2362,maiz_L) - 0.0316696175168948*alloc(2362,mill_H) - 0.0829837930389993*alloc(2362,mill_L)
     
      - 0.0531341830776586*alloc(2362,ofib_L) - 0.0904078428692806*alloc(2362,ooil_L) - 0.0159346249366067*alloc(2362,opul_H) - 0.0461702744721314*alloc(2362,opul_L) - 2.98670307134529E-5*alloc(2362,pige_H) - 7.76505091809186E-8*alloc(2362,pige_L)
     
      - 0.0819390577518384*alloc(2362,pota_H) - 0.064362258566696*alloc(2362,pota_L) - 0.045416427091776*alloc(2362,rest_H) - 0.0829837871876514*alloc(2362,rest_L) - 0.0234236840309615*alloc(2362,rice_H) - 0.0461703008031972*alloc(2362,rice_L)
     
      - 0.0829531202731129*alloc(2362,sorg_L) - 0.0904078428692806*alloc(2362,soyb_L) - 0.0904078428692806*alloc(2362,sunf_L) - 0.0677300896914181*alloc(2362,temf_H) - 0.0829837871876514*alloc(2362,temf_L) - 0.0554153109647673*alloc(2362,toba_H)
     
      - 0.0942118919334285*alloc(2362,toba_L) - 8.39822850569397E-17*alloc(2362,trof_L) - 0.138777720866146*alloc(2362,vege_H) - 0.0847937787936962*alloc(2362,vege_L) - 0.0463112124465194*alloc(2363,bean_H) - 0.159923951144958*alloc(2363,bean_L)
     
      - 0.0789956137579658*alloc(2363,cass_L) - 0.0260316370640625*alloc(2363,chic_H) - 0.0727372928691116*alloc(2363,chic_L) - 6.59036328328949E-9*alloc(2363,coff_L) - 0.127988242022463*alloc(2363,cott_L) - 0.0357596599289261*alloc(2363,cowp_H)
     
      - 0.159923962847654*alloc(2363,cowp_L) - 0.0464332653231833*alloc(2363,grou_H) - 0.127988242022463*alloc(2363,grou_L) - 0.025786615336612*alloc(2363,lent_H) - 0.0727372928691116*alloc(2363,lent_L) - 0.0559017593018372*alloc(2363,maiz_H)
     
      - 0.161304483069157*alloc(2363,maiz_L) - 0.0344726377611253*alloc(2363,mill_H) - 0.161304483069157*alloc(2363,mill_L) - 0.127988242022463*alloc(2363,ofib_L) - 0.159923939442262*alloc(2363,ooil_L) - 0.0224718084832695*alloc(2363,opul_H)
     
      - 0.0727372928691116*alloc(2363,opul_L) - 0.0433521763600797*alloc(2363,pige_H) - 0.161304483069157*alloc(2363,pige_L) - 0.0604550810024118*alloc(2363,pota_H) - 0.0441454974373584*alloc(2363,pota_L) - 0.0723050440171737*alloc(2363,rest_H)
     
      - 0.161304483069157*alloc(2363,rest_L) - 0.0394366828510682*alloc(2363,rice_H) - 0.129399446712548*alloc(2363,rice_L) - 0.161335155835043*alloc(2363,sorg_L) - 0.161304483069157*alloc(2363,soyb_L) - 0.159923939442262*alloc(2363,sunf_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.107829422744527*alloc(2363,temf_H) - 0.161304483069157*alloc(2363,temf_L) - 0.0670568459957169*alloc(2363,toba_H) - 0.13077994352866*alloc(2363,toba_L) - 8.56950523412273E-9*alloc(2363,trof_L) - 0.180548287814347*alloc(2363,vege_H)
     
      - 0.143480586793599*alloc(2363,vege_L) - 0.0651699281257331*alloc(2364,bean_H) - 0.123724037105191*alloc(2364,bean_L) - 0.0392063658666043*alloc(2364,cass_L) - 0.015615062165748*alloc(2364,coff_L) - 0.0823395128203377*alloc(2364,cott_L)
     
      - 0.050862950710898*alloc(2364,cowp_H) - 0.140228735285626*alloc(2364,cowp_L) - 0.0649884928444145*alloc(2364,grou_H) - 0.0823395128203377*alloc(2364,grou_L) - 0.080850955005206*alloc(2364,maiz_H) - 0.152776014721134*alloc(2364,maiz_L)
     
      - 0.0498664447795897*alloc(2364,mill_H) - 0.152776014721134*alloc(2364,mill_L) - 0.0823395128203377*alloc(2364,ofib_L) - 0.0930768065011483*alloc(2364,ooil_L) - 0.0617562442941023*alloc(2364,pige_H) - 0.152776003018438*alloc(2364,pige_L)
     
      - 0.104575096266958*alloc(2364,rest_H) - 0.152776014721134*alloc(2364,rest_L) - 0.055384633265889*alloc(2364,rice_H) - 0.129706221182196*alloc(2364,rice_L) - 0.158727537734948*alloc(2364,sorg_L) - 0.152776014721134*alloc(2364,soyb_L)
     
      - 0.0930768065011483*alloc(2364,sunf_L) - 0.155954158070095*alloc(2364,temf_H) - 0.152776014721134*alloc(2364,temf_L) - 0.0906943606354127*alloc(2364,toba_H) - 0.101114393568029*alloc(2364,toba_L) - 0.0203087838155079*alloc(2364,trof_L)
     
      - 0.232224849785202*alloc(2364,vege_H) - 0.0823395128203377*alloc(2364,vege_L) - 0.0695844649404075*alloc(2365,bean_H) - 0.114704722584114*alloc(2365,bean_L) - 0.0195111543957839*alloc(2365,cass_L) - 0.022302844199285*alloc(2365,coff_L)
     
      - 0.0556190574520762*alloc(2365,cott_L) - 0.0545841723108557*alloc(2365,cowp_H) - 0.123662679870722*alloc(2365,cowp_L) - 0.0693466630235096*alloc(2365,grou_H) - 0.0556190574520762*alloc(2365,grou_L) - 0.0868411312689413*alloc(2365,maiz_H)
     
      - 0.141578582741243*alloc(2365,maiz_L) - 0.0535375451813288*alloc(2365,mill_H) - 0.141578582741243*alloc(2365,mill_L) - 0.0556190574520762*alloc(2365,ofib_L) - 0.111054054903442*alloc(2365,ooil_L) - 0.0662319859015624*alloc(2365,pige_H)
     
      - 0.141578582741243*alloc(2365,pige_L) - 0.112322973325378*alloc(2365,rest_H) - 0.141578582741243*alloc(2365,rest_L) - 0.0592727305004335*alloc(2365,rice_H) - 0.123202506463555*alloc(2365,rice_L) - 0.150076354917988*alloc(2365,sorg_L)
     
      - 0.141578582741243*alloc(2365,soyb_L) - 0.111054054903442*alloc(2365,sunf_L) - 0.167508664703222*alloc(2365,temf_H) - 0.141578582741243*alloc(2365,temf_L) - 0.0957731208698102*alloc(2365,toba_H) - 0.082370203140268*alloc(2365,toba_L)
     
      - 0.0290213077757303*alloc(2365,trof_L) - 0.246156304478918*alloc(2365,vege_H) - 0.0556190574520762*alloc(2365,vege_L) - 0.0348180928679084*alloc(2393,bean_H) - 0.0905918794645992*alloc(2393,bean_L) - 0.145413322125321*alloc(2393,cass_L)
     
      - 1.71309500869049E-5*alloc(2393,chic_H) - 0.0529500704148168*alloc(2393,chic_L) - 0.00187135304616986*alloc(2393,coff_L) - 0.133234186096626*alloc(2393,cott_L) - 0.0507984749059132*alloc(2393,cowp_H) - 0.158942282204241*alloc(2393,cowp_L)
     
      - 0.057918339542205*alloc(2393,grou_H) - 0.116637434510444*alloc(2393,grou_L) - 1.69697057144196E-5*alloc(2393,lent_H) - 0.0529500704148168*alloc(2393,lent_L) - 0.0409635211592225*alloc(2393,maiz_H) - 0.100899660801433*alloc(2393,maiz_L)
     
      - 0.055813423925776*alloc(2393,mill_H) - 0.129154017774673*alloc(2393,mill_L) - 0.133234186096626*alloc(2393,ofib_L) - 0.161427185835398*alloc(2393,ooil_L) - 1.47882912066576E-5*alloc(2393,opul_H) - 0.0529500704148168*alloc(2393,opul_L)
     
      - 0.0591091057958327*alloc(2393,pige_H) - 0.161427185835398*alloc(2393,pige_L) - 0.137504895202077*alloc(2393,pota_H) - 0.0946106905520837*alloc(2393,pota_L) - 0.052983470243282*alloc(2393,rest_H) - 0.100899660801433*alloc(2393,rest_L)
     
      - 0.0619273595727168*alloc(2393,rice_H) - 0.161427185835398*alloc(2393,rice_L) - 0.108446425100651*alloc(2393,sorg_L) - 0.161427185835398*alloc(2393,soyb_L) - 0.161427185835398*alloc(2393,sunf_L) - 0.0790149164417624*alloc(2393,temf_H)
     
      - 0.100899660801433*alloc(2393,temf_L) - 0.10264839475763*alloc(2393,toba_H) - 0.169219379072492*alloc(2393,toba_L) - 0.00187135304616986*alloc(2393,trof_L) - 0.252630970056404*alloc(2393,vege_H) - 0.155168900054632*alloc(2393,vege_L)
     
      - 0.0370207628227877*alloc(2395,bean_H) - 0.0921564889435525*alloc(2395,bean_L) - 0.148634512570104*alloc(2395,cass_L) - 1.78783200288137E-5*alloc(2395,chic_H) - 0.0527046707336815*alloc(2395,chic_L) - 0.00165660674833093*alloc(2395,coff_L)
     
      - 0.157347064324229*alloc(2395,cott_L) - 0.0510704260133474*alloc(2395,cowp_H) - 0.172931427393025*alloc(2395,cowp_L) - 0.0613779752051791*alloc(2395,grou_H) - 0.1338784312072*alloc(2395,grou_L) - 1.77100410670799E-5*alloc(2395,lent_H)
     
      - 0.0527046707336815*alloc(2395,lent_L) - 0.042721264857211*alloc(2395,maiz_H) - 0.12130052581659*alloc(2395,maiz_L) - 0.0579914595552681*alloc(2395,mill_H) - 0.154064528347674*alloc(2395,mill_L) - 0.157347064324229*alloc(2395,ofib_L)
     
      - 0.196921567746298*alloc(2395,ooil_L) - 1.54334582454956E-5*alloc(2395,opul_H) - 0.0527046707336815*alloc(2395,opul_L) - 0.0618665066723386*alloc(2395,pige_H) - 0.203302579698698*alloc(2395,pige_L) - 0.140071680546937*alloc(2395,pota_H)
     
      - 0.115809152804552*alloc(2395,pota_L) - 0.0552569896645178*alloc(2395,rest_H) - 0.12130052581659*alloc(2395,rest_L) - 0.0624744205294993*alloc(2395,rice_H) - 0.179588541049186*alloc(2395,rice_L) - 0.148419791506203*alloc(2395,sorg_L)
     
      - 0.203302579698698*alloc(2395,soyb_L) - 0.196921567746298*alloc(2395,sunf_L) - 0.0824054445871031*alloc(2395,temf_H) - 0.12130052581659*alloc(2395,temf_L) - 0.103668647340321*alloc(2395,toba_H) - 0.201308510537899*alloc(2395,toba_L)
     
      - 0.00165660674833093*alloc(2395,trof_L) - 0.258173140641553*alloc(2395,vege_H) - 0.177257012950157*alloc(2395,vege_L) - 0.045421584908742*alloc(2396,bean_H) - 0.162010073711504*alloc(2396,bean_L) - 0.170231755887183*alloc(2396,cass_L)
     
      - 0.05114008466012*alloc(2396,chic_L) - 4.99567150872197E-15*alloc(2396,coff_L) - 0.230176393045044*alloc(2396,cott_L) - 0.0526831074571028*alloc(2396,cowp_H) - 0.230176393045044*alloc(2396,cowp_L) - 0.0595449319601934*alloc(2396,grou_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.170293101418956*alloc(2396,grou_L) - 0.05114008466012*alloc(2396,lent_L) - 0.0486166229822466*alloc(2396,maiz_H) - 0.227875549414597*alloc(2396,maiz_L) - 0.0621536663535075*alloc(2396,mill_H) - 0.230176393045044*alloc(2396,mill_L)
     
      - 0.230176393045044*alloc(2396,ofib_L) - 0.256528734263232*alloc(2396,ooil_L) - 0.05114008466012*alloc(2396,opul_L) - 0.0649578612758407*alloc(2396,pige_H) - 0.293771721288968*alloc(2396,pige_L) - 0.146999638445108*alloc(2396,pota_H)
     
      - 0.167838870553685*alloc(2396,pota_L) - 0.0628822260443984*alloc(2396,rest_H) - 0.227875549414597*alloc(2396,rest_L) - 0.0644052014254235*alloc(2396,rice_H) - 0.233029440083013*alloc(2396,rice_L) - 0.230176393045044*alloc(2396,sorg_L)
     
      - 0.296992888328358*alloc(2396,soyb_L) - 0.256528734263232*alloc(2396,sunf_L) - 0.0937770556318015*alloc(2396,temf_H) - 0.227875549414597*alloc(2396,temf_L) - 0.108603121066367*alloc(2396,toba_H) - 0.274352595430702*alloc(2396,toba_L)
     
      - 0.270466653803723*alloc(2396,vege_H) - 0.234624704773809*alloc(2396,vege_L) - 0.0335921064786117*alloc(2401,bean_H) - 0.0697922860469618*alloc(2401,bean_L) - 0.0837506941050315*alloc(2401,cass_L) - 0.0205182813956915*alloc(2401,chic_H)
     
      - 0.0562939811798846*alloc(2401,chic_L) - 0.0576744545906043*alloc(2401,coff_L) - 0.109182700211581*alloc(2401,cott_L) - 0.0314106013701282*alloc(2401,cowp_H) - 0.111759645545789*alloc(2401,cowp_L) - 2.90850676082402E-5*alloc(2401,grou_H)
     
      - 5.02816452651715E-8*alloc(2401,grou_L) - 0.0203251539047268*alloc(2401,lent_H) - 0.0562939811798846*alloc(2401,lent_L) - 0.0355171206902664*alloc(2401,maiz_H) - 0.111759657248485*alloc(2401,maiz_L) - 0.038739107558076*alloc(2401,mill_H)
     
      - 0.111759657248485*alloc(2401,mill_L) - 0.109182700211581*alloc(2401,ofib_L) - 0.118263360264431*alloc(2401,ooil_L) - 0.0177124046710974*alloc(2401,opul_H) - 0.0562939811798846*alloc(2401,opul_L) - 0.0372966768870053*alloc(2401,pige_H)
     
      - 0.111759645545789*alloc(2401,pige_L) - 0.0982716654267702*alloc(2401,pota_H) - 0.0849471309204325*alloc(2401,pota_L) - 0.0459389294173535*alloc(2401,rest_H) - 0.111759657248485*alloc(2401,rest_L) - 0.0386313652439235*alloc(2401,rice_H)
     
      - 0.111759645545789*alloc(2401,rice_L) - 0.127589449255156*alloc(2401,sorg_L) - 0.137222312715529*alloc(2401,soyb_L) - 0.118263360264431*alloc(2401,sunf_L) - 0.0685093039898882*alloc(2401,temf_H) - 0.111759657248485*alloc(2401,temf_L)
     
      - 0.0678866289217044*alloc(2401,toba_H) - 0.123539965401785*alloc(2401,toba_L) - 0.170021265837121*alloc(2401,vege_H) - 0.112986766829772*alloc(2401,vege_L) - 0.0478312450635564*alloc(2402,bean_H) - 0.136854181011412*alloc(2402,bean_L)
     
      - 0.0868491642295284*alloc(2402,cass_L) - 0.0287508025787787*alloc(2402,chic_H) - 0.0760505484223367*alloc(2402,chic_L) - 3.26031884082036E-9*alloc(2402,coff_L) - 0.122067415179926*alloc(2402,cott_L) - 0.0366990879804848*alloc(2402,cowp_H)
     
      - 0.136854181011412*alloc(2402,cowp_L) - 0.0459579914047349*alloc(2402,grou_H) - 0.122067415179926*alloc(2402,grou_L) - 0.02848018681627*alloc(2402,lent_H) - 0.0760505484223367*alloc(2402,lent_L) - 0.0564720429716875*alloc(2402,maiz_H)
     
      - 0.153911094302066*alloc(2402,maiz_L) - 0.0421107814354584*alloc(2402,mill_H) - 0.153911094302066*alloc(2402,mill_L) - 0.122067415179926*alloc(2402,ofib_L) - 0.136854181011412*alloc(2402,ooil_L) - 0.0248191278827617*alloc(2402,opul_H)
     
      - 0.0760505484223367*alloc(2402,opul_L) - 0.0449483969685709*alloc(2402,pige_H) - 0.153911094302066*alloc(2402,pige_L) - 0.0666913885468301*alloc(2402,pota_H) - 0.0454646516473709*alloc(2402,pota_L) - 0.073042666345447*alloc(2402,rest_H)
     
      - 0.153911094302066*alloc(2402,rest_L) - 0.0412197811301124*alloc(2402,rice_H) - 0.122067426882622*alloc(2402,rice_L) - 0.153911094302066*alloc(2402,sorg_L) - 0.153911094302066*alloc(2402,soyb_L) - 0.136854181011412*alloc(2402,sunf_L)
     
      - 0.108929448212215*alloc(2402,temf_H) - 0.153911094302066*alloc(2402,temf_L) - 0.0718125018183455*alloc(2402,toba_H) - 0.139124328470581*alloc(2402,toba_L) - 4.2333596310842E-9*alloc(2402,trof_L) - 0.179728082687841*alloc(2402,vege_H)
     
      - 0.128325712663389*alloc(2402,vege_L) - 0.0547706627313488*alloc(2403,bean_H) - 0.120502846660409*alloc(2403,bean_L) - 0.054790740638096*alloc(2403,cass_L) - 0.0289667168324525*alloc(2403,chic_H) - 0.0561098802197386*alloc(2403,chic_L)
     
      - 0.00791490843744979*alloc(2403,coff_L) - 0.0995804861117023*alloc(2403,cott_L) - 0.0426923951007412*alloc(2403,cowp_H) - 0.143449914027713*alloc(2403,cowp_L) - 0.0548969119792612*alloc(2403,grou_H) - 0.0995804861117023*alloc(2403,grou_L)
     
      - 0.0286940687857934*alloc(2403,lent_H) - 0.0561098802197386*alloc(2403,lent_L) - 0.0674126679410583*alloc(2403,maiz_H) - 0.149800264916922*alloc(2403,maiz_L) - 0.0415436862449824*alloc(2403,mill_H) - 0.149800264916922*alloc(2403,mill_L)
     
      - 0.0995804861117023*alloc(2403,ofib_L) - 0.119367755376781*alloc(2403,ooil_L) - 0.0250055158438963*alloc(2403,opul_H) - 0.0561098802197386*alloc(2403,opul_L) - 0.0517155681001392*alloc(2403,pige_H) - 0.149800264916922*alloc(2403,pige_L)
     
      - 0.0871936050612478*alloc(2403,rest_H) - 0.149800264916922*alloc(2403,rest_L) - 0.0466041648818109*alloc(2403,rice_H) - 0.123570638167671*alloc(2403,rice_L) - 0.152868056424185*alloc(2403,sorg_L) - 0.149800264916922*alloc(2403,soyb_L)
     
      - 0.119367755376781*alloc(2403,sunf_L) - 0.130032921334444*alloc(2403,temf_H) - 0.149800264916922*alloc(2403,temf_L) - 0.0778990186060235*alloc(2403,toba_H) - 0.109059974039947*alloc(2403,toba_L) - 0.0102771100337839*alloc(2403,trof_L)
     
      - 0.212061406722036*alloc(2403,vege_H) - 0.107679453818444*alloc(2403,vege_L) - 0.0686863876612354*alloc(2404,bean_H) - 0.114796752584469*alloc(2404,bean_L) - 0.0193884443153574*alloc(2404,cass_L) - 2.18620734588424E-5*alloc(2404,chic_H)
     
      - 3.31599364558225E-8*alloc(2404,chic_L) - 0.0223948785881511*alloc(2404,coff_L) - 0.055527027451721*alloc(2404,cott_L) - 0.053856592621174*alloc(2404,cowp_H) - 0.123785382636964*alloc(2404,cowp_L) - 0.0684604400581794*alloc(2404,grou_H)
     
      - 0.055527027451721*alloc(2404,grou_L) - 2.1656297579617E-5*alloc(2404,lent_H) - 3.31599364558225E-8*alloc(2404,lent_L) - 0.0855301899956554*alloc(2404,maiz_H) - 0.141762642741954*alloc(2404,maiz_L) - 0.0526903981517458*alloc(2404,mill_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.141762642741954*alloc(2404,mill_L) - 0.055527027451721*alloc(2404,ofib_L) - 0.111544901076496*alloc(2404,ooil_L) - 1.8872433055411E-5*alloc(2404,opul_H) - 3.31599364558225E-8*alloc(2404,opul_L) - 0.0654455098119438*alloc(2404,pige_H)
     
      - 0.141762642741954*alloc(2404,pige_L) - 0.110627361815961*alloc(2404,rest_H) - 0.141762642741954*alloc(2404,rest_L) - 0.0584115396880043*alloc(2404,rice_H) - 0.123386578166961*alloc(2404,rice_L) - 0.150383141090332*alloc(2404,sorg_L)
     
      - 0.141762642741954*alloc(2404,soyb_L) - 0.111544901076496*alloc(2404,sunf_L) - 0.164979977904884*alloc(2404,temf_H) - 0.141762642741954*alloc(2404,temf_L) - 0.0955802747943309*alloc(2404,toba_H) - 0.0824008817575024*alloc(2404,toba_L)
     
      - 0.0291133407017595*alloc(2404,trof_L) - 0.246512690589019*alloc(2404,vege_H) - 0.055527027451721*alloc(2404,vege_L) - 0.0309362852929115*alloc(2441,bean_H) - 0.0735043168134504*alloc(2441,bean_L) - 0.0837506999563794*alloc(2441,cass_L)
     
      - 0.0192855689756113*alloc(2441,chic_H) - 0.053778393080145*alloc(2441,chic_L) - 8.84586732712654E-11*alloc(2441,coff_L) - 0.113446928534244*alloc(2441,cott_L) - 0.0324717602998184*alloc(2441,cowp_H) - 0.11344694023694*alloc(2441,cowp_L)
     
      - 0.0299413650380824*alloc(2441,grou_H) - 0.0546987574485243*alloc(2441,grou_L) - 0.0191040443402747*alloc(2441,lent_H) - 0.053778393080145*alloc(2441,lent_L) - 0.0322406409467237*alloc(2441,maiz_H) - 0.0819100706925358*alloc(2441,maiz_L)
     
      - 0.0391780713208362*alloc(2441,mill_H) - 0.113446951939636*alloc(2441,mill_L) - 0.113446928534244*alloc(2441,ofib_L) - 0.12320251816625*alloc(2441,ooil_L) - 0.0166482657792244*alloc(2441,opul_H) - 0.053778393080145*alloc(2441,opul_L)
     
      - 0.0396882745878355*alloc(2441,pige_H) - 0.12320251816625*alloc(2441,pige_L) - 0.0957135766178278*alloc(2441,pota_H) - 0.08457898751362*alloc(2441,pota_L) - 0.0417010303773773*alloc(2441,rest_H) - 0.0819100706925358*alloc(2441,rest_L)
     
      - 0.0406308915282235*alloc(2441,rice_H) - 0.113446928534244*alloc(2441,rice_L) - 0.113446951939636*alloc(2441,sorg_L) - 0.143664681902397*alloc(2441,soyb_L) - 0.12320251816625*alloc(2441,sunf_L) - 0.0621892717799407*alloc(2441,temf_H)
     
      - 0.0819100706925358*alloc(2441,temf_L) - 0.0685250254734366*alloc(2441,toba_H) - 0.13160826034264*alloc(2441,toba_L) - 1.13732585369691E-10*alloc(2441,trof_L) - 0.170778819074082*alloc(2441,vege_H) - 0.114796764287165*alloc(2441,vege_L)
     
      - 0.0431976721688061*alloc(2442,bean_H) - 0.141578571038547*alloc(2442,bean_L) - 0.0696695247672408*alloc(2442,cass_L) - 0.0257520254645604*alloc(2442,chic_H) - 0.0650678550603908*alloc(2442,chic_L) - 0.000214753177744128*alloc(2442,coff_L)
     
      - 0.113416232362966*alloc(2442,cott_L) - 0.0333709201057464*alloc(2442,cowp_H) - 0.141854672742309*alloc(2442,cowp_L) - 0.043116529866501*alloc(2442,grou_H) - 0.113416232362966*alloc(2442,grou_L) - 0.0255096355699431*alloc(2442,lent_H)
     
      - 0.0650678550603908*alloc(2442,lent_L) - 0.0518423495058062*alloc(2442,maiz_H) - 0.14320450849523*alloc(2442,maiz_L) - 0.0386671833912971*alloc(2442,mill_H) - 0.14320450849523*alloc(2442,mill_L) - 0.113416232362966*alloc(2442,ofib_L)
     
      - 0.141670601038903*alloc(2442,ooil_L) - 0.022230433793762*alloc(2442,opul_H) - 0.0650678550603908*alloc(2442,opul_L) - 0.0406947553790764*alloc(2442,pige_H) - 0.14320450849523*alloc(2442,pige_L) - 0.0596053381927151*alloc(2442,pota_H)
     
      - 0.0384087481495762*alloc(2442,pota_L) - 0.067054479318468*alloc(2442,rest_H) - 0.14320450849523*alloc(2442,rest_L) - 0.0368773861219761*alloc(2442,rice_H) - 0.114060489176236*alloc(2442,rice_L) - 0.143265865729698*alloc(2442,sorg_L)
     
      - 0.14320450849523*alloc(2442,soyb_L) - 0.141670601038903*alloc(2442,sunf_L) - 0.0999991894843171*alloc(2442,temf_H) - 0.14320450849523*alloc(2442,temf_L) - 0.0622509835142553*alloc(2442,toba_H) - 0.115011497053762*alloc(2442,toba_L)
     
      - 0.000276111372199654*alloc(2442,trof_L) - 0.167961749155253*alloc(2442,vege_H) - 0.129338066072688*alloc(2442,vege_L) - 0.0646279580821854*alloc(2443,bean_H) - 0.114367263645884*alloc(2443,bean_L) - 0.0330707974804491*alloc(2443,cass_L)
     
      - 0.0350583045804018*alloc(2443,chic_H) - 0.0743018906453689*alloc(2443,chic_L) - 0.0166274272777428*alloc(2443,coff_L) - 0.0699149771105076*alloc(2443,cott_L) - 0.0505839215964337*alloc(2443,cowp_H) - 0.126546399674579*alloc(2443,cowp_L)
     
      - 0.0634990230868166*alloc(2443,grou_H) - 0.0699149771105076*alloc(2443,grou_L) - 0.0347283197112737*alloc(2443,lent_H) - 0.0743018906453689*alloc(2443,lent_L) - 0.079783093414602*alloc(2443,maiz_H) - 0.14001400251903*alloc(2443,maiz_L)
     
      - 0.0490028852355823*alloc(2443,mill_H) - 0.14001400251903*alloc(2443,mill_L) - 0.0699149771105076*alloc(2443,ofib_L) - 0.111575573842383*alloc(2443,ooil_L) - 0.0302640784496237*alloc(2443,opul_H) - 0.0743018906453689*alloc(2443,opul_L)
     
      - 0.061195554774642*alloc(2443,pige_H) - 0.14001400251903*alloc(2443,pige_L) - 0.0758061072299107*alloc(2443,pota_H) - 0.044206869300197*alloc(2443,pota_L) - 0.103193891448413*alloc(2443,rest_H) - 0.14001400251903*alloc(2443,rest_L)
     
      - 0.0548549357143141*alloc(2443,rice_H) - 0.12025742942523*alloc(2443,rice_L) - 0.145873483829793*alloc(2443,sorg_L) - 0.14001400251903*alloc(2443,soyb_L) - 0.111575573842383*alloc(2443,sunf_L) - 0.153894349929457*alloc(2443,temf_H)
     
      - 0.14001400251903*alloc(2443,temf_L) - 0.0890555361331967*alloc(2443,toba_H) - 0.0898862888222524*alloc(2443,toba_L) - 0.0216586049400589*alloc(2443,trof_L) - 0.243158707325166*alloc(2443,vege_H) - 0.075529035334744*alloc(2443,vege_L)
     
      - 0.0481564905035473*alloc(2481,bean_H) - 0.162592926479521*alloc(2481,bean_L) - 0.0885977986011044*alloc(2481,cass_L) - 0.0308073407389729*alloc(2481,chic_H) - 0.0974330414187753*alloc(2481,chic_L) - 6.1357251611376E-5*alloc(2481,coff_L)
     
      - 0.130657217357026*alloc(2481,cott_L) - 0.0377995065771845*alloc(2481,cowp_H) - 0.162040723071998*alloc(2481,cowp_L) - 0.0485187799249046*alloc(2481,grou_H) - 0.130687890122913*alloc(2481,grou_L) - 0.0305173678944898*alloc(2481,lent_H)
     
      - 0.0974330414187753*alloc(2481,lent_L) - 0.0571735114193579*alloc(2481,maiz_H) - 0.162592938182217*alloc(2481,maiz_L) - 0.0427192234812462*alloc(2481,mill_H) - 0.162592938182217*alloc(2481,mill_L) - 0.130657217357026*alloc(2481,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.160322755614961*alloc(2481,ooil_L) - 0.0265944342747757*alloc(2481,opul_H) - 0.0974330414187753*alloc(2481,opul_L) - 0.0450964153684193*alloc(2481,pige_H) - 0.162592938182217*alloc(2481,pige_L) - 0.0733396017757905*alloc(2481,pota_H)
     
      - 0.0970955649265012*alloc(2481,pota_L) - 0.0739499670747786*alloc(2481,rest_H) - 0.162592938182217*alloc(2481,rest_L) - 0.0426329780794967*alloc(2481,rice_H) - 0.133663663332516*alloc(2481,rice_L) - 0.162838367120092*alloc(2481,sorg_L)
     
      - 0.162592938182217*alloc(2481,soyb_L) - 0.160322755614961*alloc(2481,sunf_L) - 0.110282517216312*alloc(2481,temf_H) - 0.162592938182217*alloc(2481,temf_L) - 0.0710976623338605*alloc(2481,toba_H) - 0.140259408051513*alloc(2481,toba_L)
     
      - 6.13577030337266E-5*alloc(2481,trof_L) - 0.188964048509577*alloc(2481,vege_H) - 0.158972931564736*alloc(2481,vege_L) - 0.0443114393660708*alloc(2482,bean_H) - 0.12246621964993*alloc(2482,bean_L) - 0.0550975209590918*alloc(2482,cass_L)
     
      - 0.0259764081042588*alloc(2482,chic_H) - 0.0615399018486565*alloc(2482,chic_L) - 0.00346661170276319*alloc(2482,coff_L) - 0.0916349173424805*alloc(2482,cott_L) - 0.0344802372993252*alloc(2482,cowp_H) - 0.125319278390595*alloc(2482,cowp_L)
     
      - 0.0436538946707283*alloc(2482,grou_H) - 0.0916349173424805*alloc(2482,grou_L) - 0.0257319062171512*alloc(2482,lent_H) - 0.0615399018486565*alloc(2482,lent_L) - 0.0539207439645465*alloc(2482,maiz_H) - 0.126730471377985*alloc(2482,maiz_L)
     
      - 0.0329369579204864*alloc(2482,mill_H) - 0.126730471377985*alloc(2482,mill_L) - 0.0916349173424805*alloc(2482,ofib_L) - 0.123908085403206*alloc(2482,ooil_L) - 0.0224241320884126*alloc(2482,opul_H) - 0.0615399018486565*alloc(2482,opul_L)
     
      - 0.0419738917274746*alloc(2482,pige_H) - 0.126730471377985*alloc(2482,pige_L) - 0.059391960991*alloc(2482,pota_H) - 0.032978761628746*alloc(2482,pota_L) - 0.0697427382337706*alloc(2482,rest_H) - 0.126730471377985*alloc(2482,rest_L)
     
      - 0.0376021861563378*alloc(2482,rice_H) - 0.102157454851302*alloc(2482,rice_L) - 0.127865550958917*alloc(2482,sorg_L) - 0.126730471377985*alloc(2482,soyb_L) - 0.123908085403206*alloc(2482,sunf_L) - 0.104008223860343*alloc(2482,temf_H)
     
      - 0.126730471377985*alloc(2482,temf_L) - 0.0618580320355398*alloc(2482,toba_H) - 0.0958071215161368*alloc(2482,toba_L) - 0.00454034099770239*alloc(2482,trof_L) - 0.168915836611349*alloc(2482,vege_H) - 0.107679453818444*alloc(2482,vege_L)
     
      - 0.0643669900494515*alloc(2483,bean_H) - 0.102556282726697*alloc(2483,bean_L) - 0.0290213224041002*alloc(2483,cass_L) - 0.0356764010544211*alloc(2483,chic_H) - 0.075038177458994*alloc(2483,chic_L) - 0.0163513226483073*alloc(2483,coff_L)
     
      - 0.0582266989575628*alloc(2483,cott_L) - 0.0502848919466963*alloc(2483,cowp_H) - 0.116944220682788*alloc(2483,cowp_L) - 0.0615920483522039*alloc(2483,grou_H) - 0.0582266989575628*alloc(2483,grou_L) - 0.0353405983773149*alloc(2483,lent_H)
     
      - 0.075038177458994*alloc(2483,lent_L) - 0.079105641365734*alloc(2483,maiz_H) - 0.123662679870722*alloc(2483,maiz_L) - 0.0484053981490458*alloc(2483,mill_H) - 0.123662679870722*alloc(2483,mill_L) - 0.0582266989575628*alloc(2483,ofib_L)
     
      - 0.11025643426074*alloc(2483,ooil_L) - 0.0307976501782924*alloc(2483,opul_H) - 0.075038177458994*alloc(2483,opul_L) - 0.0607415176730466*alloc(2483,pige_H) - 0.123662679870722*alloc(2483,pige_L) - 0.078690698922405*alloc(2483,pota_H)
     
      - 0.0392984134210033*alloc(2483,pota_L) - 0.10231765426331*alloc(2483,rest_H) - 0.123662679870722*alloc(2483,rest_L) - 0.0544314486098634*alloc(2483,rice_H) - 0.107771518926887*alloc(2483,rice_L) - 0.128847243305025*alloc(2483,sorg_L)
     
      - 0.123662679870722*alloc(2483,soyb_L) - 0.11025643426074*alloc(2483,sunf_L) - 0.15258760638008*alloc(2483,temf_H) - 0.123662679870722*alloc(2483,temf_L) - 0.0856704387350156*alloc(2483,toba_H) - 0.0779525934341284*alloc(2483,toba_L)
     
      - 0.0213824988477865*alloc(2483,trof_L) - 0.234706328446733*alloc(2483,vege_H) - 0.0635339827121513*alloc(2483,vege_L) - 0.0575999143059709*alloc(2520,bean_H) - 0.161826002008097*alloc(2520,bean_L) - 0.125472653922723*alloc(2520,cass_L)
     
      - 0.0390503225305403*alloc(2520,chic_H) - 0.0977398509965108*alloc(2520,chic_L) - 0.000766947465392726*alloc(2520,coff_L) - 0.132375219922152*alloc(2520,cott_L) - 0.0467629615066564*alloc(2520,cowp_H) - 0.173943769099628*alloc(2520,cowp_L)
     
      - 0.0585382091865693*alloc(2520,grou_H) - 0.132774024392155*alloc(2520,grou_L) - 0.0386827629544605*alloc(2520,lent_H) - 0.0977398509965108*alloc(2520,lent_L) - 0.0672912176565443*alloc(2520,maiz_H) - 0.161826002008097*alloc(2520,maiz_L)
     
      - 0.0505148789570014*alloc(2520,mill_H) - 0.161826002008097*alloc(2520,mill_L) - 0.132375219922152*alloc(2520,ofib_L) - 0.161826002008097*alloc(2520,ooil_L) - 0.0337101876058217*alloc(2520,opul_H) - 0.0977398509965108*alloc(2520,opul_L)
     
      - 0.0540766491355501*alloc(2520,pige_H) - 0.161826002008097*alloc(2520,pige_L) - 0.0986142779097542*alloc(2520,pota_H) - 0.0754676722489273*alloc(2520,pota_L) - 0.0870365175513492*alloc(2520,rest_H) - 0.161826002008097*alloc(2520,rest_L)
     
      - 0.0539606447469427*alloc(2520,rice_H) - 0.150966005561045*alloc(2520,rice_L) - 0.164801763515005*alloc(2520,sorg_L) - 0.161826002008097*alloc(2520,soyb_L) - 0.161826002008097*alloc(2520,sunf_L) - 0.129798654752589*alloc(2520,temf_H)
     
      - 0.161826002008097*alloc(2520,temf_L) - 0.0903460180916329*alloc(2520,toba_H) - 0.168391050555816*alloc(2520,toba_L) - 0.000766947465392726*alloc(2520,trof_L) - 0.226877745850562*alloc(2520,vege_H) - 0.159310413908358*alloc(2520,vege_L)
     
      - 0.045612669952436*alloc(2521,bean_H) - 0.15989325497368*alloc(2521,bean_L) - 0.0784434103504429*alloc(2521,cass_L) - 0.0308112094326741*alloc(2521,chic_H) - 0.127528056912599*alloc(2521,chic_L) - 4.51110901227383E-9*alloc(2521,coff_L)
     
      - 0.150505820451182*alloc(2521,cott_L) - 0.0354099488676382*alloc(2521,cowp_H) - 0.160077338379782*alloc(2521,cowp_L) - 0.0457743387363526*alloc(2521,grou_H) - 0.150505820451182*alloc(2521,grou_L) - 0.0305212001742685*alloc(2521,lent_H)
     
      - 0.127528056912599*alloc(2521,lent_L) - 0.053231463059597*alloc(2521,maiz_H) - 0.159893266676375*alloc(2521,maiz_L) - 0.0399940897345692*alloc(2521,mill_H) - 0.159893266676375*alloc(2521,mill_L) - 0.150505820451182*alloc(2521,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.159893266676375*alloc(2521,ooil_L) - 0.0265977739242846*alloc(2521,opul_H) - 0.127528056912599*alloc(2521,opul_L) - 0.042088794793515*alloc(2521,pige_H) - 0.159893266676375*alloc(2521,pige_L) - 0.0723818567497116*alloc(2521,pota_H)
     
      - 0.0667858049633845*alloc(2521,pota_L) - 0.0688512012446847*alloc(2521,rest_H) - 0.159893266676375*alloc(2521,rest_L) - 0.039635285685513*alloc(2521,rice_H) - 0.128202998194451*alloc(2521,rice_L) - 0.159893266676375*alloc(2521,sorg_L)
     
      - 0.159893266676375*alloc(2521,soyb_L) - 0.159893266676375*alloc(2521,sunf_L) - 0.102678663520601*alloc(2521,temf_H) - 0.159893266676375*alloc(2521,temf_L) - 0.0645141851777386*alloc(2521,toba_H) - 0.128540445429986*alloc(2521,toba_L)
     
      - 5.88464616688192E-9*alloc(2521,trof_L) - 0.178921081857768*alloc(2521,vege_H) - 0.15989325497368*alloc(2521,vege_L) - 0.0541702063294253*alloc(2522,bean_H) - 0.10086897633285*alloc(2522,bean_L) - 0.040862979014847*alloc(2522,cass_L)
     
      - 0.0307419966669994*alloc(2522,chic_H) - 0.0654666770844377*alloc(2522,chic_L) - 0.00969422288909717*alloc(2522,coff_L) - 0.0748847785214742*alloc(2522,cott_L) - 0.0424585301847983*alloc(2522,cowp_H) - 0.120901651130412*alloc(2522,cowp_L)
     
      - 0.0533610694223676*alloc(2522,grou_H) - 0.0748847785214742*alloc(2522,grou_L) - 0.0304526388709419*alloc(2522,lent_H) - 0.0654666770844377*alloc(2522,lent_L) - 0.066354243302283*alloc(2522,maiz_H) - 0.124859116686123*alloc(2522,maiz_L)
     
      - 0.0406750646649214*alloc(2522,mill_H) - 0.124859104983427*alloc(2522,mill_L) - 0.0748847785214742*alloc(2522,ofib_L) - 0.116974881745979*alloc(2522,ooil_L) - 0.0265380260101978*alloc(2522,opul_H) - 0.0654666770844377*alloc(2522,opul_L)
     
      - 0.051366218588586*alloc(2522,pige_H) - 0.124859104983427*alloc(2522,pige_L) - 0.0704730223797134*alloc(2522,pota_H) - 0.0340831684437918*alloc(2522,pota_L) - 0.0858246062846209*alloc(2522,rest_H) - 0.124859116686123*alloc(2522,rest_L)
     
      - 0.0463010695537389*alloc(2522,rice_H) - 0.104274226778343*alloc(2522,rice_L) - 0.128203009897147*alloc(2522,sorg_L) - 0.124859104983427*alloc(2522,soyb_L) - 0.116974881745979*alloc(2522,sunf_L) - 0.127991316217841*alloc(2522,temf_H)
     
      - 0.124859116686123*alloc(2522,temf_L) - 0.0745813378113489*alloc(2522,toba_H) - 0.0865423839085325*alloc(2522,toba_L) - 0.0126393021216777*alloc(2522,trof_L) - 0.205038661219902*alloc(2522,vege_H) - 0.0850084881549013*alloc(2522,vege_L)
     
      - 0.0648476939790179*alloc(2523,bean_H) - 0.0840268367682285*alloc(2523,bean_L) - 0.0367214797894908*alloc(2523,cass_L) - 0.0367435929442656*alloc(2523,chic_H) - 0.0762959773602117*alloc(2523,chic_L) - 0.0103384541027198*alloc(2523,coff_L)
     
      - 0.0550975560671794*alloc(2523,cott_L) - 0.0510561314750254*alloc(2523,cowp_H) - 0.0974944396126796*alloc(2523,cowp_L) - 0.058966278279964*alloc(2523,grou_H) - 0.0583494192778482*alloc(2523,grou_L) - 0.0363977453668049*alloc(2523,lent_H)
     
      - 0.0762959773602117*alloc(2523,lent_L) - 0.0783608475063799*alloc(2523,maiz_H) - 0.124184210512359*alloc(2523,maiz_L) - 0.0476840702282224*alloc(2523,mill_H) - 0.0974944396126796*alloc(2523,mill_L) - 0.0550975560671794*alloc(2523,ofib_L)
     
      - 0.0883524164740129*alloc(2523,ooil_L) - 0.031718903486506*alloc(2523,opul_H) - 0.0762959773602117*alloc(2523,opul_L) - 0.0602443114096553*alloc(2523,pige_H) - 0.0974944396126796*alloc(2523,pige_L) - 0.0785447321955442*alloc(2523,pota_H)
     
      - 0.0438080648301939*alloc(2523,pota_L) - 0.101354315122344*alloc(2523,rest_H) - 0.124184210512359*alloc(2523,rest_L) - 0.0555933764923935*alloc(2523,rice_H) - 0.0863276686959795*alloc(2523,rice_L) - 0.126515738611388*alloc(2523,sorg_L)
     
      - 0.0974944396126796*alloc(2523,soyb_L) - 0.0883524164740129*alloc(2523,sunf_L) - 0.151150966586971*alloc(2523,temf_H) - 0.124184210512359*alloc(2523,temf_L) - 0.0794310981010967*alloc(2523,toba_H) - 0.0676141510341045*alloc(2523,toba_L)
     
      - 0.0135903114620407*alloc(2523,trof_L) - 0.224097062511972*alloc(2523,vege_H) - 0.0626750165376764*alloc(2523,vege_L) - 0.0568832426413242*alloc(2559,bean_H) - 0.135565714195656*alloc(2559,bean_L) - 0.131577575874058*alloc(2559,cass_L)
     
      - 0.0408724547609883*alloc(2559,chic_H) - 0.0803761515335128*alloc(2559,chic_L) - 0.000429490858558953*alloc(2559,coff_L) - 0.122036754116736*alloc(2559,cott_L) - 0.0465734744915121*alloc(2559,cowp_H) - 0.144615713185315*alloc(2559,cowp_L)
     
      - 0.058443322450431*alloc(2559,grou_H) - 0.119919982189695*alloc(2559,grou_L) - 0.0404877444392351*alloc(2559,lent_H) - 0.0803761515335128*alloc(2559,lent_L) - 0.0657749941963433*alloc(2559,maiz_H) - 0.135565714195656*alloc(2559,maiz_L)
     
      - 0.0496856721946718*alloc(2559,mill_H) - 0.135565714195656*alloc(2559,mill_L) - 0.122036754116736*alloc(2559,ofib_L) - 0.135565714195656*alloc(2559,ooil_L) - 0.0352831430989031*alloc(2559,opul_H) - 0.0803761515335128*alloc(2559,opul_L)
     
      - 0.0533254362109693*alloc(2559,pige_H) - 0.135565714195656*alloc(2559,pige_L) - 0.112065036894687*alloc(2559,pota_H) - 0.078382070670018*alloc(2559,pota_L) - 0.0850753877872972*alloc(2559,rest_H) - 0.135565714195656*alloc(2559,rest_L)
     
      - 0.0548801322096966*alloc(2559,rice_H) - 0.135565714195656*alloc(2559,rice_L) - 0.137345050589858*alloc(2559,sorg_L) - 0.135565714195656*alloc(2559,soyb_L) - 0.135565714195656*alloc(2559,sunf_L) - 0.126873997237207*alloc(2559,temf_H)
     
      - 0.135565714195656*alloc(2559,temf_L) - 0.0924122560913476*alloc(2559,toba_H) - 0.141271819974291*alloc(2559,toba_L) - 0.000429490858558953*alloc(2559,trof_L) - 0.224173800518666*alloc(2559,vege_H) - 0.134123860145076*alloc(2559,vege_L)
     
      - 0.0595896777739535*alloc(2560,bean_H) - 0.167961585022622*alloc(2560,bean_L) - 0.13636329973027*alloc(2560,cass_L) - 0.040403647282965*alloc(2560,chic_H) - 0.101329149740018*alloc(2560,chic_L) - 0.000398812835602101*alloc(2560,coff_L)
     
      - 0.144554332545455*alloc(2560,cott_L) - 0.048629299293236*alloc(2560,cowp_H) - 0.179557821472516*alloc(2560,cowp_L) - 0.0609923680674161*alloc(2560,grou_H) - 0.142805692322531*alloc(2560,grou_L) - 0.0400233495925736*alloc(2560,lent_H)
     
      - 0.101329149740018*alloc(2560,lent_L) - 0.0697771469401037*alloc(2560,maiz_H) - 0.167961585022622*alloc(2560,maiz_L) - 0.0523421009518185*alloc(2560,mill_H) - 0.167961585022622*alloc(2560,mill_L) - 0.144554332545455*alloc(2560,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.167961585022622*alloc(2560,ooil_L) - 0.0348784450833409*alloc(2560,opul_H) - 0.101329149740018*alloc(2560,opul_L) - 0.0561414319361802*alloc(2560,pige_H) - 0.167961585022622*alloc(2560,pige_L) - 0.103025115511485*alloc(2560,pota_H)
     
      - 0.0815418804749398*alloc(2560,pota_L) - 0.0902518944646378*alloc(2560,rest_H) - 0.167961585022622*alloc(2560,rest_L) - 0.0562276957916367*alloc(2560,rice_H) - 0.157377690279332*alloc(2560,rice_L) - 0.16952615354214*alloc(2560,sorg_L)
     
      - 0.167961585022622*alloc(2560,soyb_L) - 0.167961585022622*alloc(2560,sunf_L) - 0.134593786837477*alloc(2560,temf_H) - 0.167961585022622*alloc(2560,temf_L) - 0.0941520049702776*alloc(2560,toba_H) - 0.180171370411812*alloc(2560,toba_L)
     
      - 0.000398812881315757*alloc(2560,trof_L) - 0.235211500780981*alloc(2560,vege_H) - 0.166642433738284*alloc(2560,vege_L) - 0.0502213103083035*alloc(2561,bean_H) - 0.168881885026174*alloc(2561,bean_L) - 0.087524064551945*alloc(2561,cass_L)
     
      - 0.0322744076171226*alloc(2561,chic_H) - 0.102924391025422*alloc(2561,chic_L) - 0.000398820972632826*alloc(2561,coff_L) - 0.153788344725041*alloc(2561,cott_L) - 0.0393103897682975*alloc(2561,cowp_H) - 0.170170375247322*alloc(2561,cowp_L)
     
      - 0.0508051496418765*alloc(2561,grou_H) - 0.153911047491283*alloc(2561,grou_L) - 0.0319706260651854*alloc(2561,lent_H) - 0.102924391025422*alloc(2561,lent_L) - 0.0594552941869144*alloc(2561,maiz_H) - 0.169434100136393*alloc(2561,maiz_L)
     
      - 0.0444486216971158*alloc(2561,mill_H) - 0.169188682901214*alloc(2561,mill_L) - 0.153788344725041*alloc(2561,ofib_L) - 0.16888189672887*alloc(2561,ooil_L) - 0.0278608796326607*alloc(2561,opul_H) - 0.102924391025422*alloc(2561,opul_L)
     
      - 0.0467350032098684*alloc(2561,pige_H) - 0.169188682901214*alloc(2561,pige_L) - 0.076564444434946*alloc(2561,pota_H) - 0.049146015499321*alloc(2561,pota_L) - 0.0769012946448999*alloc(2561,rest_H) - 0.169434100136393*alloc(2561,rest_L)
     
      - 0.0443313332202075*alloc(2561,rice_H) - 0.138203993358941*alloc(2561,rice_L) - 0.169710213542851*alloc(2561,sorg_L) - 0.169188682901214*alloc(2561,soyb_L) - 0.16888189672887*alloc(2561,sunf_L) - 0.114683869190327*alloc(2561,temf_H)
     
      - 0.169434100136393*alloc(2561,temf_L) - 0.0727996720908769*alloc(2561,toba_H) - 0.140228723582931*alloc(2561,toba_L) - 0.000521535121574746*alloc(2561,trof_L) - 0.197648916324869*alloc(2561,vege_H) - 0.16790018097737*alloc(2561,vege_L)
     
      - 0.0661455062094908*alloc(2562,bean_H) - 0.122711648587805*alloc(2562,bean_L) - 0.0343285856789709*alloc(2562,cass_L) - 0.0386058209069812*alloc(2562,chic_H) - 0.0874013793397472*alloc(2562,chic_L) - 0.0164740385800818*alloc(2562,coff_L)
     
      - 0.072246481804145*alloc(2562,cott_L) - 0.0527617359140525*alloc(2562,cowp_H) - 0.14271365061948*alloc(2562,cowp_L) - 0.0664840433913682*alloc(2562,grou_H) - 0.0786274879051971*alloc(2562,grou_L) - 0.0382424451843944*alloc(2562,lent_H)
     
      - 0.0874013793397472*alloc(2562,lent_L) - 0.081066228754026*alloc(2562,maiz_H) - 0.142713662322175*alloc(2562,maiz_L) - 0.0496506866306502*alloc(2562,mill_H) - 0.14271365061948*alloc(2562,mill_L) - 0.072246481804145*alloc(2562,ofib_L)
     
      - 0.12936875054127*alloc(2562,ooil_L) - 0.03332647161706*alloc(2562,opul_H) - 0.0874013793397472*alloc(2562,opul_L) - 0.0629450392955818*alloc(2562,pige_H) - 0.14271365061948*alloc(2562,pige_L) - 0.0888149803962387*alloc(2562,pota_H)
     
      - 0.0390223117172418*alloc(2562,pota_L) - 0.104853537913135*alloc(2562,rest_H) - 0.142713662322175*alloc(2562,rest_L) - 0.0580654756024833*alloc(2562,rice_H) - 0.122159445180282*alloc(2562,rice_L) - 0.154708714944768*alloc(2562,sorg_L)
     
      - 0.14271365061948*alloc(2562,soyb_L) - 0.12936875054127*alloc(2562,sunf_L) - 0.156369401603701*alloc(2562,temf_H) - 0.142713662322175*alloc(2562,temf_L) - 0.0910383380606444*alloc(2562,toba_H) - 0.0920337335151794*alloc(2562,toba_L)
     
      - 0.0214745376251636*alloc(2562,trof_L) - 0.256226339226424*alloc(2562,vege_H) - 0.0903771232926107*alloc(2562,vege_L) - 0.0675377246093374*alloc(2563,bean_H) - 0.101083767612927*alloc(2563,bean_L) - 0.0330708179601669*alloc(2563,cass_L)
     
      - 0.0394582870645498*alloc(2563,chic_H) - 0.0862356211415805*alloc(2563,chic_L) - 0.0141118333266552*alloc(2563,coff_L) - 0.060496887376167*alloc(2563,cott_L) - 0.0535408105250183*alloc(2563,cowp_H) - 0.11872355707699*alloc(2563,cowp_L)
     
      - 0.0646999966862081*alloc(2563,grou_H) - 0.0653133249577014*alloc(2563,grou_L) - 0.0390868875388496*alloc(2563,lent_H) - 0.0862356211415805*alloc(2563,lent_L) - 0.0821774612913182*alloc(2563,maiz_H) - 0.135841827602113*alloc(2563,maiz_L)
     
      - 0.049889219014521*alloc(2563,mill_H) - 0.11872355707699*alloc(2563,mill_L) - 0.060496887376167*alloc(2563,ofib_L) - 0.10694324892369*alloc(2563,ooil_L) - 0.0340623629551347*alloc(2563,opul_H) - 0.0862356211415805*alloc(2563,opul_L)
     
      - 0.0635920065549584*alloc(2563,pige_H) - 0.11872355707699*alloc(2563,pige_L) - 0.087879816252518*alloc(2563,pota_H) - 0.0410777322611616*alloc(2563,pota_L) - 0.106290840039681*alloc(2563,rest_H) - 0.135841827602113*alloc(2563,rest_L)
     
      - 0.0586782678039136*alloc(2563,rice_H) - 0.103139170602803*alloc(2563,rice_L) - 0.13958452528314*alloc(2563,sorg_L) - 0.11872355707699*alloc(2563,soyb_L) - 0.10694324892369*alloc(2563,sunf_L) - 0.158512868366244*alloc(2563,temf_H)
     
      - 0.135841827602113*alloc(2563,temf_L) - 0.087944927656218*alloc(2563,toba_H) - 0.0775231220495868*alloc(2563,toba_L) - 0.0184987731925823*alloc(2563,trof_L) - 0.247732209901671*alloc(2563,vege_H) - 0.0724306120210306*alloc(2563,vege_L)
     
      - 0.0265177400392096*alloc(2598,bean_H) - 0.0713261993546369*alloc(2598,bean_L) - 0.123018446462844*alloc(2598,cass_L) - 2.97443000239885E-5*alloc(2598,chic_H) - 0.0454646926068065*alloc(2598,chic_L) - 9.20339145869699E-5*alloc(2598,coff_L)
     
      - 0.117404394089956*alloc(2598,cott_L) - 0.0390688298821729*alloc(2598,cowp_H) - 0.123693376042*alloc(2598,cowp_L) - 0.0453045686942185*alloc(2598,grou_H) - 0.0778299023705827*alloc(2598,grou_L) - 2.94643330070949E-5*alloc(2598,lent_H)
     
      - 0.0454646926068065*alloc(2598,lent_L) - 0.0312357132640961*alloc(2598,maiz_H) - 0.0744246636277858*alloc(2598,maiz_L) - 0.0429012445454248*alloc(2598,mill_H) - 0.117189649620663*alloc(2598,mill_L) - 0.117404394089956*alloc(2598,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.123816078808242*alloc(2598,ooil_L) - 2.56767644679073E-5*alloc(2598,opul_H) - 0.0454646926068065*alloc(2598,opul_L) - 0.0458166778223225*alloc(2598,pige_H) - 0.123816078808242*alloc(2598,pige_L) - 0.109874034607078*alloc(2598,pota_H)
     
      - 0.0744246226683503*alloc(2598,pota_L) - 0.0404012261988695*alloc(2598,rest_H) - 0.0744246636277858*alloc(2598,rest_L) - 0.0479866265212941*alloc(2598,rice_H) - 0.123816078808242*alloc(2598,rice_L) - 0.0750688970356639*alloc(2598,sorg_L)
     
      - 0.123816078808242*alloc(2598,soyb_L) - 0.123816078808242*alloc(2598,sunf_L) - 0.0602508574389422*alloc(2598,temf_H) - 0.0744246636277858*alloc(2598,temf_L) - 0.0804572306877138*alloc(2598,toba_H) - 0.126975923721252*alloc(2598,toba_L)
     
      - 9.20339145869699E-5*alloc(2598,trof_L) - 0.194308209552393*alloc(2598,vege_H) - 0.123509292635898*alloc(2598,vege_L) - 0.0596928250753854*alloc(2599,bean_H) - 0.15219315025042*alloc(2599,bean_L) - 0.148971959805638*alloc(2599,cass_L)
     
      - 0.0398020793009838*alloc(2599,chic_H) - 0.0911440887234701*alloc(2599,chic_L) - 0.000368135018356699*alloc(2599,coff_L) - 0.133817062270036*alloc(2599,cott_L) - 0.0495270443874216*alloc(2599,cowp_H) - 0.162562288821722*alloc(2599,cowp_L)
     
      - 0.0624284977632609*alloc(2599,grou_H) - 0.134001133973442*alloc(2599,grou_L) - 0.0394274438448099*alloc(2599,lent_H) - 0.0911440887234701*alloc(2599,lent_L) - 0.0705543527135823*alloc(2599,maiz_H) - 0.15219315025042*alloc(2599,maiz_L)
     
      - 0.0528278810652824*alloc(2599,mill_H) - 0.15219315025042*alloc(2599,mill_L) - 0.133817062270036*alloc(2599,ofib_L) - 0.15219315025042*alloc(2599,ooil_L) - 0.0343591415740194*alloc(2599,opul_H) - 0.0911440887234701*alloc(2599,opul_L)
     
      - 0.0568019641282104*alloc(2599,pige_H) - 0.15219315025042*alloc(2599,pige_L) - 0.103626018473339*alloc(2599,pota_H) - 0.0780446175831357*alloc(2599,pota_L) - 0.0912571561659439*alloc(2599,rest_H) - 0.15219315025042*alloc(2599,rest_L)
     
      - 0.0576032389216933*alloc(2599,rice_H) - 0.15219315025042*alloc(2599,rice_L) - 0.153635016003696*alloc(2599,sorg_L) - 0.15219315025042*alloc(2599,soyb_L) - 0.15219315025042*alloc(2599,sunf_L) - 0.13609294627279*alloc(2599,temf_H)
     
      - 0.15219315025042*alloc(2599,temf_L) - 0.097597535128546*alloc(2599,toba_H) - 0.197044258809843*alloc(2599,toba_L) - 0.000368135018356699*alloc(2599,trof_L) - 0.237115521608068*alloc(2599,vege_H) - 0.150996713435019*alloc(2599,vege_L)
     
      - 0.0653714144390488*alloc(2600,bean_H) - 0.168268347789574*alloc(2600,bean_L) - 0.158328686454162*alloc(2600,cass_L) - 0.0417449153446834*alloc(2600,chic_H) - 0.10102237527037*alloc(2600,chic_L) - 0.000490848641591578*alloc(2600,coff_L)
     
      - 0.139952633581865*alloc(2600,cott_L) - 0.0539456205440657*alloc(2600,cowp_H) - 0.183607305325887*alloc(2600,cowp_L) - 0.0673161751728601*alloc(2600,grou_H) - 0.14019806251974*alloc(2600,grou_L) - 0.0413519930230923*alloc(2600,lent_H)
     
      - 0.10102237527037*alloc(2600,lent_L) - 0.077583234696743*alloc(2600,maiz_H) - 0.168268347789574*alloc(2600,maiz_L) - 0.0578750548974827*alloc(2600,mill_H) - 0.168268347789574*alloc(2600,mill_L) - 0.139952633581865*alloc(2600,ofib_L)
     
      - 0.168268347789574*alloc(2600,ooil_L) - 0.0360362946236324*alloc(2600,opul_H) - 0.10102237527037*alloc(2600,opul_L) - 0.062159879337624*alloc(2600,pige_H) - 0.168268347789574*alloc(2600,pige_L) - 0.10760944061447*alloc(2600,pota_H)
     
      - 0.0778912186456159*alloc(2600,pota_L) - 0.10034852694803*alloc(2600,rest_H) - 0.168268347789574*alloc(2600,rest_L) - 0.0626627851897905*alloc(2600,rice_H) - 0.166212921394307*alloc(2600,rice_L) - 0.170231744184487*alloc(2600,sorg_L)
     
      - 0.168268347789574*alloc(2600,soyb_L) - 0.168268347789574*alloc(2600,sunf_L) - 0.149651022015832*alloc(2600,temf_H) - 0.168268347789574*alloc(2600,temf_L) - 0.105944015660119*alloc(2600,toba_H) - 0.19925300222376*alloc(2600,toba_L)
     
      - 0.000490849327296414*alloc(2600,trof_L) - 0.259807318452594*alloc(2600,vege_H) - 0.166611749269702*alloc(2600,vege_L) - 0.0659490800869834*alloc(2601,bean_H) - 0.135504333555795*alloc(2601,bean_L) - 0.0960831881118106*alloc(2601,cass_L)
     
      - 0.0395685941950674*alloc(2601,chic_H) - 0.0890579895623159*alloc(2601,chic_L) - 0.00542999858923533*alloc(2601,coff_L) - 0.10307776655755*alloc(2601,cott_L) - 0.0531296923965325*alloc(2601,cowp_H) - 0.149462794275996*alloc(2601,cowp_L)
     
      - 0.0647093415624274*alloc(2601,grou_H) - 0.10718860764539*alloc(2601,grou_L) - 0.0391961564079776*alloc(2601,lent_H) - 0.0890579895623159*alloc(2601,lent_L) - 0.0792907595346774*alloc(2601,maiz_H) - 0.152039739610205*alloc(2601,maiz_L)
     
      - 0.0486994844340209*alloc(2601,mill_H) - 0.14194671444536*alloc(2601,mill_L) - 0.10307776655755*alloc(2601,ofib_L) - 0.137621117185532*alloc(2601,ooil_L) - 0.0341575855761796*alloc(2601,opul_H) - 0.0890579895623159*alloc(2601,opul_L)
     
      - 0.0622260284738512*alloc(2601,pige_H) - 0.14194671444536*alloc(2601,pige_L) - 0.0940539274134009*alloc(2601,pota_H) - 0.0685651238035429*alloc(2601,pota_L) - 0.102557091760823*alloc(2601,rest_H) - 0.152039739610205*alloc(2601,rest_L)
     
      - 0.0598507197872292*alloc(2601,rice_H) - 0.131915023109592*alloc(2601,rice_L) - 0.154800756647819*alloc(2601,sorg_L) - 0.14194671444536*alloc(2601,soyb_L) - 0.137621117185532*alloc(2601,sunf_L) - 0.152944682535571*alloc(2601,temf_H)
     
      - 0.152039739610205*alloc(2601,temf_L) - 0.0953410161486969*alloc(2601,toba_H) - 0.136179228026864*alloc(2601,toba_L) - 0.00702525267446308*alloc(2601,trof_L) - 0.249242539551874*alloc(2601,vege_H) - 0.124153502638385*alloc(2601,vege_L)
     
      - 0.0357145760366215*alloc(2637,bean_H) - 0.0889046198815358*alloc(2637,bean_L) - 0.130964015232066*alloc(2637,cass_L) - 0.0243253907952187*alloc(2637,chic_H) - 0.0546066981914294*alloc(2637,chic_L) - 0.0795477879087491*alloc(2637,coff_L)
     
      - 0.13768247442*alloc(2637,cott_L) - 0.0378865070488216*alloc(2637,cowp_H) - 0.140167389753854*alloc(2637,cowp_L) - 4.20286112737503E-5*alloc(2637,grou_H) - 0.0492074195445732*alloc(2637,grou_L) - 0.0240964290415309*alloc(2637,lent_H)
     
      - 0.0546066981914294*alloc(2637,lent_L) - 0.039738713160837*alloc(2637,maiz_H) - 0.137621117185532*alloc(2637,maiz_L) - 0.044191005155336*alloc(2637,mill_H) - 0.137590444419645*alloc(2637,mill_L) - 0.13768247442*alloc(2637,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.142744335088062*alloc(2637,ooil_L) - 0.0209988915366944*alloc(2637,opul_H) - 0.0546066981914294*alloc(2637,opul_L) - 0.0424715647993065*alloc(2637,pige_H) - 0.140136716987967*alloc(2637,pige_L) - 0.125428709811753*alloc(2637,pota_H)
     
      - 0.0851005298579524*alloc(2637,pota_L) - 0.0513992661441288*alloc(2637,rest_H) - 0.137621117185532*alloc(2637,rest_L) - 0.0477348298912412*alloc(2637,rice_H) - 0.14035146145726*alloc(2637,rice_L) - 0.140658224224212*alloc(2637,sorg_L)
     
      - 0.142867049556999*alloc(2637,soyb_L) - 0.142744335088062*alloc(2637,sunf_L) - 0.0766523729174042*alloc(2637,temf_H) - 0.137621117185532*alloc(2637,temf_L) - 0.0823665951070212*alloc(2637,toba_H) - 0.142805704025227*alloc(2637,toba_L)
     
      - 3.06780772418189E-5*alloc(2637,trof_L) - 0.199720651634042*alloc(2637,vege_H) - 0.142314846149477*alloc(2637,vege_L) - 0.0566034247557569*alloc(2638,bean_H) - 0.147131289582359*alloc(2638,bean_L) - 0.143572651902042*alloc(2638,cass_L)
     
      - 0.0380345763412644*alloc(2638,chic_H) - 0.0881376544506764*alloc(2638,chic_L) - 0.000398813018456724*alloc(2638,coff_L) - 0.130657240762418*alloc(2638,cott_L) - 0.0469729002532463*alloc(2638,cowp_H) - 0.156426705807197*alloc(2638,cowp_L)
     
      - 0.0593670738820134*alloc(2638,grou_H) - 0.130871985231711*alloc(2638,grou_L) - 0.0376765774349702*alloc(2638,lent_H) - 0.0881376544506764*alloc(2638,lent_L) - 0.0669085573573069*alloc(2638,maiz_H) - 0.147131289582359*alloc(2638,maiz_L)
     
      - 0.0501279043814975*alloc(2638,mill_H) - 0.147131289582359*alloc(2638,mill_L) - 0.130657240762418*alloc(2638,ofib_L) - 0.147131289582359*alloc(2638,ooil_L) - 0.0328333447942518*alloc(2638,opul_H) - 0.0881376544506764*alloc(2638,opul_L)
     
      - 0.0538795535129366*alloc(2638,pige_H) - 0.147131289582359*alloc(2638,pige_L) - 0.0994076458965554*alloc(2638,pota_H) - 0.0765414062980867*alloc(2638,pota_L) - 0.0865415730249955*alloc(2638,rest_H) - 0.147131289582359*alloc(2638,rest_L)
     
      - 0.0546393760362636*alloc(2638,rice_H) - 0.147131289582359*alloc(2638,rice_L) - 0.148695869804572*alloc(2638,sorg_L) - 0.147131289582359*alloc(2638,soyb_L) - 0.147131289582359*alloc(2638,sunf_L) - 0.129060537747161*alloc(2638,temf_H)
     
      - 0.147131289582359*alloc(2638,temf_L) - 0.092510007579519*alloc(2638,toba_H) - 0.191644939203552*alloc(2638,toba_L) - 0.000398813018456724*alloc(2638,trof_L) - 0.224811580140047*alloc(2638,vege_H) - 0.145781465532134*alloc(2638,vege_L)
     
      - 0.0640744959991455*alloc(2639,bean_H) - 0.162470235415976*alloc(2639,bean_L) - 0.155690418993572*alloc(2639,cass_L) - 0.040228398574646*alloc(2639,chic_H) - 0.0970956000345889*alloc(2639,chic_L) - 0.000766947876815628*alloc(2639,coff_L)
     
      - 0.137529098887872*alloc(2639,cott_L) - 0.0529374961115462*alloc(2639,cowp_H) - 0.176551398902418*alloc(2639,cowp_L) - 0.0664264809389968*alloc(2639,grou_H) - 0.137927903357875*alloc(2639,grou_L) - 0.0398497504056097*alloc(2639,lent_H)
     
      - 0.0970956000345889*alloc(2639,lent_L) - 0.0763527499249383*alloc(2639,maiz_H) - 0.162470235415976*alloc(2639,maiz_L) - 0.0569653069142439*alloc(2639,mill_H) - 0.162470235415976*alloc(2639,mill_L) - 0.137529098887872*alloc(2639,ofib_L)
     
      - 0.162470235415976*alloc(2639,ooil_L) - 0.0347271616507779*alloc(2639,opul_H) - 0.0970956000345889*alloc(2639,opul_L) - 0.0611300346234555*alloc(2639,pige_H) - 0.162470235415976*alloc(2639,pige_L) - 0.103524686795968*alloc(2639,pota_H)
     
      - 0.0937517068235649*alloc(2639,pota_L) - 0.0987569803366365*alloc(2639,rest_H) - 0.162470235415976*alloc(2639,rest_L) - 0.0615507794763641*alloc(2639,rice_H) - 0.162470235415976*alloc(2639,rice_L) - 0.165599384157707*alloc(2639,sorg_L)
     
      - 0.162470235415976*alloc(2639,soyb_L) - 0.162470235415976*alloc(2639,sunf_L) - 0.147277528510498*alloc(2639,temf_H) - 0.162470235415976*alloc(2639,temf_L) - 0.104528788989436*alloc(2639,toba_H) - 0.199743906910293*alloc(2639,toba_L)
     
      - 0.000766947876815628*alloc(2639,trof_L) - 0.255389207582754*alloc(2639,vege_H) - 0.159862617315881*alloc(2639,vege_L) - 0.0666996553192717*alloc(2640,bean_H) - 0.16467901393798*alloc(2640,bean_L) - 0.156794755592443*alloc(2640,cass_L)
     
      - 0.0400487663018694*alloc(2640,chic_H) - 0.0960525446026638*alloc(2640,chic_L) - 0.000951023145887042*alloc(2640,coff_L) - 0.131178724593271*alloc(2640,cott_L) - 0.0552343837446664*alloc(2640,cowp_H) - 0.18351525192014*alloc(2640,cowp_L)
     
      - 0.0683174546432629*alloc(2640,grou_H) - 0.131638898000439*alloc(2640,grou_L) - 0.0396718089143108*alloc(2640,lent_H) - 0.0960525446026638*alloc(2640,lent_L) - 0.0795423672269641*alloc(2640,maiz_H) - 0.165108514579261*alloc(2640,maiz_L)
     
      - 0.0501433913446751*alloc(2640,mill_H) - 0.164771055641031*alloc(2640,mill_L) - 0.131178724593271*alloc(2640,ofib_L) - 0.164709698406562*alloc(2640,ooil_L) - 0.0345720941065694*alloc(2640,opul_H) - 0.0960525446026638*alloc(2640,opul_L)
     
      - 0.0634279951186061*alloc(2640,pige_H) - 0.164771055641031*alloc(2640,pige_L) - 0.102036909406372*alloc(2640,pota_H) - 0.0949174416163398*alloc(2640,pota_L) - 0.102882528839961*alloc(2640,rest_H) - 0.165108514579261*alloc(2640,rest_L)
     
      - 0.0638023365531844*alloc(2640,rice_H) - 0.164679025640675*alloc(2640,rice_L) - 0.168575133961918*alloc(2640,sorg_L) - 0.164771055641031*alloc(2640,soyb_L) - 0.164709698406562*alloc(2640,sunf_L) - 0.153430010950207*alloc(2640,temf_H)
     
      - 0.165108514579261*alloc(2640,temf_L) - 0.10849618099017*alloc(2640,toba_H) - 0.192319786863837*alloc(2640,toba_L) - 0.000951025705851765*alloc(2640,trof_L) - 0.265792875502849*alloc(2640,vege_H) - 0.161641883493908*alloc(2640,vege_L)
     
      - 0.0476459586195241*alloc(2676,bean_H) - 0.0911134276602795*alloc(2676,bean_L) - 7.69119702511859E-8*alloc(2676,cass_L) - 0.0284531803080346*alloc(2676,chic_H) - 0.0836893485732586*alloc(2676,chic_L) - 0.0832291459093512*alloc(2676,coff_L)
     
      - 7.57859199204692E-8*alloc(2676,cott_L) - 0.0318709221671093*alloc(2676,cowp_H) - 0.137927903357875*alloc(2676,cowp_L) - 3.28245963013525E-5*alloc(2676,grou_H) - 5.92927766679443E-8*alloc(2676,grou_L) - 0.0281853659030712*alloc(2676,lent_H)
     
      - 0.0836893485732586*alloc(2676,lent_L) - 0.0506446038366869*alloc(2676,maiz_H) - 0.141731958273371*alloc(2676,maiz_L) - 0.0449836898028156*alloc(2676,mill_H) - 0.138572136765754*alloc(2676,mill_L) - 7.57859199204692E-8*alloc(2676,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.14835838746095*alloc(2676,ooil_L) - 0.0245622054828351*alloc(2676,opul_H) - 0.0836893485732586*alloc(2676,opul_L) - 3.42203790649584E-5*alloc(2676,pige_H) - 7.90179624349907E-8*alloc(2676,pige_L) - 0.135804833838489*alloc(2676,pota_H)
     
      - 0.13762109378014*alloc(2676,pota_L) - 0.0655052784630988*alloc(2676,rest_H) - 0.141731958273371*alloc(2676,rest_L) - 0.03379822189356*alloc(2676,rice_H) - 0.0854073452870358*alloc(2676,rice_L) - 0.15019905768423*alloc(2676,sorg_L)
     
      - 0.145842799361211*alloc(2676,soyb_L) - 0.14835838746095*alloc(2676,sunf_L) - 0.0976888467382411*alloc(2676,temf_H) - 0.141731958273371*alloc(2676,temf_L) - 0.0851118283170759*alloc(2676,toba_H) - 0.149984313214937*alloc(2676,toba_L)
     
      - 6.13558459164614E-5*alloc(2676,trof_L) - 0.203628965067379*alloc(2676,vege_H) - 0.144707708077583*alloc(2676,vege_L) - 0.0492069617959089*alloc(2677,bean_H) - 0.129184713945952*alloc(2677,bean_L) - 0.128172337131261*alloc(2677,cass_L)
     
      - 0.0342707621886181*alloc(2677,chic_H) - 0.0775844617300118*alloc(2677,chic_L) - 0.000122711966114857*alloc(2677,coff_L) - 0.122435570289435*alloc(2677,cott_L) - 0.0409967759678092*alloc(2677,cowp_H) - 0.133264882267905*alloc(2677,cowp_L)
     
      - 0.0525232619046684*alloc(2677,grou_H) - 0.121944724116381*alloc(2677,grou_L) - 0.0339481900302926*alloc(2677,lent_H) - 0.0775844617300118*alloc(2677,lent_L) - 0.0579247604882267*alloc(2677,maiz_H) - 0.129184713945952*alloc(2677,maiz_L)
     
      - 0.0435479392148682*alloc(2677,mill_H) - 0.129184713945952*alloc(2677,mill_L) - 0.122435570289435*alloc(2677,ofib_L) - 0.129184713945952*alloc(2677,ooil_L) - 0.0295842325468452*alloc(2677,opul_H) - 0.0775844617300118*alloc(2677,opul_L)
     
      - 0.0468503852572814*alloc(2677,pige_H) - 0.129184713945952*alloc(2677,pige_L) - 0.0909255344081585*alloc(2677,pota_H) - 0.0770936038542617*alloc(2677,pota_L) - 0.0749216555810227*alloc(2677,rest_H) - 0.129184713945952*alloc(2677,rest_L)
     
      - 0.047783904422442*alloc(2677,rice_H) - 0.129184713945952*alloc(2677,rice_L) - 0.129614202884537*alloc(2677,sorg_L) - 0.129184713945952*alloc(2677,soyb_L) - 0.129184713945952*alloc(2677,sunf_L) - 0.111731608523011*alloc(2677,temf_H)
     
      - 0.129184713945952*alloc(2677,temf_L) - 0.0811166590466987*alloc(2677,toba_H) - 0.132436588859316*alloc(2677,toba_L) - 0.000122711966114857*alloc(2677,trof_L) - 0.19559830988042*alloc(2677,vege_H) - 0.128785897773253*alloc(2677,vege_L)
     
      - 0.0625909064945782*alloc(2678,bean_H) - 0.159985331784818*alloc(2678,bean_L) - 0.153481605363481*alloc(2678,cass_L) - 0.0382032368840135*alloc(2678,chic_H) - 0.095592382898192*alloc(2678,chic_L) - 0.000736270310995332*alloc(2678,coff_L)
     
      - 0.138817554000933*alloc(2678,cott_L) - 0.0519468450501167*alloc(2678,cowp_H) - 0.172011080578689*alloc(2678,cowp_L) - 0.0655217704707143*alloc(2678,grou_H) - 0.139185697407745*alloc(2678,grou_L) - 0.0378436504672052*alloc(2678,lent_H)
     
      - 0.095592382898192*alloc(2678,lent_L) - 0.0749452668607276*alloc(2678,maiz_H) - 0.159985331784818*alloc(2678,maiz_L) - 0.0559320156474405*alloc(2678,mill_H) - 0.159985331784818*alloc(2678,mill_L) - 0.138817554000933*alloc(2678,ofib_L)
     
      - 0.159985331784818*alloc(2678,ooil_L) - 0.0329789409934465*alloc(2678,opul_H) - 0.095592382898192*alloc(2678,opul_L) - 0.0598220937958465*alloc(2678,pige_H) - 0.159985331784818*alloc(2678,pige_L) - 0.099066637602967*alloc(2678,pota_H)
     
      - 0.0923712041561055*alloc(2678,pota_L) - 0.0969364987242119*alloc(2678,rest_H) - 0.159985331784818*alloc(2678,rest_L) - 0.0601921897248285*alloc(2678,rice_H) - 0.159985331784818*alloc(2678,rice_L) - 0.162899736057257*alloc(2678,sorg_L)
     
      - 0.159985331784818*alloc(2678,soyb_L) - 0.159985331784818*alloc(2678,sunf_L) - 0.144562621354946*alloc(2678,temf_H) - 0.159985331784818*alloc(2678,temf_L) - 0.10259015373428*alloc(2678,toba_H) - 0.20103237372605*alloc(2678,toba_L)
     
      - 0.000736270310995332*alloc(2678,trof_L) - 0.250474094170394*alloc(2678,vege_H) - 0.157531089216852*alloc(2678,vege_L) - 0.0671290301819832*alloc(2679,bean_H) - 0.166335635863244*alloc(2679,bean_L) - 0.148941228526272*alloc(2679,cass_L)
     
      - 0.0392430470602883*alloc(2679,chic_H) - 0.093751700972217*alloc(2679,chic_L) - 0.00156458077077744*alloc(2679,coff_L) - 0.122466207947234*alloc(2679,cott_L) - 0.0551570053084346*alloc(2679,cowp_H) - 0.190755253452407*alloc(2679,cowp_L)
     
      - 0.0679487288608662*alloc(2679,grou_H) - 0.130442472887734*alloc(2679,grou_L) - 0.0388736734723933*alloc(2679,lent_H) - 0.093751700972217*alloc(2679,lent_L) - 0.0801312120801467*alloc(2679,maiz_H) - 0.168022930554395*alloc(2679,maiz_L)
     
      - 0.0505361574478588*alloc(2679,mill_H) - 0.168022930554395*alloc(2679,mill_L) - 0.122466207947234*alloc(2679,ofib_L) - 0.166335635863244*alloc(2679,ooil_L) - 0.033876557039748*alloc(2679,opul_H) - 0.093751700972217*alloc(2679,opul_L)
     
      - 0.063624704543158*alloc(2679,pige_H) - 0.169740898011433*alloc(2679,pige_L) - 0.0982808420146822*alloc(2679,pota_H) - 0.0904691532929659*alloc(2679,pota_L) - 0.103644158770046*alloc(2679,rest_H) - 0.168022930554395*alloc(2679,rest_L)
     
      - 0.0636013858648495*alloc(2679,rice_H) - 0.166335635863244*alloc(2679,rice_L) - 0.176029868260782*alloc(2679,sorg_L) - 0.168022930554395*alloc(2679,soyb_L) - 0.166335635863244*alloc(2679,sunf_L) - 0.154565839256825*alloc(2679,temf_H)
     
      - 0.168022930554395*alloc(2679,temf_L) - 0.108196635566412*alloc(2679,toba_H) - 0.17569238591716*alloc(2679,toba_L) - 0.00156458296503292*alloc(2679,trof_L) - 0.267818658248216*alloc(2679,vege_H) - 0.161089691789081*alloc(2679,vege_L)
     
      - 0.0386043908524995*alloc(2715,bean_H) - 0.0778298965192347*alloc(2715,bean_L) - 5.06239563961791E-8*alloc(2715,cass_L) - 0.0240343314349708*alloc(2715,chic_H) - 0.075283606396869*alloc(2715,chic_L) - 0.0767867942765262*alloc(2715,coff_L)
     
      - 0.0777071586449055*alloc(2715,cott_L) - 0.0359525746685443*alloc(2715,cowp_H) - 0.129706221182196*alloc(2715,cowp_L) - 2.98646154756575E-5*alloc(2715,grou_H) - 4.97267198765873E-8*alloc(2715,grou_L) - 0.0238081092656996*alloc(2715,lent_H)
     
      - 0.075283606396869*alloc(2715,lent_L) - 0.0429787417681617*alloc(2715,maiz_H) - 0.127067918613519*alloc(2715,maiz_L) - 0.0416806141138254*alloc(2715,mill_H) - 0.126975888613164*alloc(2715,mill_L) - 0.0777071586449055*alloc(2715,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.130319781824188*alloc(2715,ooil_L) - 0.0207476345686959*alloc(2715,opul_H) - 0.075283606396869*alloc(2715,opul_L) - 0.0354752490204399*alloc(2715,pige_H) - 0.0778912303483117*alloc(2715,pige_L) - 0.123484088554362*alloc(2715,pota_H)
     
      - 0.126577049035073*alloc(2715,pota_L) - 0.0555900181704575*alloc(2715,rest_H) - 0.127067918613519*alloc(2715,rest_L) - 0.0443297608604768*alloc(2715,rice_H) - 0.129890281182907*alloc(2715,rice_L) - 0.130749270762773*alloc(2715,sorg_L)
     
      - 0.130473169059012*alloc(2715,soyb_L) - 0.130319781824188*alloc(2715,sunf_L) - 0.0829020941921352*alloc(2715,temf_H) - 0.127067918613519*alloc(2715,temf_L) - 0.0792881086320552*alloc(2715,toba_H) - 0.130319781824188*alloc(2715,toba_L)
     
      - 6.13558287738405E-5*alloc(2715,trof_L) - 0.189514613652116*alloc(2715,vege_H) - 0.129859620119716*alloc(2715,vege_L) - 0.0458873293922555*alloc(2716,bean_H) - 0.123355905401074*alloc(2716,bean_L) - 0.122895743696603*alloc(2716,cass_L)
     
      - 0.0334911933159708*alloc(2716,chic_H) - 0.0739951454324607*alloc(2716,chic_L) - 6.13559430579799E-5*alloc(2716,coff_L) - 0.120901674535804*alloc(2716,cott_L) - 0.0374060087983752*alloc(2716,cowp_H) - 0.124828455622933*alloc(2716,cowp_L)
     
      - 0.0469734382941218*alloc(2716,grou_H) - 0.120717602832397*alloc(2716,grou_L) - 0.0331759588180227*alloc(2716,lent_H) - 0.0739951454324607*alloc(2716,lent_L) - 0.053256596341682*alloc(2716,maiz_H) - 0.123355905401074*alloc(2716,maiz_L)
     
      - 0.0403276058654672*alloc(2716,mill_H) - 0.123355905401074*alloc(2716,mill_L) - 0.120901674535804*alloc(2716,ofib_L) - 0.123355905401074*alloc(2716,ooil_L) - 0.0289112697837837*alloc(2716,opul_H) - 0.0739951454324607*alloc(2716,opul_L)
     
      - 0.0431153353315866*alloc(2716,pige_H) - 0.123355905401074*alloc(2716,pige_L) - 0.0969378351257036*alloc(2716,pota_H) - 0.0737803892604721*alloc(2716,pota_L) - 0.0688837093998868*alloc(2716,rest_H) - 0.123355905401074*alloc(2716,rest_L)
     
      - 0.0447404275918062*alloc(2716,rice_H) - 0.123355905401074*alloc(2716,rice_L) - 0.123570649870367*alloc(2716,sorg_L) - 0.123355905401074*alloc(2716,soyb_L) - 0.123355905401074*alloc(2716,sunf_L) - 0.102727143341858*alloc(2716,temf_H)
     
      - 0.123355905401074*alloc(2716,temf_L) - 0.0759387418214389*alloc(2716,toba_H) - 0.124460323918816*alloc(2716,toba_L) - 6.13559430579799E-5*alloc(2716,trof_L) - 0.181705272571484*alloc(2716,vege_H) - 0.123171845400364*alloc(2716,vege_L)
     
      - 0.0598458813395631*alloc(2717,bean_H) - 0.158390090499414*alloc(2717,bean_L) - 0.155782448993928*alloc(2717,cass_L) - 0.0347864587508236*alloc(2717,chic_H) - 0.0936289982059753*alloc(2717,chic_L) - 0.000306779315295412*alloc(2717,coff_L)
     
      - 0.140566217629248*alloc(2717,cott_L) - 0.0499770014719279*alloc(2717,cowp_H) - 0.167624149489784*alloc(2717,cowp_L) - 0.0634794298851413*alloc(2717,grou_H) - 0.141977398913942*alloc(2717,grou_L) - 0.0344590326195344*alloc(2717,lent_H)
     
      - 0.0936289982059753*alloc(2717,lent_L) - 0.0721191821572932*alloc(2717,maiz_H) - 0.15839010220211*alloc(2717,maiz_L) - 0.0453390938604725*alloc(2717,mill_H) - 0.15839010220211*alloc(2717,mill_L) - 0.140566217629248*alloc(2717,ofib_L)
     
      - 0.158390090499414*alloc(2717,ooil_L) - 0.030029407560343*alloc(2717,opul_H) - 0.0936289982059753*alloc(2717,opul_L) - 0.0572412271407912*alloc(2717,pige_H) - 0.15839010220211*alloc(2717,pige_L) - 0.0909189315293591*alloc(2717,pota_H)
     
      - 0.0933222120336315*alloc(2717,pota_L) - 0.0932811543946216*alloc(2717,rest_H) - 0.15839010220211*alloc(2717,rest_L) - 0.0577752625652143*alloc(2717,rice_H) - 0.158390090499414*alloc(2717,rice_L) - 0.159555866251625*alloc(2717,sorg_L)
     
      - 0.15839010220211*alloc(2717,soyb_L) - 0.158390090499414*alloc(2717,sunf_L) - 0.139111360321226*alloc(2717,temf_H) - 0.15839010220211*alloc(2717,temf_L) - 0.0988112692833998*alloc(2717,toba_H) - 0.165507377562743*alloc(2717,toba_L)
     
      - 0.000306779315295412*alloc(2717,trof_L) - 0.241182123080393*alloc(2717,vege_H) - 0.157377713684723*alloc(2717,vege_L) - 0.0372628188313956*alloc(2754,bean_H) - 0.0709273597765461*alloc(2754,bean_L) - 7.09063889483911E-8*alloc(2754,cass_L)
     
      - 0.0223827766409383*alloc(2754,chic_H) - 0.0687185285924106*alloc(2754,chic_L) - 0.0665096974082751*alloc(2754,coff_L) - 0.070835323924843*alloc(2754,cott_L) - 0.0299531256038561*alloc(2754,cowp_H) - 0.115563700461285*alloc(2754,cowp_L)
     
      - 3.03446833008832E-5*alloc(2754,grou_H) - 4.68581210143574E-8*alloc(2754,grou_L) - 0.0221720996641426*alloc(2754,lent_H) - 0.0687185285924106*alloc(2754,lent_L) - 0.041509218162076*alloc(2754,maiz_H) - 0.113784387472474*alloc(2754,maiz_L)
     
      - 0.0372986994875379*alloc(2754,mill_H) - 0.113723030238006*alloc(2754,mill_L) - 0.070835323924843*alloc(2754,ofib_L) - 0.117189637917967*alloc(2754,ooil_L) - 0.0193219300331037*alloc(2754,opul_H) - 0.0687185285924106*alloc(2754,opul_L)
     
      - 0.0283906771482878*alloc(2754,pige_H) - 0.0712954914806628*alloc(2754,pige_L) - 0.112079495150834*alloc(2754,pota_H) - 0.111360817670394*alloc(2754,pota_L) - 0.0536892914250148*alloc(2754,rest_H) - 0.113784387472474*alloc(2754,rest_L)
     
      - 0.0337406149061956*alloc(2754,rice_H) - 0.112097104484019*alloc(2754,rice_L) - 0.117772514091376*alloc(2754,sorg_L) - 0.119950643252886*alloc(2754,soyb_L) - 0.117189637917967*alloc(2754,sunf_L) - 0.0800675164591143*alloc(2754,temf_H)
     
      - 0.113784387472474*alloc(2754,temf_L) - 0.0711405012120665*alloc(2754,toba_H) - 0.117496412387615*alloc(2754,toba_L) - 3.06779201011272E-5*alloc(2754,trof_L) - 0.169308257807591*alloc(2754,vege_H) - 0.118938278140891*alloc(2754,vege_L)
     
      - 0.0438270104138289*alloc(2755,bean_H) - 0.114060512581628*alloc(2755,bean_L) - 0.172133759939539*alloc(2755,cass_L) - 0.0310348123041243*alloc(2755,chic_H) - 0.0689026061471648*alloc(2755,chic_L) - 3.06780858131294E-5*alloc(2755,coff_L)
     
      - 0.112250503421539*alloc(2755,cott_L) - 0.0365173413821539*alloc(2755,cowp_H) - 0.115164919396673*alloc(2755,cowp_L) - 0.0472795170596383*alloc(2755,grou_H) - 0.113753726409284*alloc(2755,grou_L) - 0.0307426983927654*alloc(2755,lent_H)
     
      - 0.0689026061471648*alloc(2755,lent_L) - 0.0514345105363981*alloc(2755,maiz_H) - 0.114060512581628*alloc(2755,maiz_L) - 0.0387970882825093*alloc(2755,mill_H) - 0.114060512581628*alloc(2755,mill_L) - 0.112250503421539*alloc(2755,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 87
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      - 0.114060512581628*alloc(2755,ooil_L) - 0.0267907990840611*alloc(2755,opul_H) - 0.0689026061471648*alloc(2755,opul_L) - 0.04154569348672*alloc(2755,pige_H) - 0.114060512581628*alloc(2755,pige_L) - 0.0877742878334142*alloc(2755,pota_H)
     
      - 0.068749213060993*alloc(2755,pota_L) - 0.066526967930575*alloc(2755,rest_H) - 0.114060512581628*alloc(2755,rest_L) - 0.0427505320224471*alloc(2755,rice_H) - 0.114060512581628*alloc(2755,rice_L) - 0.114183227050565*alloc(2755,sorg_L)
     
      - 0.114060512581628*alloc(2755,soyb_L) - 0.114060512581628*alloc(2755,sunf_L) - 0.0992125051081323*alloc(2755,temf_H) - 0.114060512581628*alloc(2755,temf_L) - 0.0729114385060357*alloc(2755,toba_H) - 0.114888817692912*alloc(2755,toba_L)
     
      - 3.06780858131294E-5*alloc(2755,trof_L) - 0.17423854917902*alloc(2755,vege_H) - 0.113937786409994*alloc(2755,vege_L) - 0.0586493089909552*alloc(2756,bean_H) - 0.153236211533693*alloc(2756,bean_L) - 0.147959594693643*alloc(2756,cass_L)
     
      - 0.0328566741563196*alloc(2756,chic_H) - 0.089303418500191*alloc(2756,chic_L) - 0.00042949067570433*alloc(2756,coff_L) - 0.135535064835161*alloc(2756,cott_L) - 0.0488671532912229*alloc(2756,cowp_H) - 0.162746372227825*alloc(2756,cowp_L)
     
      - 0.0620222015822488*alloc(2756,grou_H) - 0.137774551231139*alloc(2756,grou_L) - 0.0325474120442117*alloc(2756,lent_H) - 0.089303418500191*alloc(2756,lent_L) - 0.07099874705553*alloc(2756,maiz_H) - 0.153849783878381*alloc(2756,maiz_L)
     
      - 0.0447874195456657*alloc(2756,mill_H) - 0.153849783878381*alloc(2756,mill_L) - 0.135535064835161*alloc(2756,ofib_L) - 0.15262262748631*alloc(2756,ooil_L) - 0.028363521173139*alloc(2756,opul_H) - 0.089303418500191*alloc(2756,opul_L)
     
      - 0.0559967777935587*alloc(2756,pige_H) - 0.154494028988955*alloc(2756,pige_L) - 0.0841079375306023*alloc(2756,pota_H) - 0.0798852995091107*alloc(2756,pota_L) - 0.0918319493899285*alloc(2756,rest_H) - 0.153849783878381*alloc(2756,rest_L)
     
      - 0.0564136262661816*alloc(2756,rice_H) - 0.153236211533693*alloc(2756,rice_L) - 0.156242669211879*alloc(2756,sorg_L) - 0.153849783878381*alloc(2756,soyb_L) - 0.15262262748631*alloc(2756,sunf_L) - 0.1369501426466*alloc(2756,temf_H)
     
      - 0.153849783878381*alloc(2756,temf_L) - 0.0969041155084274*alloc(2756,toba_H) - 0.158850263906582*alloc(2756,toba_L) - 0.00042949067570433*alloc(2756,trof_L) - 0.236452241335547*alloc(2756,vege_H) - 0.151763684717227*alloc(2756,vege_L)
     
      + 71.714240378678*adm_slack(MI02_ART2_coff,coff,plus) + 71.714240378678*adm_slack(MI02_ART2_coff,coff,minus) + 8.79821612771586*adm_slack(MI02_ART2_cott,cott,plus) + 8.79821612771586*adm_slack(MI02_ART2_cott,cott,minus)
     
      + 19.1027553739775*adm_slack(MI02_ART2_mill,mill,plus) + 19.1027553739775*adm_slack(MI02_ART2_mill,mill,minus) + 368.754429482636*adm_slack(MI02_ART2_ofib,ofib,plus) + 368.754429482636*adm_slack(MI02_ART2_ofib,ofib,minus)
     
      + 188.906443336805*adm_slack(MI02_ART2_ooil,ooil,plus) + 188.906443336805*adm_slack(MI02_ART2_ooil,ooil,minus) + 0.930852938005826*adm_slack(MI02_ART2_pota,pota,plus) + 0.930852938005826*adm_slack(MI02_ART2_pota,pota,minus)
     
      + 18.5736578775937*adm_slack(MI02_ART2_rest,rest,plus) + 18.5736578775937*adm_slack(MI02_ART2_rest,rest,minus) + 10.3125898449142*adm_slack(MI02_ART2_sorg,sorg,plus) + 10.3125898449142*adm_slack(MI02_ART2_sorg,sorg,minus)
     
      + 61.272653225634*adm_slack(MI02_ART2_sunf,sunf,plus) + 61.272653225634*adm_slack(MI02_ART2_sunf,sunf,minus) + 4.77889082397827*adm_slack(MI02_ART2_temf,temf,plus) + 4.77889082397827*adm_slack(MI02_ART2_temf,temf,minus)
     
      + 13.5532925775252*adm_slack(MI02_ART2_trof,trof,plus) + 13.5532925775252*adm_slack(MI02_ART2_trof,trof,minus) + 2.58126470350411*adm_slack(MI02_ART2_vege,vege,plus) + 2.58126470350411*adm_slack(MI02_ART2_vege,vege,minus)
     
      + 581.524835551872*adm_slack(MI02_ART2_whea,whea,plus) + 581.524835551872*adm_slack(MI02_ART2_whea,whea,minus) + 3.54400439703053*adm_slack(MI02001,bean,plus) + 3.54400439703053*adm_slack(MI02001,bean,minus)
     
      + 17.4344685775396*adm_slack(MI02001,cass,plus) + 17.4344685775396*adm_slack(MI02001,cass,minus) + 8.6193081601451*adm_slack(MI02001,chic,plus) + 8.6193081601451*adm_slack(MI02001,chic,minus) + 15.4202804055811*adm_slack(MI02001,cowp,plus)
     
      + 15.4202804055811*adm_slack(MI02001,cowp,minus) + 5.63731578545732*adm_slack(MI02001,grou,plus) + 5.63731578545732*adm_slack(MI02001,grou,minus) + 521.106880252101*adm_slack(MI02001,lent,plus) + 521.106880252101*adm_slack(MI02001,lent,minus)
     
      + 1.0594041329532*adm_slack(MI02001,maiz,plus) + 1.0594041329532*adm_slack(MI02001,maiz,minus) + 24.4071031582485*adm_slack(MI02001,opul,plus) + 24.4071031582485*adm_slack(MI02001,opul,minus) + 5.29421625808836*adm_slack(MI02001,pige,plus)
     
      + 5.29421625808836*adm_slack(MI02001,pige,minus) + 27.8691704532049*adm_slack(MI02001,rice,plus) + 27.8691704532049*adm_slack(MI02001,rice,minus) + 12.6727183480312*adm_slack(MI02001,soyb,plus) + 12.6727183480312*adm_slack(MI02001,soyb,minus)
     
      + 23.5627228000583*adm_slack(MI02001,toba,plus) + 23.5627228000583*adm_slack(MI02001,toba,minus) + 7.87755065909984*adm_slack(MI02002,bean,plus) + 7.87755065909984*adm_slack(MI02002,bean,minus) + 16.1110786178263*adm_slack(MI02002,cass,plus)
     
      + 16.1110786178263*adm_slack(MI02002,cass,minus) + 20.6838110010963*adm_slack(MI02002,chic,plus) + 20.6838110010963*adm_slack(MI02002,chic,minus) + 35.0264512890345*adm_slack(MI02002,cowp,plus) + 35.0264512890345*adm_slack(MI02002,cowp,minus)
     
      + 3.83613413833924*adm_slack(MI02002,grou,plus) + 3.83613413833924*adm_slack(MI02002,grou,minus) + 1205.45206034221*adm_slack(MI02002,lent,plus) + 1205.45206034221*adm_slack(MI02002,lent,minus) + 1.07246004977285*adm_slack(MI02002,maiz,plus)
     
      + 1.07246004977285*adm_slack(MI02002,maiz,minus) + 55.7390756072153*adm_slack(MI02002,opul,plus) + 55.7390756072153*adm_slack(MI02002,opul,minus) + 11.8930966558959*adm_slack(MI02002,pige,plus) + 11.8930966558959*adm_slack(MI02002,pige,minus)
     
      + 3030.13889654846*adm_slack(MI02002,rice,plus) + 3030.13889654846*adm_slack(MI02002,rice,minus) + 26.1370675599357*adm_slack(MI02002,soyb,plus) + 26.1370675599357*adm_slack(MI02002,soyb,minus) + 5.4650888383128*adm_slack(MI02002,toba,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 88
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + 5.4650888383128*adm_slack(MI02002,toba,minus) + 7.28633256095988*adm_slack(MI02003,bean,plus) + 7.28633256095988*adm_slack(MI02003,bean,minus) + 8.25850828778289*adm_slack(MI02003,cass,plus) + 8.25850828778289*adm_slack(MI02003,cass,minus)
     
      + 17.7485061673976*adm_slack(MI02003,chic,plus) + 17.7485061673976*adm_slack(MI02003,chic,minus) + 31.7461963270455*adm_slack(MI02003,cowp,plus) + 31.7461963270455*adm_slack(MI02003,cowp,minus) + 4.22209604045714*adm_slack(MI02003,grou,plus)
     
      + 4.22209604045714*adm_slack(MI02003,grou,minus) + 1064.38852136599*adm_slack(MI02003,lent,plus) + 1064.38852136599*adm_slack(MI02003,lent,minus) + 0.852238551391184*adm_slack(MI02003,maiz,plus) + 0.852238551391184*adm_slack(MI02003,maiz,minus)
     
      + 50.1987458028837*adm_slack(MI02003,opul,plus) + 50.1987458028837*adm_slack(MI02003,opul,minus) + 10.8976849043998*adm_slack(MI02003,pige,plus) + 10.8976849043998*adm_slack(MI02003,pige,minus) + 471.672564085374*adm_slack(MI02003,rice,plus)
     
      + 471.672564085374*adm_slack(MI02003,rice,minus) + 26.0689313045656*adm_slack(MI02003,soyb,plus) + 26.0689313045656*adm_slack(MI02003,soyb,minus) + 4.38040192577194*adm_slack(MI02003,toba,plus) + 4.38040192577194*adm_slack(MI02003,toba,minus)
     
      + 6.00766765194433*adm_slack(MI02004,bean,plus) + 6.00766765194433*adm_slack(MI02004,bean,minus) + 12.7041864053389*adm_slack(MI02004,cass,plus) + 12.7041864053389*adm_slack(MI02004,cass,minus) + 14.7309356489918*adm_slack(MI02004,chic,plus)
     
      + 14.7309356489918*adm_slack(MI02004,chic,minus) + 26.1850008981915*adm_slack(MI02004,cowp,plus) + 26.1850008981915*adm_slack(MI02004,cowp,minus) + 2.05715465055702*adm_slack(MI02004,grou,plus) + 2.05715465055702*adm_slack(MI02004,grou,minus)
     
      + 885.420539897375*adm_slack(MI02004,lent,plus) + 885.420539897375*adm_slack(MI02004,lent,minus) + 0.535948352221316*adm_slack(MI02004,maiz,plus) + 0.535948352221316*adm_slack(MI02004,maiz,minus) + 41.5092991446012*adm_slack(MI02004,opul,plus)
     
      + 41.5092991446012*adm_slack(MI02004,opul,minus) + 8.98043616369761*adm_slack(MI02004,pige,plus) + 8.98043616369761*adm_slack(MI02004,pige,minus) + 251.875525405792*adm_slack(MI02004,rice,plus) + 251.875525405792*adm_slack(MI02004,rice,minus)
     
      + 21.2812131271151*adm_slack(MI02004,soyb,plus) + 21.2812131271151*adm_slack(MI02004,soyb,minus) + 2.90015357917252*adm_slack(MI02004,toba,plus) + 2.90015357917252*adm_slack(MI02004,toba,minus) + 11.6073857303092*adm_slack(MI02005,bean,plus)
     
      + 11.6073857303092*adm_slack(MI02005,bean,minus) + 31.8576299629101*adm_slack(MI02005,cass,plus) + 31.8576299629101*adm_slack(MI02005,cass,minus) + 30.6464290138492*adm_slack(MI02005,chic,plus) + 30.6464290138492*adm_slack(MI02005,chic,minus)
     
      + 53.390559759847*adm_slack(MI02005,cowp,plus) + 53.390559759847*adm_slack(MI02005,cowp,minus) + 2.40091101577939*adm_slack(MI02005,grou,plus) + 2.40091101577939*adm_slack(MI02005,grou,minus) + 1755.30738611234*adm_slack(MI02005,lent,plus)
     
      + 1755.30738611234*adm_slack(MI02005,lent,minus) + 0.816876273685895*adm_slack(MI02005,maiz,plus) + 0.816876273685895*adm_slack(MI02005,maiz,minus) + 81.297481007597*adm_slack(MI02005,opul,plus) + 81.297481007597*adm_slack(MI02005,opul,minus)
     
      + 18.1154269352849*adm_slack(MI02005,pige,plus) + 18.1154269352849*adm_slack(MI02005,pige,minus) + 194.164239973008*adm_slack(MI02005,rice,plus) + 194.164239973008*adm_slack(MI02005,rice,minus) + 40.6671087776795*adm_slack(MI02005,soyb,plus)
     
      + 40.6671087776795*adm_slack(MI02005,soyb,minus) + 9.69651852646636*adm_slack(MI02005,toba,plus) + 9.69651852646636*adm_slack(MI02005,toba,minus) + 135.314787640884*adm_slack(MI02006,bean,plus) + 135.314787640884*adm_slack(MI02006,bean,minus)
     
      + 3.48179307688813*adm_slack(MI02006,cass,plus) + 3.48179307688813*adm_slack(MI02006,cass,minus) + 330.819663343047*adm_slack(MI02006,chic,plus) + 330.819663343047*adm_slack(MI02006,chic,minus) + 591.719043965641*adm_slack(MI02006,cowp,plus)
     
      + 591.719043965641*adm_slack(MI02006,cowp,minus) + 17.7494399570869*adm_slack(MI02006,grou,plus) + 17.7494399570869*adm_slack(MI02006,grou,minus) + 20010.5042016807*adm_slack(MI02006,lent,plus) + 20010.5042016807*adm_slack(MI02006,lent,minus)
     
      + 4.14087631095051*adm_slack(MI02006,maiz,plus) + 4.14087631095051*adm_slack(MI02006,maiz,minus) + 934.541136816302*adm_slack(MI02006,opul,plus) + 934.541136816302*adm_slack(MI02006,opul,minus) + 202.423394094682*adm_slack(MI02006,pige,plus)
     
      + 202.423394094682*adm_slack(MI02006,pige,minus) + 17.2971083871474*adm_slack(MI02006,rice,plus) + 17.2971083871474*adm_slack(MI02006,rice,minus) + 480.771252328432*adm_slack(MI02006,soyb,plus) + 480.771252328432*adm_slack(MI02006,soyb,minus)
     
      + 8.57142857142857*adm_slack(MI02006,sugc,plus) + 8.57142857142857*adm_slack(MI02006,sugc,minus) + 63.6538482262557*adm_slack(MI02006,toba,plus) + 63.6538482262557*adm_slack(MI02006,toba,minus) + 6.07888316514367*adm_slack(MI02007,bean,plus)
     
      + 6.07888316514367*adm_slack(MI02007,bean,minus) + 33.3119769488877*adm_slack(MI02007,cass,plus) + 33.3119769488877*adm_slack(MI02007,cass,minus) + 14.779183178302*adm_slack(MI02007,chic,plus) + 14.779183178302*adm_slack(MI02007,chic,minus)
     
      + 26.441173566947*adm_slack(MI02007,cowp,plus) + 26.441173566947*adm_slack(MI02007,cowp,minus) + 7.94915299826926*adm_slack(MI02007,grou,plus) + 7.94915299826926*adm_slack(MI02007,grou,minus) + 885.420539897375*adm_slack(MI02007,lent,plus)
     
      + 885.420539897375*adm_slack(MI02007,lent,minus) + 1.10730609391497*adm_slack(MI02007,maiz,plus) + 1.10730609391497*adm_slack(MI02007,maiz,minus) + 41.8743306697422*adm_slack(MI02007,opul,plus) + 41.8743306697422*adm_slack(MI02007,opul,minus)
     
      + 9.07909539520364*adm_slack(MI02007,pige,plus) + 9.07909539520364*adm_slack(MI02007,pige,minus) + 143.464251916929*adm_slack(MI02007,rice,plus) + 143.464251916929*adm_slack(MI02007,rice,minus) + 21.739221844416*adm_slack(MI02007,soyb,plus)
     
      + 21.739221844416*adm_slack(MI02007,soyb,minus) + 19.7122404028085*adm_slack(MI02007,toba,plus) + 19.7122404028085*adm_slack(MI02007,toba,minus) + 8.48948366301158*adm_slack(MI02008,bean,plus) + 8.48948366301158*adm_slack(MI02008,bean,minus)
     
      + 48.7654843042009*adm_slack(MI02008,cass,plus) + 48.7654843042009*adm_slack(MI02008,cass,minus) + 22.3252533544388*adm_slack(MI02008,chic,plus) + 22.3252533544388*adm_slack(MI02008,chic,minus) + 38.0664325961909*adm_slack(MI02008,cowp,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 89
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + 38.0664325961909*adm_slack(MI02008,cowp,minus) + 10.5485595694333*adm_slack(MI02008,grou,plus) + 10.5485595694333*adm_slack(MI02008,grou,minus) + 1299.38338971952*adm_slack(MI02008,lent,plus) + 1299.38338971952*adm_slack(MI02008,lent,minus)
     
      + 2.1223386386034*adm_slack(MI02008,maiz,plus) + 2.1223386386034*adm_slack(MI02008,maiz,minus) + 59.9136618570068*adm_slack(MI02008,opul,plus) + 59.9136618570068*adm_slack(MI02008,opul,minus) + 12.9245387983421*adm_slack(MI02008,pige,plus)
     
      + 12.9245387983421*adm_slack(MI02008,pige,minus) + 28.5552314346984*adm_slack(MI02008,soyb,plus) + 28.5552314346984*adm_slack(MI02008,soyb,minus) + 10.0100295859307*adm_slack(MI02008,toba,plus) + 10.0100295859307*adm_slack(MI02008,toba,minus)
     
      + 84.9597519682357*adm_slack(MI02009,bean,plus) + 84.9597519682357*adm_slack(MI02009,bean,minus) + 69.7135584544016*adm_slack(MI02009,cass,plus) + 69.7135584544016*adm_slack(MI02009,cass,minus) + 206.989917798127*adm_slack(MI02009,chic,plus)
     
      + 206.989917798127*adm_slack(MI02009,chic,minus) + 369.005603063444*adm_slack(MI02009,cowp,plus) + 369.005603063444*adm_slack(MI02009,cowp,minus) + 16.0436940026035*adm_slack(MI02009,grou,plus) + 16.0436940026035*adm_slack(MI02009,grou,minus)
     
      + 12506.5651260504*adm_slack(MI02009,lent,plus) + 12506.5651260504*adm_slack(MI02009,lent,minus) + 2.57805183139157*adm_slack(MI02009,maiz,plus) + 2.57805183139157*adm_slack(MI02009,maiz,minus) + 584.771354616048*adm_slack(MI02009,opul,plus)
     
      + 584.771354616048*adm_slack(MI02009,opul,minus) + 126.8999450289*adm_slack(MI02009,pige,plus) + 126.8999450289*adm_slack(MI02009,pige,minus) + 43.6466973313397*adm_slack(MI02009,rice,plus) + 43.6466973313397*adm_slack(MI02009,rice,minus)
     
      + 303.031577225193*adm_slack(MI02009,soyb,plus) + 303.031577225193*adm_slack(MI02009,soyb,minus) + 48.0539142544198*adm_slack(MI02009,toba,plus) + 48.0539142544198*adm_slack(MI02009,toba,minus) + sum_score + 1000000*cl_slack(1454)
     
      + 1000000*cl_slack(1460) + 1000000*cl_slack(1461) + 1000000*cl_slack(1490) + 1000000*cl_slack(1492) + 1000000*cl_slack(1493) + 1000000*cl_slack(1500) + 1000000*cl_slack(1527) + 1000000*cl_slack(1530) + 1000000*cl_slack(1531) + 1000000*cl_slack(1532)
     
      + 1000000*cl_slack(1539) + 1000000*cl_slack(1565) + 1000000*cl_slack(1569) + 1000000*cl_slack(1570) + 1000000*cl_slack(1571) + 1000000*cl_slack(1572) + 1000000*cl_slack(1578) + 1000000*cl_slack(1579) + 1000000*cl_slack(1603) + 1000000*cl_slack(1604)
     
      + 1000000*cl_slack(1608) + 1000000*cl_slack(1609) + 1000000*cl_slack(1610) + 1000000*cl_slack(1611) + 1000000*cl_slack(1612) + 1000000*cl_slack(1618) + 1000000*cl_slack(1647) + 1000000*cl_slack(1648) + 1000000*cl_slack(1649) + 1000000*cl_slack(1650)
     
      + 1000000*cl_slack(1651) + 1000000*cl_slack(1652) + 1000000*cl_slack(1653) + 1000000*cl_slack(1654) + 1000000*cl_slack(1657) + 1000000*cl_slack(1658) + 1000000*cl_slack(1686) + 1000000*cl_slack(1687) + 1000000*cl_slack(1688) + 1000000*cl_slack(1689)
     
      + 1000000*cl_slack(1690) + 1000000*cl_slack(1691) + 1000000*cl_slack(1692) + 1000000*cl_slack(1693) + 1000000*cl_slack(1697) + 1000000*cl_slack(1725) + 1000000*cl_slack(1726) + 1000000*cl_slack(1727) + 1000000*cl_slack(1728) + 1000000*cl_slack(1729)
     
      + 1000000*cl_slack(1730) + 1000000*cl_slack(1731) + 1000000*cl_slack(1732) + 1000000*cl_slack(1735) + 1000000*cl_slack(1736) + 1000000*cl_slack(1764) + 1000000*cl_slack(1765) + 1000000*cl_slack(1766) + 1000000*cl_slack(1767) + 1000000*cl_slack(1768)
     
      + 1000000*cl_slack(1769) + 1000000*cl_slack(1770) + 1000000*cl_slack(1771) + 1000000*cl_slack(1774) + 1000000*cl_slack(1775) + 1000000*cl_slack(1805) + 1000000*cl_slack(1806) + 1000000*cl_slack(1807) + 1000000*cl_slack(1808) + 1000000*cl_slack(1809)
     
      + 1000000*cl_slack(1810) + 1000000*cl_slack(1811) + 1000000*cl_slack(1839) + 1000000*cl_slack(1842) + 1000000*cl_slack(1845) + 1000000*cl_slack(1846) + 1000000*cl_slack(1847) + 1000000*cl_slack(1848) + 1000000*cl_slack(1849) + 1000000*cl_slack(1850)
     
      + 1000000*cl_slack(1851) + 1000000*cl_slack(1853) + 1000000*cl_slack(1876) + 1000000*cl_slack(1879) + 1000000*cl_slack(1880) + 1000000*cl_slack(1881) + 1000000*cl_slack(1882) + 1000000*cl_slack(1883) + 1000000*cl_slack(1884) + 1000000*cl_slack(1885)
     
      + 1000000*cl_slack(1886) + 1000000*cl_slack(1887) + 1000000*cl_slack(1888) + 1000000*cl_slack(1889) + 1000000*cl_slack(1890) + 1000000*cl_slack(1891) + 1000000*cl_slack(1892) + 1000000*cl_slack(1915) + 1000000*cl_slack(1918) + 1000000*cl_slack(1919)
     
      + 1000000*cl_slack(1920) + 1000000*cl_slack(1921) + 1000000*cl_slack(1922) + 1000000*cl_slack(1923) + 1000000*cl_slack(1924) + 1000000*cl_slack(1925) + 1000000*cl_slack(1926) + 1000000*cl_slack(1927) + 1000000*cl_slack(1928) + 1000000*cl_slack(1929)
     
      + 1000000*cl_slack(1930) + 1000000*cl_slack(1931) + 1000000*cl_slack(1953) + 1000000*cl_slack(1954) + 1000000*cl_slack(1955) + 1000000*cl_slack(1956) + 1000000*cl_slack(1957) + 1000000*cl_slack(1958) + 1000000*cl_slack(1959) + 1000000*cl_slack(1960)
     
      + 1000000*cl_slack(1961) + 1000000*cl_slack(1962) + 1000000*cl_slack(1963) + 1000000*cl_slack(1964) + 1000000*cl_slack(1965) + 1000000*cl_slack(1966) + 1000000*cl_slack(1967) + 1000000*cl_slack(1968) + 1000000*cl_slack(1969) + 1000000*cl_slack(1970)
     
      + 1000000*cl_slack(1971) + 1000000*cl_slack(1990) + 1000000*cl_slack(1992) + 1000000*cl_slack(1993) + 1000000*cl_slack(1994) + 1000000*cl_slack(1996) + 1000000*cl_slack(1997) + 1000000*cl_slack(1998) + 1000000*cl_slack(1999) + 1000000*cl_slack(2000)
     
      + 1000000*cl_slack(2001) + 1000000*cl_slack(2002) + 1000000*cl_slack(2003) + 1000000*cl_slack(2004) + 1000000*cl_slack(2005) + 1000000*cl_slack(2006) + 1000000*cl_slack(2007) + 1000000*cl_slack(2008) + 1000000*cl_slack(2009) + 1000000*cl_slack(2010)
     
      + 1000000*cl_slack(2011) + 1000000*cl_slack(2032) + 1000000*cl_slack(2033) + 1000000*cl_slack(2034) + 1000000*cl_slack(2035) + 1000000*cl_slack(2036) + 1000000*cl_slack(2037) + 1000000*cl_slack(2038) + 1000000*cl_slack(2039) + 1000000*cl_slack(2040)
     
      + 1000000*cl_slack(2041) + 1000000*cl_slack(2042) + 1000000*cl_slack(2043) + 1000000*cl_slack(2044) + 1000000*cl_slack(2045) + 1000000*cl_slack(2046) + 1000000*cl_slack(2047) + 1000000*cl_slack(2049) + 1000000*cl_slack(2050) + 1000000*cl_slack(2051)
     
      + 1000000*cl_slack(2072) + 1000000*cl_slack(2073) + 1000000*cl_slack(2074) + 1000000*cl_slack(2075) + 1000000*cl_slack(2076) + 1000000*cl_slack(2077) + 1000000*cl_slack(2078) + 1000000*cl_slack(2079) + 1000000*cl_slack(2080) + 1000000*cl_slack(2081)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 90
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + 1000000*cl_slack(2082) + 1000000*cl_slack(2083) + 1000000*cl_slack(2084) + 1000000*cl_slack(2085) + 1000000*cl_slack(2086) + 1000000*cl_slack(2088) + 1000000*cl_slack(2089) + 1000000*cl_slack(2090) + 1000000*cl_slack(2110) + 1000000*cl_slack(2111)
     
      + 1000000*cl_slack(2112) + 1000000*cl_slack(2114) + 1000000*cl_slack(2115) + 1000000*cl_slack(2116) + 1000000*cl_slack(2117) + 1000000*cl_slack(2118) + 1000000*cl_slack(2119) + 1000000*cl_slack(2120) + 1000000*cl_slack(2121) + 1000000*cl_slack(2122)
     
      + 1000000*cl_slack(2123) + 1000000*cl_slack(2124) + 1000000*cl_slack(2127) + 1000000*cl_slack(2150) + 1000000*cl_slack(2151) + 1000000*cl_slack(2152) + 1000000*cl_slack(2153) + 1000000*cl_slack(2154) + 1000000*cl_slack(2155) + 1000000*cl_slack(2156)
     
      + 1000000*cl_slack(2157) + 1000000*cl_slack(2158) + 1000000*cl_slack(2159) + 1000000*cl_slack(2160) + 1000000*cl_slack(2161) + 1000000*cl_slack(2162) + 1000000*cl_slack(2163) + 1000000*cl_slack(2164) + 1000000*cl_slack(2165) + 1000000*cl_slack(2166)
     
      + 1000000*cl_slack(2167) + 1000000*cl_slack(2189) + 1000000*cl_slack(2193) + 1000000*cl_slack(2194) + 1000000*cl_slack(2195) + 1000000*cl_slack(2196) + 1000000*cl_slack(2197) + 1000000*cl_slack(2198) + 1000000*cl_slack(2200) + 1000000*cl_slack(2201)
     
      + 1000000*cl_slack(2202) + 1000000*cl_slack(2203) + 1000000*cl_slack(2204) + 1000000*cl_slack(2206) + 1000000*cl_slack(2232) + 1000000*cl_slack(2233) + 1000000*cl_slack(2234) + 1000000*cl_slack(2235) + 1000000*cl_slack(2236) + 1000000*cl_slack(2237)
     
      + 1000000*cl_slack(2238) + 1000000*cl_slack(2239) + 1000000*cl_slack(2240) + 1000000*cl_slack(2241) + 1000000*cl_slack(2242) + 1000000*cl_slack(2243) + 1000000*cl_slack(2244) + 1000000*cl_slack(2271) + 1000000*cl_slack(2274) + 1000000*cl_slack(2275)
     
      + 1000000*cl_slack(2276) + 1000000*cl_slack(2277) + 1000000*cl_slack(2278) + 1000000*cl_slack(2281) + 1000000*cl_slack(2282) + 1000000*cl_slack(2283) + 1000000*cl_slack(2284) + 1000000*cl_slack(2313) + 1000000*cl_slack(2314) + 1000000*cl_slack(2315)
     
      + 1000000*cl_slack(2316) + 1000000*cl_slack(2317) + 1000000*cl_slack(2318) + 1000000*cl_slack(2319) + 1000000*cl_slack(2320) + 1000000*cl_slack(2321) + 1000000*cl_slack(2322) + 1000000*cl_slack(2323) + 1000000*cl_slack(2324) + 1000000*cl_slack(2325)
     
      + 1000000*cl_slack(2352) + 1000000*cl_slack(2353) + 1000000*cl_slack(2354) + 1000000*cl_slack(2355) + 1000000*cl_slack(2356) + 1000000*cl_slack(2357) + 1000000*cl_slack(2358) + 1000000*cl_slack(2359) + 1000000*cl_slack(2361) + 1000000*cl_slack(2362)
     
      + 1000000*cl_slack(2363) + 1000000*cl_slack(2364) + 1000000*cl_slack(2365) + 1000000*cl_slack(2393) + 1000000*cl_slack(2395) + 1000000*cl_slack(2396) + 1000000*cl_slack(2401) + 1000000*cl_slack(2402) + 1000000*cl_slack(2403) + 1000000*cl_slack(2404)
     
      + 1000000*cl_slack(2441) + 1000000*cl_slack(2442) + 1000000*cl_slack(2443) + 1000000*cl_slack(2480) + 1000000*cl_slack(2481) + 1000000*cl_slack(2482) + 1000000*cl_slack(2483) + 1000000*cl_slack(2519) + 1000000*cl_slack(2520) + 1000000*cl_slack(2521)
     
      + 1000000*cl_slack(2522) + 1000000*cl_slack(2523) + 1000000*cl_slack(2559) + 1000000*cl_slack(2560) + 1000000*cl_slack(2561) + 1000000*cl_slack(2562) + 1000000*cl_slack(2563) + 1000000*cl_slack(2598) + 1000000*cl_slack(2599) + 1000000*cl_slack(2600)
     
      + 1000000*cl_slack(2601) + 1000000*cl_slack(2637) + 1000000*cl_slack(2638) + 1000000*cl_slack(2639) + 1000000*cl_slack(2640) + 1000000*cl_slack(2676) + 1000000*cl_slack(2677) + 1000000*cl_slack(2678) + 1000000*cl_slack(2679) + 1000000*cl_slack(2715)
     
      + 1000000*cl_slack(2716) + 1000000*cl_slack(2717) + 1000000*cl_slack(2754) + 1000000*cl_slack(2755) + 1000000*cl_slack(2756) + 1000000*ir_slack(1454) + 1000000*ir_slack(1460) + 1000000*ir_slack(1461) + 1000000*ir_slack(1490) + 1000000*ir_slack(1492)
     
      + 1000000*ir_slack(1493) + 1000000*ir_slack(1500) + 1000000*ir_slack(1527) + 1000000*ir_slack(1530) + 1000000*ir_slack(1531) + 1000000*ir_slack(1532) + 1000000*ir_slack(1539) + 1000000*ir_slack(1565) + 1000000*ir_slack(1569) + 1000000*ir_slack(1570)
     
      + 1000000*ir_slack(1571) + 1000000*ir_slack(1572) + 1000000*ir_slack(1578) + 1000000*ir_slack(1579) + 1000000*ir_slack(1603) + 1000000*ir_slack(1604) + 1000000*ir_slack(1608) + 1000000*ir_slack(1609) + 1000000*ir_slack(1610) + 1000000*ir_slack(1611)
     
      + 1000000*ir_slack(1612) + 1000000*ir_slack(1618) + 1000000*ir_slack(1647) + 1000000*ir_slack(1648) + 1000000*ir_slack(1649) + 1000000*ir_slack(1650) + 1000000*ir_slack(1651) + 1000000*ir_slack(1652) + 1000000*ir_slack(1653) + 1000000*ir_slack(1654)
     
      + 1000000*ir_slack(1657) + 1000000*ir_slack(1658) + 1000000*ir_slack(1686) + 1000000*ir_slack(1687) + 1000000*ir_slack(1688) + 1000000*ir_slack(1689) + 1000000*ir_slack(1690) + 1000000*ir_slack(1691) + 1000000*ir_slack(1692) + 1000000*ir_slack(1693)
     
      + 1000000*ir_slack(1697) + 1000000*ir_slack(1725) + 1000000*ir_slack(1726) + 1000000*ir_slack(1727) + 1000000*ir_slack(1728) + 1000000*ir_slack(1729) + 1000000*ir_slack(1730) + 1000000*ir_slack(1731) + 1000000*ir_slack(1732) + 1000000*ir_slack(1735)
     
      + 1000000*ir_slack(1736) + 1000000*ir_slack(1764) + 1000000*ir_slack(1765) + 1000000*ir_slack(1766) + 1000000*ir_slack(1767) + 1000000*ir_slack(1768) + 1000000*ir_slack(1769) + 1000000*ir_slack(1770) + 1000000*ir_slack(1771) + 1000000*ir_slack(1774)
     
      + 1000000*ir_slack(1775) + 1000000*ir_slack(1805) + 1000000*ir_slack(1806) + 1000000*ir_slack(1807) + 1000000*ir_slack(1808) + 1000000*ir_slack(1809) + 1000000*ir_slack(1810) + 1000000*ir_slack(1811) + 1000000*ir_slack(1839) + 1000000*ir_slack(1842)
     
      + 1000000*ir_slack(1845) + 1000000*ir_slack(1846) + 1000000*ir_slack(1847) + 1000000*ir_slack(1848) + 1000000*ir_slack(1849) + 1000000*ir_slack(1850) + 1000000*ir_slack(1851) + 1000000*ir_slack(1853) + 1000000*ir_slack(1876) + 1000000*ir_slack(1879)
     
      + 1000000*ir_slack(1880) + 1000000*ir_slack(1881) + 1000000*ir_slack(1882) + 1000000*ir_slack(1883) + 1000000*ir_slack(1884) + 1000000*ir_slack(1885) + 1000000*ir_slack(1886) + 1000000*ir_slack(1887) + 1000000*ir_slack(1888) + 1000000*ir_slack(1889)
     
      + 1000000*ir_slack(1890) + 1000000*ir_slack(1891) + 1000000*ir_slack(1892) + 1000000*ir_slack(1915) + 1000000*ir_slack(1918) + 1000000*ir_slack(1919) + 1000000*ir_slack(1920) + 1000000*ir_slack(1921) + 1000000*ir_slack(1922) + 1000000*ir_slack(1923)
     
      + 1000000*ir_slack(1924) + 1000000*ir_slack(1925) + 1000000*ir_slack(1926) + 1000000*ir_slack(1927) + 1000000*ir_slack(1928) + 1000000*ir_slack(1929) + 1000000*ir_slack(1930) + 1000000*ir_slack(1931) + 1000000*ir_slack(1953) + 1000000*ir_slack(1954)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 91
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + 1000000*ir_slack(1955) + 1000000*ir_slack(1956) + 1000000*ir_slack(1957) + 1000000*ir_slack(1958) + 1000000*ir_slack(1959) + 1000000*ir_slack(1960) + 1000000*ir_slack(1961) + 1000000*ir_slack(1962) + 1000000*ir_slack(1963) + 1000000*ir_slack(1964)
     
      + 1000000*ir_slack(1965) + 1000000*ir_slack(1966) + 1000000*ir_slack(1967) + 1000000*ir_slack(1968) + 1000000*ir_slack(1969) + 1000000*ir_slack(1970) + 1000000*ir_slack(1971) + 1000000*ir_slack(1990) + 1000000*ir_slack(1992) + 1000000*ir_slack(1993)
     
      + 1000000*ir_slack(1994) + 1000000*ir_slack(1996) + 1000000*ir_slack(1997) + 1000000*ir_slack(1998) + 1000000*ir_slack(1999) + 1000000*ir_slack(2000) + 1000000*ir_slack(2001) + 1000000*ir_slack(2002) + 1000000*ir_slack(2003) + 1000000*ir_slack(2004)
     
      + 1000000*ir_slack(2005) + 1000000*ir_slack(2006) + 1000000*ir_slack(2007) + 1000000*ir_slack(2008) + 1000000*ir_slack(2009) + 1000000*ir_slack(2010) + 1000000*ir_slack(2011) + 1000000*ir_slack(2032) + 1000000*ir_slack(2033) + 1000000*ir_slack(2034)
     
      + 1000000*ir_slack(2035) + 1000000*ir_slack(2036) + 1000000*ir_slack(2037) + 1000000*ir_slack(2038) + 1000000*ir_slack(2039) + 1000000*ir_slack(2040) + 1000000*ir_slack(2041) + 1000000*ir_slack(2042) + 1000000*ir_slack(2043) + 1000000*ir_slack(2044)
     
      + 1000000*ir_slack(2045) + 1000000*ir_slack(2046) + 1000000*ir_slack(2047) + 1000000*ir_slack(2049) + 1000000*ir_slack(2050) + 1000000*ir_slack(2051) + 1000000*ir_slack(2072) + 1000000*ir_slack(2073) + 1000000*ir_slack(2074) + 1000000*ir_slack(2075)
     
      + 1000000*ir_slack(2076) + 1000000*ir_slack(2077) + 1000000*ir_slack(2078) + 1000000*ir_slack(2079) + 1000000*ir_slack(2080) + 1000000*ir_slack(2081) + 1000000*ir_slack(2082) + 1000000*ir_slack(2083) + 1000000*ir_slack(2084) + 1000000*ir_slack(2085)
     
      + 1000000*ir_slack(2086) + 1000000*ir_slack(2088) + 1000000*ir_slack(2089) + 1000000*ir_slack(2090) + 1000000*ir_slack(2110) + 1000000*ir_slack(2111) + 1000000*ir_slack(2112) + 1000000*ir_slack(2114) + 1000000*ir_slack(2115) + 1000000*ir_slack(2116)
     
      + 1000000*ir_slack(2117) + 1000000*ir_slack(2118) + 1000000*ir_slack(2119) + 1000000*ir_slack(2120) + 1000000*ir_slack(2121) + 1000000*ir_slack(2122) + 1000000*ir_slack(2123) + 1000000*ir_slack(2124) + 1000000*ir_slack(2127) + 1000000*ir_slack(2150)
     
      + 1000000*ir_slack(2151) + 1000000*ir_slack(2152) + 1000000*ir_slack(2153) + 1000000*ir_slack(2154) + 1000000*ir_slack(2155) + 1000000*ir_slack(2156) + 1000000*ir_slack(2157) + 1000000*ir_slack(2158) + 1000000*ir_slack(2159) + 1000000*ir_slack(2160)
     
      + 1000000*ir_slack(2161) + 1000000*ir_slack(2162) + 1000000*ir_slack(2163) + 1000000*ir_slack(2164) + 1000000*ir_slack(2165) + 1000000*ir_slack(2166) + 1000000*ir_slack(2167) + 1000000*ir_slack(2189) + 1000000*ir_slack(2193) + 1000000*ir_slack(2194)
     
      + 1000000*ir_slack(2195) + 1000000*ir_slack(2196) + 1000000*ir_slack(2197) + 1000000*ir_slack(2198) + 1000000*ir_slack(2200) + 1000000*ir_slack(2201) + 1000000*ir_slack(2202) + 1000000*ir_slack(2203) + 1000000*ir_slack(2204) + 1000000*ir_slack(2206)
     
      + 1000000*ir_slack(2232) + 1000000*ir_slack(2233) + 1000000*ir_slack(2234) + 1000000*ir_slack(2235) + 1000000*ir_slack(2236) + 1000000*ir_slack(2237) + 1000000*ir_slack(2238) + 1000000*ir_slack(2239) + 1000000*ir_slack(2240) + 1000000*ir_slack(2241)
     
      + 1000000*ir_slack(2242) + 1000000*ir_slack(2243) + 1000000*ir_slack(2244) + 1000000*ir_slack(2271) + 1000000*ir_slack(2274) + 1000000*ir_slack(2275) + 1000000*ir_slack(2276) + 1000000*ir_slack(2277) + 1000000*ir_slack(2278) + 1000000*ir_slack(2281)
     
      + 1000000*ir_slack(2282) + 1000000*ir_slack(2283) + 1000000*ir_slack(2284) + 1000000*ir_slack(2313) + 1000000*ir_slack(2314) + 1000000*ir_slack(2315) + 1000000*ir_slack(2316) + 1000000*ir_slack(2317) + 1000000*ir_slack(2318) + 1000000*ir_slack(2319)
     
      + 1000000*ir_slack(2320) + 1000000*ir_slack(2321) + 1000000*ir_slack(2322) + 1000000*ir_slack(2323) + 1000000*ir_slack(2324) + 1000000*ir_slack(2325) + 1000000*ir_slack(2352) + 1000000*ir_slack(2353) + 1000000*ir_slack(2354) + 1000000*ir_slack(2355)
     
      + 1000000*ir_slack(2356) + 1000000*ir_slack(2357) + 1000000*ir_slack(2358) + 1000000*ir_slack(2359) + 1000000*ir_slack(2361) + 1000000*ir_slack(2362) + 1000000*ir_slack(2363) + 1000000*ir_slack(2364) + 1000000*ir_slack(2365) + 1000000*ir_slack(2393)
     
      + 1000000*ir_slack(2395) + 1000000*ir_slack(2396) + 1000000*ir_slack(2401) + 1000000*ir_slack(2402) + 1000000*ir_slack(2403) + 1000000*ir_slack(2404) + 1000000*ir_slack(2441) + 1000000*ir_slack(2442) + 1000000*ir_slack(2443) + 1000000*ir_slack(2480)
     
      + 1000000*ir_slack(2481) + 1000000*ir_slack(2482) + 1000000*ir_slack(2483) + 1000000*ir_slack(2519) + 1000000*ir_slack(2520) + 1000000*ir_slack(2521) + 1000000*ir_slack(2522) + 1000000*ir_slack(2523) + 1000000*ir_slack(2559) + 1000000*ir_slack(2560)
     
      + 1000000*ir_slack(2561) + 1000000*ir_slack(2562) + 1000000*ir_slack(2563) + 1000000*ir_slack(2598) + 1000000*ir_slack(2599) + 1000000*ir_slack(2600) + 1000000*ir_slack(2601) + 1000000*ir_slack(2637) + 1000000*ir_slack(2638) + 1000000*ir_slack(2639)
     
      + 1000000*ir_slack(2640) + 1000000*ir_slack(2676) + 1000000*ir_slack(2677) + 1000000*ir_slack(2678) + 1000000*ir_slack(2679) + 1000000*ir_slack(2715) + 1000000*ir_slack(2716) + 1000000*ir_slack(2717) + 1000000*ir_slack(2754) + 1000000*ir_slack(2755)
     
      + 1000000*ir_slack(2756) + s_slack(1454,rice_I,plus) + s_slack(1454,rice_I,minus) + s_slack(1454,sugc_I,plus) + s_slack(1454,sugc_I,minus) + s_slack(1454,whea_I,plus) + s_slack(1454,whea_I,minus) + s_slack(1454,bean_H,plus)
     
      + s_slack(1454,bean_H,minus) + s_slack(1454,bean_L,plus) + s_slack(1454,bean_L,minus) + s_slack(1454,bean_S,plus) + s_slack(1454,bean_S,minus) + s_slack(1454,cass_L,plus) + s_slack(1454,cass_L,minus) + s_slack(1454,cass_S,plus)
     
      + s_slack(1454,cass_S,minus) + s_slack(1454,chic_H,plus) + s_slack(1454,chic_H,minus) + s_slack(1454,chic_L,plus) + s_slack(1454,chic_L,minus) + s_slack(1454,chic_S,plus) + s_slack(1454,chic_S,minus) + s_slack(1454,coff_H,plus)
     
      + s_slack(1454,coff_H,minus) + s_slack(1454,coff_L,plus) + s_slack(1454,coff_L,minus) + s_slack(1454,cott_L,plus) + s_slack(1454,cott_L,minus) + s_slack(1454,cowp_H,plus) + s_slack(1454,cowp_H,minus) + s_slack(1454,cowp_L,plus)
     
      + s_slack(1454,cowp_L,minus) + s_slack(1454,cowp_S,plus) + s_slack(1454,cowp_S,minus) + s_slack(1454,grou_H,plus) + s_slack(1454,grou_H,minus) + s_slack(1454,grou_L,plus) + s_slack(1454,grou_L,minus) + s_slack(1454,grou_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 92
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1454,grou_S,minus) + s_slack(1454,lent_H,plus) + s_slack(1454,lent_H,minus) + s_slack(1454,lent_L,plus) + s_slack(1454,lent_L,minus) + s_slack(1454,lent_S,plus) + s_slack(1454,lent_S,minus) + s_slack(1454,maiz_H,plus)
     
      + s_slack(1454,maiz_H,minus) + s_slack(1454,maiz_L,plus) + s_slack(1454,maiz_L,minus) + s_slack(1454,maiz_S,plus) + s_slack(1454,maiz_S,minus) + s_slack(1454,mill_H,plus) + s_slack(1454,mill_H,minus) + s_slack(1454,mill_L,plus)
     
      + s_slack(1454,mill_L,minus) + s_slack(1454,mill_S,plus) + s_slack(1454,mill_S,minus) + s_slack(1454,ofib_L,plus) + s_slack(1454,ofib_L,minus) + s_slack(1454,ooil_L,plus) + s_slack(1454,ooil_L,minus) + s_slack(1454,opul_H,plus)
     
      + s_slack(1454,opul_H,minus) + s_slack(1454,opul_L,plus) + s_slack(1454,opul_L,minus) + s_slack(1454,opul_S,plus) + s_slack(1454,opul_S,minus) + s_slack(1454,pige_H,plus) + s_slack(1454,pige_H,minus) + s_slack(1454,pige_L,plus)
     
      + s_slack(1454,pige_L,minus) + s_slack(1454,pige_S,plus) + s_slack(1454,pige_S,minus) + s_slack(1454,pota_H,plus) + s_slack(1454,pota_H,minus) + s_slack(1454,pota_L,plus) + s_slack(1454,pota_L,minus) + s_slack(1454,pota_S,plus)
     
      + s_slack(1454,pota_S,minus) + s_slack(1454,rest_H,plus) + s_slack(1454,rest_H,minus) + s_slack(1454,rest_L,plus) + s_slack(1454,rest_L,minus) + s_slack(1454,rest_S,plus) + s_slack(1454,rest_S,minus) + s_slack(1454,rice_H,plus)
     
      + s_slack(1454,rice_H,minus) + s_slack(1454,rice_L,plus) + s_slack(1454,rice_L,minus) + s_slack(1454,rice_S,plus) + s_slack(1454,rice_S,minus) + s_slack(1454,sorg_L,plus) + s_slack(1454,sorg_L,minus) + s_slack(1454,sorg_S,plus)
     
      + s_slack(1454,sorg_S,minus) + s_slack(1454,soyb_L,plus) + s_slack(1454,soyb_L,minus) + s_slack(1454,soyb_S,plus) + s_slack(1454,soyb_S,minus) + s_slack(1454,sunf_L,plus) + s_slack(1454,sunf_L,minus) + s_slack(1454,temf_H,plus)
     
      + s_slack(1454,temf_H,minus) + s_slack(1454,temf_L,plus) + s_slack(1454,temf_L,minus) + s_slack(1454,temf_S,plus) + s_slack(1454,temf_S,minus) + s_slack(1454,toba_H,plus) + s_slack(1454,toba_H,minus) + s_slack(1454,toba_L,plus)
     
      + s_slack(1454,toba_L,minus) + s_slack(1454,trof_L,plus) + s_slack(1454,trof_L,minus) + s_slack(1454,trof_S,plus) + s_slack(1454,trof_S,minus) + s_slack(1454,vege_H,plus) + s_slack(1454,vege_H,minus) + s_slack(1454,vege_L,plus)
     
      + s_slack(1454,vege_L,minus) + s_slack(1454,vege_S,plus) + s_slack(1454,vege_S,minus) + s_slack(1460,rice_I,plus) + s_slack(1460,rice_I,minus) + s_slack(1460,sugc_I,plus) + s_slack(1460,sugc_I,minus) + s_slack(1460,whea_I,plus)
     
      + s_slack(1460,whea_I,minus) + s_slack(1460,bean_H,plus) + s_slack(1460,bean_H,minus) + s_slack(1460,bean_L,plus) + s_slack(1460,bean_L,minus) + s_slack(1460,bean_S,plus) + s_slack(1460,bean_S,minus) + s_slack(1460,cass_L,plus)
     
      + s_slack(1460,cass_L,minus) + s_slack(1460,cass_S,plus) + s_slack(1460,cass_S,minus) + s_slack(1460,chic_H,plus) + s_slack(1460,chic_H,minus) + s_slack(1460,chic_L,plus) + s_slack(1460,chic_L,minus) + s_slack(1460,chic_S,plus)
     
      + s_slack(1460,chic_S,minus) + s_slack(1460,coff_H,plus) + s_slack(1460,coff_H,minus) + s_slack(1460,coff_L,plus) + s_slack(1460,coff_L,minus) + s_slack(1460,cott_L,plus) + s_slack(1460,cott_L,minus) + s_slack(1460,cowp_H,plus)
     
      + s_slack(1460,cowp_H,minus) + s_slack(1460,cowp_L,plus) + s_slack(1460,cowp_L,minus) + s_slack(1460,cowp_S,plus) + s_slack(1460,cowp_S,minus) + s_slack(1460,grou_H,plus) + s_slack(1460,grou_H,minus) + s_slack(1460,grou_L,plus)
     
      + s_slack(1460,grou_L,minus) + s_slack(1460,grou_S,plus) + s_slack(1460,grou_S,minus) + s_slack(1460,lent_H,plus) + s_slack(1460,lent_H,minus) + s_slack(1460,lent_L,plus) + s_slack(1460,lent_L,minus) + s_slack(1460,lent_S,plus)
     
      + s_slack(1460,lent_S,minus) + s_slack(1460,maiz_H,plus) + s_slack(1460,maiz_H,minus) + s_slack(1460,maiz_L,plus) + s_slack(1460,maiz_L,minus) + s_slack(1460,maiz_S,plus) + s_slack(1460,maiz_S,minus) + s_slack(1460,mill_H,plus)
     
      + s_slack(1460,mill_H,minus) + s_slack(1460,mill_L,plus) + s_slack(1460,mill_L,minus) + s_slack(1460,mill_S,plus) + s_slack(1460,mill_S,minus) + s_slack(1460,ofib_L,plus) + s_slack(1460,ofib_L,minus) + s_slack(1460,ooil_L,plus)
     
      + s_slack(1460,ooil_L,minus) + s_slack(1460,opul_H,plus) + s_slack(1460,opul_H,minus) + s_slack(1460,opul_L,plus) + s_slack(1460,opul_L,minus) + s_slack(1460,opul_S,plus) + s_slack(1460,opul_S,minus) + s_slack(1460,pige_H,plus)
     
      + s_slack(1460,pige_H,minus) + s_slack(1460,pige_L,plus) + s_slack(1460,pige_L,minus) + s_slack(1460,pige_S,plus) + s_slack(1460,pige_S,minus) + s_slack(1460,pota_H,plus) + s_slack(1460,pota_H,minus) + s_slack(1460,pota_L,plus)
     
      + s_slack(1460,pota_L,minus) + s_slack(1460,pota_S,plus) + s_slack(1460,pota_S,minus) + s_slack(1460,rest_H,plus) + s_slack(1460,rest_H,minus) + s_slack(1460,rest_L,plus) + s_slack(1460,rest_L,minus) + s_slack(1460,rest_S,plus)
     
      + s_slack(1460,rest_S,minus) + s_slack(1460,rice_H,plus) + s_slack(1460,rice_H,minus) + s_slack(1460,rice_L,plus) + s_slack(1460,rice_L,minus) + s_slack(1460,rice_S,plus) + s_slack(1460,rice_S,minus) + s_slack(1460,sorg_L,plus)
     
      + s_slack(1460,sorg_L,minus) + s_slack(1460,sorg_S,plus) + s_slack(1460,sorg_S,minus) + s_slack(1460,soyb_L,plus) + s_slack(1460,soyb_L,minus) + s_slack(1460,soyb_S,plus) + s_slack(1460,soyb_S,minus) + s_slack(1460,sunf_L,plus)
     
      + s_slack(1460,sunf_L,minus) + s_slack(1460,temf_H,plus) + s_slack(1460,temf_H,minus) + s_slack(1460,temf_L,plus) + s_slack(1460,temf_L,minus) + s_slack(1460,temf_S,plus) + s_slack(1460,temf_S,minus) + s_slack(1460,toba_H,plus)
     
      + s_slack(1460,toba_H,minus) + s_slack(1460,toba_L,plus) + s_slack(1460,toba_L,minus) + s_slack(1460,trof_L,plus) + s_slack(1460,trof_L,minus) + s_slack(1460,trof_S,plus) + s_slack(1460,trof_S,minus) + s_slack(1460,vege_H,plus)
     
      + s_slack(1460,vege_H,minus) + s_slack(1460,vege_L,plus) + s_slack(1460,vege_L,minus) + s_slack(1460,vege_S,plus) + s_slack(1460,vege_S,minus) + s_slack(1461,rice_I,plus) + s_slack(1461,rice_I,minus) + s_slack(1461,sugc_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 93
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1461,sugc_I,minus) + s_slack(1461,whea_I,plus) + s_slack(1461,whea_I,minus) + s_slack(1461,bean_H,plus) + s_slack(1461,bean_H,minus) + s_slack(1461,bean_L,plus) + s_slack(1461,bean_L,minus) + s_slack(1461,bean_S,plus)
     
      + s_slack(1461,bean_S,minus) + s_slack(1461,cass_L,plus) + s_slack(1461,cass_L,minus) + s_slack(1461,cass_S,plus) + s_slack(1461,cass_S,minus) + s_slack(1461,chic_H,plus) + s_slack(1461,chic_H,minus) + s_slack(1461,chic_L,plus)
     
      + s_slack(1461,chic_L,minus) + s_slack(1461,chic_S,plus) + s_slack(1461,chic_S,minus) + s_slack(1461,coff_H,plus) + s_slack(1461,coff_H,minus) + s_slack(1461,coff_L,plus) + s_slack(1461,coff_L,minus) + s_slack(1461,cott_L,plus)
     
      + s_slack(1461,cott_L,minus) + s_slack(1461,cowp_H,plus) + s_slack(1461,cowp_H,minus) + s_slack(1461,cowp_L,plus) + s_slack(1461,cowp_L,minus) + s_slack(1461,cowp_S,plus) + s_slack(1461,cowp_S,minus) + s_slack(1461,grou_H,plus)
     
      + s_slack(1461,grou_H,minus) + s_slack(1461,grou_L,plus) + s_slack(1461,grou_L,minus) + s_slack(1461,grou_S,plus) + s_slack(1461,grou_S,minus) + s_slack(1461,lent_H,plus) + s_slack(1461,lent_H,minus) + s_slack(1461,lent_L,plus)
     
      + s_slack(1461,lent_L,minus) + s_slack(1461,lent_S,plus) + s_slack(1461,lent_S,minus) + s_slack(1461,maiz_H,plus) + s_slack(1461,maiz_H,minus) + s_slack(1461,maiz_L,plus) + s_slack(1461,maiz_L,minus) + s_slack(1461,maiz_S,plus)
     
      + s_slack(1461,maiz_S,minus) + s_slack(1461,mill_H,plus) + s_slack(1461,mill_H,minus) + s_slack(1461,mill_L,plus) + s_slack(1461,mill_L,minus) + s_slack(1461,mill_S,plus) + s_slack(1461,mill_S,minus) + s_slack(1461,ofib_L,plus)
     
      + s_slack(1461,ofib_L,minus) + s_slack(1461,ooil_L,plus) + s_slack(1461,ooil_L,minus) + s_slack(1461,opul_H,plus) + s_slack(1461,opul_H,minus) + s_slack(1461,opul_L,plus) + s_slack(1461,opul_L,minus) + s_slack(1461,opul_S,plus)
     
      + s_slack(1461,opul_S,minus) + s_slack(1461,pige_H,plus) + s_slack(1461,pige_H,minus) + s_slack(1461,pige_L,plus) + s_slack(1461,pige_L,minus) + s_slack(1461,pige_S,plus) + s_slack(1461,pige_S,minus) + s_slack(1461,pota_H,plus)
     
      + s_slack(1461,pota_H,minus) + s_slack(1461,pota_L,plus) + s_slack(1461,pota_L,minus) + s_slack(1461,pota_S,plus) + s_slack(1461,pota_S,minus) + s_slack(1461,rest_H,plus) + s_slack(1461,rest_H,minus) + s_slack(1461,rest_L,plus)
     
      + s_slack(1461,rest_L,minus) + s_slack(1461,rest_S,plus) + s_slack(1461,rest_S,minus) + s_slack(1461,rice_H,plus) + s_slack(1461,rice_H,minus) + s_slack(1461,rice_L,plus) + s_slack(1461,rice_L,minus) + s_slack(1461,rice_S,plus)
     
      + s_slack(1461,rice_S,minus) + s_slack(1461,sorg_L,plus) + s_slack(1461,sorg_L,minus) + s_slack(1461,sorg_S,plus) + s_slack(1461,sorg_S,minus) + s_slack(1461,soyb_L,plus) + s_slack(1461,soyb_L,minus) + s_slack(1461,soyb_S,plus)
     
      + s_slack(1461,soyb_S,minus) + s_slack(1461,sunf_L,plus) + s_slack(1461,sunf_L,minus) + s_slack(1461,temf_H,plus) + s_slack(1461,temf_H,minus) + s_slack(1461,temf_L,plus) + s_slack(1461,temf_L,minus) + s_slack(1461,temf_S,plus)
     
      + s_slack(1461,temf_S,minus) + s_slack(1461,toba_H,plus) + s_slack(1461,toba_H,minus) + s_slack(1461,toba_L,plus) + s_slack(1461,toba_L,minus) + s_slack(1461,trof_L,plus) + s_slack(1461,trof_L,minus) + s_slack(1461,trof_S,plus)
     
      + s_slack(1461,trof_S,minus) + s_slack(1461,vege_H,plus) + s_slack(1461,vege_H,minus) + s_slack(1461,vege_L,plus) + s_slack(1461,vege_L,minus) + s_slack(1461,vege_S,plus) + s_slack(1461,vege_S,minus) + s_slack(1490,rice_I,plus)
     
      + s_slack(1490,rice_I,minus) + s_slack(1490,sugc_I,plus) + s_slack(1490,sugc_I,minus) + s_slack(1490,whea_I,plus) + s_slack(1490,whea_I,minus) + s_slack(1490,bean_H,plus) + s_slack(1490,bean_H,minus) + s_slack(1490,bean_L,plus)
     
      + s_slack(1490,bean_L,minus) + s_slack(1490,bean_S,plus) + s_slack(1490,bean_S,minus) + s_slack(1490,cass_L,plus) + s_slack(1490,cass_L,minus) + s_slack(1490,cass_S,plus) + s_slack(1490,cass_S,minus) + s_slack(1490,chic_H,plus)
     
      + s_slack(1490,chic_H,minus) + s_slack(1490,chic_L,plus) + s_slack(1490,chic_L,minus) + s_slack(1490,chic_S,plus) + s_slack(1490,chic_S,minus) + s_slack(1490,coff_H,plus) + s_slack(1490,coff_H,minus) + s_slack(1490,coff_L,plus)
     
      + s_slack(1490,coff_L,minus) + s_slack(1490,cott_L,plus) + s_slack(1490,cott_L,minus) + s_slack(1490,cowp_H,plus) + s_slack(1490,cowp_H,minus) + s_slack(1490,cowp_L,plus) + s_slack(1490,cowp_L,minus) + s_slack(1490,cowp_S,plus)
     
      + s_slack(1490,cowp_S,minus) + s_slack(1490,grou_H,plus) + s_slack(1490,grou_H,minus) + s_slack(1490,grou_L,plus) + s_slack(1490,grou_L,minus) + s_slack(1490,grou_S,plus) + s_slack(1490,grou_S,minus) + s_slack(1490,lent_H,plus)
     
      + s_slack(1490,lent_H,minus) + s_slack(1490,lent_L,plus) + s_slack(1490,lent_L,minus) + s_slack(1490,lent_S,plus) + s_slack(1490,lent_S,minus) + s_slack(1490,maiz_H,plus) + s_slack(1490,maiz_H,minus) + s_slack(1490,maiz_L,plus)
     
      + s_slack(1490,maiz_L,minus) + s_slack(1490,maiz_S,plus) + s_slack(1490,maiz_S,minus) + s_slack(1490,mill_H,plus) + s_slack(1490,mill_H,minus) + s_slack(1490,mill_L,plus) + s_slack(1490,mill_L,minus) + s_slack(1490,mill_S,plus)
     
      + s_slack(1490,mill_S,minus) + s_slack(1490,ofib_L,plus) + s_slack(1490,ofib_L,minus) + s_slack(1490,ooil_L,plus) + s_slack(1490,ooil_L,minus) + s_slack(1490,opul_H,plus) + s_slack(1490,opul_H,minus) + s_slack(1490,opul_L,plus)
     
      + s_slack(1490,opul_L,minus) + s_slack(1490,opul_S,plus) + s_slack(1490,opul_S,minus) + s_slack(1490,pige_H,plus) + s_slack(1490,pige_H,minus) + s_slack(1490,pige_L,plus) + s_slack(1490,pige_L,minus) + s_slack(1490,pige_S,plus)
     
      + s_slack(1490,pige_S,minus) + s_slack(1490,pota_H,plus) + s_slack(1490,pota_H,minus) + s_slack(1490,pota_L,plus) + s_slack(1490,pota_L,minus) + s_slack(1490,pota_S,plus) + s_slack(1490,pota_S,minus) + s_slack(1490,rest_H,plus)
     
      + s_slack(1490,rest_H,minus) + s_slack(1490,rest_L,plus) + s_slack(1490,rest_L,minus) + s_slack(1490,rest_S,plus) + s_slack(1490,rest_S,minus) + s_slack(1490,rice_H,plus) + s_slack(1490,rice_H,minus) + s_slack(1490,rice_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 94
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1490,rice_L,minus) + s_slack(1490,rice_S,plus) + s_slack(1490,rice_S,minus) + s_slack(1490,sorg_L,plus) + s_slack(1490,sorg_L,minus) + s_slack(1490,sorg_S,plus) + s_slack(1490,sorg_S,minus) + s_slack(1490,soyb_L,plus)
     
      + s_slack(1490,soyb_L,minus) + s_slack(1490,soyb_S,plus) + s_slack(1490,soyb_S,minus) + s_slack(1490,sunf_L,plus) + s_slack(1490,sunf_L,minus) + s_slack(1490,temf_H,plus) + s_slack(1490,temf_H,minus) + s_slack(1490,temf_L,plus)
     
      + s_slack(1490,temf_L,minus) + s_slack(1490,temf_S,plus) + s_slack(1490,temf_S,minus) + s_slack(1490,toba_H,plus) + s_slack(1490,toba_H,minus) + s_slack(1490,toba_L,plus) + s_slack(1490,toba_L,minus) + s_slack(1490,trof_L,plus)
     
      + s_slack(1490,trof_L,minus) + s_slack(1490,trof_S,plus) + s_slack(1490,trof_S,minus) + s_slack(1490,vege_H,plus) + s_slack(1490,vege_H,minus) + s_slack(1490,vege_L,plus) + s_slack(1490,vege_L,minus) + s_slack(1490,vege_S,plus)
     
      + s_slack(1490,vege_S,minus) + s_slack(1492,rice_I,plus) + s_slack(1492,rice_I,minus) + s_slack(1492,sugc_I,plus) + s_slack(1492,sugc_I,minus) + s_slack(1492,whea_I,plus) + s_slack(1492,whea_I,minus) + s_slack(1492,bean_H,plus)
     
      + s_slack(1492,bean_H,minus) + s_slack(1492,bean_L,plus) + s_slack(1492,bean_L,minus) + s_slack(1492,bean_S,plus) + s_slack(1492,bean_S,minus) + s_slack(1492,cass_L,plus) + s_slack(1492,cass_L,minus) + s_slack(1492,cass_S,plus)
     
      + s_slack(1492,cass_S,minus) + s_slack(1492,chic_H,plus) + s_slack(1492,chic_H,minus) + s_slack(1492,chic_L,plus) + s_slack(1492,chic_L,minus) + s_slack(1492,chic_S,plus) + s_slack(1492,chic_S,minus) + s_slack(1492,coff_H,plus)
     
      + s_slack(1492,coff_H,minus) + s_slack(1492,coff_L,plus) + s_slack(1492,coff_L,minus) + s_slack(1492,cott_L,plus) + s_slack(1492,cott_L,minus) + s_slack(1492,cowp_H,plus) + s_slack(1492,cowp_H,minus) + s_slack(1492,cowp_L,plus)
     
      + s_slack(1492,cowp_L,minus) + s_slack(1492,cowp_S,plus) + s_slack(1492,cowp_S,minus) + s_slack(1492,grou_H,plus) + s_slack(1492,grou_H,minus) + s_slack(1492,grou_L,plus) + s_slack(1492,grou_L,minus) + s_slack(1492,grou_S,plus)
     
      + s_slack(1492,grou_S,minus) + s_slack(1492,lent_H,plus) + s_slack(1492,lent_H,minus) + s_slack(1492,lent_L,plus) + s_slack(1492,lent_L,minus) + s_slack(1492,lent_S,plus) + s_slack(1492,lent_S,minus) + s_slack(1492,maiz_H,plus)
     
      + s_slack(1492,maiz_H,minus) + s_slack(1492,maiz_L,plus) + s_slack(1492,maiz_L,minus) + s_slack(1492,maiz_S,plus) + s_slack(1492,maiz_S,minus) + s_slack(1492,mill_H,plus) + s_slack(1492,mill_H,minus) + s_slack(1492,mill_L,plus)
     
      + s_slack(1492,mill_L,minus) + s_slack(1492,mill_S,plus) + s_slack(1492,mill_S,minus) + s_slack(1492,ofib_L,plus) + s_slack(1492,ofib_L,minus) + s_slack(1492,ooil_L,plus) + s_slack(1492,ooil_L,minus) + s_slack(1492,opul_H,plus)
     
      + s_slack(1492,opul_H,minus) + s_slack(1492,opul_L,plus) + s_slack(1492,opul_L,minus) + s_slack(1492,opul_S,plus) + s_slack(1492,opul_S,minus) + s_slack(1492,pige_H,plus) + s_slack(1492,pige_H,minus) + s_slack(1492,pige_L,plus)
     
      + s_slack(1492,pige_L,minus) + s_slack(1492,pige_S,plus) + s_slack(1492,pige_S,minus) + s_slack(1492,pota_H,plus) + s_slack(1492,pota_H,minus) + s_slack(1492,pota_L,plus) + s_slack(1492,pota_L,minus) + s_slack(1492,pota_S,plus)
     
      + s_slack(1492,pota_S,minus) + s_slack(1492,rest_H,plus) + s_slack(1492,rest_H,minus) + s_slack(1492,rest_L,plus) + s_slack(1492,rest_L,minus) + s_slack(1492,rest_S,plus) + s_slack(1492,rest_S,minus) + s_slack(1492,rice_H,plus)
     
      + s_slack(1492,rice_H,minus) + s_slack(1492,rice_L,plus) + s_slack(1492,rice_L,minus) + s_slack(1492,rice_S,plus) + s_slack(1492,rice_S,minus) + s_slack(1492,sorg_L,plus) + s_slack(1492,sorg_L,minus) + s_slack(1492,sorg_S,plus)
     
      + s_slack(1492,sorg_S,minus) + s_slack(1492,soyb_L,plus) + s_slack(1492,soyb_L,minus) + s_slack(1492,soyb_S,plus) + s_slack(1492,soyb_S,minus) + s_slack(1492,sunf_L,plus) + s_slack(1492,sunf_L,minus) + s_slack(1492,temf_H,plus)
     
      + s_slack(1492,temf_H,minus) + s_slack(1492,temf_L,plus) + s_slack(1492,temf_L,minus) + s_slack(1492,temf_S,plus) + s_slack(1492,temf_S,minus) + s_slack(1492,toba_H,plus) + s_slack(1492,toba_H,minus) + s_slack(1492,toba_L,plus)
     
      + s_slack(1492,toba_L,minus) + s_slack(1492,trof_L,plus) + s_slack(1492,trof_L,minus) + s_slack(1492,trof_S,plus) + s_slack(1492,trof_S,minus) + s_slack(1492,vege_H,plus) + s_slack(1492,vege_H,minus) + s_slack(1492,vege_L,plus)
     
      + s_slack(1492,vege_L,minus) + s_slack(1492,vege_S,plus) + s_slack(1492,vege_S,minus) + s_slack(1493,rice_I,plus) + s_slack(1493,rice_I,minus) + s_slack(1493,sugc_I,plus) + s_slack(1493,sugc_I,minus) + s_slack(1493,whea_I,plus)
     
      + s_slack(1493,whea_I,minus) + s_slack(1493,bean_H,plus) + s_slack(1493,bean_H,minus) + s_slack(1493,bean_L,plus) + s_slack(1493,bean_L,minus) + s_slack(1493,bean_S,plus) + s_slack(1493,bean_S,minus) + s_slack(1493,cass_L,plus)
     
      + s_slack(1493,cass_L,minus) + s_slack(1493,cass_S,plus) + s_slack(1493,cass_S,minus) + s_slack(1493,chic_H,plus) + s_slack(1493,chic_H,minus) + s_slack(1493,chic_L,plus) + s_slack(1493,chic_L,minus) + s_slack(1493,chic_S,plus)
     
      + s_slack(1493,chic_S,minus) + s_slack(1493,coff_H,plus) + s_slack(1493,coff_H,minus) + s_slack(1493,coff_L,plus) + s_slack(1493,coff_L,minus) + s_slack(1493,cott_L,plus) + s_slack(1493,cott_L,minus) + s_slack(1493,cowp_H,plus)
     
      + s_slack(1493,cowp_H,minus) + s_slack(1493,cowp_L,plus) + s_slack(1493,cowp_L,minus) + s_slack(1493,cowp_S,plus) + s_slack(1493,cowp_S,minus) + s_slack(1493,grou_H,plus) + s_slack(1493,grou_H,minus) + s_slack(1493,grou_L,plus)
     
      + s_slack(1493,grou_L,minus) + s_slack(1493,grou_S,plus) + s_slack(1493,grou_S,minus) + s_slack(1493,lent_H,plus) + s_slack(1493,lent_H,minus) + s_slack(1493,lent_L,plus) + s_slack(1493,lent_L,minus) + s_slack(1493,lent_S,plus)
     
      + s_slack(1493,lent_S,minus) + s_slack(1493,maiz_H,plus) + s_slack(1493,maiz_H,minus) + s_slack(1493,maiz_L,plus) + s_slack(1493,maiz_L,minus) + s_slack(1493,maiz_S,plus) + s_slack(1493,maiz_S,minus) + s_slack(1493,mill_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 95
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1493,mill_H,minus) + s_slack(1493,mill_L,plus) + s_slack(1493,mill_L,minus) + s_slack(1493,mill_S,plus) + s_slack(1493,mill_S,minus) + s_slack(1493,ofib_L,plus) + s_slack(1493,ofib_L,minus) + s_slack(1493,ooil_L,plus)
     
      + s_slack(1493,ooil_L,minus) + s_slack(1493,opul_H,plus) + s_slack(1493,opul_H,minus) + s_slack(1493,opul_L,plus) + s_slack(1493,opul_L,minus) + s_slack(1493,opul_S,plus) + s_slack(1493,opul_S,minus) + s_slack(1493,pige_H,plus)
     
      + s_slack(1493,pige_H,minus) + s_slack(1493,pige_L,plus) + s_slack(1493,pige_L,minus) + s_slack(1493,pige_S,plus) + s_slack(1493,pige_S,minus) + s_slack(1493,pota_H,plus) + s_slack(1493,pota_H,minus) + s_slack(1493,pota_L,plus)
     
      + s_slack(1493,pota_L,minus) + s_slack(1493,pota_S,plus) + s_slack(1493,pota_S,minus) + s_slack(1493,rest_H,plus) + s_slack(1493,rest_H,minus) + s_slack(1493,rest_L,plus) + s_slack(1493,rest_L,minus) + s_slack(1493,rest_S,plus)
     
      + s_slack(1493,rest_S,minus) + s_slack(1493,rice_H,plus) + s_slack(1493,rice_H,minus) + s_slack(1493,rice_L,plus) + s_slack(1493,rice_L,minus) + s_slack(1493,rice_S,plus) + s_slack(1493,rice_S,minus) + s_slack(1493,sorg_L,plus)
     
      + s_slack(1493,sorg_L,minus) + s_slack(1493,sorg_S,plus) + s_slack(1493,sorg_S,minus) + s_slack(1493,soyb_L,plus) + s_slack(1493,soyb_L,minus) + s_slack(1493,soyb_S,plus) + s_slack(1493,soyb_S,minus) + s_slack(1493,sunf_L,plus)
     
      + s_slack(1493,sunf_L,minus) + s_slack(1493,temf_H,plus) + s_slack(1493,temf_H,minus) + s_slack(1493,temf_L,plus) + s_slack(1493,temf_L,minus) + s_slack(1493,temf_S,plus) + s_slack(1493,temf_S,minus) + s_slack(1493,toba_H,plus)
     
      + s_slack(1493,toba_H,minus) + s_slack(1493,toba_L,plus) + s_slack(1493,toba_L,minus) + s_slack(1493,trof_L,plus) + s_slack(1493,trof_L,minus) + s_slack(1493,trof_S,plus) + s_slack(1493,trof_S,minus) + s_slack(1493,vege_H,plus)
     
      + s_slack(1493,vege_H,minus) + s_slack(1493,vege_L,plus) + s_slack(1493,vege_L,minus) + s_slack(1493,vege_S,plus) + s_slack(1493,vege_S,minus) + s_slack(1500,rice_I,plus) + s_slack(1500,rice_I,minus) + s_slack(1500,sugc_I,plus)
     
      + s_slack(1500,sugc_I,minus) + s_slack(1500,whea_I,plus) + s_slack(1500,whea_I,minus) + s_slack(1500,bean_H,plus) + s_slack(1500,bean_H,minus) + s_slack(1500,bean_L,plus) + s_slack(1500,bean_L,minus) + s_slack(1500,bean_S,plus)
     
      + s_slack(1500,bean_S,minus) + s_slack(1500,cass_L,plus) + s_slack(1500,cass_L,minus) + s_slack(1500,cass_S,plus) + s_slack(1500,cass_S,minus) + s_slack(1500,chic_H,plus) + s_slack(1500,chic_H,minus) + s_slack(1500,chic_L,plus)
     
      + s_slack(1500,chic_L,minus) + s_slack(1500,chic_S,plus) + s_slack(1500,chic_S,minus) + s_slack(1500,coff_H,plus) + s_slack(1500,coff_H,minus) + s_slack(1500,coff_L,plus) + s_slack(1500,coff_L,minus) + s_slack(1500,cott_L,plus)
     
      + s_slack(1500,cott_L,minus) + s_slack(1500,cowp_H,plus) + s_slack(1500,cowp_H,minus) + s_slack(1500,cowp_L,plus) + s_slack(1500,cowp_L,minus) + s_slack(1500,cowp_S,plus) + s_slack(1500,cowp_S,minus) + s_slack(1500,grou_H,plus)
     
      + s_slack(1500,grou_H,minus) + s_slack(1500,grou_L,plus) + s_slack(1500,grou_L,minus) + s_slack(1500,grou_S,plus) + s_slack(1500,grou_S,minus) + s_slack(1500,lent_H,plus) + s_slack(1500,lent_H,minus) + s_slack(1500,lent_L,plus)
     
      + s_slack(1500,lent_L,minus) + s_slack(1500,lent_S,plus) + s_slack(1500,lent_S,minus) + s_slack(1500,maiz_H,plus) + s_slack(1500,maiz_H,minus) + s_slack(1500,maiz_L,plus) + s_slack(1500,maiz_L,minus) + s_slack(1500,maiz_S,plus)
     
      + s_slack(1500,maiz_S,minus) + s_slack(1500,mill_H,plus) + s_slack(1500,mill_H,minus) + s_slack(1500,mill_L,plus) + s_slack(1500,mill_L,minus) + s_slack(1500,mill_S,plus) + s_slack(1500,mill_S,minus) + s_slack(1500,ofib_L,plus)
     
      + s_slack(1500,ofib_L,minus) + s_slack(1500,ooil_L,plus) + s_slack(1500,ooil_L,minus) + s_slack(1500,opul_H,plus) + s_slack(1500,opul_H,minus) + s_slack(1500,opul_L,plus) + s_slack(1500,opul_L,minus) + s_slack(1500,opul_S,plus)
     
      + s_slack(1500,opul_S,minus) + s_slack(1500,pige_H,plus) + s_slack(1500,pige_H,minus) + s_slack(1500,pige_L,plus) + s_slack(1500,pige_L,minus) + s_slack(1500,pige_S,plus) + s_slack(1500,pige_S,minus) + s_slack(1500,pota_H,plus)
     
      + s_slack(1500,pota_H,minus) + s_slack(1500,pota_L,plus) + s_slack(1500,pota_L,minus) + s_slack(1500,pota_S,plus) + s_slack(1500,pota_S,minus) + s_slack(1500,rest_H,plus) + s_slack(1500,rest_H,minus) + s_slack(1500,rest_L,plus)
     
      + s_slack(1500,rest_L,minus) + s_slack(1500,rest_S,plus) + s_slack(1500,rest_S,minus) + s_slack(1500,rice_H,plus) + s_slack(1500,rice_H,minus) + s_slack(1500,rice_L,plus) + s_slack(1500,rice_L,minus) + s_slack(1500,rice_S,plus)
     
      + s_slack(1500,rice_S,minus) + s_slack(1500,sorg_L,plus) + s_slack(1500,sorg_L,minus) + s_slack(1500,sorg_S,plus) + s_slack(1500,sorg_S,minus) + s_slack(1500,soyb_L,plus) + s_slack(1500,soyb_L,minus) + s_slack(1500,soyb_S,plus)
     
      + s_slack(1500,soyb_S,minus) + s_slack(1500,sunf_L,plus) + s_slack(1500,sunf_L,minus) + s_slack(1500,temf_H,plus) + s_slack(1500,temf_H,minus) + s_slack(1500,temf_L,plus) + s_slack(1500,temf_L,minus) + s_slack(1500,temf_S,plus)
     
      + s_slack(1500,temf_S,minus) + s_slack(1500,toba_H,plus) + s_slack(1500,toba_H,minus) + s_slack(1500,toba_L,plus) + s_slack(1500,toba_L,minus) + s_slack(1500,trof_L,plus) + s_slack(1500,trof_L,minus) + s_slack(1500,trof_S,plus)
     
      + s_slack(1500,trof_S,minus) + s_slack(1500,vege_H,plus) + s_slack(1500,vege_H,minus) + s_slack(1500,vege_L,plus) + s_slack(1500,vege_L,minus) + s_slack(1500,vege_S,plus) + s_slack(1500,vege_S,minus) + s_slack(1527,rice_I,plus)
     
      + s_slack(1527,rice_I,minus) + s_slack(1527,sugc_I,plus) + s_slack(1527,sugc_I,minus) + s_slack(1527,whea_I,plus) + s_slack(1527,whea_I,minus) + s_slack(1527,bean_H,plus) + s_slack(1527,bean_H,minus) + s_slack(1527,bean_L,plus)
     
      + s_slack(1527,bean_L,minus) + s_slack(1527,bean_S,plus) + s_slack(1527,bean_S,minus) + s_slack(1527,cass_L,plus) + s_slack(1527,cass_L,minus) + s_slack(1527,cass_S,plus) + s_slack(1527,cass_S,minus) + s_slack(1527,chic_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 96
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1527,chic_H,minus) + s_slack(1527,chic_L,plus) + s_slack(1527,chic_L,minus) + s_slack(1527,chic_S,plus) + s_slack(1527,chic_S,minus) + s_slack(1527,coff_H,plus) + s_slack(1527,coff_H,minus) + s_slack(1527,coff_L,plus)
     
      + s_slack(1527,coff_L,minus) + s_slack(1527,cott_L,plus) + s_slack(1527,cott_L,minus) + s_slack(1527,cowp_H,plus) + s_slack(1527,cowp_H,minus) + s_slack(1527,cowp_L,plus) + s_slack(1527,cowp_L,minus) + s_slack(1527,cowp_S,plus)
     
      + s_slack(1527,cowp_S,minus) + s_slack(1527,grou_H,plus) + s_slack(1527,grou_H,minus) + s_slack(1527,grou_L,plus) + s_slack(1527,grou_L,minus) + s_slack(1527,grou_S,plus) + s_slack(1527,grou_S,minus) + s_slack(1527,lent_H,plus)
     
      + s_slack(1527,lent_H,minus) + s_slack(1527,lent_L,plus) + s_slack(1527,lent_L,minus) + s_slack(1527,lent_S,plus) + s_slack(1527,lent_S,minus) + s_slack(1527,maiz_H,plus) + s_slack(1527,maiz_H,minus) + s_slack(1527,maiz_L,plus)
     
      + s_slack(1527,maiz_L,minus) + s_slack(1527,maiz_S,plus) + s_slack(1527,maiz_S,minus) + s_slack(1527,mill_H,plus) + s_slack(1527,mill_H,minus) + s_slack(1527,mill_L,plus) + s_slack(1527,mill_L,minus) + s_slack(1527,mill_S,plus)
     
      + s_slack(1527,mill_S,minus) + s_slack(1527,ofib_L,plus) + s_slack(1527,ofib_L,minus) + s_slack(1527,ooil_L,plus) + s_slack(1527,ooil_L,minus) + s_slack(1527,opul_H,plus) + s_slack(1527,opul_H,minus) + s_slack(1527,opul_L,plus)
     
      + s_slack(1527,opul_L,minus) + s_slack(1527,opul_S,plus) + s_slack(1527,opul_S,minus) + s_slack(1527,pige_H,plus) + s_slack(1527,pige_H,minus) + s_slack(1527,pige_L,plus) + s_slack(1527,pige_L,minus) + s_slack(1527,pige_S,plus)
     
      + s_slack(1527,pige_S,minus) + s_slack(1527,pota_H,plus) + s_slack(1527,pota_H,minus) + s_slack(1527,pota_L,plus) + s_slack(1527,pota_L,minus) + s_slack(1527,pota_S,plus) + s_slack(1527,pota_S,minus) + s_slack(1527,rest_H,plus)
     
      + s_slack(1527,rest_H,minus) + s_slack(1527,rest_L,plus) + s_slack(1527,rest_L,minus) + s_slack(1527,rest_S,plus) + s_slack(1527,rest_S,minus) + s_slack(1527,rice_H,plus) + s_slack(1527,rice_H,minus) + s_slack(1527,rice_L,plus)
     
      + s_slack(1527,rice_L,minus) + s_slack(1527,rice_S,plus) + s_slack(1527,rice_S,minus) + s_slack(1527,sorg_L,plus) + s_slack(1527,sorg_L,minus) + s_slack(1527,sorg_S,plus) + s_slack(1527,sorg_S,minus) + s_slack(1527,soyb_L,plus)
     
      + s_slack(1527,soyb_L,minus) + s_slack(1527,soyb_S,plus) + s_slack(1527,soyb_S,minus) + s_slack(1527,sunf_L,plus) + s_slack(1527,sunf_L,minus) + s_slack(1527,temf_H,plus) + s_slack(1527,temf_H,minus) + s_slack(1527,temf_L,plus)
     
      + s_slack(1527,temf_L,minus) + s_slack(1527,temf_S,plus) + s_slack(1527,temf_S,minus) + s_slack(1527,toba_H,plus) + s_slack(1527,toba_H,minus) + s_slack(1527,toba_L,plus) + s_slack(1527,toba_L,minus) + s_slack(1527,trof_L,plus)
     
      + s_slack(1527,trof_L,minus) + s_slack(1527,trof_S,plus) + s_slack(1527,trof_S,minus) + s_slack(1527,vege_H,plus) + s_slack(1527,vege_H,minus) + s_slack(1527,vege_L,plus) + s_slack(1527,vege_L,minus) + s_slack(1527,vege_S,plus)
     
      + s_slack(1527,vege_S,minus) + s_slack(1530,rice_I,plus) + s_slack(1530,rice_I,minus) + s_slack(1530,sugc_I,plus) + s_slack(1530,sugc_I,minus) + s_slack(1530,whea_I,plus) + s_slack(1530,whea_I,minus) + s_slack(1530,bean_H,plus)
     
      + s_slack(1530,bean_H,minus) + s_slack(1530,bean_L,plus) + s_slack(1530,bean_L,minus) + s_slack(1530,bean_S,plus) + s_slack(1530,bean_S,minus) + s_slack(1530,cass_L,plus) + s_slack(1530,cass_L,minus) + s_slack(1530,cass_S,plus)
     
      + s_slack(1530,cass_S,minus) + s_slack(1530,chic_H,plus) + s_slack(1530,chic_H,minus) + s_slack(1530,chic_L,plus) + s_slack(1530,chic_L,minus) + s_slack(1530,chic_S,plus) + s_slack(1530,chic_S,minus) + s_slack(1530,coff_H,plus)
     
      + s_slack(1530,coff_H,minus) + s_slack(1530,coff_L,plus) + s_slack(1530,coff_L,minus) + s_slack(1530,cott_L,plus) + s_slack(1530,cott_L,minus) + s_slack(1530,cowp_H,plus) + s_slack(1530,cowp_H,minus) + s_slack(1530,cowp_L,plus)
     
      + s_slack(1530,cowp_L,minus) + s_slack(1530,cowp_S,plus) + s_slack(1530,cowp_S,minus) + s_slack(1530,grou_H,plus) + s_slack(1530,grou_H,minus) + s_slack(1530,grou_L,plus) + s_slack(1530,grou_L,minus) + s_slack(1530,grou_S,plus)
     
      + s_slack(1530,grou_S,minus) + s_slack(1530,lent_H,plus) + s_slack(1530,lent_H,minus) + s_slack(1530,lent_L,plus) + s_slack(1530,lent_L,minus) + s_slack(1530,lent_S,plus) + s_slack(1530,lent_S,minus) + s_slack(1530,maiz_H,plus)
     
      + s_slack(1530,maiz_H,minus) + s_slack(1530,maiz_L,plus) + s_slack(1530,maiz_L,minus) + s_slack(1530,maiz_S,plus) + s_slack(1530,maiz_S,minus) + s_slack(1530,mill_H,plus) + s_slack(1530,mill_H,minus) + s_slack(1530,mill_L,plus)
     
      + s_slack(1530,mill_L,minus) + s_slack(1530,mill_S,plus) + s_slack(1530,mill_S,minus) + s_slack(1530,ofib_L,plus) + s_slack(1530,ofib_L,minus) + s_slack(1530,ooil_L,plus) + s_slack(1530,ooil_L,minus) + s_slack(1530,opul_H,plus)
     
      + s_slack(1530,opul_H,minus) + s_slack(1530,opul_L,plus) + s_slack(1530,opul_L,minus) + s_slack(1530,opul_S,plus) + s_slack(1530,opul_S,minus) + s_slack(1530,pige_H,plus) + s_slack(1530,pige_H,minus) + s_slack(1530,pige_L,plus)
     
      + s_slack(1530,pige_L,minus) + s_slack(1530,pige_S,plus) + s_slack(1530,pige_S,minus) + s_slack(1530,pota_H,plus) + s_slack(1530,pota_H,minus) + s_slack(1530,pota_L,plus) + s_slack(1530,pota_L,minus) + s_slack(1530,pota_S,plus)
     
      + s_slack(1530,pota_S,minus) + s_slack(1530,rest_H,plus) + s_slack(1530,rest_H,minus) + s_slack(1530,rest_L,plus) + s_slack(1530,rest_L,minus) + s_slack(1530,rest_S,plus) + s_slack(1530,rest_S,minus) + s_slack(1530,rice_H,plus)
     
      + s_slack(1530,rice_H,minus) + s_slack(1530,rice_L,plus) + s_slack(1530,rice_L,minus) + s_slack(1530,rice_S,plus) + s_slack(1530,rice_S,minus) + s_slack(1530,sorg_L,plus) + s_slack(1530,sorg_L,minus) + s_slack(1530,sorg_S,plus)
     
      + s_slack(1530,sorg_S,minus) + s_slack(1530,soyb_L,plus) + s_slack(1530,soyb_L,minus) + s_slack(1530,soyb_S,plus) + s_slack(1530,soyb_S,minus) + s_slack(1530,sunf_L,plus) + s_slack(1530,sunf_L,minus) + s_slack(1530,temf_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 97
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1530,temf_H,minus) + s_slack(1530,temf_L,plus) + s_slack(1530,temf_L,minus) + s_slack(1530,temf_S,plus) + s_slack(1530,temf_S,minus) + s_slack(1530,toba_H,plus) + s_slack(1530,toba_H,minus) + s_slack(1530,toba_L,plus)
     
      + s_slack(1530,toba_L,minus) + s_slack(1530,trof_L,plus) + s_slack(1530,trof_L,minus) + s_slack(1530,trof_S,plus) + s_slack(1530,trof_S,minus) + s_slack(1530,vege_H,plus) + s_slack(1530,vege_H,minus) + s_slack(1530,vege_L,plus)
     
      + s_slack(1530,vege_L,minus) + s_slack(1530,vege_S,plus) + s_slack(1530,vege_S,minus) + s_slack(1531,rice_I,plus) + s_slack(1531,rice_I,minus) + s_slack(1531,sugc_I,plus) + s_slack(1531,sugc_I,minus) + s_slack(1531,whea_I,plus)
     
      + s_slack(1531,whea_I,minus) + s_slack(1531,bean_H,plus) + s_slack(1531,bean_H,minus) + s_slack(1531,bean_L,plus) + s_slack(1531,bean_L,minus) + s_slack(1531,bean_S,plus) + s_slack(1531,bean_S,minus) + s_slack(1531,cass_L,plus)
     
      + s_slack(1531,cass_L,minus) + s_slack(1531,cass_S,plus) + s_slack(1531,cass_S,minus) + s_slack(1531,chic_H,plus) + s_slack(1531,chic_H,minus) + s_slack(1531,chic_L,plus) + s_slack(1531,chic_L,minus) + s_slack(1531,chic_S,plus)
     
      + s_slack(1531,chic_S,minus) + s_slack(1531,coff_H,plus) + s_slack(1531,coff_H,minus) + s_slack(1531,coff_L,plus) + s_slack(1531,coff_L,minus) + s_slack(1531,cott_L,plus) + s_slack(1531,cott_L,minus) + s_slack(1531,cowp_H,plus)
     
      + s_slack(1531,cowp_H,minus) + s_slack(1531,cowp_L,plus) + s_slack(1531,cowp_L,minus) + s_slack(1531,cowp_S,plus) + s_slack(1531,cowp_S,minus) + s_slack(1531,grou_H,plus) + s_slack(1531,grou_H,minus) + s_slack(1531,grou_L,plus)
     
      + s_slack(1531,grou_L,minus) + s_slack(1531,grou_S,plus) + s_slack(1531,grou_S,minus) + s_slack(1531,lent_H,plus) + s_slack(1531,lent_H,minus) + s_slack(1531,lent_L,plus) + s_slack(1531,lent_L,minus) + s_slack(1531,lent_S,plus)
     
      + s_slack(1531,lent_S,minus) + s_slack(1531,maiz_H,plus) + s_slack(1531,maiz_H,minus) + s_slack(1531,maiz_L,plus) + s_slack(1531,maiz_L,minus) + s_slack(1531,maiz_S,plus) + s_slack(1531,maiz_S,minus) + s_slack(1531,mill_H,plus)
     
      + s_slack(1531,mill_H,minus) + s_slack(1531,mill_L,plus) + s_slack(1531,mill_L,minus) + s_slack(1531,mill_S,plus) + s_slack(1531,mill_S,minus) + s_slack(1531,ofib_L,plus) + s_slack(1531,ofib_L,minus) + s_slack(1531,ooil_L,plus)
     
      + s_slack(1531,ooil_L,minus) + s_slack(1531,opul_H,plus) + s_slack(1531,opul_H,minus) + s_slack(1531,opul_L,plus) + s_slack(1531,opul_L,minus) + s_slack(1531,opul_S,plus) + s_slack(1531,opul_S,minus) + s_slack(1531,pige_H,plus)
     
      + s_slack(1531,pige_H,minus) + s_slack(1531,pige_L,plus) + s_slack(1531,pige_L,minus) + s_slack(1531,pige_S,plus) + s_slack(1531,pige_S,minus) + s_slack(1531,pota_H,plus) + s_slack(1531,pota_H,minus) + s_slack(1531,pota_L,plus)
     
      + s_slack(1531,pota_L,minus) + s_slack(1531,pota_S,plus) + s_slack(1531,pota_S,minus) + s_slack(1531,rest_H,plus) + s_slack(1531,rest_H,minus) + s_slack(1531,rest_L,plus) + s_slack(1531,rest_L,minus) + s_slack(1531,rest_S,plus)
     
      + s_slack(1531,rest_S,minus) + s_slack(1531,rice_H,plus) + s_slack(1531,rice_H,minus) + s_slack(1531,rice_L,plus) + s_slack(1531,rice_L,minus) + s_slack(1531,rice_S,plus) + s_slack(1531,rice_S,minus) + s_slack(1531,sorg_L,plus)
     
      + s_slack(1531,sorg_L,minus) + s_slack(1531,sorg_S,plus) + s_slack(1531,sorg_S,minus) + s_slack(1531,soyb_L,plus) + s_slack(1531,soyb_L,minus) + s_slack(1531,soyb_S,plus) + s_slack(1531,soyb_S,minus) + s_slack(1531,sunf_L,plus)
     
      + s_slack(1531,sunf_L,minus) + s_slack(1531,temf_H,plus) + s_slack(1531,temf_H,minus) + s_slack(1531,temf_L,plus) + s_slack(1531,temf_L,minus) + s_slack(1531,temf_S,plus) + s_slack(1531,temf_S,minus) + s_slack(1531,toba_H,plus)
     
      + s_slack(1531,toba_H,minus) + s_slack(1531,toba_L,plus) + s_slack(1531,toba_L,minus) + s_slack(1531,trof_L,plus) + s_slack(1531,trof_L,minus) + s_slack(1531,trof_S,plus) + s_slack(1531,trof_S,minus) + s_slack(1531,vege_H,plus)
     
      + s_slack(1531,vege_H,minus) + s_slack(1531,vege_L,plus) + s_slack(1531,vege_L,minus) + s_slack(1531,vege_S,plus) + s_slack(1531,vege_S,minus) + s_slack(1532,rice_I,plus) + s_slack(1532,rice_I,minus) + s_slack(1532,sugc_I,plus)
     
      + s_slack(1532,sugc_I,minus) + s_slack(1532,whea_I,plus) + s_slack(1532,whea_I,minus) + s_slack(1532,bean_H,plus) + s_slack(1532,bean_H,minus) + s_slack(1532,bean_L,plus) + s_slack(1532,bean_L,minus) + s_slack(1532,bean_S,plus)
     
      + s_slack(1532,bean_S,minus) + s_slack(1532,cass_L,plus) + s_slack(1532,cass_L,minus) + s_slack(1532,cass_S,plus) + s_slack(1532,cass_S,minus) + s_slack(1532,chic_H,plus) + s_slack(1532,chic_H,minus) + s_slack(1532,chic_L,plus)
     
      + s_slack(1532,chic_L,minus) + s_slack(1532,chic_S,plus) + s_slack(1532,chic_S,minus) + s_slack(1532,coff_H,plus) + s_slack(1532,coff_H,minus) + s_slack(1532,coff_L,plus) + s_slack(1532,coff_L,minus) + s_slack(1532,cott_L,plus)
     
      + s_slack(1532,cott_L,minus) + s_slack(1532,cowp_H,plus) + s_slack(1532,cowp_H,minus) + s_slack(1532,cowp_L,plus) + s_slack(1532,cowp_L,minus) + s_slack(1532,cowp_S,plus) + s_slack(1532,cowp_S,minus) + s_slack(1532,grou_H,plus)
     
      + s_slack(1532,grou_H,minus) + s_slack(1532,grou_L,plus) + s_slack(1532,grou_L,minus) + s_slack(1532,grou_S,plus) + s_slack(1532,grou_S,minus) + s_slack(1532,lent_H,plus) + s_slack(1532,lent_H,minus) + s_slack(1532,lent_L,plus)
     
      + s_slack(1532,lent_L,minus) + s_slack(1532,lent_S,plus) + s_slack(1532,lent_S,minus) + s_slack(1532,maiz_H,plus) + s_slack(1532,maiz_H,minus) + s_slack(1532,maiz_L,plus) + s_slack(1532,maiz_L,minus) + s_slack(1532,maiz_S,plus)
     
      + s_slack(1532,maiz_S,minus) + s_slack(1532,mill_H,plus) + s_slack(1532,mill_H,minus) + s_slack(1532,mill_L,plus) + s_slack(1532,mill_L,minus) + s_slack(1532,mill_S,plus) + s_slack(1532,mill_S,minus) + s_slack(1532,ofib_L,plus)
     
      + s_slack(1532,ofib_L,minus) + s_slack(1532,ooil_L,plus) + s_slack(1532,ooil_L,minus) + s_slack(1532,opul_H,plus) + s_slack(1532,opul_H,minus) + s_slack(1532,opul_L,plus) + s_slack(1532,opul_L,minus) + s_slack(1532,opul_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 98
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1532,opul_S,minus) + s_slack(1532,pige_H,plus) + s_slack(1532,pige_H,minus) + s_slack(1532,pige_L,plus) + s_slack(1532,pige_L,minus) + s_slack(1532,pige_S,plus) + s_slack(1532,pige_S,minus) + s_slack(1532,pota_H,plus)
     
      + s_slack(1532,pota_H,minus) + s_slack(1532,pota_L,plus) + s_slack(1532,pota_L,minus) + s_slack(1532,pota_S,plus) + s_slack(1532,pota_S,minus) + s_slack(1532,rest_H,plus) + s_slack(1532,rest_H,minus) + s_slack(1532,rest_L,plus)
     
      + s_slack(1532,rest_L,minus) + s_slack(1532,rest_S,plus) + s_slack(1532,rest_S,minus) + s_slack(1532,rice_H,plus) + s_slack(1532,rice_H,minus) + s_slack(1532,rice_L,plus) + s_slack(1532,rice_L,minus) + s_slack(1532,rice_S,plus)
     
      + s_slack(1532,rice_S,minus) + s_slack(1532,sorg_L,plus) + s_slack(1532,sorg_L,minus) + s_slack(1532,sorg_S,plus) + s_slack(1532,sorg_S,minus) + s_slack(1532,soyb_L,plus) + s_slack(1532,soyb_L,minus) + s_slack(1532,soyb_S,plus)
     
      + s_slack(1532,soyb_S,minus) + s_slack(1532,sunf_L,plus) + s_slack(1532,sunf_L,minus) + s_slack(1532,temf_H,plus) + s_slack(1532,temf_H,minus) + s_slack(1532,temf_L,plus) + s_slack(1532,temf_L,minus) + s_slack(1532,temf_S,plus)
     
      + s_slack(1532,temf_S,minus) + s_slack(1532,toba_H,plus) + s_slack(1532,toba_H,minus) + s_slack(1532,toba_L,plus) + s_slack(1532,toba_L,minus) + s_slack(1532,trof_L,plus) + s_slack(1532,trof_L,minus) + s_slack(1532,trof_S,plus)
     
      + s_slack(1532,trof_S,minus) + s_slack(1532,vege_H,plus) + s_slack(1532,vege_H,minus) + s_slack(1532,vege_L,plus) + s_slack(1532,vege_L,minus) + s_slack(1532,vege_S,plus) + s_slack(1532,vege_S,minus) + s_slack(1539,rice_I,plus)
     
      + s_slack(1539,rice_I,minus) + s_slack(1539,sugc_I,plus) + s_slack(1539,sugc_I,minus) + s_slack(1539,whea_I,plus) + s_slack(1539,whea_I,minus) + s_slack(1539,bean_H,plus) + s_slack(1539,bean_H,minus) + s_slack(1539,bean_L,plus)
     
      + s_slack(1539,bean_L,minus) + s_slack(1539,bean_S,plus) + s_slack(1539,bean_S,minus) + s_slack(1539,cass_L,plus) + s_slack(1539,cass_L,minus) + s_slack(1539,cass_S,plus) + s_slack(1539,cass_S,minus) + s_slack(1539,chic_H,plus)
     
      + s_slack(1539,chic_H,minus) + s_slack(1539,chic_L,plus) + s_slack(1539,chic_L,minus) + s_slack(1539,chic_S,plus) + s_slack(1539,chic_S,minus) + s_slack(1539,coff_H,plus) + s_slack(1539,coff_H,minus) + s_slack(1539,coff_L,plus)
     
      + s_slack(1539,coff_L,minus) + s_slack(1539,cott_L,plus) + s_slack(1539,cott_L,minus) + s_slack(1539,cowp_H,plus) + s_slack(1539,cowp_H,minus) + s_slack(1539,cowp_L,plus) + s_slack(1539,cowp_L,minus) + s_slack(1539,cowp_S,plus)
     
      + s_slack(1539,cowp_S,minus) + s_slack(1539,grou_H,plus) + s_slack(1539,grou_H,minus) + s_slack(1539,grou_L,plus) + s_slack(1539,grou_L,minus) + s_slack(1539,grou_S,plus) + s_slack(1539,grou_S,minus) + s_slack(1539,lent_H,plus)
     
      + s_slack(1539,lent_H,minus) + s_slack(1539,lent_L,plus) + s_slack(1539,lent_L,minus) + s_slack(1539,lent_S,plus) + s_slack(1539,lent_S,minus) + s_slack(1539,maiz_H,plus) + s_slack(1539,maiz_H,minus) + s_slack(1539,maiz_L,plus)
     
      + s_slack(1539,maiz_L,minus) + s_slack(1539,maiz_S,plus) + s_slack(1539,maiz_S,minus) + s_slack(1539,mill_H,plus) + s_slack(1539,mill_H,minus) + s_slack(1539,mill_L,plus) + s_slack(1539,mill_L,minus) + s_slack(1539,mill_S,plus)
     
      + s_slack(1539,mill_S,minus) + s_slack(1539,ofib_L,plus) + s_slack(1539,ofib_L,minus) + s_slack(1539,ooil_L,plus) + s_slack(1539,ooil_L,minus) + s_slack(1539,opul_H,plus) + s_slack(1539,opul_H,minus) + s_slack(1539,opul_L,plus)
     
      + s_slack(1539,opul_L,minus) + s_slack(1539,opul_S,plus) + s_slack(1539,opul_S,minus) + s_slack(1539,pige_H,plus) + s_slack(1539,pige_H,minus) + s_slack(1539,pige_L,plus) + s_slack(1539,pige_L,minus) + s_slack(1539,pige_S,plus)
     
      + s_slack(1539,pige_S,minus) + s_slack(1539,pota_H,plus) + s_slack(1539,pota_H,minus) + s_slack(1539,pota_L,plus) + s_slack(1539,pota_L,minus) + s_slack(1539,pota_S,plus) + s_slack(1539,pota_S,minus) + s_slack(1539,rest_H,plus)
     
      + s_slack(1539,rest_H,minus) + s_slack(1539,rest_L,plus) + s_slack(1539,rest_L,minus) + s_slack(1539,rest_S,plus) + s_slack(1539,rest_S,minus) + s_slack(1539,rice_H,plus) + s_slack(1539,rice_H,minus) + s_slack(1539,rice_L,plus)
     
      + s_slack(1539,rice_L,minus) + s_slack(1539,rice_S,plus) + s_slack(1539,rice_S,minus) + s_slack(1539,sorg_L,plus) + s_slack(1539,sorg_L,minus) + s_slack(1539,sorg_S,plus) + s_slack(1539,sorg_S,minus) + s_slack(1539,soyb_L,plus)
     
      + s_slack(1539,soyb_L,minus) + s_slack(1539,soyb_S,plus) + s_slack(1539,soyb_S,minus) + s_slack(1539,sunf_L,plus) + s_slack(1539,sunf_L,minus) + s_slack(1539,temf_H,plus) + s_slack(1539,temf_H,minus) + s_slack(1539,temf_L,plus)
     
      + s_slack(1539,temf_L,minus) + s_slack(1539,temf_S,plus) + s_slack(1539,temf_S,minus) + s_slack(1539,toba_H,plus) + s_slack(1539,toba_H,minus) + s_slack(1539,toba_L,plus) + s_slack(1539,toba_L,minus) + s_slack(1539,trof_L,plus)
     
      + s_slack(1539,trof_L,minus) + s_slack(1539,trof_S,plus) + s_slack(1539,trof_S,minus) + s_slack(1539,vege_H,plus) + s_slack(1539,vege_H,minus) + s_slack(1539,vege_L,plus) + s_slack(1539,vege_L,minus) + s_slack(1539,vege_S,plus)
     
      + s_slack(1539,vege_S,minus) + s_slack(1565,rice_I,plus) + s_slack(1565,rice_I,minus) + s_slack(1565,sugc_I,plus) + s_slack(1565,sugc_I,minus) + s_slack(1565,whea_I,plus) + s_slack(1565,whea_I,minus) + s_slack(1565,bean_H,plus)
     
      + s_slack(1565,bean_H,minus) + s_slack(1565,bean_L,plus) + s_slack(1565,bean_L,minus) + s_slack(1565,bean_S,plus) + s_slack(1565,bean_S,minus) + s_slack(1565,cass_L,plus) + s_slack(1565,cass_L,minus) + s_slack(1565,cass_S,plus)
     
      + s_slack(1565,cass_S,minus) + s_slack(1565,chic_H,plus) + s_slack(1565,chic_H,minus) + s_slack(1565,chic_L,plus) + s_slack(1565,chic_L,minus) + s_slack(1565,chic_S,plus) + s_slack(1565,chic_S,minus) + s_slack(1565,coff_H,plus)
     
      + s_slack(1565,coff_H,minus) + s_slack(1565,coff_L,plus) + s_slack(1565,coff_L,minus) + s_slack(1565,cott_L,plus) + s_slack(1565,cott_L,minus) + s_slack(1565,cowp_H,plus) + s_slack(1565,cowp_H,minus) + s_slack(1565,cowp_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                                05/03/20 10:55:31 Page 99
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1565,cowp_L,minus) + s_slack(1565,cowp_S,plus) + s_slack(1565,cowp_S,minus) + s_slack(1565,grou_H,plus) + s_slack(1565,grou_H,minus) + s_slack(1565,grou_L,plus) + s_slack(1565,grou_L,minus) + s_slack(1565,grou_S,plus)
     
      + s_slack(1565,grou_S,minus) + s_slack(1565,lent_H,plus) + s_slack(1565,lent_H,minus) + s_slack(1565,lent_L,plus) + s_slack(1565,lent_L,minus) + s_slack(1565,lent_S,plus) + s_slack(1565,lent_S,minus) + s_slack(1565,maiz_H,plus)
     
      + s_slack(1565,maiz_H,minus) + s_slack(1565,maiz_L,plus) + s_slack(1565,maiz_L,minus) + s_slack(1565,maiz_S,plus) + s_slack(1565,maiz_S,minus) + s_slack(1565,mill_H,plus) + s_slack(1565,mill_H,minus) + s_slack(1565,mill_L,plus)
     
      + s_slack(1565,mill_L,minus) + s_slack(1565,mill_S,plus) + s_slack(1565,mill_S,minus) + s_slack(1565,ofib_L,plus) + s_slack(1565,ofib_L,minus) + s_slack(1565,ooil_L,plus) + s_slack(1565,ooil_L,minus) + s_slack(1565,opul_H,plus)
     
      + s_slack(1565,opul_H,minus) + s_slack(1565,opul_L,plus) + s_slack(1565,opul_L,minus) + s_slack(1565,opul_S,plus) + s_slack(1565,opul_S,minus) + s_slack(1565,pige_H,plus) + s_slack(1565,pige_H,minus) + s_slack(1565,pige_L,plus)
     
      + s_slack(1565,pige_L,minus) + s_slack(1565,pige_S,plus) + s_slack(1565,pige_S,minus) + s_slack(1565,pota_H,plus) + s_slack(1565,pota_H,minus) + s_slack(1565,pota_L,plus) + s_slack(1565,pota_L,minus) + s_slack(1565,pota_S,plus)
     
      + s_slack(1565,pota_S,minus) + s_slack(1565,rest_H,plus) + s_slack(1565,rest_H,minus) + s_slack(1565,rest_L,plus) + s_slack(1565,rest_L,minus) + s_slack(1565,rest_S,plus) + s_slack(1565,rest_S,minus) + s_slack(1565,rice_H,plus)
     
      + s_slack(1565,rice_H,minus) + s_slack(1565,rice_L,plus) + s_slack(1565,rice_L,minus) + s_slack(1565,rice_S,plus) + s_slack(1565,rice_S,minus) + s_slack(1565,sorg_L,plus) + s_slack(1565,sorg_L,minus) + s_slack(1565,sorg_S,plus)
     
      + s_slack(1565,sorg_S,minus) + s_slack(1565,soyb_L,plus) + s_slack(1565,soyb_L,minus) + s_slack(1565,soyb_S,plus) + s_slack(1565,soyb_S,minus) + s_slack(1565,sunf_L,plus) + s_slack(1565,sunf_L,minus) + s_slack(1565,temf_H,plus)
     
      + s_slack(1565,temf_H,minus) + s_slack(1565,temf_L,plus) + s_slack(1565,temf_L,minus) + s_slack(1565,temf_S,plus) + s_slack(1565,temf_S,minus) + s_slack(1565,toba_H,plus) + s_slack(1565,toba_H,minus) + s_slack(1565,toba_L,plus)
     
      + s_slack(1565,toba_L,minus) + s_slack(1565,trof_L,plus) + s_slack(1565,trof_L,minus) + s_slack(1565,trof_S,plus) + s_slack(1565,trof_S,minus) + s_slack(1565,vege_H,plus) + s_slack(1565,vege_H,minus) + s_slack(1565,vege_L,plus)
     
      + s_slack(1565,vege_L,minus) + s_slack(1565,vege_S,plus) + s_slack(1565,vege_S,minus) + s_slack(1569,rice_I,plus) + s_slack(1569,rice_I,minus) + s_slack(1569,sugc_I,plus) + s_slack(1569,sugc_I,minus) + s_slack(1569,whea_I,plus)
     
      + s_slack(1569,whea_I,minus) + s_slack(1569,bean_H,plus) + s_slack(1569,bean_H,minus) + s_slack(1569,bean_L,plus) + s_slack(1569,bean_L,minus) + s_slack(1569,bean_S,plus) + s_slack(1569,bean_S,minus) + s_slack(1569,cass_L,plus)
     
      + s_slack(1569,cass_L,minus) + s_slack(1569,cass_S,plus) + s_slack(1569,cass_S,minus) + s_slack(1569,chic_H,plus) + s_slack(1569,chic_H,minus) + s_slack(1569,chic_L,plus) + s_slack(1569,chic_L,minus) + s_slack(1569,chic_S,plus)
     
      + s_slack(1569,chic_S,minus) + s_slack(1569,coff_H,plus) + s_slack(1569,coff_H,minus) + s_slack(1569,coff_L,plus) + s_slack(1569,coff_L,minus) + s_slack(1569,cott_L,plus) + s_slack(1569,cott_L,minus) + s_slack(1569,cowp_H,plus)
     
      + s_slack(1569,cowp_H,minus) + s_slack(1569,cowp_L,plus) + s_slack(1569,cowp_L,minus) + s_slack(1569,cowp_S,plus) + s_slack(1569,cowp_S,minus) + s_slack(1569,grou_H,plus) + s_slack(1569,grou_H,minus) + s_slack(1569,grou_L,plus)
     
      + s_slack(1569,grou_L,minus) + s_slack(1569,grou_S,plus) + s_slack(1569,grou_S,minus) + s_slack(1569,lent_H,plus) + s_slack(1569,lent_H,minus) + s_slack(1569,lent_L,plus) + s_slack(1569,lent_L,minus) + s_slack(1569,lent_S,plus)
     
      + s_slack(1569,lent_S,minus) + s_slack(1569,maiz_H,plus) + s_slack(1569,maiz_H,minus) + s_slack(1569,maiz_L,plus) + s_slack(1569,maiz_L,minus) + s_slack(1569,maiz_S,plus) + s_slack(1569,maiz_S,minus) + s_slack(1569,mill_H,plus)
     
      + s_slack(1569,mill_H,minus) + s_slack(1569,mill_L,plus) + s_slack(1569,mill_L,minus) + s_slack(1569,mill_S,plus) + s_slack(1569,mill_S,minus) + s_slack(1569,ofib_L,plus) + s_slack(1569,ofib_L,minus) + s_slack(1569,ooil_L,plus)
     
      + s_slack(1569,ooil_L,minus) + s_slack(1569,opul_H,plus) + s_slack(1569,opul_H,minus) + s_slack(1569,opul_L,plus) + s_slack(1569,opul_L,minus) + s_slack(1569,opul_S,plus) + s_slack(1569,opul_S,minus) + s_slack(1569,pige_H,plus)
     
      + s_slack(1569,pige_H,minus) + s_slack(1569,pige_L,plus) + s_slack(1569,pige_L,minus) + s_slack(1569,pige_S,plus) + s_slack(1569,pige_S,minus) + s_slack(1569,pota_H,plus) + s_slack(1569,pota_H,minus) + s_slack(1569,pota_L,plus)
     
      + s_slack(1569,pota_L,minus) + s_slack(1569,pota_S,plus) + s_slack(1569,pota_S,minus) + s_slack(1569,rest_H,plus) + s_slack(1569,rest_H,minus) + s_slack(1569,rest_L,plus) + s_slack(1569,rest_L,minus) + s_slack(1569,rest_S,plus)
     
      + s_slack(1569,rest_S,minus) + s_slack(1569,rice_H,plus) + s_slack(1569,rice_H,minus) + s_slack(1569,rice_L,plus) + s_slack(1569,rice_L,minus) + s_slack(1569,rice_S,plus) + s_slack(1569,rice_S,minus) + s_slack(1569,sorg_L,plus)
     
      + s_slack(1569,sorg_L,minus) + s_slack(1569,sorg_S,plus) + s_slack(1569,sorg_S,minus) + s_slack(1569,soyb_L,plus) + s_slack(1569,soyb_L,minus) + s_slack(1569,soyb_S,plus) + s_slack(1569,soyb_S,minus) + s_slack(1569,sunf_L,plus)
     
      + s_slack(1569,sunf_L,minus) + s_slack(1569,temf_H,plus) + s_slack(1569,temf_H,minus) + s_slack(1569,temf_L,plus) + s_slack(1569,temf_L,minus) + s_slack(1569,temf_S,plus) + s_slack(1569,temf_S,minus) + s_slack(1569,toba_H,plus)
     
      + s_slack(1569,toba_H,minus) + s_slack(1569,toba_L,plus) + s_slack(1569,toba_L,minus) + s_slack(1569,trof_L,plus) + s_slack(1569,trof_L,minus) + s_slack(1569,trof_S,plus) + s_slack(1569,trof_S,minus) + s_slack(1569,vege_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 100
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1569,vege_H,minus) + s_slack(1569,vege_L,plus) + s_slack(1569,vege_L,minus) + s_slack(1569,vege_S,plus) + s_slack(1569,vege_S,minus) + s_slack(1570,rice_I,plus) + s_slack(1570,rice_I,minus) + s_slack(1570,sugc_I,plus)
     
      + s_slack(1570,sugc_I,minus) + s_slack(1570,whea_I,plus) + s_slack(1570,whea_I,minus) + s_slack(1570,bean_H,plus) + s_slack(1570,bean_H,minus) + s_slack(1570,bean_L,plus) + s_slack(1570,bean_L,minus) + s_slack(1570,bean_S,plus)
     
      + s_slack(1570,bean_S,minus) + s_slack(1570,cass_L,plus) + s_slack(1570,cass_L,minus) + s_slack(1570,cass_S,plus) + s_slack(1570,cass_S,minus) + s_slack(1570,chic_H,plus) + s_slack(1570,chic_H,minus) + s_slack(1570,chic_L,plus)
     
      + s_slack(1570,chic_L,minus) + s_slack(1570,chic_S,plus) + s_slack(1570,chic_S,minus) + s_slack(1570,coff_H,plus) + s_slack(1570,coff_H,minus) + s_slack(1570,coff_L,plus) + s_slack(1570,coff_L,minus) + s_slack(1570,cott_L,plus)
     
      + s_slack(1570,cott_L,minus) + s_slack(1570,cowp_H,plus) + s_slack(1570,cowp_H,minus) + s_slack(1570,cowp_L,plus) + s_slack(1570,cowp_L,minus) + s_slack(1570,cowp_S,plus) + s_slack(1570,cowp_S,minus) + s_slack(1570,grou_H,plus)
     
      + s_slack(1570,grou_H,minus) + s_slack(1570,grou_L,plus) + s_slack(1570,grou_L,minus) + s_slack(1570,grou_S,plus) + s_slack(1570,grou_S,minus) + s_slack(1570,lent_H,plus) + s_slack(1570,lent_H,minus) + s_slack(1570,lent_L,plus)
     
      + s_slack(1570,lent_L,minus) + s_slack(1570,lent_S,plus) + s_slack(1570,lent_S,minus) + s_slack(1570,maiz_H,plus) + s_slack(1570,maiz_H,minus) + s_slack(1570,maiz_L,plus) + s_slack(1570,maiz_L,minus) + s_slack(1570,maiz_S,plus)
     
      + s_slack(1570,maiz_S,minus) + s_slack(1570,mill_H,plus) + s_slack(1570,mill_H,minus) + s_slack(1570,mill_L,plus) + s_slack(1570,mill_L,minus) + s_slack(1570,mill_S,plus) + s_slack(1570,mill_S,minus) + s_slack(1570,ofib_L,plus)
     
      + s_slack(1570,ofib_L,minus) + s_slack(1570,ooil_L,plus) + s_slack(1570,ooil_L,minus) + s_slack(1570,opul_H,plus) + s_slack(1570,opul_H,minus) + s_slack(1570,opul_L,plus) + s_slack(1570,opul_L,minus) + s_slack(1570,opul_S,plus)
     
      + s_slack(1570,opul_S,minus) + s_slack(1570,pige_H,plus) + s_slack(1570,pige_H,minus) + s_slack(1570,pige_L,plus) + s_slack(1570,pige_L,minus) + s_slack(1570,pige_S,plus) + s_slack(1570,pige_S,minus) + s_slack(1570,pota_H,plus)
     
      + s_slack(1570,pota_H,minus) + s_slack(1570,pota_L,plus) + s_slack(1570,pota_L,minus) + s_slack(1570,pota_S,plus) + s_slack(1570,pota_S,minus) + s_slack(1570,rest_H,plus) + s_slack(1570,rest_H,minus) + s_slack(1570,rest_L,plus)
     
      + s_slack(1570,rest_L,minus) + s_slack(1570,rest_S,plus) + s_slack(1570,rest_S,minus) + s_slack(1570,rice_H,plus) + s_slack(1570,rice_H,minus) + s_slack(1570,rice_L,plus) + s_slack(1570,rice_L,minus) + s_slack(1570,rice_S,plus)
     
      + s_slack(1570,rice_S,minus) + s_slack(1570,sorg_L,plus) + s_slack(1570,sorg_L,minus) + s_slack(1570,sorg_S,plus) + s_slack(1570,sorg_S,minus) + s_slack(1570,soyb_L,plus) + s_slack(1570,soyb_L,minus) + s_slack(1570,soyb_S,plus)
     
      + s_slack(1570,soyb_S,minus) + s_slack(1570,sunf_L,plus) + s_slack(1570,sunf_L,minus) + s_slack(1570,temf_H,plus) + s_slack(1570,temf_H,minus) + s_slack(1570,temf_L,plus) + s_slack(1570,temf_L,minus) + s_slack(1570,temf_S,plus)
     
      + s_slack(1570,temf_S,minus) + s_slack(1570,toba_H,plus) + s_slack(1570,toba_H,minus) + s_slack(1570,toba_L,plus) + s_slack(1570,toba_L,minus) + s_slack(1570,trof_L,plus) + s_slack(1570,trof_L,minus) + s_slack(1570,trof_S,plus)
     
      + s_slack(1570,trof_S,minus) + s_slack(1570,vege_H,plus) + s_slack(1570,vege_H,minus) + s_slack(1570,vege_L,plus) + s_slack(1570,vege_L,minus) + s_slack(1570,vege_S,plus) + s_slack(1570,vege_S,minus) + s_slack(1571,rice_I,plus)
     
      + s_slack(1571,rice_I,minus) + s_slack(1571,sugc_I,plus) + s_slack(1571,sugc_I,minus) + s_slack(1571,whea_I,plus) + s_slack(1571,whea_I,minus) + s_slack(1571,bean_H,plus) + s_slack(1571,bean_H,minus) + s_slack(1571,bean_L,plus)
     
      + s_slack(1571,bean_L,minus) + s_slack(1571,bean_S,plus) + s_slack(1571,bean_S,minus) + s_slack(1571,cass_L,plus) + s_slack(1571,cass_L,minus) + s_slack(1571,cass_S,plus) + s_slack(1571,cass_S,minus) + s_slack(1571,chic_H,plus)
     
      + s_slack(1571,chic_H,minus) + s_slack(1571,chic_L,plus) + s_slack(1571,chic_L,minus) + s_slack(1571,chic_S,plus) + s_slack(1571,chic_S,minus) + s_slack(1571,coff_H,plus) + s_slack(1571,coff_H,minus) + s_slack(1571,coff_L,plus)
     
      + s_slack(1571,coff_L,minus) + s_slack(1571,cott_L,plus) + s_slack(1571,cott_L,minus) + s_slack(1571,cowp_H,plus) + s_slack(1571,cowp_H,minus) + s_slack(1571,cowp_L,plus) + s_slack(1571,cowp_L,minus) + s_slack(1571,cowp_S,plus)
     
      + s_slack(1571,cowp_S,minus) + s_slack(1571,grou_H,plus) + s_slack(1571,grou_H,minus) + s_slack(1571,grou_L,plus) + s_slack(1571,grou_L,minus) + s_slack(1571,grou_S,plus) + s_slack(1571,grou_S,minus) + s_slack(1571,lent_H,plus)
     
      + s_slack(1571,lent_H,minus) + s_slack(1571,lent_L,plus) + s_slack(1571,lent_L,minus) + s_slack(1571,lent_S,plus) + s_slack(1571,lent_S,minus) + s_slack(1571,maiz_H,plus) + s_slack(1571,maiz_H,minus) + s_slack(1571,maiz_L,plus)
     
      + s_slack(1571,maiz_L,minus) + s_slack(1571,maiz_S,plus) + s_slack(1571,maiz_S,minus) + s_slack(1571,mill_H,plus) + s_slack(1571,mill_H,minus) + s_slack(1571,mill_L,plus) + s_slack(1571,mill_L,minus) + s_slack(1571,mill_S,plus)
     
      + s_slack(1571,mill_S,minus) + s_slack(1571,ofib_L,plus) + s_slack(1571,ofib_L,minus) + s_slack(1571,ooil_L,plus) + s_slack(1571,ooil_L,minus) + s_slack(1571,opul_H,plus) + s_slack(1571,opul_H,minus) + s_slack(1571,opul_L,plus)
     
      + s_slack(1571,opul_L,minus) + s_slack(1571,opul_S,plus) + s_slack(1571,opul_S,minus) + s_slack(1571,pige_H,plus) + s_slack(1571,pige_H,minus) + s_slack(1571,pige_L,plus) + s_slack(1571,pige_L,minus) + s_slack(1571,pige_S,plus)
     
      + s_slack(1571,pige_S,minus) + s_slack(1571,pota_H,plus) + s_slack(1571,pota_H,minus) + s_slack(1571,pota_L,plus) + s_slack(1571,pota_L,minus) + s_slack(1571,pota_S,plus) + s_slack(1571,pota_S,minus) + s_slack(1571,rest_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 101
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1571,rest_H,minus) + s_slack(1571,rest_L,plus) + s_slack(1571,rest_L,minus) + s_slack(1571,rest_S,plus) + s_slack(1571,rest_S,minus) + s_slack(1571,rice_H,plus) + s_slack(1571,rice_H,minus) + s_slack(1571,rice_L,plus)
     
      + s_slack(1571,rice_L,minus) + s_slack(1571,rice_S,plus) + s_slack(1571,rice_S,minus) + s_slack(1571,sorg_L,plus) + s_slack(1571,sorg_L,minus) + s_slack(1571,sorg_S,plus) + s_slack(1571,sorg_S,minus) + s_slack(1571,soyb_L,plus)
     
      + s_slack(1571,soyb_L,minus) + s_slack(1571,soyb_S,plus) + s_slack(1571,soyb_S,minus) + s_slack(1571,sunf_L,plus) + s_slack(1571,sunf_L,minus) + s_slack(1571,temf_H,plus) + s_slack(1571,temf_H,minus) + s_slack(1571,temf_L,plus)
     
      + s_slack(1571,temf_L,minus) + s_slack(1571,temf_S,plus) + s_slack(1571,temf_S,minus) + s_slack(1571,toba_H,plus) + s_slack(1571,toba_H,minus) + s_slack(1571,toba_L,plus) + s_slack(1571,toba_L,minus) + s_slack(1571,trof_L,plus)
     
      + s_slack(1571,trof_L,minus) + s_slack(1571,trof_S,plus) + s_slack(1571,trof_S,minus) + s_slack(1571,vege_H,plus) + s_slack(1571,vege_H,minus) + s_slack(1571,vege_L,plus) + s_slack(1571,vege_L,minus) + s_slack(1571,vege_S,plus)
     
      + s_slack(1571,vege_S,minus) + s_slack(1572,rice_I,plus) + s_slack(1572,rice_I,minus) + s_slack(1572,sugc_I,plus) + s_slack(1572,sugc_I,minus) + s_slack(1572,whea_I,plus) + s_slack(1572,whea_I,minus) + s_slack(1572,bean_H,plus)
     
      + s_slack(1572,bean_H,minus) + s_slack(1572,bean_L,plus) + s_slack(1572,bean_L,minus) + s_slack(1572,bean_S,plus) + s_slack(1572,bean_S,minus) + s_slack(1572,cass_L,plus) + s_slack(1572,cass_L,minus) + s_slack(1572,cass_S,plus)
     
      + s_slack(1572,cass_S,minus) + s_slack(1572,chic_H,plus) + s_slack(1572,chic_H,minus) + s_slack(1572,chic_L,plus) + s_slack(1572,chic_L,minus) + s_slack(1572,chic_S,plus) + s_slack(1572,chic_S,minus) + s_slack(1572,coff_H,plus)
     
      + s_slack(1572,coff_H,minus) + s_slack(1572,coff_L,plus) + s_slack(1572,coff_L,minus) + s_slack(1572,cott_L,plus) + s_slack(1572,cott_L,minus) + s_slack(1572,cowp_H,plus) + s_slack(1572,cowp_H,minus) + s_slack(1572,cowp_L,plus)
     
      + s_slack(1572,cowp_L,minus) + s_slack(1572,cowp_S,plus) + s_slack(1572,cowp_S,minus) + s_slack(1572,grou_H,plus) + s_slack(1572,grou_H,minus) + s_slack(1572,grou_L,plus) + s_slack(1572,grou_L,minus) + s_slack(1572,grou_S,plus)
     
      + s_slack(1572,grou_S,minus) + s_slack(1572,lent_H,plus) + s_slack(1572,lent_H,minus) + s_slack(1572,lent_L,plus) + s_slack(1572,lent_L,minus) + s_slack(1572,lent_S,plus) + s_slack(1572,lent_S,minus) + s_slack(1572,maiz_H,plus)
     
      + s_slack(1572,maiz_H,minus) + s_slack(1572,maiz_L,plus) + s_slack(1572,maiz_L,minus) + s_slack(1572,maiz_S,plus) + s_slack(1572,maiz_S,minus) + s_slack(1572,mill_H,plus) + s_slack(1572,mill_H,minus) + s_slack(1572,mill_L,plus)
     
      + s_slack(1572,mill_L,minus) + s_slack(1572,mill_S,plus) + s_slack(1572,mill_S,minus) + s_slack(1572,ofib_L,plus) + s_slack(1572,ofib_L,minus) + s_slack(1572,ooil_L,plus) + s_slack(1572,ooil_L,minus) + s_slack(1572,opul_H,plus)
     
      + s_slack(1572,opul_H,minus) + s_slack(1572,opul_L,plus) + s_slack(1572,opul_L,minus) + s_slack(1572,opul_S,plus) + s_slack(1572,opul_S,minus) + s_slack(1572,pige_H,plus) + s_slack(1572,pige_H,minus) + s_slack(1572,pige_L,plus)
     
      + s_slack(1572,pige_L,minus) + s_slack(1572,pige_S,plus) + s_slack(1572,pige_S,minus) + s_slack(1572,pota_H,plus) + s_slack(1572,pota_H,minus) + s_slack(1572,pota_L,plus) + s_slack(1572,pota_L,minus) + s_slack(1572,pota_S,plus)
     
      + s_slack(1572,pota_S,minus) + s_slack(1572,rest_H,plus) + s_slack(1572,rest_H,minus) + s_slack(1572,rest_L,plus) + s_slack(1572,rest_L,minus) + s_slack(1572,rest_S,plus) + s_slack(1572,rest_S,minus) + s_slack(1572,rice_H,plus)
     
      + s_slack(1572,rice_H,minus) + s_slack(1572,rice_L,plus) + s_slack(1572,rice_L,minus) + s_slack(1572,rice_S,plus) + s_slack(1572,rice_S,minus) + s_slack(1572,sorg_L,plus) + s_slack(1572,sorg_L,minus) + s_slack(1572,sorg_S,plus)
     
      + s_slack(1572,sorg_S,minus) + s_slack(1572,soyb_L,plus) + s_slack(1572,soyb_L,minus) + s_slack(1572,soyb_S,plus) + s_slack(1572,soyb_S,minus) + s_slack(1572,sunf_L,plus) + s_slack(1572,sunf_L,minus) + s_slack(1572,temf_H,plus)
     
      + s_slack(1572,temf_H,minus) + s_slack(1572,temf_L,plus) + s_slack(1572,temf_L,minus) + s_slack(1572,temf_S,plus) + s_slack(1572,temf_S,minus) + s_slack(1572,toba_H,plus) + s_slack(1572,toba_H,minus) + s_slack(1572,toba_L,plus)
     
      + s_slack(1572,toba_L,minus) + s_slack(1572,trof_L,plus) + s_slack(1572,trof_L,minus) + s_slack(1572,trof_S,plus) + s_slack(1572,trof_S,minus) + s_slack(1572,vege_H,plus) + s_slack(1572,vege_H,minus) + s_slack(1572,vege_L,plus)
     
      + s_slack(1572,vege_L,minus) + s_slack(1572,vege_S,plus) + s_slack(1572,vege_S,minus) + s_slack(1578,rice_I,plus) + s_slack(1578,rice_I,minus) + s_slack(1578,sugc_I,plus) + s_slack(1578,sugc_I,minus) + s_slack(1578,whea_I,plus)
     
      + s_slack(1578,whea_I,minus) + s_slack(1578,bean_H,plus) + s_slack(1578,bean_H,minus) + s_slack(1578,bean_L,plus) + s_slack(1578,bean_L,minus) + s_slack(1578,bean_S,plus) + s_slack(1578,bean_S,minus) + s_slack(1578,cass_L,plus)
     
      + s_slack(1578,cass_L,minus) + s_slack(1578,cass_S,plus) + s_slack(1578,cass_S,minus) + s_slack(1578,chic_H,plus) + s_slack(1578,chic_H,minus) + s_slack(1578,chic_L,plus) + s_slack(1578,chic_L,minus) + s_slack(1578,chic_S,plus)
     
      + s_slack(1578,chic_S,minus) + s_slack(1578,coff_H,plus) + s_slack(1578,coff_H,minus) + s_slack(1578,coff_L,plus) + s_slack(1578,coff_L,minus) + s_slack(1578,cott_L,plus) + s_slack(1578,cott_L,minus) + s_slack(1578,cowp_H,plus)
     
      + s_slack(1578,cowp_H,minus) + s_slack(1578,cowp_L,plus) + s_slack(1578,cowp_L,minus) + s_slack(1578,cowp_S,plus) + s_slack(1578,cowp_S,minus) + s_slack(1578,grou_H,plus) + s_slack(1578,grou_H,minus) + s_slack(1578,grou_L,plus)
     
      + s_slack(1578,grou_L,minus) + s_slack(1578,grou_S,plus) + s_slack(1578,grou_S,minus) + s_slack(1578,lent_H,plus) + s_slack(1578,lent_H,minus) + s_slack(1578,lent_L,plus) + s_slack(1578,lent_L,minus) + s_slack(1578,lent_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 102
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1578,lent_S,minus) + s_slack(1578,maiz_H,plus) + s_slack(1578,maiz_H,minus) + s_slack(1578,maiz_L,plus) + s_slack(1578,maiz_L,minus) + s_slack(1578,maiz_S,plus) + s_slack(1578,maiz_S,minus) + s_slack(1578,mill_H,plus)
     
      + s_slack(1578,mill_H,minus) + s_slack(1578,mill_L,plus) + s_slack(1578,mill_L,minus) + s_slack(1578,mill_S,plus) + s_slack(1578,mill_S,minus) + s_slack(1578,ofib_L,plus) + s_slack(1578,ofib_L,minus) + s_slack(1578,ooil_L,plus)
     
      + s_slack(1578,ooil_L,minus) + s_slack(1578,opul_H,plus) + s_slack(1578,opul_H,minus) + s_slack(1578,opul_L,plus) + s_slack(1578,opul_L,minus) + s_slack(1578,opul_S,plus) + s_slack(1578,opul_S,minus) + s_slack(1578,pige_H,plus)
     
      + s_slack(1578,pige_H,minus) + s_slack(1578,pige_L,plus) + s_slack(1578,pige_L,minus) + s_slack(1578,pige_S,plus) + s_slack(1578,pige_S,minus) + s_slack(1578,pota_H,plus) + s_slack(1578,pota_H,minus) + s_slack(1578,pota_L,plus)
     
      + s_slack(1578,pota_L,minus) + s_slack(1578,pota_S,plus) + s_slack(1578,pota_S,minus) + s_slack(1578,rest_H,plus) + s_slack(1578,rest_H,minus) + s_slack(1578,rest_L,plus) + s_slack(1578,rest_L,minus) + s_slack(1578,rest_S,plus)
     
      + s_slack(1578,rest_S,minus) + s_slack(1578,rice_H,plus) + s_slack(1578,rice_H,minus) + s_slack(1578,rice_L,plus) + s_slack(1578,rice_L,minus) + s_slack(1578,rice_S,plus) + s_slack(1578,rice_S,minus) + s_slack(1578,sorg_L,plus)
     
      + s_slack(1578,sorg_L,minus) + s_slack(1578,sorg_S,plus) + s_slack(1578,sorg_S,minus) + s_slack(1578,soyb_L,plus) + s_slack(1578,soyb_L,minus) + s_slack(1578,soyb_S,plus) + s_slack(1578,soyb_S,minus) + s_slack(1578,sunf_L,plus)
     
      + s_slack(1578,sunf_L,minus) + s_slack(1578,temf_H,plus) + s_slack(1578,temf_H,minus) + s_slack(1578,temf_L,plus) + s_slack(1578,temf_L,minus) + s_slack(1578,temf_S,plus) + s_slack(1578,temf_S,minus) + s_slack(1578,toba_H,plus)
     
      + s_slack(1578,toba_H,minus) + s_slack(1578,toba_L,plus) + s_slack(1578,toba_L,minus) + s_slack(1578,trof_L,plus) + s_slack(1578,trof_L,minus) + s_slack(1578,trof_S,plus) + s_slack(1578,trof_S,minus) + s_slack(1578,vege_H,plus)
     
      + s_slack(1578,vege_H,minus) + s_slack(1578,vege_L,plus) + s_slack(1578,vege_L,minus) + s_slack(1578,vege_S,plus) + s_slack(1578,vege_S,minus) + s_slack(1579,rice_I,plus) + s_slack(1579,rice_I,minus) + s_slack(1579,sugc_I,plus)
     
      + s_slack(1579,sugc_I,minus) + s_slack(1579,whea_I,plus) + s_slack(1579,whea_I,minus) + s_slack(1579,bean_H,plus) + s_slack(1579,bean_H,minus) + s_slack(1579,bean_L,plus) + s_slack(1579,bean_L,minus) + s_slack(1579,bean_S,plus)
     
      + s_slack(1579,bean_S,minus) + s_slack(1579,cass_L,plus) + s_slack(1579,cass_L,minus) + s_slack(1579,cass_S,plus) + s_slack(1579,cass_S,minus) + s_slack(1579,chic_H,plus) + s_slack(1579,chic_H,minus) + s_slack(1579,chic_L,plus)
     
      + s_slack(1579,chic_L,minus) + s_slack(1579,chic_S,plus) + s_slack(1579,chic_S,minus) + s_slack(1579,coff_H,plus) + s_slack(1579,coff_H,minus) + s_slack(1579,coff_L,plus) + s_slack(1579,coff_L,minus) + s_slack(1579,cott_L,plus)
     
      + s_slack(1579,cott_L,minus) + s_slack(1579,cowp_H,plus) + s_slack(1579,cowp_H,minus) + s_slack(1579,cowp_L,plus) + s_slack(1579,cowp_L,minus) + s_slack(1579,cowp_S,plus) + s_slack(1579,cowp_S,minus) + s_slack(1579,grou_H,plus)
     
      + s_slack(1579,grou_H,minus) + s_slack(1579,grou_L,plus) + s_slack(1579,grou_L,minus) + s_slack(1579,grou_S,plus) + s_slack(1579,grou_S,minus) + s_slack(1579,lent_H,plus) + s_slack(1579,lent_H,minus) + s_slack(1579,lent_L,plus)
     
      + s_slack(1579,lent_L,minus) + s_slack(1579,lent_S,plus) + s_slack(1579,lent_S,minus) + s_slack(1579,maiz_H,plus) + s_slack(1579,maiz_H,minus) + s_slack(1579,maiz_L,plus) + s_slack(1579,maiz_L,minus) + s_slack(1579,maiz_S,plus)
     
      + s_slack(1579,maiz_S,minus) + s_slack(1579,mill_H,plus) + s_slack(1579,mill_H,minus) + s_slack(1579,mill_L,plus) + s_slack(1579,mill_L,minus) + s_slack(1579,mill_S,plus) + s_slack(1579,mill_S,minus) + s_slack(1579,ofib_L,plus)
     
      + s_slack(1579,ofib_L,minus) + s_slack(1579,ooil_L,plus) + s_slack(1579,ooil_L,minus) + s_slack(1579,opul_H,plus) + s_slack(1579,opul_H,minus) + s_slack(1579,opul_L,plus) + s_slack(1579,opul_L,minus) + s_slack(1579,opul_S,plus)
     
      + s_slack(1579,opul_S,minus) + s_slack(1579,pige_H,plus) + s_slack(1579,pige_H,minus) + s_slack(1579,pige_L,plus) + s_slack(1579,pige_L,minus) + s_slack(1579,pige_S,plus) + s_slack(1579,pige_S,minus) + s_slack(1579,pota_H,plus)
     
      + s_slack(1579,pota_H,minus) + s_slack(1579,pota_L,plus) + s_slack(1579,pota_L,minus) + s_slack(1579,pota_S,plus) + s_slack(1579,pota_S,minus) + s_slack(1579,rest_H,plus) + s_slack(1579,rest_H,minus) + s_slack(1579,rest_L,plus)
     
      + s_slack(1579,rest_L,minus) + s_slack(1579,rest_S,plus) + s_slack(1579,rest_S,minus) + s_slack(1579,rice_H,plus) + s_slack(1579,rice_H,minus) + s_slack(1579,rice_L,plus) + s_slack(1579,rice_L,minus) + s_slack(1579,rice_S,plus)
     
      + s_slack(1579,rice_S,minus) + s_slack(1579,sorg_L,plus) + s_slack(1579,sorg_L,minus) + s_slack(1579,sorg_S,plus) + s_slack(1579,sorg_S,minus) + s_slack(1579,soyb_L,plus) + s_slack(1579,soyb_L,minus) + s_slack(1579,soyb_S,plus)
     
      + s_slack(1579,soyb_S,minus) + s_slack(1579,sunf_L,plus) + s_slack(1579,sunf_L,minus) + s_slack(1579,temf_H,plus) + s_slack(1579,temf_H,minus) + s_slack(1579,temf_L,plus) + s_slack(1579,temf_L,minus) + s_slack(1579,temf_S,plus)
     
      + s_slack(1579,temf_S,minus) + s_slack(1579,toba_H,plus) + s_slack(1579,toba_H,minus) + s_slack(1579,toba_L,plus) + s_slack(1579,toba_L,minus) + s_slack(1579,trof_L,plus) + s_slack(1579,trof_L,minus) + s_slack(1579,trof_S,plus)
     
      + s_slack(1579,trof_S,minus) + s_slack(1579,vege_H,plus) + s_slack(1579,vege_H,minus) + s_slack(1579,vege_L,plus) + s_slack(1579,vege_L,minus) + s_slack(1579,vege_S,plus) + s_slack(1579,vege_S,minus) + s_slack(1603,rice_I,plus)
     
      + s_slack(1603,rice_I,minus) + s_slack(1603,sugc_I,plus) + s_slack(1603,sugc_I,minus) + s_slack(1603,whea_I,plus) + s_slack(1603,whea_I,minus) + s_slack(1603,bean_H,plus) + s_slack(1603,bean_H,minus) + s_slack(1603,bean_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 103
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1603,bean_L,minus) + s_slack(1603,bean_S,plus) + s_slack(1603,bean_S,minus) + s_slack(1603,cass_L,plus) + s_slack(1603,cass_L,minus) + s_slack(1603,cass_S,plus) + s_slack(1603,cass_S,minus) + s_slack(1603,chic_H,plus)
     
      + s_slack(1603,chic_H,minus) + s_slack(1603,chic_L,plus) + s_slack(1603,chic_L,minus) + s_slack(1603,chic_S,plus) + s_slack(1603,chic_S,minus) + s_slack(1603,coff_H,plus) + s_slack(1603,coff_H,minus) + s_slack(1603,coff_L,plus)
     
      + s_slack(1603,coff_L,minus) + s_slack(1603,cott_L,plus) + s_slack(1603,cott_L,minus) + s_slack(1603,cowp_H,plus) + s_slack(1603,cowp_H,minus) + s_slack(1603,cowp_L,plus) + s_slack(1603,cowp_L,minus) + s_slack(1603,cowp_S,plus)
     
      + s_slack(1603,cowp_S,minus) + s_slack(1603,grou_H,plus) + s_slack(1603,grou_H,minus) + s_slack(1603,grou_L,plus) + s_slack(1603,grou_L,minus) + s_slack(1603,grou_S,plus) + s_slack(1603,grou_S,minus) + s_slack(1603,lent_H,plus)
     
      + s_slack(1603,lent_H,minus) + s_slack(1603,lent_L,plus) + s_slack(1603,lent_L,minus) + s_slack(1603,lent_S,plus) + s_slack(1603,lent_S,minus) + s_slack(1603,maiz_H,plus) + s_slack(1603,maiz_H,minus) + s_slack(1603,maiz_L,plus)
     
      + s_slack(1603,maiz_L,minus) + s_slack(1603,maiz_S,plus) + s_slack(1603,maiz_S,minus) + s_slack(1603,mill_H,plus) + s_slack(1603,mill_H,minus) + s_slack(1603,mill_L,plus) + s_slack(1603,mill_L,minus) + s_slack(1603,mill_S,plus)
     
      + s_slack(1603,mill_S,minus) + s_slack(1603,ofib_L,plus) + s_slack(1603,ofib_L,minus) + s_slack(1603,ooil_L,plus) + s_slack(1603,ooil_L,minus) + s_slack(1603,opul_H,plus) + s_slack(1603,opul_H,minus) + s_slack(1603,opul_L,plus)
     
      + s_slack(1603,opul_L,minus) + s_slack(1603,opul_S,plus) + s_slack(1603,opul_S,minus) + s_slack(1603,pige_H,plus) + s_slack(1603,pige_H,minus) + s_slack(1603,pige_L,plus) + s_slack(1603,pige_L,minus) + s_slack(1603,pige_S,plus)
     
      + s_slack(1603,pige_S,minus) + s_slack(1603,pota_H,plus) + s_slack(1603,pota_H,minus) + s_slack(1603,pota_L,plus) + s_slack(1603,pota_L,minus) + s_slack(1603,pota_S,plus) + s_slack(1603,pota_S,minus) + s_slack(1603,rest_H,plus)
     
      + s_slack(1603,rest_H,minus) + s_slack(1603,rest_L,plus) + s_slack(1603,rest_L,minus) + s_slack(1603,rest_S,plus) + s_slack(1603,rest_S,minus) + s_slack(1603,rice_H,plus) + s_slack(1603,rice_H,minus) + s_slack(1603,rice_L,plus)
     
      + s_slack(1603,rice_L,minus) + s_slack(1603,rice_S,plus) + s_slack(1603,rice_S,minus) + s_slack(1603,sorg_L,plus) + s_slack(1603,sorg_L,minus) + s_slack(1603,sorg_S,plus) + s_slack(1603,sorg_S,minus) + s_slack(1603,soyb_L,plus)
     
      + s_slack(1603,soyb_L,minus) + s_slack(1603,soyb_S,plus) + s_slack(1603,soyb_S,minus) + s_slack(1603,sunf_L,plus) + s_slack(1603,sunf_L,minus) + s_slack(1603,temf_H,plus) + s_slack(1603,temf_H,minus) + s_slack(1603,temf_L,plus)
     
      + s_slack(1603,temf_L,minus) + s_slack(1603,temf_S,plus) + s_slack(1603,temf_S,minus) + s_slack(1603,toba_H,plus) + s_slack(1603,toba_H,minus) + s_slack(1603,toba_L,plus) + s_slack(1603,toba_L,minus) + s_slack(1603,trof_L,plus)
     
      + s_slack(1603,trof_L,minus) + s_slack(1603,trof_S,plus) + s_slack(1603,trof_S,minus) + s_slack(1603,vege_H,plus) + s_slack(1603,vege_H,minus) + s_slack(1603,vege_L,plus) + s_slack(1603,vege_L,minus) + s_slack(1603,vege_S,plus)
     
      + s_slack(1603,vege_S,minus) + s_slack(1604,rice_I,plus) + s_slack(1604,rice_I,minus) + s_slack(1604,sugc_I,plus) + s_slack(1604,sugc_I,minus) + s_slack(1604,whea_I,plus) + s_slack(1604,whea_I,minus) + s_slack(1604,bean_H,plus)
     
      + s_slack(1604,bean_H,minus) + s_slack(1604,bean_L,plus) + s_slack(1604,bean_L,minus) + s_slack(1604,bean_S,plus) + s_slack(1604,bean_S,minus) + s_slack(1604,cass_L,plus) + s_slack(1604,cass_L,minus) + s_slack(1604,cass_S,plus)
     
      + s_slack(1604,cass_S,minus) + s_slack(1604,chic_H,plus) + s_slack(1604,chic_H,minus) + s_slack(1604,chic_L,plus) + s_slack(1604,chic_L,minus) + s_slack(1604,chic_S,plus) + s_slack(1604,chic_S,minus) + s_slack(1604,coff_H,plus)
     
      + s_slack(1604,coff_H,minus) + s_slack(1604,coff_L,plus) + s_slack(1604,coff_L,minus) + s_slack(1604,cott_L,plus) + s_slack(1604,cott_L,minus) + s_slack(1604,cowp_H,plus) + s_slack(1604,cowp_H,minus) + s_slack(1604,cowp_L,plus)
     
      + s_slack(1604,cowp_L,minus) + s_slack(1604,cowp_S,plus) + s_slack(1604,cowp_S,minus) + s_slack(1604,grou_H,plus) + s_slack(1604,grou_H,minus) + s_slack(1604,grou_L,plus) + s_slack(1604,grou_L,minus) + s_slack(1604,grou_S,plus)
     
      + s_slack(1604,grou_S,minus) + s_slack(1604,lent_H,plus) + s_slack(1604,lent_H,minus) + s_slack(1604,lent_L,plus) + s_slack(1604,lent_L,minus) + s_slack(1604,lent_S,plus) + s_slack(1604,lent_S,minus) + s_slack(1604,maiz_H,plus)
     
      + s_slack(1604,maiz_H,minus) + s_slack(1604,maiz_L,plus) + s_slack(1604,maiz_L,minus) + s_slack(1604,maiz_S,plus) + s_slack(1604,maiz_S,minus) + s_slack(1604,mill_H,plus) + s_slack(1604,mill_H,minus) + s_slack(1604,mill_L,plus)
     
      + s_slack(1604,mill_L,minus) + s_slack(1604,mill_S,plus) + s_slack(1604,mill_S,minus) + s_slack(1604,ofib_L,plus) + s_slack(1604,ofib_L,minus) + s_slack(1604,ooil_L,plus) + s_slack(1604,ooil_L,minus) + s_slack(1604,opul_H,plus)
     
      + s_slack(1604,opul_H,minus) + s_slack(1604,opul_L,plus) + s_slack(1604,opul_L,minus) + s_slack(1604,opul_S,plus) + s_slack(1604,opul_S,minus) + s_slack(1604,pige_H,plus) + s_slack(1604,pige_H,minus) + s_slack(1604,pige_L,plus)
     
      + s_slack(1604,pige_L,minus) + s_slack(1604,pige_S,plus) + s_slack(1604,pige_S,minus) + s_slack(1604,pota_H,plus) + s_slack(1604,pota_H,minus) + s_slack(1604,pota_L,plus) + s_slack(1604,pota_L,minus) + s_slack(1604,pota_S,plus)
     
      + s_slack(1604,pota_S,minus) + s_slack(1604,rest_H,plus) + s_slack(1604,rest_H,minus) + s_slack(1604,rest_L,plus) + s_slack(1604,rest_L,minus) + s_slack(1604,rest_S,plus) + s_slack(1604,rest_S,minus) + s_slack(1604,rice_H,plus)
     
      + s_slack(1604,rice_H,minus) + s_slack(1604,rice_L,plus) + s_slack(1604,rice_L,minus) + s_slack(1604,rice_S,plus) + s_slack(1604,rice_S,minus) + s_slack(1604,sorg_L,plus) + s_slack(1604,sorg_L,minus) + s_slack(1604,sorg_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 104
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1604,sorg_S,minus) + s_slack(1604,soyb_L,plus) + s_slack(1604,soyb_L,minus) + s_slack(1604,soyb_S,plus) + s_slack(1604,soyb_S,minus) + s_slack(1604,sunf_L,plus) + s_slack(1604,sunf_L,minus) + s_slack(1604,temf_H,plus)
     
      + s_slack(1604,temf_H,minus) + s_slack(1604,temf_L,plus) + s_slack(1604,temf_L,minus) + s_slack(1604,temf_S,plus) + s_slack(1604,temf_S,minus) + s_slack(1604,toba_H,plus) + s_slack(1604,toba_H,minus) + s_slack(1604,toba_L,plus)
     
      + s_slack(1604,toba_L,minus) + s_slack(1604,trof_L,plus) + s_slack(1604,trof_L,minus) + s_slack(1604,trof_S,plus) + s_slack(1604,trof_S,minus) + s_slack(1604,vege_H,plus) + s_slack(1604,vege_H,minus) + s_slack(1604,vege_L,plus)
     
      + s_slack(1604,vege_L,minus) + s_slack(1604,vege_S,plus) + s_slack(1604,vege_S,minus) + s_slack(1608,rice_I,plus) + s_slack(1608,rice_I,minus) + s_slack(1608,sugc_I,plus) + s_slack(1608,sugc_I,minus) + s_slack(1608,whea_I,plus)
     
      + s_slack(1608,whea_I,minus) + s_slack(1608,bean_H,plus) + s_slack(1608,bean_H,minus) + s_slack(1608,bean_L,plus) + s_slack(1608,bean_L,minus) + s_slack(1608,bean_S,plus) + s_slack(1608,bean_S,minus) + s_slack(1608,cass_L,plus)
     
      + s_slack(1608,cass_L,minus) + s_slack(1608,cass_S,plus) + s_slack(1608,cass_S,minus) + s_slack(1608,chic_H,plus) + s_slack(1608,chic_H,minus) + s_slack(1608,chic_L,plus) + s_slack(1608,chic_L,minus) + s_slack(1608,chic_S,plus)
     
      + s_slack(1608,chic_S,minus) + s_slack(1608,coff_H,plus) + s_slack(1608,coff_H,minus) + s_slack(1608,coff_L,plus) + s_slack(1608,coff_L,minus) + s_slack(1608,cott_L,plus) + s_slack(1608,cott_L,minus) + s_slack(1608,cowp_H,plus)
     
      + s_slack(1608,cowp_H,minus) + s_slack(1608,cowp_L,plus) + s_slack(1608,cowp_L,minus) + s_slack(1608,cowp_S,plus) + s_slack(1608,cowp_S,minus) + s_slack(1608,grou_H,plus) + s_slack(1608,grou_H,minus) + s_slack(1608,grou_L,plus)
     
      + s_slack(1608,grou_L,minus) + s_slack(1608,grou_S,plus) + s_slack(1608,grou_S,minus) + s_slack(1608,lent_H,plus) + s_slack(1608,lent_H,minus) + s_slack(1608,lent_L,plus) + s_slack(1608,lent_L,minus) + s_slack(1608,lent_S,plus)
     
      + s_slack(1608,lent_S,minus) + s_slack(1608,maiz_H,plus) + s_slack(1608,maiz_H,minus) + s_slack(1608,maiz_L,plus) + s_slack(1608,maiz_L,minus) + s_slack(1608,maiz_S,plus) + s_slack(1608,maiz_S,minus) + s_slack(1608,mill_H,plus)
     
      + s_slack(1608,mill_H,minus) + s_slack(1608,mill_L,plus) + s_slack(1608,mill_L,minus) + s_slack(1608,mill_S,plus) + s_slack(1608,mill_S,minus) + s_slack(1608,ofib_L,plus) + s_slack(1608,ofib_L,minus) + s_slack(1608,ooil_L,plus)
     
      + s_slack(1608,ooil_L,minus) + s_slack(1608,opul_H,plus) + s_slack(1608,opul_H,minus) + s_slack(1608,opul_L,plus) + s_slack(1608,opul_L,minus) + s_slack(1608,opul_S,plus) + s_slack(1608,opul_S,minus) + s_slack(1608,pige_H,plus)
     
      + s_slack(1608,pige_H,minus) + s_slack(1608,pige_L,plus) + s_slack(1608,pige_L,minus) + s_slack(1608,pige_S,plus) + s_slack(1608,pige_S,minus) + s_slack(1608,pota_H,plus) + s_slack(1608,pota_H,minus) + s_slack(1608,pota_L,plus)
     
      + s_slack(1608,pota_L,minus) + s_slack(1608,pota_S,plus) + s_slack(1608,pota_S,minus) + s_slack(1608,rest_H,plus) + s_slack(1608,rest_H,minus) + s_slack(1608,rest_L,plus) + s_slack(1608,rest_L,minus) + s_slack(1608,rest_S,plus)
     
      + s_slack(1608,rest_S,minus) + s_slack(1608,rice_H,plus) + s_slack(1608,rice_H,minus) + s_slack(1608,rice_L,plus) + s_slack(1608,rice_L,minus) + s_slack(1608,rice_S,plus) + s_slack(1608,rice_S,minus) + s_slack(1608,sorg_L,plus)
     
      + s_slack(1608,sorg_L,minus) + s_slack(1608,sorg_S,plus) + s_slack(1608,sorg_S,minus) + s_slack(1608,soyb_L,plus) + s_slack(1608,soyb_L,minus) + s_slack(1608,soyb_S,plus) + s_slack(1608,soyb_S,minus) + s_slack(1608,sunf_L,plus)
     
      + s_slack(1608,sunf_L,minus) + s_slack(1608,temf_H,plus) + s_slack(1608,temf_H,minus) + s_slack(1608,temf_L,plus) + s_slack(1608,temf_L,minus) + s_slack(1608,temf_S,plus) + s_slack(1608,temf_S,minus) + s_slack(1608,toba_H,plus)
     
      + s_slack(1608,toba_H,minus) + s_slack(1608,toba_L,plus) + s_slack(1608,toba_L,minus) + s_slack(1608,trof_L,plus) + s_slack(1608,trof_L,minus) + s_slack(1608,trof_S,plus) + s_slack(1608,trof_S,minus) + s_slack(1608,vege_H,plus)
     
      + s_slack(1608,vege_H,minus) + s_slack(1608,vege_L,plus) + s_slack(1608,vege_L,minus) + s_slack(1608,vege_S,plus) + s_slack(1608,vege_S,minus) + s_slack(1609,rice_I,plus) + s_slack(1609,rice_I,minus) + s_slack(1609,sugc_I,plus)
     
      + s_slack(1609,sugc_I,minus) + s_slack(1609,whea_I,plus) + s_slack(1609,whea_I,minus) + s_slack(1609,bean_H,plus) + s_slack(1609,bean_H,minus) + s_slack(1609,bean_L,plus) + s_slack(1609,bean_L,minus) + s_slack(1609,bean_S,plus)
     
      + s_slack(1609,bean_S,minus) + s_slack(1609,cass_L,plus) + s_slack(1609,cass_L,minus) + s_slack(1609,cass_S,plus) + s_slack(1609,cass_S,minus) + s_slack(1609,chic_H,plus) + s_slack(1609,chic_H,minus) + s_slack(1609,chic_L,plus)
     
      + s_slack(1609,chic_L,minus) + s_slack(1609,chic_S,plus) + s_slack(1609,chic_S,minus) + s_slack(1609,coff_H,plus) + s_slack(1609,coff_H,minus) + s_slack(1609,coff_L,plus) + s_slack(1609,coff_L,minus) + s_slack(1609,cott_L,plus)
     
      + s_slack(1609,cott_L,minus) + s_slack(1609,cowp_H,plus) + s_slack(1609,cowp_H,minus) + s_slack(1609,cowp_L,plus) + s_slack(1609,cowp_L,minus) + s_slack(1609,cowp_S,plus) + s_slack(1609,cowp_S,minus) + s_slack(1609,grou_H,plus)
     
      + s_slack(1609,grou_H,minus) + s_slack(1609,grou_L,plus) + s_slack(1609,grou_L,minus) + s_slack(1609,grou_S,plus) + s_slack(1609,grou_S,minus) + s_slack(1609,lent_H,plus) + s_slack(1609,lent_H,minus) + s_slack(1609,lent_L,plus)
     
      + s_slack(1609,lent_L,minus) + s_slack(1609,lent_S,plus) + s_slack(1609,lent_S,minus) + s_slack(1609,maiz_H,plus) + s_slack(1609,maiz_H,minus) + s_slack(1609,maiz_L,plus) + s_slack(1609,maiz_L,minus) + s_slack(1609,maiz_S,plus)
     
      + s_slack(1609,maiz_S,minus) + s_slack(1609,mill_H,plus) + s_slack(1609,mill_H,minus) + s_slack(1609,mill_L,plus) + s_slack(1609,mill_L,minus) + s_slack(1609,mill_S,plus) + s_slack(1609,mill_S,minus) + s_slack(1609,ofib_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 105
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1609,ofib_L,minus) + s_slack(1609,ooil_L,plus) + s_slack(1609,ooil_L,minus) + s_slack(1609,opul_H,plus) + s_slack(1609,opul_H,minus) + s_slack(1609,opul_L,plus) + s_slack(1609,opul_L,minus) + s_slack(1609,opul_S,plus)
     
      + s_slack(1609,opul_S,minus) + s_slack(1609,pige_H,plus) + s_slack(1609,pige_H,minus) + s_slack(1609,pige_L,plus) + s_slack(1609,pige_L,minus) + s_slack(1609,pige_S,plus) + s_slack(1609,pige_S,minus) + s_slack(1609,pota_H,plus)
     
      + s_slack(1609,pota_H,minus) + s_slack(1609,pota_L,plus) + s_slack(1609,pota_L,minus) + s_slack(1609,pota_S,plus) + s_slack(1609,pota_S,minus) + s_slack(1609,rest_H,plus) + s_slack(1609,rest_H,minus) + s_slack(1609,rest_L,plus)
     
      + s_slack(1609,rest_L,minus) + s_slack(1609,rest_S,plus) + s_slack(1609,rest_S,minus) + s_slack(1609,rice_H,plus) + s_slack(1609,rice_H,minus) + s_slack(1609,rice_L,plus) + s_slack(1609,rice_L,minus) + s_slack(1609,rice_S,plus)
     
      + s_slack(1609,rice_S,minus) + s_slack(1609,sorg_L,plus) + s_slack(1609,sorg_L,minus) + s_slack(1609,sorg_S,plus) + s_slack(1609,sorg_S,minus) + s_slack(1609,soyb_L,plus) + s_slack(1609,soyb_L,minus) + s_slack(1609,soyb_S,plus)
     
      + s_slack(1609,soyb_S,minus) + s_slack(1609,sunf_L,plus) + s_slack(1609,sunf_L,minus) + s_slack(1609,temf_H,plus) + s_slack(1609,temf_H,minus) + s_slack(1609,temf_L,plus) + s_slack(1609,temf_L,minus) + s_slack(1609,temf_S,plus)
     
      + s_slack(1609,temf_S,minus) + s_slack(1609,toba_H,plus) + s_slack(1609,toba_H,minus) + s_slack(1609,toba_L,plus) + s_slack(1609,toba_L,minus) + s_slack(1609,trof_L,plus) + s_slack(1609,trof_L,minus) + s_slack(1609,trof_S,plus)
     
      + s_slack(1609,trof_S,minus) + s_slack(1609,vege_H,plus) + s_slack(1609,vege_H,minus) + s_slack(1609,vege_L,plus) + s_slack(1609,vege_L,minus) + s_slack(1609,vege_S,plus) + s_slack(1609,vege_S,minus) + s_slack(1610,rice_I,plus)
     
      + s_slack(1610,rice_I,minus) + s_slack(1610,sugc_I,plus) + s_slack(1610,sugc_I,minus) + s_slack(1610,whea_I,plus) + s_slack(1610,whea_I,minus) + s_slack(1610,bean_H,plus) + s_slack(1610,bean_H,minus) + s_slack(1610,bean_L,plus)
     
      + s_slack(1610,bean_L,minus) + s_slack(1610,bean_S,plus) + s_slack(1610,bean_S,minus) + s_slack(1610,cass_L,plus) + s_slack(1610,cass_L,minus) + s_slack(1610,cass_S,plus) + s_slack(1610,cass_S,minus) + s_slack(1610,chic_H,plus)
     
      + s_slack(1610,chic_H,minus) + s_slack(1610,chic_L,plus) + s_slack(1610,chic_L,minus) + s_slack(1610,chic_S,plus) + s_slack(1610,chic_S,minus) + s_slack(1610,coff_H,plus) + s_slack(1610,coff_H,minus) + s_slack(1610,coff_L,plus)
     
      + s_slack(1610,coff_L,minus) + s_slack(1610,cott_L,plus) + s_slack(1610,cott_L,minus) + s_slack(1610,cowp_H,plus) + s_slack(1610,cowp_H,minus) + s_slack(1610,cowp_L,plus) + s_slack(1610,cowp_L,minus) + s_slack(1610,cowp_S,plus)
     
      + s_slack(1610,cowp_S,minus) + s_slack(1610,grou_H,plus) + s_slack(1610,grou_H,minus) + s_slack(1610,grou_L,plus) + s_slack(1610,grou_L,minus) + s_slack(1610,grou_S,plus) + s_slack(1610,grou_S,minus) + s_slack(1610,lent_H,plus)
     
      + s_slack(1610,lent_H,minus) + s_slack(1610,lent_L,plus) + s_slack(1610,lent_L,minus) + s_slack(1610,lent_S,plus) + s_slack(1610,lent_S,minus) + s_slack(1610,maiz_H,plus) + s_slack(1610,maiz_H,minus) + s_slack(1610,maiz_L,plus)
     
      + s_slack(1610,maiz_L,minus) + s_slack(1610,maiz_S,plus) + s_slack(1610,maiz_S,minus) + s_slack(1610,mill_H,plus) + s_slack(1610,mill_H,minus) + s_slack(1610,mill_L,plus) + s_slack(1610,mill_L,minus) + s_slack(1610,mill_S,plus)
     
      + s_slack(1610,mill_S,minus) + s_slack(1610,ofib_L,plus) + s_slack(1610,ofib_L,minus) + s_slack(1610,ooil_L,plus) + s_slack(1610,ooil_L,minus) + s_slack(1610,opul_H,plus) + s_slack(1610,opul_H,minus) + s_slack(1610,opul_L,plus)
     
      + s_slack(1610,opul_L,minus) + s_slack(1610,opul_S,plus) + s_slack(1610,opul_S,minus) + s_slack(1610,pige_H,plus) + s_slack(1610,pige_H,minus) + s_slack(1610,pige_L,plus) + s_slack(1610,pige_L,minus) + s_slack(1610,pige_S,plus)
     
      + s_slack(1610,pige_S,minus) + s_slack(1610,pota_H,plus) + s_slack(1610,pota_H,minus) + s_slack(1610,pota_L,plus) + s_slack(1610,pota_L,minus) + s_slack(1610,pota_S,plus) + s_slack(1610,pota_S,minus) + s_slack(1610,rest_H,plus)
     
      + s_slack(1610,rest_H,minus) + s_slack(1610,rest_L,plus) + s_slack(1610,rest_L,minus) + s_slack(1610,rest_S,plus) + s_slack(1610,rest_S,minus) + s_slack(1610,rice_H,plus) + s_slack(1610,rice_H,minus) + s_slack(1610,rice_L,plus)
     
      + s_slack(1610,rice_L,minus) + s_slack(1610,rice_S,plus) + s_slack(1610,rice_S,minus) + s_slack(1610,sorg_L,plus) + s_slack(1610,sorg_L,minus) + s_slack(1610,sorg_S,plus) + s_slack(1610,sorg_S,minus) + s_slack(1610,soyb_L,plus)
     
      + s_slack(1610,soyb_L,minus) + s_slack(1610,soyb_S,plus) + s_slack(1610,soyb_S,minus) + s_slack(1610,sunf_L,plus) + s_slack(1610,sunf_L,minus) + s_slack(1610,temf_H,plus) + s_slack(1610,temf_H,minus) + s_slack(1610,temf_L,plus)
     
      + s_slack(1610,temf_L,minus) + s_slack(1610,temf_S,plus) + s_slack(1610,temf_S,minus) + s_slack(1610,toba_H,plus) + s_slack(1610,toba_H,minus) + s_slack(1610,toba_L,plus) + s_slack(1610,toba_L,minus) + s_slack(1610,trof_L,plus)
     
      + s_slack(1610,trof_L,minus) + s_slack(1610,trof_S,plus) + s_slack(1610,trof_S,minus) + s_slack(1610,vege_H,plus) + s_slack(1610,vege_H,minus) + s_slack(1610,vege_L,plus) + s_slack(1610,vege_L,minus) + s_slack(1610,vege_S,plus)
     
      + s_slack(1610,vege_S,minus) + s_slack(1611,rice_I,plus) + s_slack(1611,rice_I,minus) + s_slack(1611,sugc_I,plus) + s_slack(1611,sugc_I,minus) + s_slack(1611,whea_I,plus) + s_slack(1611,whea_I,minus) + s_slack(1611,bean_H,plus)
     
      + s_slack(1611,bean_H,minus) + s_slack(1611,bean_L,plus) + s_slack(1611,bean_L,minus) + s_slack(1611,bean_S,plus) + s_slack(1611,bean_S,minus) + s_slack(1611,cass_L,plus) + s_slack(1611,cass_L,minus) + s_slack(1611,cass_S,plus)
     
      + s_slack(1611,cass_S,minus) + s_slack(1611,chic_H,plus) + s_slack(1611,chic_H,minus) + s_slack(1611,chic_L,plus) + s_slack(1611,chic_L,minus) + s_slack(1611,chic_S,plus) + s_slack(1611,chic_S,minus) + s_slack(1611,coff_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 106
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1611,coff_H,minus) + s_slack(1611,coff_L,plus) + s_slack(1611,coff_L,minus) + s_slack(1611,cott_L,plus) + s_slack(1611,cott_L,minus) + s_slack(1611,cowp_H,plus) + s_slack(1611,cowp_H,minus) + s_slack(1611,cowp_L,plus)
     
      + s_slack(1611,cowp_L,minus) + s_slack(1611,cowp_S,plus) + s_slack(1611,cowp_S,minus) + s_slack(1611,grou_H,plus) + s_slack(1611,grou_H,minus) + s_slack(1611,grou_L,plus) + s_slack(1611,grou_L,minus) + s_slack(1611,grou_S,plus)
     
      + s_slack(1611,grou_S,minus) + s_slack(1611,lent_H,plus) + s_slack(1611,lent_H,minus) + s_slack(1611,lent_L,plus) + s_slack(1611,lent_L,minus) + s_slack(1611,lent_S,plus) + s_slack(1611,lent_S,minus) + s_slack(1611,maiz_H,plus)
     
      + s_slack(1611,maiz_H,minus) + s_slack(1611,maiz_L,plus) + s_slack(1611,maiz_L,minus) + s_slack(1611,maiz_S,plus) + s_slack(1611,maiz_S,minus) + s_slack(1611,mill_H,plus) + s_slack(1611,mill_H,minus) + s_slack(1611,mill_L,plus)
     
      + s_slack(1611,mill_L,minus) + s_slack(1611,mill_S,plus) + s_slack(1611,mill_S,minus) + s_slack(1611,ofib_L,plus) + s_slack(1611,ofib_L,minus) + s_slack(1611,ooil_L,plus) + s_slack(1611,ooil_L,minus) + s_slack(1611,opul_H,plus)
     
      + s_slack(1611,opul_H,minus) + s_slack(1611,opul_L,plus) + s_slack(1611,opul_L,minus) + s_slack(1611,opul_S,plus) + s_slack(1611,opul_S,minus) + s_slack(1611,pige_H,plus) + s_slack(1611,pige_H,minus) + s_slack(1611,pige_L,plus)
     
      + s_slack(1611,pige_L,minus) + s_slack(1611,pige_S,plus) + s_slack(1611,pige_S,minus) + s_slack(1611,pota_H,plus) + s_slack(1611,pota_H,minus) + s_slack(1611,pota_L,plus) + s_slack(1611,pota_L,minus) + s_slack(1611,pota_S,plus)
     
      + s_slack(1611,pota_S,minus) + s_slack(1611,rest_H,plus) + s_slack(1611,rest_H,minus) + s_slack(1611,rest_L,plus) + s_slack(1611,rest_L,minus) + s_slack(1611,rest_S,plus) + s_slack(1611,rest_S,minus) + s_slack(1611,rice_H,plus)
     
      + s_slack(1611,rice_H,minus) + s_slack(1611,rice_L,plus) + s_slack(1611,rice_L,minus) + s_slack(1611,rice_S,plus) + s_slack(1611,rice_S,minus) + s_slack(1611,sorg_L,plus) + s_slack(1611,sorg_L,minus) + s_slack(1611,sorg_S,plus)
     
      + s_slack(1611,sorg_S,minus) + s_slack(1611,soyb_L,plus) + s_slack(1611,soyb_L,minus) + s_slack(1611,soyb_S,plus) + s_slack(1611,soyb_S,minus) + s_slack(1611,sunf_L,plus) + s_slack(1611,sunf_L,minus) + s_slack(1611,temf_H,plus)
     
      + s_slack(1611,temf_H,minus) + s_slack(1611,temf_L,plus) + s_slack(1611,temf_L,minus) + s_slack(1611,temf_S,plus) + s_slack(1611,temf_S,minus) + s_slack(1611,toba_H,plus) + s_slack(1611,toba_H,minus) + s_slack(1611,toba_L,plus)
     
      + s_slack(1611,toba_L,minus) + s_slack(1611,trof_L,plus) + s_slack(1611,trof_L,minus) + s_slack(1611,trof_S,plus) + s_slack(1611,trof_S,minus) + s_slack(1611,vege_H,plus) + s_slack(1611,vege_H,minus) + s_slack(1611,vege_L,plus)
     
      + s_slack(1611,vege_L,minus) + s_slack(1611,vege_S,plus) + s_slack(1611,vege_S,minus) + s_slack(1612,rice_I,plus) + s_slack(1612,rice_I,minus) + s_slack(1612,sugc_I,plus) + s_slack(1612,sugc_I,minus) + s_slack(1612,whea_I,plus)
     
      + s_slack(1612,whea_I,minus) + s_slack(1612,bean_H,plus) + s_slack(1612,bean_H,minus) + s_slack(1612,bean_L,plus) + s_slack(1612,bean_L,minus) + s_slack(1612,bean_S,plus) + s_slack(1612,bean_S,minus) + s_slack(1612,cass_L,plus)
     
      + s_slack(1612,cass_L,minus) + s_slack(1612,cass_S,plus) + s_slack(1612,cass_S,minus) + s_slack(1612,chic_H,plus) + s_slack(1612,chic_H,minus) + s_slack(1612,chic_L,plus) + s_slack(1612,chic_L,minus) + s_slack(1612,chic_S,plus)
     
      + s_slack(1612,chic_S,minus) + s_slack(1612,coff_H,plus) + s_slack(1612,coff_H,minus) + s_slack(1612,coff_L,plus) + s_slack(1612,coff_L,minus) + s_slack(1612,cott_L,plus) + s_slack(1612,cott_L,minus) + s_slack(1612,cowp_H,plus)
     
      + s_slack(1612,cowp_H,minus) + s_slack(1612,cowp_L,plus) + s_slack(1612,cowp_L,minus) + s_slack(1612,cowp_S,plus) + s_slack(1612,cowp_S,minus) + s_slack(1612,grou_H,plus) + s_slack(1612,grou_H,minus) + s_slack(1612,grou_L,plus)
     
      + s_slack(1612,grou_L,minus) + s_slack(1612,grou_S,plus) + s_slack(1612,grou_S,minus) + s_slack(1612,lent_H,plus) + s_slack(1612,lent_H,minus) + s_slack(1612,lent_L,plus) + s_slack(1612,lent_L,minus) + s_slack(1612,lent_S,plus)
     
      + s_slack(1612,lent_S,minus) + s_slack(1612,maiz_H,plus) + s_slack(1612,maiz_H,minus) + s_slack(1612,maiz_L,plus) + s_slack(1612,maiz_L,minus) + s_slack(1612,maiz_S,plus) + s_slack(1612,maiz_S,minus) + s_slack(1612,mill_H,plus)
     
      + s_slack(1612,mill_H,minus) + s_slack(1612,mill_L,plus) + s_slack(1612,mill_L,minus) + s_slack(1612,mill_S,plus) + s_slack(1612,mill_S,minus) + s_slack(1612,ofib_L,plus) + s_slack(1612,ofib_L,minus) + s_slack(1612,ooil_L,plus)
     
      + s_slack(1612,ooil_L,minus) + s_slack(1612,opul_H,plus) + s_slack(1612,opul_H,minus) + s_slack(1612,opul_L,plus) + s_slack(1612,opul_L,minus) + s_slack(1612,opul_S,plus) + s_slack(1612,opul_S,minus) + s_slack(1612,pige_H,plus)
     
      + s_slack(1612,pige_H,minus) + s_slack(1612,pige_L,plus) + s_slack(1612,pige_L,minus) + s_slack(1612,pige_S,plus) + s_slack(1612,pige_S,minus) + s_slack(1612,pota_H,plus) + s_slack(1612,pota_H,minus) + s_slack(1612,pota_L,plus)
     
      + s_slack(1612,pota_L,minus) + s_slack(1612,pota_S,plus) + s_slack(1612,pota_S,minus) + s_slack(1612,rest_H,plus) + s_slack(1612,rest_H,minus) + s_slack(1612,rest_L,plus) + s_slack(1612,rest_L,minus) + s_slack(1612,rest_S,plus)
     
      + s_slack(1612,rest_S,minus) + s_slack(1612,rice_H,plus) + s_slack(1612,rice_H,minus) + s_slack(1612,rice_L,plus) + s_slack(1612,rice_L,minus) + s_slack(1612,rice_S,plus) + s_slack(1612,rice_S,minus) + s_slack(1612,sorg_L,plus)
     
      + s_slack(1612,sorg_L,minus) + s_slack(1612,sorg_S,plus) + s_slack(1612,sorg_S,minus) + s_slack(1612,soyb_L,plus) + s_slack(1612,soyb_L,minus) + s_slack(1612,soyb_S,plus) + s_slack(1612,soyb_S,minus) + s_slack(1612,sunf_L,plus)
     
      + s_slack(1612,sunf_L,minus) + s_slack(1612,temf_H,plus) + s_slack(1612,temf_H,minus) + s_slack(1612,temf_L,plus) + s_slack(1612,temf_L,minus) + s_slack(1612,temf_S,plus) + s_slack(1612,temf_S,minus) + s_slack(1612,toba_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 107
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1612,toba_H,minus) + s_slack(1612,toba_L,plus) + s_slack(1612,toba_L,minus) + s_slack(1612,trof_L,plus) + s_slack(1612,trof_L,minus) + s_slack(1612,trof_S,plus) + s_slack(1612,trof_S,minus) + s_slack(1612,vege_H,plus)
     
      + s_slack(1612,vege_H,minus) + s_slack(1612,vege_L,plus) + s_slack(1612,vege_L,minus) + s_slack(1612,vege_S,plus) + s_slack(1612,vege_S,minus) + s_slack(1618,rice_I,plus) + s_slack(1618,rice_I,minus) + s_slack(1618,sugc_I,plus)
     
      + s_slack(1618,sugc_I,minus) + s_slack(1618,whea_I,plus) + s_slack(1618,whea_I,minus) + s_slack(1618,bean_H,plus) + s_slack(1618,bean_H,minus) + s_slack(1618,bean_L,plus) + s_slack(1618,bean_L,minus) + s_slack(1618,bean_S,plus)
     
      + s_slack(1618,bean_S,minus) + s_slack(1618,cass_L,plus) + s_slack(1618,cass_L,minus) + s_slack(1618,cass_S,plus) + s_slack(1618,cass_S,minus) + s_slack(1618,chic_H,plus) + s_slack(1618,chic_H,minus) + s_slack(1618,chic_L,plus)
     
      + s_slack(1618,chic_L,minus) + s_slack(1618,chic_S,plus) + s_slack(1618,chic_S,minus) + s_slack(1618,coff_H,plus) + s_slack(1618,coff_H,minus) + s_slack(1618,coff_L,plus) + s_slack(1618,coff_L,minus) + s_slack(1618,cott_L,plus)
     
      + s_slack(1618,cott_L,minus) + s_slack(1618,cowp_H,plus) + s_slack(1618,cowp_H,minus) + s_slack(1618,cowp_L,plus) + s_slack(1618,cowp_L,minus) + s_slack(1618,cowp_S,plus) + s_slack(1618,cowp_S,minus) + s_slack(1618,grou_H,plus)
     
      + s_slack(1618,grou_H,minus) + s_slack(1618,grou_L,plus) + s_slack(1618,grou_L,minus) + s_slack(1618,grou_S,plus) + s_slack(1618,grou_S,minus) + s_slack(1618,lent_H,plus) + s_slack(1618,lent_H,minus) + s_slack(1618,lent_L,plus)
     
      + s_slack(1618,lent_L,minus) + s_slack(1618,lent_S,plus) + s_slack(1618,lent_S,minus) + s_slack(1618,maiz_H,plus) + s_slack(1618,maiz_H,minus) + s_slack(1618,maiz_L,plus) + s_slack(1618,maiz_L,minus) + s_slack(1618,maiz_S,plus)
     
      + s_slack(1618,maiz_S,minus) + s_slack(1618,mill_H,plus) + s_slack(1618,mill_H,minus) + s_slack(1618,mill_L,plus) + s_slack(1618,mill_L,minus) + s_slack(1618,mill_S,plus) + s_slack(1618,mill_S,minus) + s_slack(1618,ofib_L,plus)
     
      + s_slack(1618,ofib_L,minus) + s_slack(1618,ooil_L,plus) + s_slack(1618,ooil_L,minus) + s_slack(1618,opul_H,plus) + s_slack(1618,opul_H,minus) + s_slack(1618,opul_L,plus) + s_slack(1618,opul_L,minus) + s_slack(1618,opul_S,plus)
     
      + s_slack(1618,opul_S,minus) + s_slack(1618,pige_H,plus) + s_slack(1618,pige_H,minus) + s_slack(1618,pige_L,plus) + s_slack(1618,pige_L,minus) + s_slack(1618,pige_S,plus) + s_slack(1618,pige_S,minus) + s_slack(1618,pota_H,plus)
     
      + s_slack(1618,pota_H,minus) + s_slack(1618,pota_L,plus) + s_slack(1618,pota_L,minus) + s_slack(1618,pota_S,plus) + s_slack(1618,pota_S,minus) + s_slack(1618,rest_H,plus) + s_slack(1618,rest_H,minus) + s_slack(1618,rest_L,plus)
     
      + s_slack(1618,rest_L,minus) + s_slack(1618,rest_S,plus) + s_slack(1618,rest_S,minus) + s_slack(1618,rice_H,plus) + s_slack(1618,rice_H,minus) + s_slack(1618,rice_L,plus) + s_slack(1618,rice_L,minus) + s_slack(1618,rice_S,plus)
     
      + s_slack(1618,rice_S,minus) + s_slack(1618,sorg_L,plus) + s_slack(1618,sorg_L,minus) + s_slack(1618,sorg_S,plus) + s_slack(1618,sorg_S,minus) + s_slack(1618,soyb_L,plus) + s_slack(1618,soyb_L,minus) + s_slack(1618,soyb_S,plus)
     
      + s_slack(1618,soyb_S,minus) + s_slack(1618,sunf_L,plus) + s_slack(1618,sunf_L,minus) + s_slack(1618,temf_H,plus) + s_slack(1618,temf_H,minus) + s_slack(1618,temf_L,plus) + s_slack(1618,temf_L,minus) + s_slack(1618,temf_S,plus)
     
      + s_slack(1618,temf_S,minus) + s_slack(1618,toba_H,plus) + s_slack(1618,toba_H,minus) + s_slack(1618,toba_L,plus) + s_slack(1618,toba_L,minus) + s_slack(1618,trof_L,plus) + s_slack(1618,trof_L,minus) + s_slack(1618,trof_S,plus)
     
      + s_slack(1618,trof_S,minus) + s_slack(1618,vege_H,plus) + s_slack(1618,vege_H,minus) + s_slack(1618,vege_L,plus) + s_slack(1618,vege_L,minus) + s_slack(1618,vege_S,plus) + s_slack(1618,vege_S,minus) + s_slack(1647,rice_I,plus)
     
      + s_slack(1647,rice_I,minus) + s_slack(1647,sugc_I,plus) + s_slack(1647,sugc_I,minus) + s_slack(1647,whea_I,plus) + s_slack(1647,whea_I,minus) + s_slack(1647,bean_H,plus) + s_slack(1647,bean_H,minus) + s_slack(1647,bean_L,plus)
     
      + s_slack(1647,bean_L,minus) + s_slack(1647,bean_S,plus) + s_slack(1647,bean_S,minus) + s_slack(1647,cass_L,plus) + s_slack(1647,cass_L,minus) + s_slack(1647,cass_S,plus) + s_slack(1647,cass_S,minus) + s_slack(1647,chic_H,plus)
     
      + s_slack(1647,chic_H,minus) + s_slack(1647,chic_L,plus) + s_slack(1647,chic_L,minus) + s_slack(1647,chic_S,plus) + s_slack(1647,chic_S,minus) + s_slack(1647,coff_H,plus) + s_slack(1647,coff_H,minus) + s_slack(1647,coff_L,plus)
     
      + s_slack(1647,coff_L,minus) + s_slack(1647,cott_L,plus) + s_slack(1647,cott_L,minus) + s_slack(1647,cowp_H,plus) + s_slack(1647,cowp_H,minus) + s_slack(1647,cowp_L,plus) + s_slack(1647,cowp_L,minus) + s_slack(1647,cowp_S,plus)
     
      + s_slack(1647,cowp_S,minus) + s_slack(1647,grou_H,plus) + s_slack(1647,grou_H,minus) + s_slack(1647,grou_L,plus) + s_slack(1647,grou_L,minus) + s_slack(1647,grou_S,plus) + s_slack(1647,grou_S,minus) + s_slack(1647,lent_H,plus)
     
      + s_slack(1647,lent_H,minus) + s_slack(1647,lent_L,plus) + s_slack(1647,lent_L,minus) + s_slack(1647,lent_S,plus) + s_slack(1647,lent_S,minus) + s_slack(1647,maiz_H,plus) + s_slack(1647,maiz_H,minus) + s_slack(1647,maiz_L,plus)
     
      + s_slack(1647,maiz_L,minus) + s_slack(1647,maiz_S,plus) + s_slack(1647,maiz_S,minus) + s_slack(1647,mill_H,plus) + s_slack(1647,mill_H,minus) + s_slack(1647,mill_L,plus) + s_slack(1647,mill_L,minus) + s_slack(1647,mill_S,plus)
     
      + s_slack(1647,mill_S,minus) + s_slack(1647,ofib_L,plus) + s_slack(1647,ofib_L,minus) + s_slack(1647,ooil_L,plus) + s_slack(1647,ooil_L,minus) + s_slack(1647,opul_H,plus) + s_slack(1647,opul_H,minus) + s_slack(1647,opul_L,plus)
     
      + s_slack(1647,opul_L,minus) + s_slack(1647,opul_S,plus) + s_slack(1647,opul_S,minus) + s_slack(1647,pige_H,plus) + s_slack(1647,pige_H,minus) + s_slack(1647,pige_L,plus) + s_slack(1647,pige_L,minus) + s_slack(1647,pige_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 108
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1647,pige_S,minus) + s_slack(1647,pota_H,plus) + s_slack(1647,pota_H,minus) + s_slack(1647,pota_L,plus) + s_slack(1647,pota_L,minus) + s_slack(1647,pota_S,plus) + s_slack(1647,pota_S,minus) + s_slack(1647,rest_H,plus)
     
      + s_slack(1647,rest_H,minus) + s_slack(1647,rest_L,plus) + s_slack(1647,rest_L,minus) + s_slack(1647,rest_S,plus) + s_slack(1647,rest_S,minus) + s_slack(1647,rice_H,plus) + s_slack(1647,rice_H,minus) + s_slack(1647,rice_L,plus)
     
      + s_slack(1647,rice_L,minus) + s_slack(1647,rice_S,plus) + s_slack(1647,rice_S,minus) + s_slack(1647,sorg_L,plus) + s_slack(1647,sorg_L,minus) + s_slack(1647,sorg_S,plus) + s_slack(1647,sorg_S,minus) + s_slack(1647,soyb_L,plus)
     
      + s_slack(1647,soyb_L,minus) + s_slack(1647,soyb_S,plus) + s_slack(1647,soyb_S,minus) + s_slack(1647,sunf_L,plus) + s_slack(1647,sunf_L,minus) + s_slack(1647,temf_H,plus) + s_slack(1647,temf_H,minus) + s_slack(1647,temf_L,plus)
     
      + s_slack(1647,temf_L,minus) + s_slack(1647,temf_S,plus) + s_slack(1647,temf_S,minus) + s_slack(1647,toba_H,plus) + s_slack(1647,toba_H,minus) + s_slack(1647,toba_L,plus) + s_slack(1647,toba_L,minus) + s_slack(1647,trof_L,plus)
     
      + s_slack(1647,trof_L,minus) + s_slack(1647,trof_S,plus) + s_slack(1647,trof_S,minus) + s_slack(1647,vege_H,plus) + s_slack(1647,vege_H,minus) + s_slack(1647,vege_L,plus) + s_slack(1647,vege_L,minus) + s_slack(1647,vege_S,plus)
     
      + s_slack(1647,vege_S,minus) + s_slack(1648,rice_I,plus) + s_slack(1648,rice_I,minus) + s_slack(1648,sugc_I,plus) + s_slack(1648,sugc_I,minus) + s_slack(1648,whea_I,plus) + s_slack(1648,whea_I,minus) + s_slack(1648,bean_H,plus)
     
      + s_slack(1648,bean_H,minus) + s_slack(1648,bean_L,plus) + s_slack(1648,bean_L,minus) + s_slack(1648,bean_S,plus) + s_slack(1648,bean_S,minus) + s_slack(1648,cass_L,plus) + s_slack(1648,cass_L,minus) + s_slack(1648,cass_S,plus)
     
      + s_slack(1648,cass_S,minus) + s_slack(1648,chic_H,plus) + s_slack(1648,chic_H,minus) + s_slack(1648,chic_L,plus) + s_slack(1648,chic_L,minus) + s_slack(1648,chic_S,plus) + s_slack(1648,chic_S,minus) + s_slack(1648,coff_H,plus)
     
      + s_slack(1648,coff_H,minus) + s_slack(1648,coff_L,plus) + s_slack(1648,coff_L,minus) + s_slack(1648,cott_L,plus) + s_slack(1648,cott_L,minus) + s_slack(1648,cowp_H,plus) + s_slack(1648,cowp_H,minus) + s_slack(1648,cowp_L,plus)
     
      + s_slack(1648,cowp_L,minus) + s_slack(1648,cowp_S,plus) + s_slack(1648,cowp_S,minus) + s_slack(1648,grou_H,plus) + s_slack(1648,grou_H,minus) + s_slack(1648,grou_L,plus) + s_slack(1648,grou_L,minus) + s_slack(1648,grou_S,plus)
     
      + s_slack(1648,grou_S,minus) + s_slack(1648,lent_H,plus) + s_slack(1648,lent_H,minus) + s_slack(1648,lent_L,plus) + s_slack(1648,lent_L,minus) + s_slack(1648,lent_S,plus) + s_slack(1648,lent_S,minus) + s_slack(1648,maiz_H,plus)
     
      + s_slack(1648,maiz_H,minus) + s_slack(1648,maiz_L,plus) + s_slack(1648,maiz_L,minus) + s_slack(1648,maiz_S,plus) + s_slack(1648,maiz_S,minus) + s_slack(1648,mill_H,plus) + s_slack(1648,mill_H,minus) + s_slack(1648,mill_L,plus)
     
      + s_slack(1648,mill_L,minus) + s_slack(1648,mill_S,plus) + s_slack(1648,mill_S,minus) + s_slack(1648,ofib_L,plus) + s_slack(1648,ofib_L,minus) + s_slack(1648,ooil_L,plus) + s_slack(1648,ooil_L,minus) + s_slack(1648,opul_H,plus)
     
      + s_slack(1648,opul_H,minus) + s_slack(1648,opul_L,plus) + s_slack(1648,opul_L,minus) + s_slack(1648,opul_S,plus) + s_slack(1648,opul_S,minus) + s_slack(1648,pige_H,plus) + s_slack(1648,pige_H,minus) + s_slack(1648,pige_L,plus)
     
      + s_slack(1648,pige_L,minus) + s_slack(1648,pige_S,plus) + s_slack(1648,pige_S,minus) + s_slack(1648,pota_H,plus) + s_slack(1648,pota_H,minus) + s_slack(1648,pota_L,plus) + s_slack(1648,pota_L,minus) + s_slack(1648,pota_S,plus)
     
      + s_slack(1648,pota_S,minus) + s_slack(1648,rest_H,plus) + s_slack(1648,rest_H,minus) + s_slack(1648,rest_L,plus) + s_slack(1648,rest_L,minus) + s_slack(1648,rest_S,plus) + s_slack(1648,rest_S,minus) + s_slack(1648,rice_H,plus)
     
      + s_slack(1648,rice_H,minus) + s_slack(1648,rice_L,plus) + s_slack(1648,rice_L,minus) + s_slack(1648,rice_S,plus) + s_slack(1648,rice_S,minus) + s_slack(1648,sorg_L,plus) + s_slack(1648,sorg_L,minus) + s_slack(1648,sorg_S,plus)
     
      + s_slack(1648,sorg_S,minus) + s_slack(1648,soyb_L,plus) + s_slack(1648,soyb_L,minus) + s_slack(1648,soyb_S,plus) + s_slack(1648,soyb_S,minus) + s_slack(1648,sunf_L,plus) + s_slack(1648,sunf_L,minus) + s_slack(1648,temf_H,plus)
     
      + s_slack(1648,temf_H,minus) + s_slack(1648,temf_L,plus) + s_slack(1648,temf_L,minus) + s_slack(1648,temf_S,plus) + s_slack(1648,temf_S,minus) + s_slack(1648,toba_H,plus) + s_slack(1648,toba_H,minus) + s_slack(1648,toba_L,plus)
     
      + s_slack(1648,toba_L,minus) + s_slack(1648,trof_L,plus) + s_slack(1648,trof_L,minus) + s_slack(1648,trof_S,plus) + s_slack(1648,trof_S,minus) + s_slack(1648,vege_H,plus) + s_slack(1648,vege_H,minus) + s_slack(1648,vege_L,plus)
     
      + s_slack(1648,vege_L,minus) + s_slack(1648,vege_S,plus) + s_slack(1648,vege_S,minus) + s_slack(1649,rice_I,plus) + s_slack(1649,rice_I,minus) + s_slack(1649,sugc_I,plus) + s_slack(1649,sugc_I,minus) + s_slack(1649,whea_I,plus)
     
      + s_slack(1649,whea_I,minus) + s_slack(1649,bean_H,plus) + s_slack(1649,bean_H,minus) + s_slack(1649,bean_L,plus) + s_slack(1649,bean_L,minus) + s_slack(1649,bean_S,plus) + s_slack(1649,bean_S,minus) + s_slack(1649,cass_L,plus)
     
      + s_slack(1649,cass_L,minus) + s_slack(1649,cass_S,plus) + s_slack(1649,cass_S,minus) + s_slack(1649,chic_H,plus) + s_slack(1649,chic_H,minus) + s_slack(1649,chic_L,plus) + s_slack(1649,chic_L,minus) + s_slack(1649,chic_S,plus)
     
      + s_slack(1649,chic_S,minus) + s_slack(1649,coff_H,plus) + s_slack(1649,coff_H,minus) + s_slack(1649,coff_L,plus) + s_slack(1649,coff_L,minus) + s_slack(1649,cott_L,plus) + s_slack(1649,cott_L,minus) + s_slack(1649,cowp_H,plus)
     
      + s_slack(1649,cowp_H,minus) + s_slack(1649,cowp_L,plus) + s_slack(1649,cowp_L,minus) + s_slack(1649,cowp_S,plus) + s_slack(1649,cowp_S,minus) + s_slack(1649,grou_H,plus) + s_slack(1649,grou_H,minus) + s_slack(1649,grou_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 109
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1649,grou_L,minus) + s_slack(1649,grou_S,plus) + s_slack(1649,grou_S,minus) + s_slack(1649,lent_H,plus) + s_slack(1649,lent_H,minus) + s_slack(1649,lent_L,plus) + s_slack(1649,lent_L,minus) + s_slack(1649,lent_S,plus)
     
      + s_slack(1649,lent_S,minus) + s_slack(1649,maiz_H,plus) + s_slack(1649,maiz_H,minus) + s_slack(1649,maiz_L,plus) + s_slack(1649,maiz_L,minus) + s_slack(1649,maiz_S,plus) + s_slack(1649,maiz_S,minus) + s_slack(1649,mill_H,plus)
     
      + s_slack(1649,mill_H,minus) + s_slack(1649,mill_L,plus) + s_slack(1649,mill_L,minus) + s_slack(1649,mill_S,plus) + s_slack(1649,mill_S,minus) + s_slack(1649,ofib_L,plus) + s_slack(1649,ofib_L,minus) + s_slack(1649,ooil_L,plus)
     
      + s_slack(1649,ooil_L,minus) + s_slack(1649,opul_H,plus) + s_slack(1649,opul_H,minus) + s_slack(1649,opul_L,plus) + s_slack(1649,opul_L,minus) + s_slack(1649,opul_S,plus) + s_slack(1649,opul_S,minus) + s_slack(1649,pige_H,plus)
     
      + s_slack(1649,pige_H,minus) + s_slack(1649,pige_L,plus) + s_slack(1649,pige_L,minus) + s_slack(1649,pige_S,plus) + s_slack(1649,pige_S,minus) + s_slack(1649,pota_H,plus) + s_slack(1649,pota_H,minus) + s_slack(1649,pota_L,plus)
     
      + s_slack(1649,pota_L,minus) + s_slack(1649,pota_S,plus) + s_slack(1649,pota_S,minus) + s_slack(1649,rest_H,plus) + s_slack(1649,rest_H,minus) + s_slack(1649,rest_L,plus) + s_slack(1649,rest_L,minus) + s_slack(1649,rest_S,plus)
     
      + s_slack(1649,rest_S,minus) + s_slack(1649,rice_H,plus) + s_slack(1649,rice_H,minus) + s_slack(1649,rice_L,plus) + s_slack(1649,rice_L,minus) + s_slack(1649,rice_S,plus) + s_slack(1649,rice_S,minus) + s_slack(1649,sorg_L,plus)
     
      + s_slack(1649,sorg_L,minus) + s_slack(1649,sorg_S,plus) + s_slack(1649,sorg_S,minus) + s_slack(1649,soyb_L,plus) + s_slack(1649,soyb_L,minus) + s_slack(1649,soyb_S,plus) + s_slack(1649,soyb_S,minus) + s_slack(1649,sunf_L,plus)
     
      + s_slack(1649,sunf_L,minus) + s_slack(1649,temf_H,plus) + s_slack(1649,temf_H,minus) + s_slack(1649,temf_L,plus) + s_slack(1649,temf_L,minus) + s_slack(1649,temf_S,plus) + s_slack(1649,temf_S,minus) + s_slack(1649,toba_H,plus)
     
      + s_slack(1649,toba_H,minus) + s_slack(1649,toba_L,plus) + s_slack(1649,toba_L,minus) + s_slack(1649,trof_L,plus) + s_slack(1649,trof_L,minus) + s_slack(1649,trof_S,plus) + s_slack(1649,trof_S,minus) + s_slack(1649,vege_H,plus)
     
      + s_slack(1649,vege_H,minus) + s_slack(1649,vege_L,plus) + s_slack(1649,vege_L,minus) + s_slack(1649,vege_S,plus) + s_slack(1649,vege_S,minus) + s_slack(1650,rice_I,plus) + s_slack(1650,rice_I,minus) + s_slack(1650,sugc_I,plus)
     
      + s_slack(1650,sugc_I,minus) + s_slack(1650,whea_I,plus) + s_slack(1650,whea_I,minus) + s_slack(1650,bean_H,plus) + s_slack(1650,bean_H,minus) + s_slack(1650,bean_L,plus) + s_slack(1650,bean_L,minus) + s_slack(1650,bean_S,plus)
     
      + s_slack(1650,bean_S,minus) + s_slack(1650,cass_L,plus) + s_slack(1650,cass_L,minus) + s_slack(1650,cass_S,plus) + s_slack(1650,cass_S,minus) + s_slack(1650,chic_H,plus) + s_slack(1650,chic_H,minus) + s_slack(1650,chic_L,plus)
     
      + s_slack(1650,chic_L,minus) + s_slack(1650,chic_S,plus) + s_slack(1650,chic_S,minus) + s_slack(1650,coff_H,plus) + s_slack(1650,coff_H,minus) + s_slack(1650,coff_L,plus) + s_slack(1650,coff_L,minus) + s_slack(1650,cott_L,plus)
     
      + s_slack(1650,cott_L,minus) + s_slack(1650,cowp_H,plus) + s_slack(1650,cowp_H,minus) + s_slack(1650,cowp_L,plus) + s_slack(1650,cowp_L,minus) + s_slack(1650,cowp_S,plus) + s_slack(1650,cowp_S,minus) + s_slack(1650,grou_H,plus)
     
      + s_slack(1650,grou_H,minus) + s_slack(1650,grou_L,plus) + s_slack(1650,grou_L,minus) + s_slack(1650,grou_S,plus) + s_slack(1650,grou_S,minus) + s_slack(1650,lent_H,plus) + s_slack(1650,lent_H,minus) + s_slack(1650,lent_L,plus)
     
      + s_slack(1650,lent_L,minus) + s_slack(1650,lent_S,plus) + s_slack(1650,lent_S,minus) + s_slack(1650,maiz_H,plus) + s_slack(1650,maiz_H,minus) + s_slack(1650,maiz_L,plus) + s_slack(1650,maiz_L,minus) + s_slack(1650,maiz_S,plus)
     
      + s_slack(1650,maiz_S,minus) + s_slack(1650,mill_H,plus) + s_slack(1650,mill_H,minus) + s_slack(1650,mill_L,plus) + s_slack(1650,mill_L,minus) + s_slack(1650,mill_S,plus) + s_slack(1650,mill_S,minus) + s_slack(1650,ofib_L,plus)
     
      + s_slack(1650,ofib_L,minus) + s_slack(1650,ooil_L,plus) + s_slack(1650,ooil_L,minus) + s_slack(1650,opul_H,plus) + s_slack(1650,opul_H,minus) + s_slack(1650,opul_L,plus) + s_slack(1650,opul_L,minus) + s_slack(1650,opul_S,plus)
     
      + s_slack(1650,opul_S,minus) + s_slack(1650,pige_H,plus) + s_slack(1650,pige_H,minus) + s_slack(1650,pige_L,plus) + s_slack(1650,pige_L,minus) + s_slack(1650,pige_S,plus) + s_slack(1650,pige_S,minus) + s_slack(1650,pota_H,plus)
     
      + s_slack(1650,pota_H,minus) + s_slack(1650,pota_L,plus) + s_slack(1650,pota_L,minus) + s_slack(1650,pota_S,plus) + s_slack(1650,pota_S,minus) + s_slack(1650,rest_H,plus) + s_slack(1650,rest_H,minus) + s_slack(1650,rest_L,plus)
     
      + s_slack(1650,rest_L,minus) + s_slack(1650,rest_S,plus) + s_slack(1650,rest_S,minus) + s_slack(1650,rice_H,plus) + s_slack(1650,rice_H,minus) + s_slack(1650,rice_L,plus) + s_slack(1650,rice_L,minus) + s_slack(1650,rice_S,plus)
     
      + s_slack(1650,rice_S,minus) + s_slack(1650,sorg_L,plus) + s_slack(1650,sorg_L,minus) + s_slack(1650,sorg_S,plus) + s_slack(1650,sorg_S,minus) + s_slack(1650,soyb_L,plus) + s_slack(1650,soyb_L,minus) + s_slack(1650,soyb_S,plus)
     
      + s_slack(1650,soyb_S,minus) + s_slack(1650,sunf_L,plus) + s_slack(1650,sunf_L,minus) + s_slack(1650,temf_H,plus) + s_slack(1650,temf_H,minus) + s_slack(1650,temf_L,plus) + s_slack(1650,temf_L,minus) + s_slack(1650,temf_S,plus)
     
      + s_slack(1650,temf_S,minus) + s_slack(1650,toba_H,plus) + s_slack(1650,toba_H,minus) + s_slack(1650,toba_L,plus) + s_slack(1650,toba_L,minus) + s_slack(1650,trof_L,plus) + s_slack(1650,trof_L,minus) + s_slack(1650,trof_S,plus)
     
      + s_slack(1650,trof_S,minus) + s_slack(1650,vege_H,plus) + s_slack(1650,vege_H,minus) + s_slack(1650,vege_L,plus) + s_slack(1650,vege_L,minus) + s_slack(1650,vege_S,plus) + s_slack(1650,vege_S,minus) + s_slack(1651,rice_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 110
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1651,rice_I,minus) + s_slack(1651,sugc_I,plus) + s_slack(1651,sugc_I,minus) + s_slack(1651,whea_I,plus) + s_slack(1651,whea_I,minus) + s_slack(1651,bean_H,plus) + s_slack(1651,bean_H,minus) + s_slack(1651,bean_L,plus)
     
      + s_slack(1651,bean_L,minus) + s_slack(1651,bean_S,plus) + s_slack(1651,bean_S,minus) + s_slack(1651,cass_L,plus) + s_slack(1651,cass_L,minus) + s_slack(1651,cass_S,plus) + s_slack(1651,cass_S,minus) + s_slack(1651,chic_H,plus)
     
      + s_slack(1651,chic_H,minus) + s_slack(1651,chic_L,plus) + s_slack(1651,chic_L,minus) + s_slack(1651,chic_S,plus) + s_slack(1651,chic_S,minus) + s_slack(1651,coff_H,plus) + s_slack(1651,coff_H,minus) + s_slack(1651,coff_L,plus)
     
      + s_slack(1651,coff_L,minus) + s_slack(1651,cott_L,plus) + s_slack(1651,cott_L,minus) + s_slack(1651,cowp_H,plus) + s_slack(1651,cowp_H,minus) + s_slack(1651,cowp_L,plus) + s_slack(1651,cowp_L,minus) + s_slack(1651,cowp_S,plus)
     
      + s_slack(1651,cowp_S,minus) + s_slack(1651,grou_H,plus) + s_slack(1651,grou_H,minus) + s_slack(1651,grou_L,plus) + s_slack(1651,grou_L,minus) + s_slack(1651,grou_S,plus) + s_slack(1651,grou_S,minus) + s_slack(1651,lent_H,plus)
     
      + s_slack(1651,lent_H,minus) + s_slack(1651,lent_L,plus) + s_slack(1651,lent_L,minus) + s_slack(1651,lent_S,plus) + s_slack(1651,lent_S,minus) + s_slack(1651,maiz_H,plus) + s_slack(1651,maiz_H,minus) + s_slack(1651,maiz_L,plus)
     
      + s_slack(1651,maiz_L,minus) + s_slack(1651,maiz_S,plus) + s_slack(1651,maiz_S,minus) + s_slack(1651,mill_H,plus) + s_slack(1651,mill_H,minus) + s_slack(1651,mill_L,plus) + s_slack(1651,mill_L,minus) + s_slack(1651,mill_S,plus)
     
      + s_slack(1651,mill_S,minus) + s_slack(1651,ofib_L,plus) + s_slack(1651,ofib_L,minus) + s_slack(1651,ooil_L,plus) + s_slack(1651,ooil_L,minus) + s_slack(1651,opul_H,plus) + s_slack(1651,opul_H,minus) + s_slack(1651,opul_L,plus)
     
      + s_slack(1651,opul_L,minus) + s_slack(1651,opul_S,plus) + s_slack(1651,opul_S,minus) + s_slack(1651,pige_H,plus) + s_slack(1651,pige_H,minus) + s_slack(1651,pige_L,plus) + s_slack(1651,pige_L,minus) + s_slack(1651,pige_S,plus)
     
      + s_slack(1651,pige_S,minus) + s_slack(1651,pota_H,plus) + s_slack(1651,pota_H,minus) + s_slack(1651,pota_L,plus) + s_slack(1651,pota_L,minus) + s_slack(1651,pota_S,plus) + s_slack(1651,pota_S,minus) + s_slack(1651,rest_H,plus)
     
      + s_slack(1651,rest_H,minus) + s_slack(1651,rest_L,plus) + s_slack(1651,rest_L,minus) + s_slack(1651,rest_S,plus) + s_slack(1651,rest_S,minus) + s_slack(1651,rice_H,plus) + s_slack(1651,rice_H,minus) + s_slack(1651,rice_L,plus)
     
      + s_slack(1651,rice_L,minus) + s_slack(1651,rice_S,plus) + s_slack(1651,rice_S,minus) + s_slack(1651,sorg_L,plus) + s_slack(1651,sorg_L,minus) + s_slack(1651,sorg_S,plus) + s_slack(1651,sorg_S,minus) + s_slack(1651,soyb_L,plus)
     
      + s_slack(1651,soyb_L,minus) + s_slack(1651,soyb_S,plus) + s_slack(1651,soyb_S,minus) + s_slack(1651,sunf_L,plus) + s_slack(1651,sunf_L,minus) + s_slack(1651,temf_H,plus) + s_slack(1651,temf_H,minus) + s_slack(1651,temf_L,plus)
     
      + s_slack(1651,temf_L,minus) + s_slack(1651,temf_S,plus) + s_slack(1651,temf_S,minus) + s_slack(1651,toba_H,plus) + s_slack(1651,toba_H,minus) + s_slack(1651,toba_L,plus) + s_slack(1651,toba_L,minus) + s_slack(1651,trof_L,plus)
     
      + s_slack(1651,trof_L,minus) + s_slack(1651,trof_S,plus) + s_slack(1651,trof_S,minus) + s_slack(1651,vege_H,plus) + s_slack(1651,vege_H,minus) + s_slack(1651,vege_L,plus) + s_slack(1651,vege_L,minus) + s_slack(1651,vege_S,plus)
     
      + s_slack(1651,vege_S,minus) + s_slack(1652,rice_I,plus) + s_slack(1652,rice_I,minus) + s_slack(1652,sugc_I,plus) + s_slack(1652,sugc_I,minus) + s_slack(1652,whea_I,plus) + s_slack(1652,whea_I,minus) + s_slack(1652,bean_H,plus)
     
      + s_slack(1652,bean_H,minus) + s_slack(1652,bean_L,plus) + s_slack(1652,bean_L,minus) + s_slack(1652,bean_S,plus) + s_slack(1652,bean_S,minus) + s_slack(1652,cass_L,plus) + s_slack(1652,cass_L,minus) + s_slack(1652,cass_S,plus)
     
      + s_slack(1652,cass_S,minus) + s_slack(1652,chic_H,plus) + s_slack(1652,chic_H,minus) + s_slack(1652,chic_L,plus) + s_slack(1652,chic_L,minus) + s_slack(1652,chic_S,plus) + s_slack(1652,chic_S,minus) + s_slack(1652,coff_H,plus)
     
      + s_slack(1652,coff_H,minus) + s_slack(1652,coff_L,plus) + s_slack(1652,coff_L,minus) + s_slack(1652,cott_L,plus) + s_slack(1652,cott_L,minus) + s_slack(1652,cowp_H,plus) + s_slack(1652,cowp_H,minus) + s_slack(1652,cowp_L,plus)
     
      + s_slack(1652,cowp_L,minus) + s_slack(1652,cowp_S,plus) + s_slack(1652,cowp_S,minus) + s_slack(1652,grou_H,plus) + s_slack(1652,grou_H,minus) + s_slack(1652,grou_L,plus) + s_slack(1652,grou_L,minus) + s_slack(1652,grou_S,plus)
     
      + s_slack(1652,grou_S,minus) + s_slack(1652,lent_H,plus) + s_slack(1652,lent_H,minus) + s_slack(1652,lent_L,plus) + s_slack(1652,lent_L,minus) + s_slack(1652,lent_S,plus) + s_slack(1652,lent_S,minus) + s_slack(1652,maiz_H,plus)
     
      + s_slack(1652,maiz_H,minus) + s_slack(1652,maiz_L,plus) + s_slack(1652,maiz_L,minus) + s_slack(1652,maiz_S,plus) + s_slack(1652,maiz_S,minus) + s_slack(1652,mill_H,plus) + s_slack(1652,mill_H,minus) + s_slack(1652,mill_L,plus)
     
      + s_slack(1652,mill_L,minus) + s_slack(1652,mill_S,plus) + s_slack(1652,mill_S,minus) + s_slack(1652,ofib_L,plus) + s_slack(1652,ofib_L,minus) + s_slack(1652,ooil_L,plus) + s_slack(1652,ooil_L,minus) + s_slack(1652,opul_H,plus)
     
      + s_slack(1652,opul_H,minus) + s_slack(1652,opul_L,plus) + s_slack(1652,opul_L,minus) + s_slack(1652,opul_S,plus) + s_slack(1652,opul_S,minus) + s_slack(1652,pige_H,plus) + s_slack(1652,pige_H,minus) + s_slack(1652,pige_L,plus)
     
      + s_slack(1652,pige_L,minus) + s_slack(1652,pige_S,plus) + s_slack(1652,pige_S,minus) + s_slack(1652,pota_H,plus) + s_slack(1652,pota_H,minus) + s_slack(1652,pota_L,plus) + s_slack(1652,pota_L,minus) + s_slack(1652,pota_S,plus)
     
      + s_slack(1652,pota_S,minus) + s_slack(1652,rest_H,plus) + s_slack(1652,rest_H,minus) + s_slack(1652,rest_L,plus) + s_slack(1652,rest_L,minus) + s_slack(1652,rest_S,plus) + s_slack(1652,rest_S,minus) + s_slack(1652,rice_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 111
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1652,rice_H,minus) + s_slack(1652,rice_L,plus) + s_slack(1652,rice_L,minus) + s_slack(1652,rice_S,plus) + s_slack(1652,rice_S,minus) + s_slack(1652,sorg_L,plus) + s_slack(1652,sorg_L,minus) + s_slack(1652,sorg_S,plus)
     
      + s_slack(1652,sorg_S,minus) + s_slack(1652,soyb_L,plus) + s_slack(1652,soyb_L,minus) + s_slack(1652,soyb_S,plus) + s_slack(1652,soyb_S,minus) + s_slack(1652,sunf_L,plus) + s_slack(1652,sunf_L,minus) + s_slack(1652,temf_H,plus)
     
      + s_slack(1652,temf_H,minus) + s_slack(1652,temf_L,plus) + s_slack(1652,temf_L,minus) + s_slack(1652,temf_S,plus) + s_slack(1652,temf_S,minus) + s_slack(1652,toba_H,plus) + s_slack(1652,toba_H,minus) + s_slack(1652,toba_L,plus)
     
      + s_slack(1652,toba_L,minus) + s_slack(1652,trof_L,plus) + s_slack(1652,trof_L,minus) + s_slack(1652,trof_S,plus) + s_slack(1652,trof_S,minus) + s_slack(1652,vege_H,plus) + s_slack(1652,vege_H,minus) + s_slack(1652,vege_L,plus)
     
      + s_slack(1652,vege_L,minus) + s_slack(1652,vege_S,plus) + s_slack(1652,vege_S,minus) + s_slack(1653,rice_I,plus) + s_slack(1653,rice_I,minus) + s_slack(1653,sugc_I,plus) + s_slack(1653,sugc_I,minus) + s_slack(1653,whea_I,plus)
     
      + s_slack(1653,whea_I,minus) + s_slack(1653,bean_H,plus) + s_slack(1653,bean_H,minus) + s_slack(1653,bean_L,plus) + s_slack(1653,bean_L,minus) + s_slack(1653,bean_S,plus) + s_slack(1653,bean_S,minus) + s_slack(1653,cass_L,plus)
     
      + s_slack(1653,cass_L,minus) + s_slack(1653,cass_S,plus) + s_slack(1653,cass_S,minus) + s_slack(1653,chic_H,plus) + s_slack(1653,chic_H,minus) + s_slack(1653,chic_L,plus) + s_slack(1653,chic_L,minus) + s_slack(1653,chic_S,plus)
     
      + s_slack(1653,chic_S,minus) + s_slack(1653,coff_H,plus) + s_slack(1653,coff_H,minus) + s_slack(1653,coff_L,plus) + s_slack(1653,coff_L,minus) + s_slack(1653,cott_L,plus) + s_slack(1653,cott_L,minus) + s_slack(1653,cowp_H,plus)
     
      + s_slack(1653,cowp_H,minus) + s_slack(1653,cowp_L,plus) + s_slack(1653,cowp_L,minus) + s_slack(1653,cowp_S,plus) + s_slack(1653,cowp_S,minus) + s_slack(1653,grou_H,plus) + s_slack(1653,grou_H,minus) + s_slack(1653,grou_L,plus)
     
      + s_slack(1653,grou_L,minus) + s_slack(1653,grou_S,plus) + s_slack(1653,grou_S,minus) + s_slack(1653,lent_H,plus) + s_slack(1653,lent_H,minus) + s_slack(1653,lent_L,plus) + s_slack(1653,lent_L,minus) + s_slack(1653,lent_S,plus)
     
      + s_slack(1653,lent_S,minus) + s_slack(1653,maiz_H,plus) + s_slack(1653,maiz_H,minus) + s_slack(1653,maiz_L,plus) + s_slack(1653,maiz_L,minus) + s_slack(1653,maiz_S,plus) + s_slack(1653,maiz_S,minus) + s_slack(1653,mill_H,plus)
     
      + s_slack(1653,mill_H,minus) + s_slack(1653,mill_L,plus) + s_slack(1653,mill_L,minus) + s_slack(1653,mill_S,plus) + s_slack(1653,mill_S,minus) + s_slack(1653,ofib_L,plus) + s_slack(1653,ofib_L,minus) + s_slack(1653,ooil_L,plus)
     
      + s_slack(1653,ooil_L,minus) + s_slack(1653,opul_H,plus) + s_slack(1653,opul_H,minus) + s_slack(1653,opul_L,plus) + s_slack(1653,opul_L,minus) + s_slack(1653,opul_S,plus) + s_slack(1653,opul_S,minus) + s_slack(1653,pige_H,plus)
     
      + s_slack(1653,pige_H,minus) + s_slack(1653,pige_L,plus) + s_slack(1653,pige_L,minus) + s_slack(1653,pige_S,plus) + s_slack(1653,pige_S,minus) + s_slack(1653,pota_H,plus) + s_slack(1653,pota_H,minus) + s_slack(1653,pota_L,plus)
     
      + s_slack(1653,pota_L,minus) + s_slack(1653,pota_S,plus) + s_slack(1653,pota_S,minus) + s_slack(1653,rest_H,plus) + s_slack(1653,rest_H,minus) + s_slack(1653,rest_L,plus) + s_slack(1653,rest_L,minus) + s_slack(1653,rest_S,plus)
     
      + s_slack(1653,rest_S,minus) + s_slack(1653,rice_H,plus) + s_slack(1653,rice_H,minus) + s_slack(1653,rice_L,plus) + s_slack(1653,rice_L,minus) + s_slack(1653,rice_S,plus) + s_slack(1653,rice_S,minus) + s_slack(1653,sorg_L,plus)
     
      + s_slack(1653,sorg_L,minus) + s_slack(1653,sorg_S,plus) + s_slack(1653,sorg_S,minus) + s_slack(1653,soyb_L,plus) + s_slack(1653,soyb_L,minus) + s_slack(1653,soyb_S,plus) + s_slack(1653,soyb_S,minus) + s_slack(1653,sunf_L,plus)
     
      + s_slack(1653,sunf_L,minus) + s_slack(1653,temf_H,plus) + s_slack(1653,temf_H,minus) + s_slack(1653,temf_L,plus) + s_slack(1653,temf_L,minus) + s_slack(1653,temf_S,plus) + s_slack(1653,temf_S,minus) + s_slack(1653,toba_H,plus)
     
      + s_slack(1653,toba_H,minus) + s_slack(1653,toba_L,plus) + s_slack(1653,toba_L,minus) + s_slack(1653,trof_L,plus) + s_slack(1653,trof_L,minus) + s_slack(1653,trof_S,plus) + s_slack(1653,trof_S,minus) + s_slack(1653,vege_H,plus)
     
      + s_slack(1653,vege_H,minus) + s_slack(1653,vege_L,plus) + s_slack(1653,vege_L,minus) + s_slack(1653,vege_S,plus) + s_slack(1653,vege_S,minus) + s_slack(1654,rice_I,plus) + s_slack(1654,rice_I,minus) + s_slack(1654,sugc_I,plus)
     
      + s_slack(1654,sugc_I,minus) + s_slack(1654,whea_I,plus) + s_slack(1654,whea_I,minus) + s_slack(1654,bean_H,plus) + s_slack(1654,bean_H,minus) + s_slack(1654,bean_L,plus) + s_slack(1654,bean_L,minus) + s_slack(1654,bean_S,plus)
     
      + s_slack(1654,bean_S,minus) + s_slack(1654,cass_L,plus) + s_slack(1654,cass_L,minus) + s_slack(1654,cass_S,plus) + s_slack(1654,cass_S,minus) + s_slack(1654,chic_H,plus) + s_slack(1654,chic_H,minus) + s_slack(1654,chic_L,plus)
     
      + s_slack(1654,chic_L,minus) + s_slack(1654,chic_S,plus) + s_slack(1654,chic_S,minus) + s_slack(1654,coff_H,plus) + s_slack(1654,coff_H,minus) + s_slack(1654,coff_L,plus) + s_slack(1654,coff_L,minus) + s_slack(1654,cott_L,plus)
     
      + s_slack(1654,cott_L,minus) + s_slack(1654,cowp_H,plus) + s_slack(1654,cowp_H,minus) + s_slack(1654,cowp_L,plus) + s_slack(1654,cowp_L,minus) + s_slack(1654,cowp_S,plus) + s_slack(1654,cowp_S,minus) + s_slack(1654,grou_H,plus)
     
      + s_slack(1654,grou_H,minus) + s_slack(1654,grou_L,plus) + s_slack(1654,grou_L,minus) + s_slack(1654,grou_S,plus) + s_slack(1654,grou_S,minus) + s_slack(1654,lent_H,plus) + s_slack(1654,lent_H,minus) + s_slack(1654,lent_L,plus)
     
      + s_slack(1654,lent_L,minus) + s_slack(1654,lent_S,plus) + s_slack(1654,lent_S,minus) + s_slack(1654,maiz_H,plus) + s_slack(1654,maiz_H,minus) + s_slack(1654,maiz_L,plus) + s_slack(1654,maiz_L,minus) + s_slack(1654,maiz_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 112
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1654,maiz_S,minus) + s_slack(1654,mill_H,plus) + s_slack(1654,mill_H,minus) + s_slack(1654,mill_L,plus) + s_slack(1654,mill_L,minus) + s_slack(1654,mill_S,plus) + s_slack(1654,mill_S,minus) + s_slack(1654,ofib_L,plus)
     
      + s_slack(1654,ofib_L,minus) + s_slack(1654,ooil_L,plus) + s_slack(1654,ooil_L,minus) + s_slack(1654,opul_H,plus) + s_slack(1654,opul_H,minus) + s_slack(1654,opul_L,plus) + s_slack(1654,opul_L,minus) + s_slack(1654,opul_S,plus)
     
      + s_slack(1654,opul_S,minus) + s_slack(1654,pige_H,plus) + s_slack(1654,pige_H,minus) + s_slack(1654,pige_L,plus) + s_slack(1654,pige_L,minus) + s_slack(1654,pige_S,plus) + s_slack(1654,pige_S,minus) + s_slack(1654,pota_H,plus)
     
      + s_slack(1654,pota_H,minus) + s_slack(1654,pota_L,plus) + s_slack(1654,pota_L,minus) + s_slack(1654,pota_S,plus) + s_slack(1654,pota_S,minus) + s_slack(1654,rest_H,plus) + s_slack(1654,rest_H,minus) + s_slack(1654,rest_L,plus)
     
      + s_slack(1654,rest_L,minus) + s_slack(1654,rest_S,plus) + s_slack(1654,rest_S,minus) + s_slack(1654,rice_H,plus) + s_slack(1654,rice_H,minus) + s_slack(1654,rice_L,plus) + s_slack(1654,rice_L,minus) + s_slack(1654,rice_S,plus)
     
      + s_slack(1654,rice_S,minus) + s_slack(1654,sorg_L,plus) + s_slack(1654,sorg_L,minus) + s_slack(1654,sorg_S,plus) + s_slack(1654,sorg_S,minus) + s_slack(1654,soyb_L,plus) + s_slack(1654,soyb_L,minus) + s_slack(1654,soyb_S,plus)
     
      + s_slack(1654,soyb_S,minus) + s_slack(1654,sunf_L,plus) + s_slack(1654,sunf_L,minus) + s_slack(1654,temf_H,plus) + s_slack(1654,temf_H,minus) + s_slack(1654,temf_L,plus) + s_slack(1654,temf_L,minus) + s_slack(1654,temf_S,plus)
     
      + s_slack(1654,temf_S,minus) + s_slack(1654,toba_H,plus) + s_slack(1654,toba_H,minus) + s_slack(1654,toba_L,plus) + s_slack(1654,toba_L,minus) + s_slack(1654,trof_L,plus) + s_slack(1654,trof_L,minus) + s_slack(1654,trof_S,plus)
     
      + s_slack(1654,trof_S,minus) + s_slack(1654,vege_H,plus) + s_slack(1654,vege_H,minus) + s_slack(1654,vege_L,plus) + s_slack(1654,vege_L,minus) + s_slack(1654,vege_S,plus) + s_slack(1654,vege_S,minus) + s_slack(1657,rice_I,plus)
     
      + s_slack(1657,rice_I,minus) + s_slack(1657,sugc_I,plus) + s_slack(1657,sugc_I,minus) + s_slack(1657,whea_I,plus) + s_slack(1657,whea_I,minus) + s_slack(1657,bean_H,plus) + s_slack(1657,bean_H,minus) + s_slack(1657,bean_L,plus)
     
      + s_slack(1657,bean_L,minus) + s_slack(1657,bean_S,plus) + s_slack(1657,bean_S,minus) + s_slack(1657,cass_L,plus) + s_slack(1657,cass_L,minus) + s_slack(1657,cass_S,plus) + s_slack(1657,cass_S,minus) + s_slack(1657,chic_H,plus)
     
      + s_slack(1657,chic_H,minus) + s_slack(1657,chic_L,plus) + s_slack(1657,chic_L,minus) + s_slack(1657,chic_S,plus) + s_slack(1657,chic_S,minus) + s_slack(1657,coff_H,plus) + s_slack(1657,coff_H,minus) + s_slack(1657,coff_L,plus)
     
      + s_slack(1657,coff_L,minus) + s_slack(1657,cott_L,plus) + s_slack(1657,cott_L,minus) + s_slack(1657,cowp_H,plus) + s_slack(1657,cowp_H,minus) + s_slack(1657,cowp_L,plus) + s_slack(1657,cowp_L,minus) + s_slack(1657,cowp_S,plus)
     
      + s_slack(1657,cowp_S,minus) + s_slack(1657,grou_H,plus) + s_slack(1657,grou_H,minus) + s_slack(1657,grou_L,plus) + s_slack(1657,grou_L,minus) + s_slack(1657,grou_S,plus) + s_slack(1657,grou_S,minus) + s_slack(1657,lent_H,plus)
     
      + s_slack(1657,lent_H,minus) + s_slack(1657,lent_L,plus) + s_slack(1657,lent_L,minus) + s_slack(1657,lent_S,plus) + s_slack(1657,lent_S,minus) + s_slack(1657,maiz_H,plus) + s_slack(1657,maiz_H,minus) + s_slack(1657,maiz_L,plus)
     
      + s_slack(1657,maiz_L,minus) + s_slack(1657,maiz_S,plus) + s_slack(1657,maiz_S,minus) + s_slack(1657,mill_H,plus) + s_slack(1657,mill_H,minus) + s_slack(1657,mill_L,plus) + s_slack(1657,mill_L,minus) + s_slack(1657,mill_S,plus)
     
      + s_slack(1657,mill_S,minus) + s_slack(1657,ofib_L,plus) + s_slack(1657,ofib_L,minus) + s_slack(1657,ooil_L,plus) + s_slack(1657,ooil_L,minus) + s_slack(1657,opul_H,plus) + s_slack(1657,opul_H,minus) + s_slack(1657,opul_L,plus)
     
      + s_slack(1657,opul_L,minus) + s_slack(1657,opul_S,plus) + s_slack(1657,opul_S,minus) + s_slack(1657,pige_H,plus) + s_slack(1657,pige_H,minus) + s_slack(1657,pige_L,plus) + s_slack(1657,pige_L,minus) + s_slack(1657,pige_S,plus)
     
      + s_slack(1657,pige_S,minus) + s_slack(1657,pota_H,plus) + s_slack(1657,pota_H,minus) + s_slack(1657,pota_L,plus) + s_slack(1657,pota_L,minus) + s_slack(1657,pota_S,plus) + s_slack(1657,pota_S,minus) + s_slack(1657,rest_H,plus)
     
      + s_slack(1657,rest_H,minus) + s_slack(1657,rest_L,plus) + s_slack(1657,rest_L,minus) + s_slack(1657,rest_S,plus) + s_slack(1657,rest_S,minus) + s_slack(1657,rice_H,plus) + s_slack(1657,rice_H,minus) + s_slack(1657,rice_L,plus)
     
      + s_slack(1657,rice_L,minus) + s_slack(1657,rice_S,plus) + s_slack(1657,rice_S,minus) + s_slack(1657,sorg_L,plus) + s_slack(1657,sorg_L,minus) + s_slack(1657,sorg_S,plus) + s_slack(1657,sorg_S,minus) + s_slack(1657,soyb_L,plus)
     
      + s_slack(1657,soyb_L,minus) + s_slack(1657,soyb_S,plus) + s_slack(1657,soyb_S,minus) + s_slack(1657,sunf_L,plus) + s_slack(1657,sunf_L,minus) + s_slack(1657,temf_H,plus) + s_slack(1657,temf_H,minus) + s_slack(1657,temf_L,plus)
     
      + s_slack(1657,temf_L,minus) + s_slack(1657,temf_S,plus) + s_slack(1657,temf_S,minus) + s_slack(1657,toba_H,plus) + s_slack(1657,toba_H,minus) + s_slack(1657,toba_L,plus) + s_slack(1657,toba_L,minus) + s_slack(1657,trof_L,plus)
     
      + s_slack(1657,trof_L,minus) + s_slack(1657,trof_S,plus) + s_slack(1657,trof_S,minus) + s_slack(1657,vege_H,plus) + s_slack(1657,vege_H,minus) + s_slack(1657,vege_L,plus) + s_slack(1657,vege_L,minus) + s_slack(1657,vege_S,plus)
     
      + s_slack(1657,vege_S,minus) + s_slack(1658,rice_I,plus) + s_slack(1658,rice_I,minus) + s_slack(1658,sugc_I,plus) + s_slack(1658,sugc_I,minus) + s_slack(1658,whea_I,plus) + s_slack(1658,whea_I,minus) + s_slack(1658,bean_H,plus)
     
      + s_slack(1658,bean_H,minus) + s_slack(1658,bean_L,plus) + s_slack(1658,bean_L,minus) + s_slack(1658,bean_S,plus) + s_slack(1658,bean_S,minus) + s_slack(1658,cass_L,plus) + s_slack(1658,cass_L,minus) + s_slack(1658,cass_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 113
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1658,cass_S,minus) + s_slack(1658,chic_H,plus) + s_slack(1658,chic_H,minus) + s_slack(1658,chic_L,plus) + s_slack(1658,chic_L,minus) + s_slack(1658,chic_S,plus) + s_slack(1658,chic_S,minus) + s_slack(1658,coff_H,plus)
     
      + s_slack(1658,coff_H,minus) + s_slack(1658,coff_L,plus) + s_slack(1658,coff_L,minus) + s_slack(1658,cott_L,plus) + s_slack(1658,cott_L,minus) + s_slack(1658,cowp_H,plus) + s_slack(1658,cowp_H,minus) + s_slack(1658,cowp_L,plus)
     
      + s_slack(1658,cowp_L,minus) + s_slack(1658,cowp_S,plus) + s_slack(1658,cowp_S,minus) + s_slack(1658,grou_H,plus) + s_slack(1658,grou_H,minus) + s_slack(1658,grou_L,plus) + s_slack(1658,grou_L,minus) + s_slack(1658,grou_S,plus)
     
      + s_slack(1658,grou_S,minus) + s_slack(1658,lent_H,plus) + s_slack(1658,lent_H,minus) + s_slack(1658,lent_L,plus) + s_slack(1658,lent_L,minus) + s_slack(1658,lent_S,plus) + s_slack(1658,lent_S,minus) + s_slack(1658,maiz_H,plus)
     
      + s_slack(1658,maiz_H,minus) + s_slack(1658,maiz_L,plus) + s_slack(1658,maiz_L,minus) + s_slack(1658,maiz_S,plus) + s_slack(1658,maiz_S,minus) + s_slack(1658,mill_H,plus) + s_slack(1658,mill_H,minus) + s_slack(1658,mill_L,plus)
     
      + s_slack(1658,mill_L,minus) + s_slack(1658,mill_S,plus) + s_slack(1658,mill_S,minus) + s_slack(1658,ofib_L,plus) + s_slack(1658,ofib_L,minus) + s_slack(1658,ooil_L,plus) + s_slack(1658,ooil_L,minus) + s_slack(1658,opul_H,plus)
     
      + s_slack(1658,opul_H,minus) + s_slack(1658,opul_L,plus) + s_slack(1658,opul_L,minus) + s_slack(1658,opul_S,plus) + s_slack(1658,opul_S,minus) + s_slack(1658,pige_H,plus) + s_slack(1658,pige_H,minus) + s_slack(1658,pige_L,plus)
     
      + s_slack(1658,pige_L,minus) + s_slack(1658,pige_S,plus) + s_slack(1658,pige_S,minus) + s_slack(1658,pota_H,plus) + s_slack(1658,pota_H,minus) + s_slack(1658,pota_L,plus) + s_slack(1658,pota_L,minus) + s_slack(1658,pota_S,plus)
     
      + s_slack(1658,pota_S,minus) + s_slack(1658,rest_H,plus) + s_slack(1658,rest_H,minus) + s_slack(1658,rest_L,plus) + s_slack(1658,rest_L,minus) + s_slack(1658,rest_S,plus) + s_slack(1658,rest_S,minus) + s_slack(1658,rice_H,plus)
     
      + s_slack(1658,rice_H,minus) + s_slack(1658,rice_L,plus) + s_slack(1658,rice_L,minus) + s_slack(1658,rice_S,plus) + s_slack(1658,rice_S,minus) + s_slack(1658,sorg_L,plus) + s_slack(1658,sorg_L,minus) + s_slack(1658,sorg_S,plus)
     
      + s_slack(1658,sorg_S,minus) + s_slack(1658,soyb_L,plus) + s_slack(1658,soyb_L,minus) + s_slack(1658,soyb_S,plus) + s_slack(1658,soyb_S,minus) + s_slack(1658,sunf_L,plus) + s_slack(1658,sunf_L,minus) + s_slack(1658,temf_H,plus)
     
      + s_slack(1658,temf_H,minus) + s_slack(1658,temf_L,plus) + s_slack(1658,temf_L,minus) + s_slack(1658,temf_S,plus) + s_slack(1658,temf_S,minus) + s_slack(1658,toba_H,plus) + s_slack(1658,toba_H,minus) + s_slack(1658,toba_L,plus)
     
      + s_slack(1658,toba_L,minus) + s_slack(1658,trof_L,plus) + s_slack(1658,trof_L,minus) + s_slack(1658,trof_S,plus) + s_slack(1658,trof_S,minus) + s_slack(1658,vege_H,plus) + s_slack(1658,vege_H,minus) + s_slack(1658,vege_L,plus)
     
      + s_slack(1658,vege_L,minus) + s_slack(1658,vege_S,plus) + s_slack(1658,vege_S,minus) + s_slack(1686,rice_I,plus) + s_slack(1686,rice_I,minus) + s_slack(1686,sugc_I,plus) + s_slack(1686,sugc_I,minus) + s_slack(1686,whea_I,plus)
     
      + s_slack(1686,whea_I,minus) + s_slack(1686,bean_H,plus) + s_slack(1686,bean_H,minus) + s_slack(1686,bean_L,plus) + s_slack(1686,bean_L,minus) + s_slack(1686,bean_S,plus) + s_slack(1686,bean_S,minus) + s_slack(1686,cass_L,plus)
     
      + s_slack(1686,cass_L,minus) + s_slack(1686,cass_S,plus) + s_slack(1686,cass_S,minus) + s_slack(1686,chic_H,plus) + s_slack(1686,chic_H,minus) + s_slack(1686,chic_L,plus) + s_slack(1686,chic_L,minus) + s_slack(1686,chic_S,plus)
     
      + s_slack(1686,chic_S,minus) + s_slack(1686,coff_H,plus) + s_slack(1686,coff_H,minus) + s_slack(1686,coff_L,plus) + s_slack(1686,coff_L,minus) + s_slack(1686,cott_L,plus) + s_slack(1686,cott_L,minus) + s_slack(1686,cowp_H,plus)
     
      + s_slack(1686,cowp_H,minus) + s_slack(1686,cowp_L,plus) + s_slack(1686,cowp_L,minus) + s_slack(1686,cowp_S,plus) + s_slack(1686,cowp_S,minus) + s_slack(1686,grou_H,plus) + s_slack(1686,grou_H,minus) + s_slack(1686,grou_L,plus)
     
      + s_slack(1686,grou_L,minus) + s_slack(1686,grou_S,plus) + s_slack(1686,grou_S,minus) + s_slack(1686,lent_H,plus) + s_slack(1686,lent_H,minus) + s_slack(1686,lent_L,plus) + s_slack(1686,lent_L,minus) + s_slack(1686,lent_S,plus)
     
      + s_slack(1686,lent_S,minus) + s_slack(1686,maiz_H,plus) + s_slack(1686,maiz_H,minus) + s_slack(1686,maiz_L,plus) + s_slack(1686,maiz_L,minus) + s_slack(1686,maiz_S,plus) + s_slack(1686,maiz_S,minus) + s_slack(1686,mill_H,plus)
     
      + s_slack(1686,mill_H,minus) + s_slack(1686,mill_L,plus) + s_slack(1686,mill_L,minus) + s_slack(1686,mill_S,plus) + s_slack(1686,mill_S,minus) + s_slack(1686,ofib_L,plus) + s_slack(1686,ofib_L,minus) + s_slack(1686,ooil_L,plus)
     
      + s_slack(1686,ooil_L,minus) + s_slack(1686,opul_H,plus) + s_slack(1686,opul_H,minus) + s_slack(1686,opul_L,plus) + s_slack(1686,opul_L,minus) + s_slack(1686,opul_S,plus) + s_slack(1686,opul_S,minus) + s_slack(1686,pige_H,plus)
     
      + s_slack(1686,pige_H,minus) + s_slack(1686,pige_L,plus) + s_slack(1686,pige_L,minus) + s_slack(1686,pige_S,plus) + s_slack(1686,pige_S,minus) + s_slack(1686,pota_H,plus) + s_slack(1686,pota_H,minus) + s_slack(1686,pota_L,plus)
     
      + s_slack(1686,pota_L,minus) + s_slack(1686,pota_S,plus) + s_slack(1686,pota_S,minus) + s_slack(1686,rest_H,plus) + s_slack(1686,rest_H,minus) + s_slack(1686,rest_L,plus) + s_slack(1686,rest_L,minus) + s_slack(1686,rest_S,plus)
     
      + s_slack(1686,rest_S,minus) + s_slack(1686,rice_H,plus) + s_slack(1686,rice_H,minus) + s_slack(1686,rice_L,plus) + s_slack(1686,rice_L,minus) + s_slack(1686,rice_S,plus) + s_slack(1686,rice_S,minus) + s_slack(1686,sorg_L,plus)
     
      + s_slack(1686,sorg_L,minus) + s_slack(1686,sorg_S,plus) + s_slack(1686,sorg_S,minus) + s_slack(1686,soyb_L,plus) + s_slack(1686,soyb_L,minus) + s_slack(1686,soyb_S,plus) + s_slack(1686,soyb_S,minus) + s_slack(1686,sunf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 114
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1686,sunf_L,minus) + s_slack(1686,temf_H,plus) + s_slack(1686,temf_H,minus) + s_slack(1686,temf_L,plus) + s_slack(1686,temf_L,minus) + s_slack(1686,temf_S,plus) + s_slack(1686,temf_S,minus) + s_slack(1686,toba_H,plus)
     
      + s_slack(1686,toba_H,minus) + s_slack(1686,toba_L,plus) + s_slack(1686,toba_L,minus) + s_slack(1686,trof_L,plus) + s_slack(1686,trof_L,minus) + s_slack(1686,trof_S,plus) + s_slack(1686,trof_S,minus) + s_slack(1686,vege_H,plus)
     
      + s_slack(1686,vege_H,minus) + s_slack(1686,vege_L,plus) + s_slack(1686,vege_L,minus) + s_slack(1686,vege_S,plus) + s_slack(1686,vege_S,minus) + s_slack(1687,rice_I,plus) + s_slack(1687,rice_I,minus) + s_slack(1687,sugc_I,plus)
     
      + s_slack(1687,sugc_I,minus) + s_slack(1687,whea_I,plus) + s_slack(1687,whea_I,minus) + s_slack(1687,bean_H,plus) + s_slack(1687,bean_H,minus) + s_slack(1687,bean_L,plus) + s_slack(1687,bean_L,minus) + s_slack(1687,bean_S,plus)
     
      + s_slack(1687,bean_S,minus) + s_slack(1687,cass_L,plus) + s_slack(1687,cass_L,minus) + s_slack(1687,cass_S,plus) + s_slack(1687,cass_S,minus) + s_slack(1687,chic_H,plus) + s_slack(1687,chic_H,minus) + s_slack(1687,chic_L,plus)
     
      + s_slack(1687,chic_L,minus) + s_slack(1687,chic_S,plus) + s_slack(1687,chic_S,minus) + s_slack(1687,coff_H,plus) + s_slack(1687,coff_H,minus) + s_slack(1687,coff_L,plus) + s_slack(1687,coff_L,minus) + s_slack(1687,cott_L,plus)
     
      + s_slack(1687,cott_L,minus) + s_slack(1687,cowp_H,plus) + s_slack(1687,cowp_H,minus) + s_slack(1687,cowp_L,plus) + s_slack(1687,cowp_L,minus) + s_slack(1687,cowp_S,plus) + s_slack(1687,cowp_S,minus) + s_slack(1687,grou_H,plus)
     
      + s_slack(1687,grou_H,minus) + s_slack(1687,grou_L,plus) + s_slack(1687,grou_L,minus) + s_slack(1687,grou_S,plus) + s_slack(1687,grou_S,minus) + s_slack(1687,lent_H,plus) + s_slack(1687,lent_H,minus) + s_slack(1687,lent_L,plus)
     
      + s_slack(1687,lent_L,minus) + s_slack(1687,lent_S,plus) + s_slack(1687,lent_S,minus) + s_slack(1687,maiz_H,plus) + s_slack(1687,maiz_H,minus) + s_slack(1687,maiz_L,plus) + s_slack(1687,maiz_L,minus) + s_slack(1687,maiz_S,plus)
     
      + s_slack(1687,maiz_S,minus) + s_slack(1687,mill_H,plus) + s_slack(1687,mill_H,minus) + s_slack(1687,mill_L,plus) + s_slack(1687,mill_L,minus) + s_slack(1687,mill_S,plus) + s_slack(1687,mill_S,minus) + s_slack(1687,ofib_L,plus)
     
      + s_slack(1687,ofib_L,minus) + s_slack(1687,ooil_L,plus) + s_slack(1687,ooil_L,minus) + s_slack(1687,opul_H,plus) + s_slack(1687,opul_H,minus) + s_slack(1687,opul_L,plus) + s_slack(1687,opul_L,minus) + s_slack(1687,opul_S,plus)
     
      + s_slack(1687,opul_S,minus) + s_slack(1687,pige_H,plus) + s_slack(1687,pige_H,minus) + s_slack(1687,pige_L,plus) + s_slack(1687,pige_L,minus) + s_slack(1687,pige_S,plus) + s_slack(1687,pige_S,minus) + s_slack(1687,pota_H,plus)
     
      + s_slack(1687,pota_H,minus) + s_slack(1687,pota_L,plus) + s_slack(1687,pota_L,minus) + s_slack(1687,pota_S,plus) + s_slack(1687,pota_S,minus) + s_slack(1687,rest_H,plus) + s_slack(1687,rest_H,minus) + s_slack(1687,rest_L,plus)
     
      + s_slack(1687,rest_L,minus) + s_slack(1687,rest_S,plus) + s_slack(1687,rest_S,minus) + s_slack(1687,rice_H,plus) + s_slack(1687,rice_H,minus) + s_slack(1687,rice_L,plus) + s_slack(1687,rice_L,minus) + s_slack(1687,rice_S,plus)
     
      + s_slack(1687,rice_S,minus) + s_slack(1687,sorg_L,plus) + s_slack(1687,sorg_L,minus) + s_slack(1687,sorg_S,plus) + s_slack(1687,sorg_S,minus) + s_slack(1687,soyb_L,plus) + s_slack(1687,soyb_L,minus) + s_slack(1687,soyb_S,plus)
     
      + s_slack(1687,soyb_S,minus) + s_slack(1687,sunf_L,plus) + s_slack(1687,sunf_L,minus) + s_slack(1687,temf_H,plus) + s_slack(1687,temf_H,minus) + s_slack(1687,temf_L,plus) + s_slack(1687,temf_L,minus) + s_slack(1687,temf_S,plus)
     
      + s_slack(1687,temf_S,minus) + s_slack(1687,toba_H,plus) + s_slack(1687,toba_H,minus) + s_slack(1687,toba_L,plus) + s_slack(1687,toba_L,minus) + s_slack(1687,trof_L,plus) + s_slack(1687,trof_L,minus) + s_slack(1687,trof_S,plus)
     
      + s_slack(1687,trof_S,minus) + s_slack(1687,vege_H,plus) + s_slack(1687,vege_H,minus) + s_slack(1687,vege_L,plus) + s_slack(1687,vege_L,minus) + s_slack(1687,vege_S,plus) + s_slack(1687,vege_S,minus) + s_slack(1688,rice_I,plus)
     
      + s_slack(1688,rice_I,minus) + s_slack(1688,sugc_I,plus) + s_slack(1688,sugc_I,minus) + s_slack(1688,whea_I,plus) + s_slack(1688,whea_I,minus) + s_slack(1688,bean_H,plus) + s_slack(1688,bean_H,minus) + s_slack(1688,bean_L,plus)
     
      + s_slack(1688,bean_L,minus) + s_slack(1688,bean_S,plus) + s_slack(1688,bean_S,minus) + s_slack(1688,cass_L,plus) + s_slack(1688,cass_L,minus) + s_slack(1688,cass_S,plus) + s_slack(1688,cass_S,minus) + s_slack(1688,chic_H,plus)
     
      + s_slack(1688,chic_H,minus) + s_slack(1688,chic_L,plus) + s_slack(1688,chic_L,minus) + s_slack(1688,chic_S,plus) + s_slack(1688,chic_S,minus) + s_slack(1688,coff_H,plus) + s_slack(1688,coff_H,minus) + s_slack(1688,coff_L,plus)
     
      + s_slack(1688,coff_L,minus) + s_slack(1688,cott_L,plus) + s_slack(1688,cott_L,minus) + s_slack(1688,cowp_H,plus) + s_slack(1688,cowp_H,minus) + s_slack(1688,cowp_L,plus) + s_slack(1688,cowp_L,minus) + s_slack(1688,cowp_S,plus)
     
      + s_slack(1688,cowp_S,minus) + s_slack(1688,grou_H,plus) + s_slack(1688,grou_H,minus) + s_slack(1688,grou_L,plus) + s_slack(1688,grou_L,minus) + s_slack(1688,grou_S,plus) + s_slack(1688,grou_S,minus) + s_slack(1688,lent_H,plus)
     
      + s_slack(1688,lent_H,minus) + s_slack(1688,lent_L,plus) + s_slack(1688,lent_L,minus) + s_slack(1688,lent_S,plus) + s_slack(1688,lent_S,minus) + s_slack(1688,maiz_H,plus) + s_slack(1688,maiz_H,minus) + s_slack(1688,maiz_L,plus)
     
      + s_slack(1688,maiz_L,minus) + s_slack(1688,maiz_S,plus) + s_slack(1688,maiz_S,minus) + s_slack(1688,mill_H,plus) + s_slack(1688,mill_H,minus) + s_slack(1688,mill_L,plus) + s_slack(1688,mill_L,minus) + s_slack(1688,mill_S,plus)
     
      + s_slack(1688,mill_S,minus) + s_slack(1688,ofib_L,plus) + s_slack(1688,ofib_L,minus) + s_slack(1688,ooil_L,plus) + s_slack(1688,ooil_L,minus) + s_slack(1688,opul_H,plus) + s_slack(1688,opul_H,minus) + s_slack(1688,opul_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 115
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1688,opul_L,minus) + s_slack(1688,opul_S,plus) + s_slack(1688,opul_S,minus) + s_slack(1688,pige_H,plus) + s_slack(1688,pige_H,minus) + s_slack(1688,pige_L,plus) + s_slack(1688,pige_L,minus) + s_slack(1688,pige_S,plus)
     
      + s_slack(1688,pige_S,minus) + s_slack(1688,pota_H,plus) + s_slack(1688,pota_H,minus) + s_slack(1688,pota_L,plus) + s_slack(1688,pota_L,minus) + s_slack(1688,pota_S,plus) + s_slack(1688,pota_S,minus) + s_slack(1688,rest_H,plus)
     
      + s_slack(1688,rest_H,minus) + s_slack(1688,rest_L,plus) + s_slack(1688,rest_L,minus) + s_slack(1688,rest_S,plus) + s_slack(1688,rest_S,minus) + s_slack(1688,rice_H,plus) + s_slack(1688,rice_H,minus) + s_slack(1688,rice_L,plus)
     
      + s_slack(1688,rice_L,minus) + s_slack(1688,rice_S,plus) + s_slack(1688,rice_S,minus) + s_slack(1688,sorg_L,plus) + s_slack(1688,sorg_L,minus) + s_slack(1688,sorg_S,plus) + s_slack(1688,sorg_S,minus) + s_slack(1688,soyb_L,plus)
     
      + s_slack(1688,soyb_L,minus) + s_slack(1688,soyb_S,plus) + s_slack(1688,soyb_S,minus) + s_slack(1688,sunf_L,plus) + s_slack(1688,sunf_L,minus) + s_slack(1688,temf_H,plus) + s_slack(1688,temf_H,minus) + s_slack(1688,temf_L,plus)
     
      + s_slack(1688,temf_L,minus) + s_slack(1688,temf_S,plus) + s_slack(1688,temf_S,minus) + s_slack(1688,toba_H,plus) + s_slack(1688,toba_H,minus) + s_slack(1688,toba_L,plus) + s_slack(1688,toba_L,minus) + s_slack(1688,trof_L,plus)
     
      + s_slack(1688,trof_L,minus) + s_slack(1688,trof_S,plus) + s_slack(1688,trof_S,minus) + s_slack(1688,vege_H,plus) + s_slack(1688,vege_H,minus) + s_slack(1688,vege_L,plus) + s_slack(1688,vege_L,minus) + s_slack(1688,vege_S,plus)
     
      + s_slack(1688,vege_S,minus) + s_slack(1689,rice_I,plus) + s_slack(1689,rice_I,minus) + s_slack(1689,sugc_I,plus) + s_slack(1689,sugc_I,minus) + s_slack(1689,whea_I,plus) + s_slack(1689,whea_I,minus) + s_slack(1689,bean_H,plus)
     
      + s_slack(1689,bean_H,minus) + s_slack(1689,bean_L,plus) + s_slack(1689,bean_L,minus) + s_slack(1689,bean_S,plus) + s_slack(1689,bean_S,minus) + s_slack(1689,cass_L,plus) + s_slack(1689,cass_L,minus) + s_slack(1689,cass_S,plus)
     
      + s_slack(1689,cass_S,minus) + s_slack(1689,chic_H,plus) + s_slack(1689,chic_H,minus) + s_slack(1689,chic_L,plus) + s_slack(1689,chic_L,minus) + s_slack(1689,chic_S,plus) + s_slack(1689,chic_S,minus) + s_slack(1689,coff_H,plus)
     
      + s_slack(1689,coff_H,minus) + s_slack(1689,coff_L,plus) + s_slack(1689,coff_L,minus) + s_slack(1689,cott_L,plus) + s_slack(1689,cott_L,minus) + s_slack(1689,cowp_H,plus) + s_slack(1689,cowp_H,minus) + s_slack(1689,cowp_L,plus)
     
      + s_slack(1689,cowp_L,minus) + s_slack(1689,cowp_S,plus) + s_slack(1689,cowp_S,minus) + s_slack(1689,grou_H,plus) + s_slack(1689,grou_H,minus) + s_slack(1689,grou_L,plus) + s_slack(1689,grou_L,minus) + s_slack(1689,grou_S,plus)
     
      + s_slack(1689,grou_S,minus) + s_slack(1689,lent_H,plus) + s_slack(1689,lent_H,minus) + s_slack(1689,lent_L,plus) + s_slack(1689,lent_L,minus) + s_slack(1689,lent_S,plus) + s_slack(1689,lent_S,minus) + s_slack(1689,maiz_H,plus)
     
      + s_slack(1689,maiz_H,minus) + s_slack(1689,maiz_L,plus) + s_slack(1689,maiz_L,minus) + s_slack(1689,maiz_S,plus) + s_slack(1689,maiz_S,minus) + s_slack(1689,mill_H,plus) + s_slack(1689,mill_H,minus) + s_slack(1689,mill_L,plus)
     
      + s_slack(1689,mill_L,minus) + s_slack(1689,mill_S,plus) + s_slack(1689,mill_S,minus) + s_slack(1689,ofib_L,plus) + s_slack(1689,ofib_L,minus) + s_slack(1689,ooil_L,plus) + s_slack(1689,ooil_L,minus) + s_slack(1689,opul_H,plus)
     
      + s_slack(1689,opul_H,minus) + s_slack(1689,opul_L,plus) + s_slack(1689,opul_L,minus) + s_slack(1689,opul_S,plus) + s_slack(1689,opul_S,minus) + s_slack(1689,pige_H,plus) + s_slack(1689,pige_H,minus) + s_slack(1689,pige_L,plus)
     
      + s_slack(1689,pige_L,minus) + s_slack(1689,pige_S,plus) + s_slack(1689,pige_S,minus) + s_slack(1689,pota_H,plus) + s_slack(1689,pota_H,minus) + s_slack(1689,pota_L,plus) + s_slack(1689,pota_L,minus) + s_slack(1689,pota_S,plus)
     
      + s_slack(1689,pota_S,minus) + s_slack(1689,rest_H,plus) + s_slack(1689,rest_H,minus) + s_slack(1689,rest_L,plus) + s_slack(1689,rest_L,minus) + s_slack(1689,rest_S,plus) + s_slack(1689,rest_S,minus) + s_slack(1689,rice_H,plus)
     
      + s_slack(1689,rice_H,minus) + s_slack(1689,rice_L,plus) + s_slack(1689,rice_L,minus) + s_slack(1689,rice_S,plus) + s_slack(1689,rice_S,minus) + s_slack(1689,sorg_L,plus) + s_slack(1689,sorg_L,minus) + s_slack(1689,sorg_S,plus)
     
      + s_slack(1689,sorg_S,minus) + s_slack(1689,soyb_L,plus) + s_slack(1689,soyb_L,minus) + s_slack(1689,soyb_S,plus) + s_slack(1689,soyb_S,minus) + s_slack(1689,sunf_L,plus) + s_slack(1689,sunf_L,minus) + s_slack(1689,temf_H,plus)
     
      + s_slack(1689,temf_H,minus) + s_slack(1689,temf_L,plus) + s_slack(1689,temf_L,minus) + s_slack(1689,temf_S,plus) + s_slack(1689,temf_S,minus) + s_slack(1689,toba_H,plus) + s_slack(1689,toba_H,minus) + s_slack(1689,toba_L,plus)
     
      + s_slack(1689,toba_L,minus) + s_slack(1689,trof_L,plus) + s_slack(1689,trof_L,minus) + s_slack(1689,trof_S,plus) + s_slack(1689,trof_S,minus) + s_slack(1689,vege_H,plus) + s_slack(1689,vege_H,minus) + s_slack(1689,vege_L,plus)
     
      + s_slack(1689,vege_L,minus) + s_slack(1689,vege_S,plus) + s_slack(1689,vege_S,minus) + s_slack(1690,rice_I,plus) + s_slack(1690,rice_I,minus) + s_slack(1690,sugc_I,plus) + s_slack(1690,sugc_I,minus) + s_slack(1690,whea_I,plus)
     
      + s_slack(1690,whea_I,minus) + s_slack(1690,bean_H,plus) + s_slack(1690,bean_H,minus) + s_slack(1690,bean_L,plus) + s_slack(1690,bean_L,minus) + s_slack(1690,bean_S,plus) + s_slack(1690,bean_S,minus) + s_slack(1690,cass_L,plus)
     
      + s_slack(1690,cass_L,minus) + s_slack(1690,cass_S,plus) + s_slack(1690,cass_S,minus) + s_slack(1690,chic_H,plus) + s_slack(1690,chic_H,minus) + s_slack(1690,chic_L,plus) + s_slack(1690,chic_L,minus) + s_slack(1690,chic_S,plus)
     
      + s_slack(1690,chic_S,minus) + s_slack(1690,coff_H,plus) + s_slack(1690,coff_H,minus) + s_slack(1690,coff_L,plus) + s_slack(1690,coff_L,minus) + s_slack(1690,cott_L,plus) + s_slack(1690,cott_L,minus) + s_slack(1690,cowp_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 116
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1690,cowp_H,minus) + s_slack(1690,cowp_L,plus) + s_slack(1690,cowp_L,minus) + s_slack(1690,cowp_S,plus) + s_slack(1690,cowp_S,minus) + s_slack(1690,grou_H,plus) + s_slack(1690,grou_H,minus) + s_slack(1690,grou_L,plus)
     
      + s_slack(1690,grou_L,minus) + s_slack(1690,grou_S,plus) + s_slack(1690,grou_S,minus) + s_slack(1690,lent_H,plus) + s_slack(1690,lent_H,minus) + s_slack(1690,lent_L,plus) + s_slack(1690,lent_L,minus) + s_slack(1690,lent_S,plus)
     
      + s_slack(1690,lent_S,minus) + s_slack(1690,maiz_H,plus) + s_slack(1690,maiz_H,minus) + s_slack(1690,maiz_L,plus) + s_slack(1690,maiz_L,minus) + s_slack(1690,maiz_S,plus) + s_slack(1690,maiz_S,minus) + s_slack(1690,mill_H,plus)
     
      + s_slack(1690,mill_H,minus) + s_slack(1690,mill_L,plus) + s_slack(1690,mill_L,minus) + s_slack(1690,mill_S,plus) + s_slack(1690,mill_S,minus) + s_slack(1690,ofib_L,plus) + s_slack(1690,ofib_L,minus) + s_slack(1690,ooil_L,plus)
     
      + s_slack(1690,ooil_L,minus) + s_slack(1690,opul_H,plus) + s_slack(1690,opul_H,minus) + s_slack(1690,opul_L,plus) + s_slack(1690,opul_L,minus) + s_slack(1690,opul_S,plus) + s_slack(1690,opul_S,minus) + s_slack(1690,pige_H,plus)
     
      + s_slack(1690,pige_H,minus) + s_slack(1690,pige_L,plus) + s_slack(1690,pige_L,minus) + s_slack(1690,pige_S,plus) + s_slack(1690,pige_S,minus) + s_slack(1690,pota_H,plus) + s_slack(1690,pota_H,minus) + s_slack(1690,pota_L,plus)
     
      + s_slack(1690,pota_L,minus) + s_slack(1690,pota_S,plus) + s_slack(1690,pota_S,minus) + s_slack(1690,rest_H,plus) + s_slack(1690,rest_H,minus) + s_slack(1690,rest_L,plus) + s_slack(1690,rest_L,minus) + s_slack(1690,rest_S,plus)
     
      + s_slack(1690,rest_S,minus) + s_slack(1690,rice_H,plus) + s_slack(1690,rice_H,minus) + s_slack(1690,rice_L,plus) + s_slack(1690,rice_L,minus) + s_slack(1690,rice_S,plus) + s_slack(1690,rice_S,minus) + s_slack(1690,sorg_L,plus)
     
      + s_slack(1690,sorg_L,minus) + s_slack(1690,sorg_S,plus) + s_slack(1690,sorg_S,minus) + s_slack(1690,soyb_L,plus) + s_slack(1690,soyb_L,minus) + s_slack(1690,soyb_S,plus) + s_slack(1690,soyb_S,minus) + s_slack(1690,sunf_L,plus)
     
      + s_slack(1690,sunf_L,minus) + s_slack(1690,temf_H,plus) + s_slack(1690,temf_H,minus) + s_slack(1690,temf_L,plus) + s_slack(1690,temf_L,minus) + s_slack(1690,temf_S,plus) + s_slack(1690,temf_S,minus) + s_slack(1690,toba_H,plus)
     
      + s_slack(1690,toba_H,minus) + s_slack(1690,toba_L,plus) + s_slack(1690,toba_L,minus) + s_slack(1690,trof_L,plus) + s_slack(1690,trof_L,minus) + s_slack(1690,trof_S,plus) + s_slack(1690,trof_S,minus) + s_slack(1690,vege_H,plus)
     
      + s_slack(1690,vege_H,minus) + s_slack(1690,vege_L,plus) + s_slack(1690,vege_L,minus) + s_slack(1690,vege_S,plus) + s_slack(1690,vege_S,minus) + s_slack(1691,rice_I,plus) + s_slack(1691,rice_I,minus) + s_slack(1691,sugc_I,plus)
     
      + s_slack(1691,sugc_I,minus) + s_slack(1691,whea_I,plus) + s_slack(1691,whea_I,minus) + s_slack(1691,bean_H,plus) + s_slack(1691,bean_H,minus) + s_slack(1691,bean_L,plus) + s_slack(1691,bean_L,minus) + s_slack(1691,bean_S,plus)
     
      + s_slack(1691,bean_S,minus) + s_slack(1691,cass_L,plus) + s_slack(1691,cass_L,minus) + s_slack(1691,cass_S,plus) + s_slack(1691,cass_S,minus) + s_slack(1691,chic_H,plus) + s_slack(1691,chic_H,minus) + s_slack(1691,chic_L,plus)
     
      + s_slack(1691,chic_L,minus) + s_slack(1691,chic_S,plus) + s_slack(1691,chic_S,minus) + s_slack(1691,coff_H,plus) + s_slack(1691,coff_H,minus) + s_slack(1691,coff_L,plus) + s_slack(1691,coff_L,minus) + s_slack(1691,cott_L,plus)
     
      + s_slack(1691,cott_L,minus) + s_slack(1691,cowp_H,plus) + s_slack(1691,cowp_H,minus) + s_slack(1691,cowp_L,plus) + s_slack(1691,cowp_L,minus) + s_slack(1691,cowp_S,plus) + s_slack(1691,cowp_S,minus) + s_slack(1691,grou_H,plus)
     
      + s_slack(1691,grou_H,minus) + s_slack(1691,grou_L,plus) + s_slack(1691,grou_L,minus) + s_slack(1691,grou_S,plus) + s_slack(1691,grou_S,minus) + s_slack(1691,lent_H,plus) + s_slack(1691,lent_H,minus) + s_slack(1691,lent_L,plus)
     
      + s_slack(1691,lent_L,minus) + s_slack(1691,lent_S,plus) + s_slack(1691,lent_S,minus) + s_slack(1691,maiz_H,plus) + s_slack(1691,maiz_H,minus) + s_slack(1691,maiz_L,plus) + s_slack(1691,maiz_L,minus) + s_slack(1691,maiz_S,plus)
     
      + s_slack(1691,maiz_S,minus) + s_slack(1691,mill_H,plus) + s_slack(1691,mill_H,minus) + s_slack(1691,mill_L,plus) + s_slack(1691,mill_L,minus) + s_slack(1691,mill_S,plus) + s_slack(1691,mill_S,minus) + s_slack(1691,ofib_L,plus)
     
      + s_slack(1691,ofib_L,minus) + s_slack(1691,ooil_L,plus) + s_slack(1691,ooil_L,minus) + s_slack(1691,opul_H,plus) + s_slack(1691,opul_H,minus) + s_slack(1691,opul_L,plus) + s_slack(1691,opul_L,minus) + s_slack(1691,opul_S,plus)
     
      + s_slack(1691,opul_S,minus) + s_slack(1691,pige_H,plus) + s_slack(1691,pige_H,minus) + s_slack(1691,pige_L,plus) + s_slack(1691,pige_L,minus) + s_slack(1691,pige_S,plus) + s_slack(1691,pige_S,minus) + s_slack(1691,pota_H,plus)
     
      + s_slack(1691,pota_H,minus) + s_slack(1691,pota_L,plus) + s_slack(1691,pota_L,minus) + s_slack(1691,pota_S,plus) + s_slack(1691,pota_S,minus) + s_slack(1691,rest_H,plus) + s_slack(1691,rest_H,minus) + s_slack(1691,rest_L,plus)
     
      + s_slack(1691,rest_L,minus) + s_slack(1691,rest_S,plus) + s_slack(1691,rest_S,minus) + s_slack(1691,rice_H,plus) + s_slack(1691,rice_H,minus) + s_slack(1691,rice_L,plus) + s_slack(1691,rice_L,minus) + s_slack(1691,rice_S,plus)
     
      + s_slack(1691,rice_S,minus) + s_slack(1691,sorg_L,plus) + s_slack(1691,sorg_L,minus) + s_slack(1691,sorg_S,plus) + s_slack(1691,sorg_S,minus) + s_slack(1691,soyb_L,plus) + s_slack(1691,soyb_L,minus) + s_slack(1691,soyb_S,plus)
     
      + s_slack(1691,soyb_S,minus) + s_slack(1691,sunf_L,plus) + s_slack(1691,sunf_L,minus) + s_slack(1691,temf_H,plus) + s_slack(1691,temf_H,minus) + s_slack(1691,temf_L,plus) + s_slack(1691,temf_L,minus) + s_slack(1691,temf_S,plus)
     
      + s_slack(1691,temf_S,minus) + s_slack(1691,toba_H,plus) + s_slack(1691,toba_H,minus) + s_slack(1691,toba_L,plus) + s_slack(1691,toba_L,minus) + s_slack(1691,trof_L,plus) + s_slack(1691,trof_L,minus) + s_slack(1691,trof_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 117
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1691,trof_S,minus) + s_slack(1691,vege_H,plus) + s_slack(1691,vege_H,minus) + s_slack(1691,vege_L,plus) + s_slack(1691,vege_L,minus) + s_slack(1691,vege_S,plus) + s_slack(1691,vege_S,minus) + s_slack(1692,rice_I,plus)
     
      + s_slack(1692,rice_I,minus) + s_slack(1692,sugc_I,plus) + s_slack(1692,sugc_I,minus) + s_slack(1692,whea_I,plus) + s_slack(1692,whea_I,minus) + s_slack(1692,bean_H,plus) + s_slack(1692,bean_H,minus) + s_slack(1692,bean_L,plus)
     
      + s_slack(1692,bean_L,minus) + s_slack(1692,bean_S,plus) + s_slack(1692,bean_S,minus) + s_slack(1692,cass_L,plus) + s_slack(1692,cass_L,minus) + s_slack(1692,cass_S,plus) + s_slack(1692,cass_S,minus) + s_slack(1692,chic_H,plus)
     
      + s_slack(1692,chic_H,minus) + s_slack(1692,chic_L,plus) + s_slack(1692,chic_L,minus) + s_slack(1692,chic_S,plus) + s_slack(1692,chic_S,minus) + s_slack(1692,coff_H,plus) + s_slack(1692,coff_H,minus) + s_slack(1692,coff_L,plus)
     
      + s_slack(1692,coff_L,minus) + s_slack(1692,cott_L,plus) + s_slack(1692,cott_L,minus) + s_slack(1692,cowp_H,plus) + s_slack(1692,cowp_H,minus) + s_slack(1692,cowp_L,plus) + s_slack(1692,cowp_L,minus) + s_slack(1692,cowp_S,plus)
     
      + s_slack(1692,cowp_S,minus) + s_slack(1692,grou_H,plus) + s_slack(1692,grou_H,minus) + s_slack(1692,grou_L,plus) + s_slack(1692,grou_L,minus) + s_slack(1692,grou_S,plus) + s_slack(1692,grou_S,minus) + s_slack(1692,lent_H,plus)
     
      + s_slack(1692,lent_H,minus) + s_slack(1692,lent_L,plus) + s_slack(1692,lent_L,minus) + s_slack(1692,lent_S,plus) + s_slack(1692,lent_S,minus) + s_slack(1692,maiz_H,plus) + s_slack(1692,maiz_H,minus) + s_slack(1692,maiz_L,plus)
     
      + s_slack(1692,maiz_L,minus) + s_slack(1692,maiz_S,plus) + s_slack(1692,maiz_S,minus) + s_slack(1692,mill_H,plus) + s_slack(1692,mill_H,minus) + s_slack(1692,mill_L,plus) + s_slack(1692,mill_L,minus) + s_slack(1692,mill_S,plus)
     
      + s_slack(1692,mill_S,minus) + s_slack(1692,ofib_L,plus) + s_slack(1692,ofib_L,minus) + s_slack(1692,ooil_L,plus) + s_slack(1692,ooil_L,minus) + s_slack(1692,opul_H,plus) + s_slack(1692,opul_H,minus) + s_slack(1692,opul_L,plus)
     
      + s_slack(1692,opul_L,minus) + s_slack(1692,opul_S,plus) + s_slack(1692,opul_S,minus) + s_slack(1692,pige_H,plus) + s_slack(1692,pige_H,minus) + s_slack(1692,pige_L,plus) + s_slack(1692,pige_L,minus) + s_slack(1692,pige_S,plus)
     
      + s_slack(1692,pige_S,minus) + s_slack(1692,pota_H,plus) + s_slack(1692,pota_H,minus) + s_slack(1692,pota_L,plus) + s_slack(1692,pota_L,minus) + s_slack(1692,pota_S,plus) + s_slack(1692,pota_S,minus) + s_slack(1692,rest_H,plus)
     
      + s_slack(1692,rest_H,minus) + s_slack(1692,rest_L,plus) + s_slack(1692,rest_L,minus) + s_slack(1692,rest_S,plus) + s_slack(1692,rest_S,minus) + s_slack(1692,rice_H,plus) + s_slack(1692,rice_H,minus) + s_slack(1692,rice_L,plus)
     
      + s_slack(1692,rice_L,minus) + s_slack(1692,rice_S,plus) + s_slack(1692,rice_S,minus) + s_slack(1692,sorg_L,plus) + s_slack(1692,sorg_L,minus) + s_slack(1692,sorg_S,plus) + s_slack(1692,sorg_S,minus) + s_slack(1692,soyb_L,plus)
     
      + s_slack(1692,soyb_L,minus) + s_slack(1692,soyb_S,plus) + s_slack(1692,soyb_S,minus) + s_slack(1692,sunf_L,plus) + s_slack(1692,sunf_L,minus) + s_slack(1692,temf_H,plus) + s_slack(1692,temf_H,minus) + s_slack(1692,temf_L,plus)
     
      + s_slack(1692,temf_L,minus) + s_slack(1692,temf_S,plus) + s_slack(1692,temf_S,minus) + s_slack(1692,toba_H,plus) + s_slack(1692,toba_H,minus) + s_slack(1692,toba_L,plus) + s_slack(1692,toba_L,minus) + s_slack(1692,trof_L,plus)
     
      + s_slack(1692,trof_L,minus) + s_slack(1692,trof_S,plus) + s_slack(1692,trof_S,minus) + s_slack(1692,vege_H,plus) + s_slack(1692,vege_H,minus) + s_slack(1692,vege_L,plus) + s_slack(1692,vege_L,minus) + s_slack(1692,vege_S,plus)
     
      + s_slack(1692,vege_S,minus) + s_slack(1693,rice_I,plus) + s_slack(1693,rice_I,minus) + s_slack(1693,sugc_I,plus) + s_slack(1693,sugc_I,minus) + s_slack(1693,whea_I,plus) + s_slack(1693,whea_I,minus) + s_slack(1693,bean_H,plus)
     
      + s_slack(1693,bean_H,minus) + s_slack(1693,bean_L,plus) + s_slack(1693,bean_L,minus) + s_slack(1693,bean_S,plus) + s_slack(1693,bean_S,minus) + s_slack(1693,cass_L,plus) + s_slack(1693,cass_L,minus) + s_slack(1693,cass_S,plus)
     
      + s_slack(1693,cass_S,minus) + s_slack(1693,chic_H,plus) + s_slack(1693,chic_H,minus) + s_slack(1693,chic_L,plus) + s_slack(1693,chic_L,minus) + s_slack(1693,chic_S,plus) + s_slack(1693,chic_S,minus) + s_slack(1693,coff_H,plus)
     
      + s_slack(1693,coff_H,minus) + s_slack(1693,coff_L,plus) + s_slack(1693,coff_L,minus) + s_slack(1693,cott_L,plus) + s_slack(1693,cott_L,minus) + s_slack(1693,cowp_H,plus) + s_slack(1693,cowp_H,minus) + s_slack(1693,cowp_L,plus)
     
      + s_slack(1693,cowp_L,minus) + s_slack(1693,cowp_S,plus) + s_slack(1693,cowp_S,minus) + s_slack(1693,grou_H,plus) + s_slack(1693,grou_H,minus) + s_slack(1693,grou_L,plus) + s_slack(1693,grou_L,minus) + s_slack(1693,grou_S,plus)
     
      + s_slack(1693,grou_S,minus) + s_slack(1693,lent_H,plus) + s_slack(1693,lent_H,minus) + s_slack(1693,lent_L,plus) + s_slack(1693,lent_L,minus) + s_slack(1693,lent_S,plus) + s_slack(1693,lent_S,minus) + s_slack(1693,maiz_H,plus)
     
      + s_slack(1693,maiz_H,minus) + s_slack(1693,maiz_L,plus) + s_slack(1693,maiz_L,minus) + s_slack(1693,maiz_S,plus) + s_slack(1693,maiz_S,minus) + s_slack(1693,mill_H,plus) + s_slack(1693,mill_H,minus) + s_slack(1693,mill_L,plus)
     
      + s_slack(1693,mill_L,minus) + s_slack(1693,mill_S,plus) + s_slack(1693,mill_S,minus) + s_slack(1693,ofib_L,plus) + s_slack(1693,ofib_L,minus) + s_slack(1693,ooil_L,plus) + s_slack(1693,ooil_L,minus) + s_slack(1693,opul_H,plus)
     
      + s_slack(1693,opul_H,minus) + s_slack(1693,opul_L,plus) + s_slack(1693,opul_L,minus) + s_slack(1693,opul_S,plus) + s_slack(1693,opul_S,minus) + s_slack(1693,pige_H,plus) + s_slack(1693,pige_H,minus) + s_slack(1693,pige_L,plus)
     
      + s_slack(1693,pige_L,minus) + s_slack(1693,pige_S,plus) + s_slack(1693,pige_S,minus) + s_slack(1693,pota_H,plus) + s_slack(1693,pota_H,minus) + s_slack(1693,pota_L,plus) + s_slack(1693,pota_L,minus) + s_slack(1693,pota_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 118
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1693,pota_S,minus) + s_slack(1693,rest_H,plus) + s_slack(1693,rest_H,minus) + s_slack(1693,rest_L,plus) + s_slack(1693,rest_L,minus) + s_slack(1693,rest_S,plus) + s_slack(1693,rest_S,minus) + s_slack(1693,rice_H,plus)
     
      + s_slack(1693,rice_H,minus) + s_slack(1693,rice_L,plus) + s_slack(1693,rice_L,minus) + s_slack(1693,rice_S,plus) + s_slack(1693,rice_S,minus) + s_slack(1693,sorg_L,plus) + s_slack(1693,sorg_L,minus) + s_slack(1693,sorg_S,plus)
     
      + s_slack(1693,sorg_S,minus) + s_slack(1693,soyb_L,plus) + s_slack(1693,soyb_L,minus) + s_slack(1693,soyb_S,plus) + s_slack(1693,soyb_S,minus) + s_slack(1693,sunf_L,plus) + s_slack(1693,sunf_L,minus) + s_slack(1693,temf_H,plus)
     
      + s_slack(1693,temf_H,minus) + s_slack(1693,temf_L,plus) + s_slack(1693,temf_L,minus) + s_slack(1693,temf_S,plus) + s_slack(1693,temf_S,minus) + s_slack(1693,toba_H,plus) + s_slack(1693,toba_H,minus) + s_slack(1693,toba_L,plus)
     
      + s_slack(1693,toba_L,minus) + s_slack(1693,trof_L,plus) + s_slack(1693,trof_L,minus) + s_slack(1693,trof_S,plus) + s_slack(1693,trof_S,minus) + s_slack(1693,vege_H,plus) + s_slack(1693,vege_H,minus) + s_slack(1693,vege_L,plus)
     
      + s_slack(1693,vege_L,minus) + s_slack(1693,vege_S,plus) + s_slack(1693,vege_S,minus) + s_slack(1697,rice_I,plus) + s_slack(1697,rice_I,minus) + s_slack(1697,sugc_I,plus) + s_slack(1697,sugc_I,minus) + s_slack(1697,whea_I,plus)
     
      + s_slack(1697,whea_I,minus) + s_slack(1697,bean_H,plus) + s_slack(1697,bean_H,minus) + s_slack(1697,bean_L,plus) + s_slack(1697,bean_L,minus) + s_slack(1697,bean_S,plus) + s_slack(1697,bean_S,minus) + s_slack(1697,cass_L,plus)
     
      + s_slack(1697,cass_L,minus) + s_slack(1697,cass_S,plus) + s_slack(1697,cass_S,minus) + s_slack(1697,chic_H,plus) + s_slack(1697,chic_H,minus) + s_slack(1697,chic_L,plus) + s_slack(1697,chic_L,minus) + s_slack(1697,chic_S,plus)
     
      + s_slack(1697,chic_S,minus) + s_slack(1697,coff_H,plus) + s_slack(1697,coff_H,minus) + s_slack(1697,coff_L,plus) + s_slack(1697,coff_L,minus) + s_slack(1697,cott_L,plus) + s_slack(1697,cott_L,minus) + s_slack(1697,cowp_H,plus)
     
      + s_slack(1697,cowp_H,minus) + s_slack(1697,cowp_L,plus) + s_slack(1697,cowp_L,minus) + s_slack(1697,cowp_S,plus) + s_slack(1697,cowp_S,minus) + s_slack(1697,grou_H,plus) + s_slack(1697,grou_H,minus) + s_slack(1697,grou_L,plus)
     
      + s_slack(1697,grou_L,minus) + s_slack(1697,grou_S,plus) + s_slack(1697,grou_S,minus) + s_slack(1697,lent_H,plus) + s_slack(1697,lent_H,minus) + s_slack(1697,lent_L,plus) + s_slack(1697,lent_L,minus) + s_slack(1697,lent_S,plus)
     
      + s_slack(1697,lent_S,minus) + s_slack(1697,maiz_H,plus) + s_slack(1697,maiz_H,minus) + s_slack(1697,maiz_L,plus) + s_slack(1697,maiz_L,minus) + s_slack(1697,maiz_S,plus) + s_slack(1697,maiz_S,minus) + s_slack(1697,mill_H,plus)
     
      + s_slack(1697,mill_H,minus) + s_slack(1697,mill_L,plus) + s_slack(1697,mill_L,minus) + s_slack(1697,mill_S,plus) + s_slack(1697,mill_S,minus) + s_slack(1697,ofib_L,plus) + s_slack(1697,ofib_L,minus) + s_slack(1697,ooil_L,plus)
     
      + s_slack(1697,ooil_L,minus) + s_slack(1697,opul_H,plus) + s_slack(1697,opul_H,minus) + s_slack(1697,opul_L,plus) + s_slack(1697,opul_L,minus) + s_slack(1697,opul_S,plus) + s_slack(1697,opul_S,minus) + s_slack(1697,pige_H,plus)
     
      + s_slack(1697,pige_H,minus) + s_slack(1697,pige_L,plus) + s_slack(1697,pige_L,minus) + s_slack(1697,pige_S,plus) + s_slack(1697,pige_S,minus) + s_slack(1697,pota_H,plus) + s_slack(1697,pota_H,minus) + s_slack(1697,pota_L,plus)
     
      + s_slack(1697,pota_L,minus) + s_slack(1697,pota_S,plus) + s_slack(1697,pota_S,minus) + s_slack(1697,rest_H,plus) + s_slack(1697,rest_H,minus) + s_slack(1697,rest_L,plus) + s_slack(1697,rest_L,minus) + s_slack(1697,rest_S,plus)
     
      + s_slack(1697,rest_S,minus) + s_slack(1697,rice_H,plus) + s_slack(1697,rice_H,minus) + s_slack(1697,rice_L,plus) + s_slack(1697,rice_L,minus) + s_slack(1697,rice_S,plus) + s_slack(1697,rice_S,minus) + s_slack(1697,sorg_L,plus)
     
      + s_slack(1697,sorg_L,minus) + s_slack(1697,sorg_S,plus) + s_slack(1697,sorg_S,minus) + s_slack(1697,soyb_L,plus) + s_slack(1697,soyb_L,minus) + s_slack(1697,soyb_S,plus) + s_slack(1697,soyb_S,minus) + s_slack(1697,sunf_L,plus)
     
      + s_slack(1697,sunf_L,minus) + s_slack(1697,temf_H,plus) + s_slack(1697,temf_H,minus) + s_slack(1697,temf_L,plus) + s_slack(1697,temf_L,minus) + s_slack(1697,temf_S,plus) + s_slack(1697,temf_S,minus) + s_slack(1697,toba_H,plus)
     
      + s_slack(1697,toba_H,minus) + s_slack(1697,toba_L,plus) + s_slack(1697,toba_L,minus) + s_slack(1697,trof_L,plus) + s_slack(1697,trof_L,minus) + s_slack(1697,trof_S,plus) + s_slack(1697,trof_S,minus) + s_slack(1697,vege_H,plus)
     
      + s_slack(1697,vege_H,minus) + s_slack(1697,vege_L,plus) + s_slack(1697,vege_L,minus) + s_slack(1697,vege_S,plus) + s_slack(1697,vege_S,minus) + s_slack(1725,rice_I,plus) + s_slack(1725,rice_I,minus) + s_slack(1725,sugc_I,plus)
     
      + s_slack(1725,sugc_I,minus) + s_slack(1725,whea_I,plus) + s_slack(1725,whea_I,minus) + s_slack(1725,bean_H,plus) + s_slack(1725,bean_H,minus) + s_slack(1725,bean_L,plus) + s_slack(1725,bean_L,minus) + s_slack(1725,bean_S,plus)
     
      + s_slack(1725,bean_S,minus) + s_slack(1725,cass_L,plus) + s_slack(1725,cass_L,minus) + s_slack(1725,cass_S,plus) + s_slack(1725,cass_S,minus) + s_slack(1725,chic_H,plus) + s_slack(1725,chic_H,minus) + s_slack(1725,chic_L,plus)
     
      + s_slack(1725,chic_L,minus) + s_slack(1725,chic_S,plus) + s_slack(1725,chic_S,minus) + s_slack(1725,coff_H,plus) + s_slack(1725,coff_H,minus) + s_slack(1725,coff_L,plus) + s_slack(1725,coff_L,minus) + s_slack(1725,cott_L,plus)
     
      + s_slack(1725,cott_L,minus) + s_slack(1725,cowp_H,plus) + s_slack(1725,cowp_H,minus) + s_slack(1725,cowp_L,plus) + s_slack(1725,cowp_L,minus) + s_slack(1725,cowp_S,plus) + s_slack(1725,cowp_S,minus) + s_slack(1725,grou_H,plus)
     
      + s_slack(1725,grou_H,minus) + s_slack(1725,grou_L,plus) + s_slack(1725,grou_L,minus) + s_slack(1725,grou_S,plus) + s_slack(1725,grou_S,minus) + s_slack(1725,lent_H,plus) + s_slack(1725,lent_H,minus) + s_slack(1725,lent_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 119
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1725,lent_L,minus) + s_slack(1725,lent_S,plus) + s_slack(1725,lent_S,minus) + s_slack(1725,maiz_H,plus) + s_slack(1725,maiz_H,minus) + s_slack(1725,maiz_L,plus) + s_slack(1725,maiz_L,minus) + s_slack(1725,maiz_S,plus)
     
      + s_slack(1725,maiz_S,minus) + s_slack(1725,mill_H,plus) + s_slack(1725,mill_H,minus) + s_slack(1725,mill_L,plus) + s_slack(1725,mill_L,minus) + s_slack(1725,mill_S,plus) + s_slack(1725,mill_S,minus) + s_slack(1725,ofib_L,plus)
     
      + s_slack(1725,ofib_L,minus) + s_slack(1725,ooil_L,plus) + s_slack(1725,ooil_L,minus) + s_slack(1725,opul_H,plus) + s_slack(1725,opul_H,minus) + s_slack(1725,opul_L,plus) + s_slack(1725,opul_L,minus) + s_slack(1725,opul_S,plus)
     
      + s_slack(1725,opul_S,minus) + s_slack(1725,pige_H,plus) + s_slack(1725,pige_H,minus) + s_slack(1725,pige_L,plus) + s_slack(1725,pige_L,minus) + s_slack(1725,pige_S,plus) + s_slack(1725,pige_S,minus) + s_slack(1725,pota_H,plus)
     
      + s_slack(1725,pota_H,minus) + s_slack(1725,pota_L,plus) + s_slack(1725,pota_L,minus) + s_slack(1725,pota_S,plus) + s_slack(1725,pota_S,minus) + s_slack(1725,rest_H,plus) + s_slack(1725,rest_H,minus) + s_slack(1725,rest_L,plus)
     
      + s_slack(1725,rest_L,minus) + s_slack(1725,rest_S,plus) + s_slack(1725,rest_S,minus) + s_slack(1725,rice_H,plus) + s_slack(1725,rice_H,minus) + s_slack(1725,rice_L,plus) + s_slack(1725,rice_L,minus) + s_slack(1725,rice_S,plus)
     
      + s_slack(1725,rice_S,minus) + s_slack(1725,sorg_L,plus) + s_slack(1725,sorg_L,minus) + s_slack(1725,sorg_S,plus) + s_slack(1725,sorg_S,minus) + s_slack(1725,soyb_L,plus) + s_slack(1725,soyb_L,minus) + s_slack(1725,soyb_S,plus)
     
      + s_slack(1725,soyb_S,minus) + s_slack(1725,sunf_L,plus) + s_slack(1725,sunf_L,minus) + s_slack(1725,temf_H,plus) + s_slack(1725,temf_H,minus) + s_slack(1725,temf_L,plus) + s_slack(1725,temf_L,minus) + s_slack(1725,temf_S,plus)
     
      + s_slack(1725,temf_S,minus) + s_slack(1725,toba_H,plus) + s_slack(1725,toba_H,minus) + s_slack(1725,toba_L,plus) + s_slack(1725,toba_L,minus) + s_slack(1725,trof_L,plus) + s_slack(1725,trof_L,minus) + s_slack(1725,trof_S,plus)
     
      + s_slack(1725,trof_S,minus) + s_slack(1725,vege_H,plus) + s_slack(1725,vege_H,minus) + s_slack(1725,vege_L,plus) + s_slack(1725,vege_L,minus) + s_slack(1725,vege_S,plus) + s_slack(1725,vege_S,minus) + s_slack(1726,rice_I,plus)
     
      + s_slack(1726,rice_I,minus) + s_slack(1726,sugc_I,plus) + s_slack(1726,sugc_I,minus) + s_slack(1726,whea_I,plus) + s_slack(1726,whea_I,minus) + s_slack(1726,bean_H,plus) + s_slack(1726,bean_H,minus) + s_slack(1726,bean_L,plus)
     
      + s_slack(1726,bean_L,minus) + s_slack(1726,bean_S,plus) + s_slack(1726,bean_S,minus) + s_slack(1726,cass_L,plus) + s_slack(1726,cass_L,minus) + s_slack(1726,cass_S,plus) + s_slack(1726,cass_S,minus) + s_slack(1726,chic_H,plus)
     
      + s_slack(1726,chic_H,minus) + s_slack(1726,chic_L,plus) + s_slack(1726,chic_L,minus) + s_slack(1726,chic_S,plus) + s_slack(1726,chic_S,minus) + s_slack(1726,coff_H,plus) + s_slack(1726,coff_H,minus) + s_slack(1726,coff_L,plus)
     
      + s_slack(1726,coff_L,minus) + s_slack(1726,cott_L,plus) + s_slack(1726,cott_L,minus) + s_slack(1726,cowp_H,plus) + s_slack(1726,cowp_H,minus) + s_slack(1726,cowp_L,plus) + s_slack(1726,cowp_L,minus) + s_slack(1726,cowp_S,plus)
     
      + s_slack(1726,cowp_S,minus) + s_slack(1726,grou_H,plus) + s_slack(1726,grou_H,minus) + s_slack(1726,grou_L,plus) + s_slack(1726,grou_L,minus) + s_slack(1726,grou_S,plus) + s_slack(1726,grou_S,minus) + s_slack(1726,lent_H,plus)
     
      + s_slack(1726,lent_H,minus) + s_slack(1726,lent_L,plus) + s_slack(1726,lent_L,minus) + s_slack(1726,lent_S,plus) + s_slack(1726,lent_S,minus) + s_slack(1726,maiz_H,plus) + s_slack(1726,maiz_H,minus) + s_slack(1726,maiz_L,plus)
     
      + s_slack(1726,maiz_L,minus) + s_slack(1726,maiz_S,plus) + s_slack(1726,maiz_S,minus) + s_slack(1726,mill_H,plus) + s_slack(1726,mill_H,minus) + s_slack(1726,mill_L,plus) + s_slack(1726,mill_L,minus) + s_slack(1726,mill_S,plus)
     
      + s_slack(1726,mill_S,minus) + s_slack(1726,ofib_L,plus) + s_slack(1726,ofib_L,minus) + s_slack(1726,ooil_L,plus) + s_slack(1726,ooil_L,minus) + s_slack(1726,opul_H,plus) + s_slack(1726,opul_H,minus) + s_slack(1726,opul_L,plus)
     
      + s_slack(1726,opul_L,minus) + s_slack(1726,opul_S,plus) + s_slack(1726,opul_S,minus) + s_slack(1726,pige_H,plus) + s_slack(1726,pige_H,minus) + s_slack(1726,pige_L,plus) + s_slack(1726,pige_L,minus) + s_slack(1726,pige_S,plus)
     
      + s_slack(1726,pige_S,minus) + s_slack(1726,pota_H,plus) + s_slack(1726,pota_H,minus) + s_slack(1726,pota_L,plus) + s_slack(1726,pota_L,minus) + s_slack(1726,pota_S,plus) + s_slack(1726,pota_S,minus) + s_slack(1726,rest_H,plus)
     
      + s_slack(1726,rest_H,minus) + s_slack(1726,rest_L,plus) + s_slack(1726,rest_L,minus) + s_slack(1726,rest_S,plus) + s_slack(1726,rest_S,minus) + s_slack(1726,rice_H,plus) + s_slack(1726,rice_H,minus) + s_slack(1726,rice_L,plus)
     
      + s_slack(1726,rice_L,minus) + s_slack(1726,rice_S,plus) + s_slack(1726,rice_S,minus) + s_slack(1726,sorg_L,plus) + s_slack(1726,sorg_L,minus) + s_slack(1726,sorg_S,plus) + s_slack(1726,sorg_S,minus) + s_slack(1726,soyb_L,plus)
     
      + s_slack(1726,soyb_L,minus) + s_slack(1726,soyb_S,plus) + s_slack(1726,soyb_S,minus) + s_slack(1726,sunf_L,plus) + s_slack(1726,sunf_L,minus) + s_slack(1726,temf_H,plus) + s_slack(1726,temf_H,minus) + s_slack(1726,temf_L,plus)
     
      + s_slack(1726,temf_L,minus) + s_slack(1726,temf_S,plus) + s_slack(1726,temf_S,minus) + s_slack(1726,toba_H,plus) + s_slack(1726,toba_H,minus) + s_slack(1726,toba_L,plus) + s_slack(1726,toba_L,minus) + s_slack(1726,trof_L,plus)
     
      + s_slack(1726,trof_L,minus) + s_slack(1726,trof_S,plus) + s_slack(1726,trof_S,minus) + s_slack(1726,vege_H,plus) + s_slack(1726,vege_H,minus) + s_slack(1726,vege_L,plus) + s_slack(1726,vege_L,minus) + s_slack(1726,vege_S,plus)
     
      + s_slack(1726,vege_S,minus) + s_slack(1727,rice_I,plus) + s_slack(1727,rice_I,minus) + s_slack(1727,sugc_I,plus) + s_slack(1727,sugc_I,minus) + s_slack(1727,whea_I,plus) + s_slack(1727,whea_I,minus) + s_slack(1727,bean_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 120
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1727,bean_H,minus) + s_slack(1727,bean_L,plus) + s_slack(1727,bean_L,minus) + s_slack(1727,bean_S,plus) + s_slack(1727,bean_S,minus) + s_slack(1727,cass_L,plus) + s_slack(1727,cass_L,minus) + s_slack(1727,cass_S,plus)
     
      + s_slack(1727,cass_S,minus) + s_slack(1727,chic_H,plus) + s_slack(1727,chic_H,minus) + s_slack(1727,chic_L,plus) + s_slack(1727,chic_L,minus) + s_slack(1727,chic_S,plus) + s_slack(1727,chic_S,minus) + s_slack(1727,coff_H,plus)
     
      + s_slack(1727,coff_H,minus) + s_slack(1727,coff_L,plus) + s_slack(1727,coff_L,minus) + s_slack(1727,cott_L,plus) + s_slack(1727,cott_L,minus) + s_slack(1727,cowp_H,plus) + s_slack(1727,cowp_H,minus) + s_slack(1727,cowp_L,plus)
     
      + s_slack(1727,cowp_L,minus) + s_slack(1727,cowp_S,plus) + s_slack(1727,cowp_S,minus) + s_slack(1727,grou_H,plus) + s_slack(1727,grou_H,minus) + s_slack(1727,grou_L,plus) + s_slack(1727,grou_L,minus) + s_slack(1727,grou_S,plus)
     
      + s_slack(1727,grou_S,minus) + s_slack(1727,lent_H,plus) + s_slack(1727,lent_H,minus) + s_slack(1727,lent_L,plus) + s_slack(1727,lent_L,minus) + s_slack(1727,lent_S,plus) + s_slack(1727,lent_S,minus) + s_slack(1727,maiz_H,plus)
     
      + s_slack(1727,maiz_H,minus) + s_slack(1727,maiz_L,plus) + s_slack(1727,maiz_L,minus) + s_slack(1727,maiz_S,plus) + s_slack(1727,maiz_S,minus) + s_slack(1727,mill_H,plus) + s_slack(1727,mill_H,minus) + s_slack(1727,mill_L,plus)
     
      + s_slack(1727,mill_L,minus) + s_slack(1727,mill_S,plus) + s_slack(1727,mill_S,minus) + s_slack(1727,ofib_L,plus) + s_slack(1727,ofib_L,minus) + s_slack(1727,ooil_L,plus) + s_slack(1727,ooil_L,minus) + s_slack(1727,opul_H,plus)
     
      + s_slack(1727,opul_H,minus) + s_slack(1727,opul_L,plus) + s_slack(1727,opul_L,minus) + s_slack(1727,opul_S,plus) + s_slack(1727,opul_S,minus) + s_slack(1727,pige_H,plus) + s_slack(1727,pige_H,minus) + s_slack(1727,pige_L,plus)
     
      + s_slack(1727,pige_L,minus) + s_slack(1727,pige_S,plus) + s_slack(1727,pige_S,minus) + s_slack(1727,pota_H,plus) + s_slack(1727,pota_H,minus) + s_slack(1727,pota_L,plus) + s_slack(1727,pota_L,minus) + s_slack(1727,pota_S,plus)
     
      + s_slack(1727,pota_S,minus) + s_slack(1727,rest_H,plus) + s_slack(1727,rest_H,minus) + s_slack(1727,rest_L,plus) + s_slack(1727,rest_L,minus) + s_slack(1727,rest_S,plus) + s_slack(1727,rest_S,minus) + s_slack(1727,rice_H,plus)
     
      + s_slack(1727,rice_H,minus) + s_slack(1727,rice_L,plus) + s_slack(1727,rice_L,minus) + s_slack(1727,rice_S,plus) + s_slack(1727,rice_S,minus) + s_slack(1727,sorg_L,plus) + s_slack(1727,sorg_L,minus) + s_slack(1727,sorg_S,plus)
     
      + s_slack(1727,sorg_S,minus) + s_slack(1727,soyb_L,plus) + s_slack(1727,soyb_L,minus) + s_slack(1727,soyb_S,plus) + s_slack(1727,soyb_S,minus) + s_slack(1727,sunf_L,plus) + s_slack(1727,sunf_L,minus) + s_slack(1727,temf_H,plus)
     
      + s_slack(1727,temf_H,minus) + s_slack(1727,temf_L,plus) + s_slack(1727,temf_L,minus) + s_slack(1727,temf_S,plus) + s_slack(1727,temf_S,minus) + s_slack(1727,toba_H,plus) + s_slack(1727,toba_H,minus) + s_slack(1727,toba_L,plus)
     
      + s_slack(1727,toba_L,minus) + s_slack(1727,trof_L,plus) + s_slack(1727,trof_L,minus) + s_slack(1727,trof_S,plus) + s_slack(1727,trof_S,minus) + s_slack(1727,vege_H,plus) + s_slack(1727,vege_H,minus) + s_slack(1727,vege_L,plus)
     
      + s_slack(1727,vege_L,minus) + s_slack(1727,vege_S,plus) + s_slack(1727,vege_S,minus) + s_slack(1728,rice_I,plus) + s_slack(1728,rice_I,minus) + s_slack(1728,sugc_I,plus) + s_slack(1728,sugc_I,minus) + s_slack(1728,whea_I,plus)
     
      + s_slack(1728,whea_I,minus) + s_slack(1728,bean_H,plus) + s_slack(1728,bean_H,minus) + s_slack(1728,bean_L,plus) + s_slack(1728,bean_L,minus) + s_slack(1728,bean_S,plus) + s_slack(1728,bean_S,minus) + s_slack(1728,cass_L,plus)
     
      + s_slack(1728,cass_L,minus) + s_slack(1728,cass_S,plus) + s_slack(1728,cass_S,minus) + s_slack(1728,chic_H,plus) + s_slack(1728,chic_H,minus) + s_slack(1728,chic_L,plus) + s_slack(1728,chic_L,minus) + s_slack(1728,chic_S,plus)
     
      + s_slack(1728,chic_S,minus) + s_slack(1728,coff_H,plus) + s_slack(1728,coff_H,minus) + s_slack(1728,coff_L,plus) + s_slack(1728,coff_L,minus) + s_slack(1728,cott_L,plus) + s_slack(1728,cott_L,minus) + s_slack(1728,cowp_H,plus)
     
      + s_slack(1728,cowp_H,minus) + s_slack(1728,cowp_L,plus) + s_slack(1728,cowp_L,minus) + s_slack(1728,cowp_S,plus) + s_slack(1728,cowp_S,minus) + s_slack(1728,grou_H,plus) + s_slack(1728,grou_H,minus) + s_slack(1728,grou_L,plus)
     
      + s_slack(1728,grou_L,minus) + s_slack(1728,grou_S,plus) + s_slack(1728,grou_S,minus) + s_slack(1728,lent_H,plus) + s_slack(1728,lent_H,minus) + s_slack(1728,lent_L,plus) + s_slack(1728,lent_L,minus) + s_slack(1728,lent_S,plus)
     
      + s_slack(1728,lent_S,minus) + s_slack(1728,maiz_H,plus) + s_slack(1728,maiz_H,minus) + s_slack(1728,maiz_L,plus) + s_slack(1728,maiz_L,minus) + s_slack(1728,maiz_S,plus) + s_slack(1728,maiz_S,minus) + s_slack(1728,mill_H,plus)
     
      + s_slack(1728,mill_H,minus) + s_slack(1728,mill_L,plus) + s_slack(1728,mill_L,minus) + s_slack(1728,mill_S,plus) + s_slack(1728,mill_S,minus) + s_slack(1728,ofib_L,plus) + s_slack(1728,ofib_L,minus) + s_slack(1728,ooil_L,plus)
     
      + s_slack(1728,ooil_L,minus) + s_slack(1728,opul_H,plus) + s_slack(1728,opul_H,minus) + s_slack(1728,opul_L,plus) + s_slack(1728,opul_L,minus) + s_slack(1728,opul_S,plus) + s_slack(1728,opul_S,minus) + s_slack(1728,pige_H,plus)
     
      + s_slack(1728,pige_H,minus) + s_slack(1728,pige_L,plus) + s_slack(1728,pige_L,minus) + s_slack(1728,pige_S,plus) + s_slack(1728,pige_S,minus) + s_slack(1728,pota_H,plus) + s_slack(1728,pota_H,minus) + s_slack(1728,pota_L,plus)
     
      + s_slack(1728,pota_L,minus) + s_slack(1728,pota_S,plus) + s_slack(1728,pota_S,minus) + s_slack(1728,rest_H,plus) + s_slack(1728,rest_H,minus) + s_slack(1728,rest_L,plus) + s_slack(1728,rest_L,minus) + s_slack(1728,rest_S,plus)
     
      + s_slack(1728,rest_S,minus) + s_slack(1728,rice_H,plus) + s_slack(1728,rice_H,minus) + s_slack(1728,rice_L,plus) + s_slack(1728,rice_L,minus) + s_slack(1728,rice_S,plus) + s_slack(1728,rice_S,minus) + s_slack(1728,sorg_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 121
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1728,sorg_L,minus) + s_slack(1728,sorg_S,plus) + s_slack(1728,sorg_S,minus) + s_slack(1728,soyb_L,plus) + s_slack(1728,soyb_L,minus) + s_slack(1728,soyb_S,plus) + s_slack(1728,soyb_S,minus) + s_slack(1728,sunf_L,plus)
     
      + s_slack(1728,sunf_L,minus) + s_slack(1728,temf_H,plus) + s_slack(1728,temf_H,minus) + s_slack(1728,temf_L,plus) + s_slack(1728,temf_L,minus) + s_slack(1728,temf_S,plus) + s_slack(1728,temf_S,minus) + s_slack(1728,toba_H,plus)
     
      + s_slack(1728,toba_H,minus) + s_slack(1728,toba_L,plus) + s_slack(1728,toba_L,minus) + s_slack(1728,trof_L,plus) + s_slack(1728,trof_L,minus) + s_slack(1728,trof_S,plus) + s_slack(1728,trof_S,minus) + s_slack(1728,vege_H,plus)
     
      + s_slack(1728,vege_H,minus) + s_slack(1728,vege_L,plus) + s_slack(1728,vege_L,minus) + s_slack(1728,vege_S,plus) + s_slack(1728,vege_S,minus) + s_slack(1729,rice_I,plus) + s_slack(1729,rice_I,minus) + s_slack(1729,sugc_I,plus)
     
      + s_slack(1729,sugc_I,minus) + s_slack(1729,whea_I,plus) + s_slack(1729,whea_I,minus) + s_slack(1729,bean_H,plus) + s_slack(1729,bean_H,minus) + s_slack(1729,bean_L,plus) + s_slack(1729,bean_L,minus) + s_slack(1729,bean_S,plus)
     
      + s_slack(1729,bean_S,minus) + s_slack(1729,cass_L,plus) + s_slack(1729,cass_L,minus) + s_slack(1729,cass_S,plus) + s_slack(1729,cass_S,minus) + s_slack(1729,chic_H,plus) + s_slack(1729,chic_H,minus) + s_slack(1729,chic_L,plus)
     
      + s_slack(1729,chic_L,minus) + s_slack(1729,chic_S,plus) + s_slack(1729,chic_S,minus) + s_slack(1729,coff_H,plus) + s_slack(1729,coff_H,minus) + s_slack(1729,coff_L,plus) + s_slack(1729,coff_L,minus) + s_slack(1729,cott_L,plus)
     
      + s_slack(1729,cott_L,minus) + s_slack(1729,cowp_H,plus) + s_slack(1729,cowp_H,minus) + s_slack(1729,cowp_L,plus) + s_slack(1729,cowp_L,minus) + s_slack(1729,cowp_S,plus) + s_slack(1729,cowp_S,minus) + s_slack(1729,grou_H,plus)
     
      + s_slack(1729,grou_H,minus) + s_slack(1729,grou_L,plus) + s_slack(1729,grou_L,minus) + s_slack(1729,grou_S,plus) + s_slack(1729,grou_S,minus) + s_slack(1729,lent_H,plus) + s_slack(1729,lent_H,minus) + s_slack(1729,lent_L,plus)
     
      + s_slack(1729,lent_L,minus) + s_slack(1729,lent_S,plus) + s_slack(1729,lent_S,minus) + s_slack(1729,maiz_H,plus) + s_slack(1729,maiz_H,minus) + s_slack(1729,maiz_L,plus) + s_slack(1729,maiz_L,minus) + s_slack(1729,maiz_S,plus)
     
      + s_slack(1729,maiz_S,minus) + s_slack(1729,mill_H,plus) + s_slack(1729,mill_H,minus) + s_slack(1729,mill_L,plus) + s_slack(1729,mill_L,minus) + s_slack(1729,mill_S,plus) + s_slack(1729,mill_S,minus) + s_slack(1729,ofib_L,plus)
     
      + s_slack(1729,ofib_L,minus) + s_slack(1729,ooil_L,plus) + s_slack(1729,ooil_L,minus) + s_slack(1729,opul_H,plus) + s_slack(1729,opul_H,minus) + s_slack(1729,opul_L,plus) + s_slack(1729,opul_L,minus) + s_slack(1729,opul_S,plus)
     
      + s_slack(1729,opul_S,minus) + s_slack(1729,pige_H,plus) + s_slack(1729,pige_H,minus) + s_slack(1729,pige_L,plus) + s_slack(1729,pige_L,minus) + s_slack(1729,pige_S,plus) + s_slack(1729,pige_S,minus) + s_slack(1729,pota_H,plus)
     
      + s_slack(1729,pota_H,minus) + s_slack(1729,pota_L,plus) + s_slack(1729,pota_L,minus) + s_slack(1729,pota_S,plus) + s_slack(1729,pota_S,minus) + s_slack(1729,rest_H,plus) + s_slack(1729,rest_H,minus) + s_slack(1729,rest_L,plus)
     
      + s_slack(1729,rest_L,minus) + s_slack(1729,rest_S,plus) + s_slack(1729,rest_S,minus) + s_slack(1729,rice_H,plus) + s_slack(1729,rice_H,minus) + s_slack(1729,rice_L,plus) + s_slack(1729,rice_L,minus) + s_slack(1729,rice_S,plus)
     
      + s_slack(1729,rice_S,minus) + s_slack(1729,sorg_L,plus) + s_slack(1729,sorg_L,minus) + s_slack(1729,sorg_S,plus) + s_slack(1729,sorg_S,minus) + s_slack(1729,soyb_L,plus) + s_slack(1729,soyb_L,minus) + s_slack(1729,soyb_S,plus)
     
      + s_slack(1729,soyb_S,minus) + s_slack(1729,sunf_L,plus) + s_slack(1729,sunf_L,minus) + s_slack(1729,temf_H,plus) + s_slack(1729,temf_H,minus) + s_slack(1729,temf_L,plus) + s_slack(1729,temf_L,minus) + s_slack(1729,temf_S,plus)
     
      + s_slack(1729,temf_S,minus) + s_slack(1729,toba_H,plus) + s_slack(1729,toba_H,minus) + s_slack(1729,toba_L,plus) + s_slack(1729,toba_L,minus) + s_slack(1729,trof_L,plus) + s_slack(1729,trof_L,minus) + s_slack(1729,trof_S,plus)
     
      + s_slack(1729,trof_S,minus) + s_slack(1729,vege_H,plus) + s_slack(1729,vege_H,minus) + s_slack(1729,vege_L,plus) + s_slack(1729,vege_L,minus) + s_slack(1729,vege_S,plus) + s_slack(1729,vege_S,minus) + s_slack(1730,rice_I,plus)
     
      + s_slack(1730,rice_I,minus) + s_slack(1730,sugc_I,plus) + s_slack(1730,sugc_I,minus) + s_slack(1730,whea_I,plus) + s_slack(1730,whea_I,minus) + s_slack(1730,bean_H,plus) + s_slack(1730,bean_H,minus) + s_slack(1730,bean_L,plus)
     
      + s_slack(1730,bean_L,minus) + s_slack(1730,bean_S,plus) + s_slack(1730,bean_S,minus) + s_slack(1730,cass_L,plus) + s_slack(1730,cass_L,minus) + s_slack(1730,cass_S,plus) + s_slack(1730,cass_S,minus) + s_slack(1730,chic_H,plus)
     
      + s_slack(1730,chic_H,minus) + s_slack(1730,chic_L,plus) + s_slack(1730,chic_L,minus) + s_slack(1730,chic_S,plus) + s_slack(1730,chic_S,minus) + s_slack(1730,coff_H,plus) + s_slack(1730,coff_H,minus) + s_slack(1730,coff_L,plus)
     
      + s_slack(1730,coff_L,minus) + s_slack(1730,cott_L,plus) + s_slack(1730,cott_L,minus) + s_slack(1730,cowp_H,plus) + s_slack(1730,cowp_H,minus) + s_slack(1730,cowp_L,plus) + s_slack(1730,cowp_L,minus) + s_slack(1730,cowp_S,plus)
     
      + s_slack(1730,cowp_S,minus) + s_slack(1730,grou_H,plus) + s_slack(1730,grou_H,minus) + s_slack(1730,grou_L,plus) + s_slack(1730,grou_L,minus) + s_slack(1730,grou_S,plus) + s_slack(1730,grou_S,minus) + s_slack(1730,lent_H,plus)
     
      + s_slack(1730,lent_H,minus) + s_slack(1730,lent_L,plus) + s_slack(1730,lent_L,minus) + s_slack(1730,lent_S,plus) + s_slack(1730,lent_S,minus) + s_slack(1730,maiz_H,plus) + s_slack(1730,maiz_H,minus) + s_slack(1730,maiz_L,plus)
     
      + s_slack(1730,maiz_L,minus) + s_slack(1730,maiz_S,plus) + s_slack(1730,maiz_S,minus) + s_slack(1730,mill_H,plus) + s_slack(1730,mill_H,minus) + s_slack(1730,mill_L,plus) + s_slack(1730,mill_L,minus) + s_slack(1730,mill_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 122
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1730,mill_S,minus) + s_slack(1730,ofib_L,plus) + s_slack(1730,ofib_L,minus) + s_slack(1730,ooil_L,plus) + s_slack(1730,ooil_L,minus) + s_slack(1730,opul_H,plus) + s_slack(1730,opul_H,minus) + s_slack(1730,opul_L,plus)
     
      + s_slack(1730,opul_L,minus) + s_slack(1730,opul_S,plus) + s_slack(1730,opul_S,minus) + s_slack(1730,pige_H,plus) + s_slack(1730,pige_H,minus) + s_slack(1730,pige_L,plus) + s_slack(1730,pige_L,minus) + s_slack(1730,pige_S,plus)
     
      + s_slack(1730,pige_S,minus) + s_slack(1730,pota_H,plus) + s_slack(1730,pota_H,minus) + s_slack(1730,pota_L,plus) + s_slack(1730,pota_L,minus) + s_slack(1730,pota_S,plus) + s_slack(1730,pota_S,minus) + s_slack(1730,rest_H,plus)
     
      + s_slack(1730,rest_H,minus) + s_slack(1730,rest_L,plus) + s_slack(1730,rest_L,minus) + s_slack(1730,rest_S,plus) + s_slack(1730,rest_S,minus) + s_slack(1730,rice_H,plus) + s_slack(1730,rice_H,minus) + s_slack(1730,rice_L,plus)
     
      + s_slack(1730,rice_L,minus) + s_slack(1730,rice_S,plus) + s_slack(1730,rice_S,minus) + s_slack(1730,sorg_L,plus) + s_slack(1730,sorg_L,minus) + s_slack(1730,sorg_S,plus) + s_slack(1730,sorg_S,minus) + s_slack(1730,soyb_L,plus)
     
      + s_slack(1730,soyb_L,minus) + s_slack(1730,soyb_S,plus) + s_slack(1730,soyb_S,minus) + s_slack(1730,sunf_L,plus) + s_slack(1730,sunf_L,minus) + s_slack(1730,temf_H,plus) + s_slack(1730,temf_H,minus) + s_slack(1730,temf_L,plus)
     
      + s_slack(1730,temf_L,minus) + s_slack(1730,temf_S,plus) + s_slack(1730,temf_S,minus) + s_slack(1730,toba_H,plus) + s_slack(1730,toba_H,minus) + s_slack(1730,toba_L,plus) + s_slack(1730,toba_L,minus) + s_slack(1730,trof_L,plus)
     
      + s_slack(1730,trof_L,minus) + s_slack(1730,trof_S,plus) + s_slack(1730,trof_S,minus) + s_slack(1730,vege_H,plus) + s_slack(1730,vege_H,minus) + s_slack(1730,vege_L,plus) + s_slack(1730,vege_L,minus) + s_slack(1730,vege_S,plus)
     
      + s_slack(1730,vege_S,minus) + s_slack(1731,rice_I,plus) + s_slack(1731,rice_I,minus) + s_slack(1731,sugc_I,plus) + s_slack(1731,sugc_I,minus) + s_slack(1731,whea_I,plus) + s_slack(1731,whea_I,minus) + s_slack(1731,bean_H,plus)
     
      + s_slack(1731,bean_H,minus) + s_slack(1731,bean_L,plus) + s_slack(1731,bean_L,minus) + s_slack(1731,bean_S,plus) + s_slack(1731,bean_S,minus) + s_slack(1731,cass_L,plus) + s_slack(1731,cass_L,minus) + s_slack(1731,cass_S,plus)
     
      + s_slack(1731,cass_S,minus) + s_slack(1731,chic_H,plus) + s_slack(1731,chic_H,minus) + s_slack(1731,chic_L,plus) + s_slack(1731,chic_L,minus) + s_slack(1731,chic_S,plus) + s_slack(1731,chic_S,minus) + s_slack(1731,coff_H,plus)
     
      + s_slack(1731,coff_H,minus) + s_slack(1731,coff_L,plus) + s_slack(1731,coff_L,minus) + s_slack(1731,cott_L,plus) + s_slack(1731,cott_L,minus) + s_slack(1731,cowp_H,plus) + s_slack(1731,cowp_H,minus) + s_slack(1731,cowp_L,plus)
     
      + s_slack(1731,cowp_L,minus) + s_slack(1731,cowp_S,plus) + s_slack(1731,cowp_S,minus) + s_slack(1731,grou_H,plus) + s_slack(1731,grou_H,minus) + s_slack(1731,grou_L,plus) + s_slack(1731,grou_L,minus) + s_slack(1731,grou_S,plus)
     
      + s_slack(1731,grou_S,minus) + s_slack(1731,lent_H,plus) + s_slack(1731,lent_H,minus) + s_slack(1731,lent_L,plus) + s_slack(1731,lent_L,minus) + s_slack(1731,lent_S,plus) + s_slack(1731,lent_S,minus) + s_slack(1731,maiz_H,plus)
     
      + s_slack(1731,maiz_H,minus) + s_slack(1731,maiz_L,plus) + s_slack(1731,maiz_L,minus) + s_slack(1731,maiz_S,plus) + s_slack(1731,maiz_S,minus) + s_slack(1731,mill_H,plus) + s_slack(1731,mill_H,minus) + s_slack(1731,mill_L,plus)
     
      + s_slack(1731,mill_L,minus) + s_slack(1731,mill_S,plus) + s_slack(1731,mill_S,minus) + s_slack(1731,ofib_L,plus) + s_slack(1731,ofib_L,minus) + s_slack(1731,ooil_L,plus) + s_slack(1731,ooil_L,minus) + s_slack(1731,opul_H,plus)
     
      + s_slack(1731,opul_H,minus) + s_slack(1731,opul_L,plus) + s_slack(1731,opul_L,minus) + s_slack(1731,opul_S,plus) + s_slack(1731,opul_S,minus) + s_slack(1731,pige_H,plus) + s_slack(1731,pige_H,minus) + s_slack(1731,pige_L,plus)
     
      + s_slack(1731,pige_L,minus) + s_slack(1731,pige_S,plus) + s_slack(1731,pige_S,minus) + s_slack(1731,pota_H,plus) + s_slack(1731,pota_H,minus) + s_slack(1731,pota_L,plus) + s_slack(1731,pota_L,minus) + s_slack(1731,pota_S,plus)
     
      + s_slack(1731,pota_S,minus) + s_slack(1731,rest_H,plus) + s_slack(1731,rest_H,minus) + s_slack(1731,rest_L,plus) + s_slack(1731,rest_L,minus) + s_slack(1731,rest_S,plus) + s_slack(1731,rest_S,minus) + s_slack(1731,rice_H,plus)
     
      + s_slack(1731,rice_H,minus) + s_slack(1731,rice_L,plus) + s_slack(1731,rice_L,minus) + s_slack(1731,rice_S,plus) + s_slack(1731,rice_S,minus) + s_slack(1731,sorg_L,plus) + s_slack(1731,sorg_L,minus) + s_slack(1731,sorg_S,plus)
     
      + s_slack(1731,sorg_S,minus) + s_slack(1731,soyb_L,plus) + s_slack(1731,soyb_L,minus) + s_slack(1731,soyb_S,plus) + s_slack(1731,soyb_S,minus) + s_slack(1731,sunf_L,plus) + s_slack(1731,sunf_L,minus) + s_slack(1731,temf_H,plus)
     
      + s_slack(1731,temf_H,minus) + s_slack(1731,temf_L,plus) + s_slack(1731,temf_L,minus) + s_slack(1731,temf_S,plus) + s_slack(1731,temf_S,minus) + s_slack(1731,toba_H,plus) + s_slack(1731,toba_H,minus) + s_slack(1731,toba_L,plus)
     
      + s_slack(1731,toba_L,minus) + s_slack(1731,trof_L,plus) + s_slack(1731,trof_L,minus) + s_slack(1731,trof_S,plus) + s_slack(1731,trof_S,minus) + s_slack(1731,vege_H,plus) + s_slack(1731,vege_H,minus) + s_slack(1731,vege_L,plus)
     
      + s_slack(1731,vege_L,minus) + s_slack(1731,vege_S,plus) + s_slack(1731,vege_S,minus) + s_slack(1732,rice_I,plus) + s_slack(1732,rice_I,minus) + s_slack(1732,sugc_I,plus) + s_slack(1732,sugc_I,minus) + s_slack(1732,whea_I,plus)
     
      + s_slack(1732,whea_I,minus) + s_slack(1732,bean_H,plus) + s_slack(1732,bean_H,minus) + s_slack(1732,bean_L,plus) + s_slack(1732,bean_L,minus) + s_slack(1732,bean_S,plus) + s_slack(1732,bean_S,minus) + s_slack(1732,cass_L,plus)
     
      + s_slack(1732,cass_L,minus) + s_slack(1732,cass_S,plus) + s_slack(1732,cass_S,minus) + s_slack(1732,chic_H,plus) + s_slack(1732,chic_H,minus) + s_slack(1732,chic_L,plus) + s_slack(1732,chic_L,minus) + s_slack(1732,chic_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 123
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1732,chic_S,minus) + s_slack(1732,coff_H,plus) + s_slack(1732,coff_H,minus) + s_slack(1732,coff_L,plus) + s_slack(1732,coff_L,minus) + s_slack(1732,cott_L,plus) + s_slack(1732,cott_L,minus) + s_slack(1732,cowp_H,plus)
     
      + s_slack(1732,cowp_H,minus) + s_slack(1732,cowp_L,plus) + s_slack(1732,cowp_L,minus) + s_slack(1732,cowp_S,plus) + s_slack(1732,cowp_S,minus) + s_slack(1732,grou_H,plus) + s_slack(1732,grou_H,minus) + s_slack(1732,grou_L,plus)
     
      + s_slack(1732,grou_L,minus) + s_slack(1732,grou_S,plus) + s_slack(1732,grou_S,minus) + s_slack(1732,lent_H,plus) + s_slack(1732,lent_H,minus) + s_slack(1732,lent_L,plus) + s_slack(1732,lent_L,minus) + s_slack(1732,lent_S,plus)
     
      + s_slack(1732,lent_S,minus) + s_slack(1732,maiz_H,plus) + s_slack(1732,maiz_H,minus) + s_slack(1732,maiz_L,plus) + s_slack(1732,maiz_L,minus) + s_slack(1732,maiz_S,plus) + s_slack(1732,maiz_S,minus) + s_slack(1732,mill_H,plus)
     
      + s_slack(1732,mill_H,minus) + s_slack(1732,mill_L,plus) + s_slack(1732,mill_L,minus) + s_slack(1732,mill_S,plus) + s_slack(1732,mill_S,minus) + s_slack(1732,ofib_L,plus) + s_slack(1732,ofib_L,minus) + s_slack(1732,ooil_L,plus)
     
      + s_slack(1732,ooil_L,minus) + s_slack(1732,opul_H,plus) + s_slack(1732,opul_H,minus) + s_slack(1732,opul_L,plus) + s_slack(1732,opul_L,minus) + s_slack(1732,opul_S,plus) + s_slack(1732,opul_S,minus) + s_slack(1732,pige_H,plus)
     
      + s_slack(1732,pige_H,minus) + s_slack(1732,pige_L,plus) + s_slack(1732,pige_L,minus) + s_slack(1732,pige_S,plus) + s_slack(1732,pige_S,minus) + s_slack(1732,pota_H,plus) + s_slack(1732,pota_H,minus) + s_slack(1732,pota_L,plus)
     
      + s_slack(1732,pota_L,minus) + s_slack(1732,pota_S,plus) + s_slack(1732,pota_S,minus) + s_slack(1732,rest_H,plus) + s_slack(1732,rest_H,minus) + s_slack(1732,rest_L,plus) + s_slack(1732,rest_L,minus) + s_slack(1732,rest_S,plus)
     
      + s_slack(1732,rest_S,minus) + s_slack(1732,rice_H,plus) + s_slack(1732,rice_H,minus) + s_slack(1732,rice_L,plus) + s_slack(1732,rice_L,minus) + s_slack(1732,rice_S,plus) + s_slack(1732,rice_S,minus) + s_slack(1732,sorg_L,plus)
     
      + s_slack(1732,sorg_L,minus) + s_slack(1732,sorg_S,plus) + s_slack(1732,sorg_S,minus) + s_slack(1732,soyb_L,plus) + s_slack(1732,soyb_L,minus) + s_slack(1732,soyb_S,plus) + s_slack(1732,soyb_S,minus) + s_slack(1732,sunf_L,plus)
     
      + s_slack(1732,sunf_L,minus) + s_slack(1732,temf_H,plus) + s_slack(1732,temf_H,minus) + s_slack(1732,temf_L,plus) + s_slack(1732,temf_L,minus) + s_slack(1732,temf_S,plus) + s_slack(1732,temf_S,minus) + s_slack(1732,toba_H,plus)
     
      + s_slack(1732,toba_H,minus) + s_slack(1732,toba_L,plus) + s_slack(1732,toba_L,minus) + s_slack(1732,trof_L,plus) + s_slack(1732,trof_L,minus) + s_slack(1732,trof_S,plus) + s_slack(1732,trof_S,minus) + s_slack(1732,vege_H,plus)
     
      + s_slack(1732,vege_H,minus) + s_slack(1732,vege_L,plus) + s_slack(1732,vege_L,minus) + s_slack(1732,vege_S,plus) + s_slack(1732,vege_S,minus) + s_slack(1735,rice_I,plus) + s_slack(1735,rice_I,minus) + s_slack(1735,sugc_I,plus)
     
      + s_slack(1735,sugc_I,minus) + s_slack(1735,whea_I,plus) + s_slack(1735,whea_I,minus) + s_slack(1735,bean_H,plus) + s_slack(1735,bean_H,minus) + s_slack(1735,bean_L,plus) + s_slack(1735,bean_L,minus) + s_slack(1735,bean_S,plus)
     
      + s_slack(1735,bean_S,minus) + s_slack(1735,cass_L,plus) + s_slack(1735,cass_L,minus) + s_slack(1735,cass_S,plus) + s_slack(1735,cass_S,minus) + s_slack(1735,chic_H,plus) + s_slack(1735,chic_H,minus) + s_slack(1735,chic_L,plus)
     
      + s_slack(1735,chic_L,minus) + s_slack(1735,chic_S,plus) + s_slack(1735,chic_S,minus) + s_slack(1735,coff_H,plus) + s_slack(1735,coff_H,minus) + s_slack(1735,coff_L,plus) + s_slack(1735,coff_L,minus) + s_slack(1735,cott_L,plus)
     
      + s_slack(1735,cott_L,minus) + s_slack(1735,cowp_H,plus) + s_slack(1735,cowp_H,minus) + s_slack(1735,cowp_L,plus) + s_slack(1735,cowp_L,minus) + s_slack(1735,cowp_S,plus) + s_slack(1735,cowp_S,minus) + s_slack(1735,grou_H,plus)
     
      + s_slack(1735,grou_H,minus) + s_slack(1735,grou_L,plus) + s_slack(1735,grou_L,minus) + s_slack(1735,grou_S,plus) + s_slack(1735,grou_S,minus) + s_slack(1735,lent_H,plus) + s_slack(1735,lent_H,minus) + s_slack(1735,lent_L,plus)
     
      + s_slack(1735,lent_L,minus) + s_slack(1735,lent_S,plus) + s_slack(1735,lent_S,minus) + s_slack(1735,maiz_H,plus) + s_slack(1735,maiz_H,minus) + s_slack(1735,maiz_L,plus) + s_slack(1735,maiz_L,minus) + s_slack(1735,maiz_S,plus)
     
      + s_slack(1735,maiz_S,minus) + s_slack(1735,mill_H,plus) + s_slack(1735,mill_H,minus) + s_slack(1735,mill_L,plus) + s_slack(1735,mill_L,minus) + s_slack(1735,mill_S,plus) + s_slack(1735,mill_S,minus) + s_slack(1735,ofib_L,plus)
     
      + s_slack(1735,ofib_L,minus) + s_slack(1735,ooil_L,plus) + s_slack(1735,ooil_L,minus) + s_slack(1735,opul_H,plus) + s_slack(1735,opul_H,minus) + s_slack(1735,opul_L,plus) + s_slack(1735,opul_L,minus) + s_slack(1735,opul_S,plus)
     
      + s_slack(1735,opul_S,minus) + s_slack(1735,pige_H,plus) + s_slack(1735,pige_H,minus) + s_slack(1735,pige_L,plus) + s_slack(1735,pige_L,minus) + s_slack(1735,pige_S,plus) + s_slack(1735,pige_S,minus) + s_slack(1735,pota_H,plus)
     
      + s_slack(1735,pota_H,minus) + s_slack(1735,pota_L,plus) + s_slack(1735,pota_L,minus) + s_slack(1735,pota_S,plus) + s_slack(1735,pota_S,minus) + s_slack(1735,rest_H,plus) + s_slack(1735,rest_H,minus) + s_slack(1735,rest_L,plus)
     
      + s_slack(1735,rest_L,minus) + s_slack(1735,rest_S,plus) + s_slack(1735,rest_S,minus) + s_slack(1735,rice_H,plus) + s_slack(1735,rice_H,minus) + s_slack(1735,rice_L,plus) + s_slack(1735,rice_L,minus) + s_slack(1735,rice_S,plus)
     
      + s_slack(1735,rice_S,minus) + s_slack(1735,sorg_L,plus) + s_slack(1735,sorg_L,minus) + s_slack(1735,sorg_S,plus) + s_slack(1735,sorg_S,minus) + s_slack(1735,soyb_L,plus) + s_slack(1735,soyb_L,minus) + s_slack(1735,soyb_S,plus)
     
      + s_slack(1735,soyb_S,minus) + s_slack(1735,sunf_L,plus) + s_slack(1735,sunf_L,minus) + s_slack(1735,temf_H,plus) + s_slack(1735,temf_H,minus) + s_slack(1735,temf_L,plus) + s_slack(1735,temf_L,minus) + s_slack(1735,temf_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 124
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1735,temf_S,minus) + s_slack(1735,toba_H,plus) + s_slack(1735,toba_H,minus) + s_slack(1735,toba_L,plus) + s_slack(1735,toba_L,minus) + s_slack(1735,trof_L,plus) + s_slack(1735,trof_L,minus) + s_slack(1735,trof_S,plus)
     
      + s_slack(1735,trof_S,minus) + s_slack(1735,vege_H,plus) + s_slack(1735,vege_H,minus) + s_slack(1735,vege_L,plus) + s_slack(1735,vege_L,minus) + s_slack(1735,vege_S,plus) + s_slack(1735,vege_S,minus) + s_slack(1736,rice_I,plus)
     
      + s_slack(1736,rice_I,minus) + s_slack(1736,sugc_I,plus) + s_slack(1736,sugc_I,minus) + s_slack(1736,whea_I,plus) + s_slack(1736,whea_I,minus) + s_slack(1736,bean_H,plus) + s_slack(1736,bean_H,minus) + s_slack(1736,bean_L,plus)
     
      + s_slack(1736,bean_L,minus) + s_slack(1736,bean_S,plus) + s_slack(1736,bean_S,minus) + s_slack(1736,cass_L,plus) + s_slack(1736,cass_L,minus) + s_slack(1736,cass_S,plus) + s_slack(1736,cass_S,minus) + s_slack(1736,chic_H,plus)
     
      + s_slack(1736,chic_H,minus) + s_slack(1736,chic_L,plus) + s_slack(1736,chic_L,minus) + s_slack(1736,chic_S,plus) + s_slack(1736,chic_S,minus) + s_slack(1736,coff_H,plus) + s_slack(1736,coff_H,minus) + s_slack(1736,coff_L,plus)
     
      + s_slack(1736,coff_L,minus) + s_slack(1736,cott_L,plus) + s_slack(1736,cott_L,minus) + s_slack(1736,cowp_H,plus) + s_slack(1736,cowp_H,minus) + s_slack(1736,cowp_L,plus) + s_slack(1736,cowp_L,minus) + s_slack(1736,cowp_S,plus)
     
      + s_slack(1736,cowp_S,minus) + s_slack(1736,grou_H,plus) + s_slack(1736,grou_H,minus) + s_slack(1736,grou_L,plus) + s_slack(1736,grou_L,minus) + s_slack(1736,grou_S,plus) + s_slack(1736,grou_S,minus) + s_slack(1736,lent_H,plus)
     
      + s_slack(1736,lent_H,minus) + s_slack(1736,lent_L,plus) + s_slack(1736,lent_L,minus) + s_slack(1736,lent_S,plus) + s_slack(1736,lent_S,minus) + s_slack(1736,maiz_H,plus) + s_slack(1736,maiz_H,minus) + s_slack(1736,maiz_L,plus)
     
      + s_slack(1736,maiz_L,minus) + s_slack(1736,maiz_S,plus) + s_slack(1736,maiz_S,minus) + s_slack(1736,mill_H,plus) + s_slack(1736,mill_H,minus) + s_slack(1736,mill_L,plus) + s_slack(1736,mill_L,minus) + s_slack(1736,mill_S,plus)
     
      + s_slack(1736,mill_S,minus) + s_slack(1736,ofib_L,plus) + s_slack(1736,ofib_L,minus) + s_slack(1736,ooil_L,plus) + s_slack(1736,ooil_L,minus) + s_slack(1736,opul_H,plus) + s_slack(1736,opul_H,minus) + s_slack(1736,opul_L,plus)
     
      + s_slack(1736,opul_L,minus) + s_slack(1736,opul_S,plus) + s_slack(1736,opul_S,minus) + s_slack(1736,pige_H,plus) + s_slack(1736,pige_H,minus) + s_slack(1736,pige_L,plus) + s_slack(1736,pige_L,minus) + s_slack(1736,pige_S,plus)
     
      + s_slack(1736,pige_S,minus) + s_slack(1736,pota_H,plus) + s_slack(1736,pota_H,minus) + s_slack(1736,pota_L,plus) + s_slack(1736,pota_L,minus) + s_slack(1736,pota_S,plus) + s_slack(1736,pota_S,minus) + s_slack(1736,rest_H,plus)
     
      + s_slack(1736,rest_H,minus) + s_slack(1736,rest_L,plus) + s_slack(1736,rest_L,minus) + s_slack(1736,rest_S,plus) + s_slack(1736,rest_S,minus) + s_slack(1736,rice_H,plus) + s_slack(1736,rice_H,minus) + s_slack(1736,rice_L,plus)
     
      + s_slack(1736,rice_L,minus) + s_slack(1736,rice_S,plus) + s_slack(1736,rice_S,minus) + s_slack(1736,sorg_L,plus) + s_slack(1736,sorg_L,minus) + s_slack(1736,sorg_S,plus) + s_slack(1736,sorg_S,minus) + s_slack(1736,soyb_L,plus)
     
      + s_slack(1736,soyb_L,minus) + s_slack(1736,soyb_S,plus) + s_slack(1736,soyb_S,minus) + s_slack(1736,sunf_L,plus) + s_slack(1736,sunf_L,minus) + s_slack(1736,temf_H,plus) + s_slack(1736,temf_H,minus) + s_slack(1736,temf_L,plus)
     
      + s_slack(1736,temf_L,minus) + s_slack(1736,temf_S,plus) + s_slack(1736,temf_S,minus) + s_slack(1736,toba_H,plus) + s_slack(1736,toba_H,minus) + s_slack(1736,toba_L,plus) + s_slack(1736,toba_L,minus) + s_slack(1736,trof_L,plus)
     
      + s_slack(1736,trof_L,minus) + s_slack(1736,trof_S,plus) + s_slack(1736,trof_S,minus) + s_slack(1736,vege_H,plus) + s_slack(1736,vege_H,minus) + s_slack(1736,vege_L,plus) + s_slack(1736,vege_L,minus) + s_slack(1736,vege_S,plus)
     
      + s_slack(1736,vege_S,minus) + s_slack(1764,rice_I,plus) + s_slack(1764,rice_I,minus) + s_slack(1764,sugc_I,plus) + s_slack(1764,sugc_I,minus) + s_slack(1764,whea_I,plus) + s_slack(1764,whea_I,minus) + s_slack(1764,bean_H,plus)
     
      + s_slack(1764,bean_H,minus) + s_slack(1764,bean_L,plus) + s_slack(1764,bean_L,minus) + s_slack(1764,bean_S,plus) + s_slack(1764,bean_S,minus) + s_slack(1764,cass_L,plus) + s_slack(1764,cass_L,minus) + s_slack(1764,cass_S,plus)
     
      + s_slack(1764,cass_S,minus) + s_slack(1764,chic_H,plus) + s_slack(1764,chic_H,minus) + s_slack(1764,chic_L,plus) + s_slack(1764,chic_L,minus) + s_slack(1764,chic_S,plus) + s_slack(1764,chic_S,minus) + s_slack(1764,coff_H,plus)
     
      + s_slack(1764,coff_H,minus) + s_slack(1764,coff_L,plus) + s_slack(1764,coff_L,minus) + s_slack(1764,cott_L,plus) + s_slack(1764,cott_L,minus) + s_slack(1764,cowp_H,plus) + s_slack(1764,cowp_H,minus) + s_slack(1764,cowp_L,plus)
     
      + s_slack(1764,cowp_L,minus) + s_slack(1764,cowp_S,plus) + s_slack(1764,cowp_S,minus) + s_slack(1764,grou_H,plus) + s_slack(1764,grou_H,minus) + s_slack(1764,grou_L,plus) + s_slack(1764,grou_L,minus) + s_slack(1764,grou_S,plus)
     
      + s_slack(1764,grou_S,minus) + s_slack(1764,lent_H,plus) + s_slack(1764,lent_H,minus) + s_slack(1764,lent_L,plus) + s_slack(1764,lent_L,minus) + s_slack(1764,lent_S,plus) + s_slack(1764,lent_S,minus) + s_slack(1764,maiz_H,plus)
     
      + s_slack(1764,maiz_H,minus) + s_slack(1764,maiz_L,plus) + s_slack(1764,maiz_L,minus) + s_slack(1764,maiz_S,plus) + s_slack(1764,maiz_S,minus) + s_slack(1764,mill_H,plus) + s_slack(1764,mill_H,minus) + s_slack(1764,mill_L,plus)
     
      + s_slack(1764,mill_L,minus) + s_slack(1764,mill_S,plus) + s_slack(1764,mill_S,minus) + s_slack(1764,ofib_L,plus) + s_slack(1764,ofib_L,minus) + s_slack(1764,ooil_L,plus) + s_slack(1764,ooil_L,minus) + s_slack(1764,opul_H,plus)
     
      + s_slack(1764,opul_H,minus) + s_slack(1764,opul_L,plus) + s_slack(1764,opul_L,minus) + s_slack(1764,opul_S,plus) + s_slack(1764,opul_S,minus) + s_slack(1764,pige_H,plus) + s_slack(1764,pige_H,minus) + s_slack(1764,pige_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 125
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1764,pige_L,minus) + s_slack(1764,pige_S,plus) + s_slack(1764,pige_S,minus) + s_slack(1764,pota_H,plus) + s_slack(1764,pota_H,minus) + s_slack(1764,pota_L,plus) + s_slack(1764,pota_L,minus) + s_slack(1764,pota_S,plus)
     
      + s_slack(1764,pota_S,minus) + s_slack(1764,rest_H,plus) + s_slack(1764,rest_H,minus) + s_slack(1764,rest_L,plus) + s_slack(1764,rest_L,minus) + s_slack(1764,rest_S,plus) + s_slack(1764,rest_S,minus) + s_slack(1764,rice_H,plus)
     
      + s_slack(1764,rice_H,minus) + s_slack(1764,rice_L,plus) + s_slack(1764,rice_L,minus) + s_slack(1764,rice_S,plus) + s_slack(1764,rice_S,minus) + s_slack(1764,sorg_L,plus) + s_slack(1764,sorg_L,minus) + s_slack(1764,sorg_S,plus)
     
      + s_slack(1764,sorg_S,minus) + s_slack(1764,soyb_L,plus) + s_slack(1764,soyb_L,minus) + s_slack(1764,soyb_S,plus) + s_slack(1764,soyb_S,minus) + s_slack(1764,sunf_L,plus) + s_slack(1764,sunf_L,minus) + s_slack(1764,temf_H,plus)
     
      + s_slack(1764,temf_H,minus) + s_slack(1764,temf_L,plus) + s_slack(1764,temf_L,minus) + s_slack(1764,temf_S,plus) + s_slack(1764,temf_S,minus) + s_slack(1764,toba_H,plus) + s_slack(1764,toba_H,minus) + s_slack(1764,toba_L,plus)
     
      + s_slack(1764,toba_L,minus) + s_slack(1764,trof_L,plus) + s_slack(1764,trof_L,minus) + s_slack(1764,trof_S,plus) + s_slack(1764,trof_S,minus) + s_slack(1764,vege_H,plus) + s_slack(1764,vege_H,minus) + s_slack(1764,vege_L,plus)
     
      + s_slack(1764,vege_L,minus) + s_slack(1764,vege_S,plus) + s_slack(1764,vege_S,minus) + s_slack(1765,rice_I,plus) + s_slack(1765,rice_I,minus) + s_slack(1765,sugc_I,plus) + s_slack(1765,sugc_I,minus) + s_slack(1765,whea_I,plus)
     
      + s_slack(1765,whea_I,minus) + s_slack(1765,bean_H,plus) + s_slack(1765,bean_H,minus) + s_slack(1765,bean_L,plus) + s_slack(1765,bean_L,minus) + s_slack(1765,bean_S,plus) + s_slack(1765,bean_S,minus) + s_slack(1765,cass_L,plus)
     
      + s_slack(1765,cass_L,minus) + s_slack(1765,cass_S,plus) + s_slack(1765,cass_S,minus) + s_slack(1765,chic_H,plus) + s_slack(1765,chic_H,minus) + s_slack(1765,chic_L,plus) + s_slack(1765,chic_L,minus) + s_slack(1765,chic_S,plus)
     
      + s_slack(1765,chic_S,minus) + s_slack(1765,coff_H,plus) + s_slack(1765,coff_H,minus) + s_slack(1765,coff_L,plus) + s_slack(1765,coff_L,minus) + s_slack(1765,cott_L,plus) + s_slack(1765,cott_L,minus) + s_slack(1765,cowp_H,plus)
     
      + s_slack(1765,cowp_H,minus) + s_slack(1765,cowp_L,plus) + s_slack(1765,cowp_L,minus) + s_slack(1765,cowp_S,plus) + s_slack(1765,cowp_S,minus) + s_slack(1765,grou_H,plus) + s_slack(1765,grou_H,minus) + s_slack(1765,grou_L,plus)
     
      + s_slack(1765,grou_L,minus) + s_slack(1765,grou_S,plus) + s_slack(1765,grou_S,minus) + s_slack(1765,lent_H,plus) + s_slack(1765,lent_H,minus) + s_slack(1765,lent_L,plus) + s_slack(1765,lent_L,minus) + s_slack(1765,lent_S,plus)
     
      + s_slack(1765,lent_S,minus) + s_slack(1765,maiz_H,plus) + s_slack(1765,maiz_H,minus) + s_slack(1765,maiz_L,plus) + s_slack(1765,maiz_L,minus) + s_slack(1765,maiz_S,plus) + s_slack(1765,maiz_S,minus) + s_slack(1765,mill_H,plus)
     
      + s_slack(1765,mill_H,minus) + s_slack(1765,mill_L,plus) + s_slack(1765,mill_L,minus) + s_slack(1765,mill_S,plus) + s_slack(1765,mill_S,minus) + s_slack(1765,ofib_L,plus) + s_slack(1765,ofib_L,minus) + s_slack(1765,ooil_L,plus)
     
      + s_slack(1765,ooil_L,minus) + s_slack(1765,opul_H,plus) + s_slack(1765,opul_H,minus) + s_slack(1765,opul_L,plus) + s_slack(1765,opul_L,minus) + s_slack(1765,opul_S,plus) + s_slack(1765,opul_S,minus) + s_slack(1765,pige_H,plus)
     
      + s_slack(1765,pige_H,minus) + s_slack(1765,pige_L,plus) + s_slack(1765,pige_L,minus) + s_slack(1765,pige_S,plus) + s_slack(1765,pige_S,minus) + s_slack(1765,pota_H,plus) + s_slack(1765,pota_H,minus) + s_slack(1765,pota_L,plus)
     
      + s_slack(1765,pota_L,minus) + s_slack(1765,pota_S,plus) + s_slack(1765,pota_S,minus) + s_slack(1765,rest_H,plus) + s_slack(1765,rest_H,minus) + s_slack(1765,rest_L,plus) + s_slack(1765,rest_L,minus) + s_slack(1765,rest_S,plus)
     
      + s_slack(1765,rest_S,minus) + s_slack(1765,rice_H,plus) + s_slack(1765,rice_H,minus) + s_slack(1765,rice_L,plus) + s_slack(1765,rice_L,minus) + s_slack(1765,rice_S,plus) + s_slack(1765,rice_S,minus) + s_slack(1765,sorg_L,plus)
     
      + s_slack(1765,sorg_L,minus) + s_slack(1765,sorg_S,plus) + s_slack(1765,sorg_S,minus) + s_slack(1765,soyb_L,plus) + s_slack(1765,soyb_L,minus) + s_slack(1765,soyb_S,plus) + s_slack(1765,soyb_S,minus) + s_slack(1765,sunf_L,plus)
     
      + s_slack(1765,sunf_L,minus) + s_slack(1765,temf_H,plus) + s_slack(1765,temf_H,minus) + s_slack(1765,temf_L,plus) + s_slack(1765,temf_L,minus) + s_slack(1765,temf_S,plus) + s_slack(1765,temf_S,minus) + s_slack(1765,toba_H,plus)
     
      + s_slack(1765,toba_H,minus) + s_slack(1765,toba_L,plus) + s_slack(1765,toba_L,minus) + s_slack(1765,trof_L,plus) + s_slack(1765,trof_L,minus) + s_slack(1765,trof_S,plus) + s_slack(1765,trof_S,minus) + s_slack(1765,vege_H,plus)
     
      + s_slack(1765,vege_H,minus) + s_slack(1765,vege_L,plus) + s_slack(1765,vege_L,minus) + s_slack(1765,vege_S,plus) + s_slack(1765,vege_S,minus) + s_slack(1766,rice_I,plus) + s_slack(1766,rice_I,minus) + s_slack(1766,sugc_I,plus)
     
      + s_slack(1766,sugc_I,minus) + s_slack(1766,whea_I,plus) + s_slack(1766,whea_I,minus) + s_slack(1766,bean_H,plus) + s_slack(1766,bean_H,minus) + s_slack(1766,bean_L,plus) + s_slack(1766,bean_L,minus) + s_slack(1766,bean_S,plus)
     
      + s_slack(1766,bean_S,minus) + s_slack(1766,cass_L,plus) + s_slack(1766,cass_L,minus) + s_slack(1766,cass_S,plus) + s_slack(1766,cass_S,minus) + s_slack(1766,chic_H,plus) + s_slack(1766,chic_H,minus) + s_slack(1766,chic_L,plus)
     
      + s_slack(1766,chic_L,minus) + s_slack(1766,chic_S,plus) + s_slack(1766,chic_S,minus) + s_slack(1766,coff_H,plus) + s_slack(1766,coff_H,minus) + s_slack(1766,coff_L,plus) + s_slack(1766,coff_L,minus) + s_slack(1766,cott_L,plus)
     
      + s_slack(1766,cott_L,minus) + s_slack(1766,cowp_H,plus) + s_slack(1766,cowp_H,minus) + s_slack(1766,cowp_L,plus) + s_slack(1766,cowp_L,minus) + s_slack(1766,cowp_S,plus) + s_slack(1766,cowp_S,minus) + s_slack(1766,grou_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 126
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1766,grou_H,minus) + s_slack(1766,grou_L,plus) + s_slack(1766,grou_L,minus) + s_slack(1766,grou_S,plus) + s_slack(1766,grou_S,minus) + s_slack(1766,lent_H,plus) + s_slack(1766,lent_H,minus) + s_slack(1766,lent_L,plus)
     
      + s_slack(1766,lent_L,minus) + s_slack(1766,lent_S,plus) + s_slack(1766,lent_S,minus) + s_slack(1766,maiz_H,plus) + s_slack(1766,maiz_H,minus) + s_slack(1766,maiz_L,plus) + s_slack(1766,maiz_L,minus) + s_slack(1766,maiz_S,plus)
     
      + s_slack(1766,maiz_S,minus) + s_slack(1766,mill_H,plus) + s_slack(1766,mill_H,minus) + s_slack(1766,mill_L,plus) + s_slack(1766,mill_L,minus) + s_slack(1766,mill_S,plus) + s_slack(1766,mill_S,minus) + s_slack(1766,ofib_L,plus)
     
      + s_slack(1766,ofib_L,minus) + s_slack(1766,ooil_L,plus) + s_slack(1766,ooil_L,minus) + s_slack(1766,opul_H,plus) + s_slack(1766,opul_H,minus) + s_slack(1766,opul_L,plus) + s_slack(1766,opul_L,minus) + s_slack(1766,opul_S,plus)
     
      + s_slack(1766,opul_S,minus) + s_slack(1766,pige_H,plus) + s_slack(1766,pige_H,minus) + s_slack(1766,pige_L,plus) + s_slack(1766,pige_L,minus) + s_slack(1766,pige_S,plus) + s_slack(1766,pige_S,minus) + s_slack(1766,pota_H,plus)
     
      + s_slack(1766,pota_H,minus) + s_slack(1766,pota_L,plus) + s_slack(1766,pota_L,minus) + s_slack(1766,pota_S,plus) + s_slack(1766,pota_S,minus) + s_slack(1766,rest_H,plus) + s_slack(1766,rest_H,minus) + s_slack(1766,rest_L,plus)
     
      + s_slack(1766,rest_L,minus) + s_slack(1766,rest_S,plus) + s_slack(1766,rest_S,minus) + s_slack(1766,rice_H,plus) + s_slack(1766,rice_H,minus) + s_slack(1766,rice_L,plus) + s_slack(1766,rice_L,minus) + s_slack(1766,rice_S,plus)
     
      + s_slack(1766,rice_S,minus) + s_slack(1766,sorg_L,plus) + s_slack(1766,sorg_L,minus) + s_slack(1766,sorg_S,plus) + s_slack(1766,sorg_S,minus) + s_slack(1766,soyb_L,plus) + s_slack(1766,soyb_L,minus) + s_slack(1766,soyb_S,plus)
     
      + s_slack(1766,soyb_S,minus) + s_slack(1766,sunf_L,plus) + s_slack(1766,sunf_L,minus) + s_slack(1766,temf_H,plus) + s_slack(1766,temf_H,minus) + s_slack(1766,temf_L,plus) + s_slack(1766,temf_L,minus) + s_slack(1766,temf_S,plus)
     
      + s_slack(1766,temf_S,minus) + s_slack(1766,toba_H,plus) + s_slack(1766,toba_H,minus) + s_slack(1766,toba_L,plus) + s_slack(1766,toba_L,minus) + s_slack(1766,trof_L,plus) + s_slack(1766,trof_L,minus) + s_slack(1766,trof_S,plus)
     
      + s_slack(1766,trof_S,minus) + s_slack(1766,vege_H,plus) + s_slack(1766,vege_H,minus) + s_slack(1766,vege_L,plus) + s_slack(1766,vege_L,minus) + s_slack(1766,vege_S,plus) + s_slack(1766,vege_S,minus) + s_slack(1767,rice_I,plus)
     
      + s_slack(1767,rice_I,minus) + s_slack(1767,sugc_I,plus) + s_slack(1767,sugc_I,minus) + s_slack(1767,whea_I,plus) + s_slack(1767,whea_I,minus) + s_slack(1767,bean_H,plus) + s_slack(1767,bean_H,minus) + s_slack(1767,bean_L,plus)
     
      + s_slack(1767,bean_L,minus) + s_slack(1767,bean_S,plus) + s_slack(1767,bean_S,minus) + s_slack(1767,cass_L,plus) + s_slack(1767,cass_L,minus) + s_slack(1767,cass_S,plus) + s_slack(1767,cass_S,minus) + s_slack(1767,chic_H,plus)
     
      + s_slack(1767,chic_H,minus) + s_slack(1767,chic_L,plus) + s_slack(1767,chic_L,minus) + s_slack(1767,chic_S,plus) + s_slack(1767,chic_S,minus) + s_slack(1767,coff_H,plus) + s_slack(1767,coff_H,minus) + s_slack(1767,coff_L,plus)
     
      + s_slack(1767,coff_L,minus) + s_slack(1767,cott_L,plus) + s_slack(1767,cott_L,minus) + s_slack(1767,cowp_H,plus) + s_slack(1767,cowp_H,minus) + s_slack(1767,cowp_L,plus) + s_slack(1767,cowp_L,minus) + s_slack(1767,cowp_S,plus)
     
      + s_slack(1767,cowp_S,minus) + s_slack(1767,grou_H,plus) + s_slack(1767,grou_H,minus) + s_slack(1767,grou_L,plus) + s_slack(1767,grou_L,minus) + s_slack(1767,grou_S,plus) + s_slack(1767,grou_S,minus) + s_slack(1767,lent_H,plus)
     
      + s_slack(1767,lent_H,minus) + s_slack(1767,lent_L,plus) + s_slack(1767,lent_L,minus) + s_slack(1767,lent_S,plus) + s_slack(1767,lent_S,minus) + s_slack(1767,maiz_H,plus) + s_slack(1767,maiz_H,minus) + s_slack(1767,maiz_L,plus)
     
      + s_slack(1767,maiz_L,minus) + s_slack(1767,maiz_S,plus) + s_slack(1767,maiz_S,minus) + s_slack(1767,mill_H,plus) + s_slack(1767,mill_H,minus) + s_slack(1767,mill_L,plus) + s_slack(1767,mill_L,minus) + s_slack(1767,mill_S,plus)
     
      + s_slack(1767,mill_S,minus) + s_slack(1767,ofib_L,plus) + s_slack(1767,ofib_L,minus) + s_slack(1767,ooil_L,plus) + s_slack(1767,ooil_L,minus) + s_slack(1767,opul_H,plus) + s_slack(1767,opul_H,minus) + s_slack(1767,opul_L,plus)
     
      + s_slack(1767,opul_L,minus) + s_slack(1767,opul_S,plus) + s_slack(1767,opul_S,minus) + s_slack(1767,pige_H,plus) + s_slack(1767,pige_H,minus) + s_slack(1767,pige_L,plus) + s_slack(1767,pige_L,minus) + s_slack(1767,pige_S,plus)
     
      + s_slack(1767,pige_S,minus) + s_slack(1767,pota_H,plus) + s_slack(1767,pota_H,minus) + s_slack(1767,pota_L,plus) + s_slack(1767,pota_L,minus) + s_slack(1767,pota_S,plus) + s_slack(1767,pota_S,minus) + s_slack(1767,rest_H,plus)
     
      + s_slack(1767,rest_H,minus) + s_slack(1767,rest_L,plus) + s_slack(1767,rest_L,minus) + s_slack(1767,rest_S,plus) + s_slack(1767,rest_S,minus) + s_slack(1767,rice_H,plus) + s_slack(1767,rice_H,minus) + s_slack(1767,rice_L,plus)
     
      + s_slack(1767,rice_L,minus) + s_slack(1767,rice_S,plus) + s_slack(1767,rice_S,minus) + s_slack(1767,sorg_L,plus) + s_slack(1767,sorg_L,minus) + s_slack(1767,sorg_S,plus) + s_slack(1767,sorg_S,minus) + s_slack(1767,soyb_L,plus)
     
      + s_slack(1767,soyb_L,minus) + s_slack(1767,soyb_S,plus) + s_slack(1767,soyb_S,minus) + s_slack(1767,sunf_L,plus) + s_slack(1767,sunf_L,minus) + s_slack(1767,temf_H,plus) + s_slack(1767,temf_H,minus) + s_slack(1767,temf_L,plus)
     
      + s_slack(1767,temf_L,minus) + s_slack(1767,temf_S,plus) + s_slack(1767,temf_S,minus) + s_slack(1767,toba_H,plus) + s_slack(1767,toba_H,minus) + s_slack(1767,toba_L,plus) + s_slack(1767,toba_L,minus) + s_slack(1767,trof_L,plus)
     
      + s_slack(1767,trof_L,minus) + s_slack(1767,trof_S,plus) + s_slack(1767,trof_S,minus) + s_slack(1767,vege_H,plus) + s_slack(1767,vege_H,minus) + s_slack(1767,vege_L,plus) + s_slack(1767,vege_L,minus) + s_slack(1767,vege_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 127
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1767,vege_S,minus) + s_slack(1768,rice_I,plus) + s_slack(1768,rice_I,minus) + s_slack(1768,sugc_I,plus) + s_slack(1768,sugc_I,minus) + s_slack(1768,whea_I,plus) + s_slack(1768,whea_I,minus) + s_slack(1768,bean_H,plus)
     
      + s_slack(1768,bean_H,minus) + s_slack(1768,bean_L,plus) + s_slack(1768,bean_L,minus) + s_slack(1768,bean_S,plus) + s_slack(1768,bean_S,minus) + s_slack(1768,cass_L,plus) + s_slack(1768,cass_L,minus) + s_slack(1768,cass_S,plus)
     
      + s_slack(1768,cass_S,minus) + s_slack(1768,chic_H,plus) + s_slack(1768,chic_H,minus) + s_slack(1768,chic_L,plus) + s_slack(1768,chic_L,minus) + s_slack(1768,chic_S,plus) + s_slack(1768,chic_S,minus) + s_slack(1768,coff_H,plus)
     
      + s_slack(1768,coff_H,minus) + s_slack(1768,coff_L,plus) + s_slack(1768,coff_L,minus) + s_slack(1768,cott_L,plus) + s_slack(1768,cott_L,minus) + s_slack(1768,cowp_H,plus) + s_slack(1768,cowp_H,minus) + s_slack(1768,cowp_L,plus)
     
      + s_slack(1768,cowp_L,minus) + s_slack(1768,cowp_S,plus) + s_slack(1768,cowp_S,minus) + s_slack(1768,grou_H,plus) + s_slack(1768,grou_H,minus) + s_slack(1768,grou_L,plus) + s_slack(1768,grou_L,minus) + s_slack(1768,grou_S,plus)
     
      + s_slack(1768,grou_S,minus) + s_slack(1768,lent_H,plus) + s_slack(1768,lent_H,minus) + s_slack(1768,lent_L,plus) + s_slack(1768,lent_L,minus) + s_slack(1768,lent_S,plus) + s_slack(1768,lent_S,minus) + s_slack(1768,maiz_H,plus)
     
      + s_slack(1768,maiz_H,minus) + s_slack(1768,maiz_L,plus) + s_slack(1768,maiz_L,minus) + s_slack(1768,maiz_S,plus) + s_slack(1768,maiz_S,minus) + s_slack(1768,mill_H,plus) + s_slack(1768,mill_H,minus) + s_slack(1768,mill_L,plus)
     
      + s_slack(1768,mill_L,minus) + s_slack(1768,mill_S,plus) + s_slack(1768,mill_S,minus) + s_slack(1768,ofib_L,plus) + s_slack(1768,ofib_L,minus) + s_slack(1768,ooil_L,plus) + s_slack(1768,ooil_L,minus) + s_slack(1768,opul_H,plus)
     
      + s_slack(1768,opul_H,minus) + s_slack(1768,opul_L,plus) + s_slack(1768,opul_L,minus) + s_slack(1768,opul_S,plus) + s_slack(1768,opul_S,minus) + s_slack(1768,pige_H,plus) + s_slack(1768,pige_H,minus) + s_slack(1768,pige_L,plus)
     
      + s_slack(1768,pige_L,minus) + s_slack(1768,pige_S,plus) + s_slack(1768,pige_S,minus) + s_slack(1768,pota_H,plus) + s_slack(1768,pota_H,minus) + s_slack(1768,pota_L,plus) + s_slack(1768,pota_L,minus) + s_slack(1768,pota_S,plus)
     
      + s_slack(1768,pota_S,minus) + s_slack(1768,rest_H,plus) + s_slack(1768,rest_H,minus) + s_slack(1768,rest_L,plus) + s_slack(1768,rest_L,minus) + s_slack(1768,rest_S,plus) + s_slack(1768,rest_S,minus) + s_slack(1768,rice_H,plus)
     
      + s_slack(1768,rice_H,minus) + s_slack(1768,rice_L,plus) + s_slack(1768,rice_L,minus) + s_slack(1768,rice_S,plus) + s_slack(1768,rice_S,minus) + s_slack(1768,sorg_L,plus) + s_slack(1768,sorg_L,minus) + s_slack(1768,sorg_S,plus)
     
      + s_slack(1768,sorg_S,minus) + s_slack(1768,soyb_L,plus) + s_slack(1768,soyb_L,minus) + s_slack(1768,soyb_S,plus) + s_slack(1768,soyb_S,minus) + s_slack(1768,sunf_L,plus) + s_slack(1768,sunf_L,minus) + s_slack(1768,temf_H,plus)
     
      + s_slack(1768,temf_H,minus) + s_slack(1768,temf_L,plus) + s_slack(1768,temf_L,minus) + s_slack(1768,temf_S,plus) + s_slack(1768,temf_S,minus) + s_slack(1768,toba_H,plus) + s_slack(1768,toba_H,minus) + s_slack(1768,toba_L,plus)
     
      + s_slack(1768,toba_L,minus) + s_slack(1768,trof_L,plus) + s_slack(1768,trof_L,minus) + s_slack(1768,trof_S,plus) + s_slack(1768,trof_S,minus) + s_slack(1768,vege_H,plus) + s_slack(1768,vege_H,minus) + s_slack(1768,vege_L,plus)
     
      + s_slack(1768,vege_L,minus) + s_slack(1768,vege_S,plus) + s_slack(1768,vege_S,minus) + s_slack(1769,rice_I,plus) + s_slack(1769,rice_I,minus) + s_slack(1769,sugc_I,plus) + s_slack(1769,sugc_I,minus) + s_slack(1769,whea_I,plus)
     
      + s_slack(1769,whea_I,minus) + s_slack(1769,bean_H,plus) + s_slack(1769,bean_H,minus) + s_slack(1769,bean_L,plus) + s_slack(1769,bean_L,minus) + s_slack(1769,bean_S,plus) + s_slack(1769,bean_S,minus) + s_slack(1769,cass_L,plus)
     
      + s_slack(1769,cass_L,minus) + s_slack(1769,cass_S,plus) + s_slack(1769,cass_S,minus) + s_slack(1769,chic_H,plus) + s_slack(1769,chic_H,minus) + s_slack(1769,chic_L,plus) + s_slack(1769,chic_L,minus) + s_slack(1769,chic_S,plus)
     
      + s_slack(1769,chic_S,minus) + s_slack(1769,coff_H,plus) + s_slack(1769,coff_H,minus) + s_slack(1769,coff_L,plus) + s_slack(1769,coff_L,minus) + s_slack(1769,cott_L,plus) + s_slack(1769,cott_L,minus) + s_slack(1769,cowp_H,plus)
     
      + s_slack(1769,cowp_H,minus) + s_slack(1769,cowp_L,plus) + s_slack(1769,cowp_L,minus) + s_slack(1769,cowp_S,plus) + s_slack(1769,cowp_S,minus) + s_slack(1769,grou_H,plus) + s_slack(1769,grou_H,minus) + s_slack(1769,grou_L,plus)
     
      + s_slack(1769,grou_L,minus) + s_slack(1769,grou_S,plus) + s_slack(1769,grou_S,minus) + s_slack(1769,lent_H,plus) + s_slack(1769,lent_H,minus) + s_slack(1769,lent_L,plus) + s_slack(1769,lent_L,minus) + s_slack(1769,lent_S,plus)
     
      + s_slack(1769,lent_S,minus) + s_slack(1769,maiz_H,plus) + s_slack(1769,maiz_H,minus) + s_slack(1769,maiz_L,plus) + s_slack(1769,maiz_L,minus) + s_slack(1769,maiz_S,plus) + s_slack(1769,maiz_S,minus) + s_slack(1769,mill_H,plus)
     
      + s_slack(1769,mill_H,minus) + s_slack(1769,mill_L,plus) + s_slack(1769,mill_L,minus) + s_slack(1769,mill_S,plus) + s_slack(1769,mill_S,minus) + s_slack(1769,ofib_L,plus) + s_slack(1769,ofib_L,minus) + s_slack(1769,ooil_L,plus)
     
      + s_slack(1769,ooil_L,minus) + s_slack(1769,opul_H,plus) + s_slack(1769,opul_H,minus) + s_slack(1769,opul_L,plus) + s_slack(1769,opul_L,minus) + s_slack(1769,opul_S,plus) + s_slack(1769,opul_S,minus) + s_slack(1769,pige_H,plus)
     
      + s_slack(1769,pige_H,minus) + s_slack(1769,pige_L,plus) + s_slack(1769,pige_L,minus) + s_slack(1769,pige_S,plus) + s_slack(1769,pige_S,minus) + s_slack(1769,pota_H,plus) + s_slack(1769,pota_H,minus) + s_slack(1769,pota_L,plus)
     
      + s_slack(1769,pota_L,minus) + s_slack(1769,pota_S,plus) + s_slack(1769,pota_S,minus) + s_slack(1769,rest_H,plus) + s_slack(1769,rest_H,minus) + s_slack(1769,rest_L,plus) + s_slack(1769,rest_L,minus) + s_slack(1769,rest_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 128
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1769,rest_S,minus) + s_slack(1769,rice_H,plus) + s_slack(1769,rice_H,minus) + s_slack(1769,rice_L,plus) + s_slack(1769,rice_L,minus) + s_slack(1769,rice_S,plus) + s_slack(1769,rice_S,minus) + s_slack(1769,sorg_L,plus)
     
      + s_slack(1769,sorg_L,minus) + s_slack(1769,sorg_S,plus) + s_slack(1769,sorg_S,minus) + s_slack(1769,soyb_L,plus) + s_slack(1769,soyb_L,minus) + s_slack(1769,soyb_S,plus) + s_slack(1769,soyb_S,minus) + s_slack(1769,sunf_L,plus)
     
      + s_slack(1769,sunf_L,minus) + s_slack(1769,temf_H,plus) + s_slack(1769,temf_H,minus) + s_slack(1769,temf_L,plus) + s_slack(1769,temf_L,minus) + s_slack(1769,temf_S,plus) + s_slack(1769,temf_S,minus) + s_slack(1769,toba_H,plus)
     
      + s_slack(1769,toba_H,minus) + s_slack(1769,toba_L,plus) + s_slack(1769,toba_L,minus) + s_slack(1769,trof_L,plus) + s_slack(1769,trof_L,minus) + s_slack(1769,trof_S,plus) + s_slack(1769,trof_S,minus) + s_slack(1769,vege_H,plus)
     
      + s_slack(1769,vege_H,minus) + s_slack(1769,vege_L,plus) + s_slack(1769,vege_L,minus) + s_slack(1769,vege_S,plus) + s_slack(1769,vege_S,minus) + s_slack(1770,rice_I,plus) + s_slack(1770,rice_I,minus) + s_slack(1770,sugc_I,plus)
     
      + s_slack(1770,sugc_I,minus) + s_slack(1770,whea_I,plus) + s_slack(1770,whea_I,minus) + s_slack(1770,bean_H,plus) + s_slack(1770,bean_H,minus) + s_slack(1770,bean_L,plus) + s_slack(1770,bean_L,minus) + s_slack(1770,bean_S,plus)
     
      + s_slack(1770,bean_S,minus) + s_slack(1770,cass_L,plus) + s_slack(1770,cass_L,minus) + s_slack(1770,cass_S,plus) + s_slack(1770,cass_S,minus) + s_slack(1770,chic_H,plus) + s_slack(1770,chic_H,minus) + s_slack(1770,chic_L,plus)
     
      + s_slack(1770,chic_L,minus) + s_slack(1770,chic_S,plus) + s_slack(1770,chic_S,minus) + s_slack(1770,coff_H,plus) + s_slack(1770,coff_H,minus) + s_slack(1770,coff_L,plus) + s_slack(1770,coff_L,minus) + s_slack(1770,cott_L,plus)
     
      + s_slack(1770,cott_L,minus) + s_slack(1770,cowp_H,plus) + s_slack(1770,cowp_H,minus) + s_slack(1770,cowp_L,plus) + s_slack(1770,cowp_L,minus) + s_slack(1770,cowp_S,plus) + s_slack(1770,cowp_S,minus) + s_slack(1770,grou_H,plus)
     
      + s_slack(1770,grou_H,minus) + s_slack(1770,grou_L,plus) + s_slack(1770,grou_L,minus) + s_slack(1770,grou_S,plus) + s_slack(1770,grou_S,minus) + s_slack(1770,lent_H,plus) + s_slack(1770,lent_H,minus) + s_slack(1770,lent_L,plus)
     
      + s_slack(1770,lent_L,minus) + s_slack(1770,lent_S,plus) + s_slack(1770,lent_S,minus) + s_slack(1770,maiz_H,plus) + s_slack(1770,maiz_H,minus) + s_slack(1770,maiz_L,plus) + s_slack(1770,maiz_L,minus) + s_slack(1770,maiz_S,plus)
     
      + s_slack(1770,maiz_S,minus) + s_slack(1770,mill_H,plus) + s_slack(1770,mill_H,minus) + s_slack(1770,mill_L,plus) + s_slack(1770,mill_L,minus) + s_slack(1770,mill_S,plus) + s_slack(1770,mill_S,minus) + s_slack(1770,ofib_L,plus)
     
      + s_slack(1770,ofib_L,minus) + s_slack(1770,ooil_L,plus) + s_slack(1770,ooil_L,minus) + s_slack(1770,opul_H,plus) + s_slack(1770,opul_H,minus) + s_slack(1770,opul_L,plus) + s_slack(1770,opul_L,minus) + s_slack(1770,opul_S,plus)
     
      + s_slack(1770,opul_S,minus) + s_slack(1770,pige_H,plus) + s_slack(1770,pige_H,minus) + s_slack(1770,pige_L,plus) + s_slack(1770,pige_L,minus) + s_slack(1770,pige_S,plus) + s_slack(1770,pige_S,minus) + s_slack(1770,pota_H,plus)
     
      + s_slack(1770,pota_H,minus) + s_slack(1770,pota_L,plus) + s_slack(1770,pota_L,minus) + s_slack(1770,pota_S,plus) + s_slack(1770,pota_S,minus) + s_slack(1770,rest_H,plus) + s_slack(1770,rest_H,minus) + s_slack(1770,rest_L,plus)
     
      + s_slack(1770,rest_L,minus) + s_slack(1770,rest_S,plus) + s_slack(1770,rest_S,minus) + s_slack(1770,rice_H,plus) + s_slack(1770,rice_H,minus) + s_slack(1770,rice_L,plus) + s_slack(1770,rice_L,minus) + s_slack(1770,rice_S,plus)
     
      + s_slack(1770,rice_S,minus) + s_slack(1770,sorg_L,plus) + s_slack(1770,sorg_L,minus) + s_slack(1770,sorg_S,plus) + s_slack(1770,sorg_S,minus) + s_slack(1770,soyb_L,plus) + s_slack(1770,soyb_L,minus) + s_slack(1770,soyb_S,plus)
     
      + s_slack(1770,soyb_S,minus) + s_slack(1770,sunf_L,plus) + s_slack(1770,sunf_L,minus) + s_slack(1770,temf_H,plus) + s_slack(1770,temf_H,minus) + s_slack(1770,temf_L,plus) + s_slack(1770,temf_L,minus) + s_slack(1770,temf_S,plus)
     
      + s_slack(1770,temf_S,minus) + s_slack(1770,toba_H,plus) + s_slack(1770,toba_H,minus) + s_slack(1770,toba_L,plus) + s_slack(1770,toba_L,minus) + s_slack(1770,trof_L,plus) + s_slack(1770,trof_L,minus) + s_slack(1770,trof_S,plus)
     
      + s_slack(1770,trof_S,minus) + s_slack(1770,vege_H,plus) + s_slack(1770,vege_H,minus) + s_slack(1770,vege_L,plus) + s_slack(1770,vege_L,minus) + s_slack(1770,vege_S,plus) + s_slack(1770,vege_S,minus) + s_slack(1771,rice_I,plus)
     
      + s_slack(1771,rice_I,minus) + s_slack(1771,sugc_I,plus) + s_slack(1771,sugc_I,minus) + s_slack(1771,whea_I,plus) + s_slack(1771,whea_I,minus) + s_slack(1771,bean_H,plus) + s_slack(1771,bean_H,minus) + s_slack(1771,bean_L,plus)
     
      + s_slack(1771,bean_L,minus) + s_slack(1771,bean_S,plus) + s_slack(1771,bean_S,minus) + s_slack(1771,cass_L,plus) + s_slack(1771,cass_L,minus) + s_slack(1771,cass_S,plus) + s_slack(1771,cass_S,minus) + s_slack(1771,chic_H,plus)
     
      + s_slack(1771,chic_H,minus) + s_slack(1771,chic_L,plus) + s_slack(1771,chic_L,minus) + s_slack(1771,chic_S,plus) + s_slack(1771,chic_S,minus) + s_slack(1771,coff_H,plus) + s_slack(1771,coff_H,minus) + s_slack(1771,coff_L,plus)
     
      + s_slack(1771,coff_L,minus) + s_slack(1771,cott_L,plus) + s_slack(1771,cott_L,minus) + s_slack(1771,cowp_H,plus) + s_slack(1771,cowp_H,minus) + s_slack(1771,cowp_L,plus) + s_slack(1771,cowp_L,minus) + s_slack(1771,cowp_S,plus)
     
      + s_slack(1771,cowp_S,minus) + s_slack(1771,grou_H,plus) + s_slack(1771,grou_H,minus) + s_slack(1771,grou_L,plus) + s_slack(1771,grou_L,minus) + s_slack(1771,grou_S,plus) + s_slack(1771,grou_S,minus) + s_slack(1771,lent_H,plus)
     
      + s_slack(1771,lent_H,minus) + s_slack(1771,lent_L,plus) + s_slack(1771,lent_L,minus) + s_slack(1771,lent_S,plus) + s_slack(1771,lent_S,minus) + s_slack(1771,maiz_H,plus) + s_slack(1771,maiz_H,minus) + s_slack(1771,maiz_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 129
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1771,maiz_L,minus) + s_slack(1771,maiz_S,plus) + s_slack(1771,maiz_S,minus) + s_slack(1771,mill_H,plus) + s_slack(1771,mill_H,minus) + s_slack(1771,mill_L,plus) + s_slack(1771,mill_L,minus) + s_slack(1771,mill_S,plus)
     
      + s_slack(1771,mill_S,minus) + s_slack(1771,ofib_L,plus) + s_slack(1771,ofib_L,minus) + s_slack(1771,ooil_L,plus) + s_slack(1771,ooil_L,minus) + s_slack(1771,opul_H,plus) + s_slack(1771,opul_H,minus) + s_slack(1771,opul_L,plus)
     
      + s_slack(1771,opul_L,minus) + s_slack(1771,opul_S,plus) + s_slack(1771,opul_S,minus) + s_slack(1771,pige_H,plus) + s_slack(1771,pige_H,minus) + s_slack(1771,pige_L,plus) + s_slack(1771,pige_L,minus) + s_slack(1771,pige_S,plus)
     
      + s_slack(1771,pige_S,minus) + s_slack(1771,pota_H,plus) + s_slack(1771,pota_H,minus) + s_slack(1771,pota_L,plus) + s_slack(1771,pota_L,minus) + s_slack(1771,pota_S,plus) + s_slack(1771,pota_S,minus) + s_slack(1771,rest_H,plus)
     
      + s_slack(1771,rest_H,minus) + s_slack(1771,rest_L,plus) + s_slack(1771,rest_L,minus) + s_slack(1771,rest_S,plus) + s_slack(1771,rest_S,minus) + s_slack(1771,rice_H,plus) + s_slack(1771,rice_H,minus) + s_slack(1771,rice_L,plus)
     
      + s_slack(1771,rice_L,minus) + s_slack(1771,rice_S,plus) + s_slack(1771,rice_S,minus) + s_slack(1771,sorg_L,plus) + s_slack(1771,sorg_L,minus) + s_slack(1771,sorg_S,plus) + s_slack(1771,sorg_S,minus) + s_slack(1771,soyb_L,plus)
     
      + s_slack(1771,soyb_L,minus) + s_slack(1771,soyb_S,plus) + s_slack(1771,soyb_S,minus) + s_slack(1771,sunf_L,plus) + s_slack(1771,sunf_L,minus) + s_slack(1771,temf_H,plus) + s_slack(1771,temf_H,minus) + s_slack(1771,temf_L,plus)
     
      + s_slack(1771,temf_L,minus) + s_slack(1771,temf_S,plus) + s_slack(1771,temf_S,minus) + s_slack(1771,toba_H,plus) + s_slack(1771,toba_H,minus) + s_slack(1771,toba_L,plus) + s_slack(1771,toba_L,minus) + s_slack(1771,trof_L,plus)
     
      + s_slack(1771,trof_L,minus) + s_slack(1771,trof_S,plus) + s_slack(1771,trof_S,minus) + s_slack(1771,vege_H,plus) + s_slack(1771,vege_H,minus) + s_slack(1771,vege_L,plus) + s_slack(1771,vege_L,minus) + s_slack(1771,vege_S,plus)
     
      + s_slack(1771,vege_S,minus) + s_slack(1774,rice_I,plus) + s_slack(1774,rice_I,minus) + s_slack(1774,sugc_I,plus) + s_slack(1774,sugc_I,minus) + s_slack(1774,whea_I,plus) + s_slack(1774,whea_I,minus) + s_slack(1774,bean_H,plus)
     
      + s_slack(1774,bean_H,minus) + s_slack(1774,bean_L,plus) + s_slack(1774,bean_L,minus) + s_slack(1774,bean_S,plus) + s_slack(1774,bean_S,minus) + s_slack(1774,cass_L,plus) + s_slack(1774,cass_L,minus) + s_slack(1774,cass_S,plus)
     
      + s_slack(1774,cass_S,minus) + s_slack(1774,chic_H,plus) + s_slack(1774,chic_H,minus) + s_slack(1774,chic_L,plus) + s_slack(1774,chic_L,minus) + s_slack(1774,chic_S,plus) + s_slack(1774,chic_S,minus) + s_slack(1774,coff_H,plus)
     
      + s_slack(1774,coff_H,minus) + s_slack(1774,coff_L,plus) + s_slack(1774,coff_L,minus) + s_slack(1774,cott_L,plus) + s_slack(1774,cott_L,minus) + s_slack(1774,cowp_H,plus) + s_slack(1774,cowp_H,minus) + s_slack(1774,cowp_L,plus)
     
      + s_slack(1774,cowp_L,minus) + s_slack(1774,cowp_S,plus) + s_slack(1774,cowp_S,minus) + s_slack(1774,grou_H,plus) + s_slack(1774,grou_H,minus) + s_slack(1774,grou_L,plus) + s_slack(1774,grou_L,minus) + s_slack(1774,grou_S,plus)
     
      + s_slack(1774,grou_S,minus) + s_slack(1774,lent_H,plus) + s_slack(1774,lent_H,minus) + s_slack(1774,lent_L,plus) + s_slack(1774,lent_L,minus) + s_slack(1774,lent_S,plus) + s_slack(1774,lent_S,minus) + s_slack(1774,maiz_H,plus)
     
      + s_slack(1774,maiz_H,minus) + s_slack(1774,maiz_L,plus) + s_slack(1774,maiz_L,minus) + s_slack(1774,maiz_S,plus) + s_slack(1774,maiz_S,minus) + s_slack(1774,mill_H,plus) + s_slack(1774,mill_H,minus) + s_slack(1774,mill_L,plus)
     
      + s_slack(1774,mill_L,minus) + s_slack(1774,mill_S,plus) + s_slack(1774,mill_S,minus) + s_slack(1774,ofib_L,plus) + s_slack(1774,ofib_L,minus) + s_slack(1774,ooil_L,plus) + s_slack(1774,ooil_L,minus) + s_slack(1774,opul_H,plus)
     
      + s_slack(1774,opul_H,minus) + s_slack(1774,opul_L,plus) + s_slack(1774,opul_L,minus) + s_slack(1774,opul_S,plus) + s_slack(1774,opul_S,minus) + s_slack(1774,pige_H,plus) + s_slack(1774,pige_H,minus) + s_slack(1774,pige_L,plus)
     
      + s_slack(1774,pige_L,minus) + s_slack(1774,pige_S,plus) + s_slack(1774,pige_S,minus) + s_slack(1774,pota_H,plus) + s_slack(1774,pota_H,minus) + s_slack(1774,pota_L,plus) + s_slack(1774,pota_L,minus) + s_slack(1774,pota_S,plus)
     
      + s_slack(1774,pota_S,minus) + s_slack(1774,rest_H,plus) + s_slack(1774,rest_H,minus) + s_slack(1774,rest_L,plus) + s_slack(1774,rest_L,minus) + s_slack(1774,rest_S,plus) + s_slack(1774,rest_S,minus) + s_slack(1774,rice_H,plus)
     
      + s_slack(1774,rice_H,minus) + s_slack(1774,rice_L,plus) + s_slack(1774,rice_L,minus) + s_slack(1774,rice_S,plus) + s_slack(1774,rice_S,minus) + s_slack(1774,sorg_L,plus) + s_slack(1774,sorg_L,minus) + s_slack(1774,sorg_S,plus)
     
      + s_slack(1774,sorg_S,minus) + s_slack(1774,soyb_L,plus) + s_slack(1774,soyb_L,minus) + s_slack(1774,soyb_S,plus) + s_slack(1774,soyb_S,minus) + s_slack(1774,sunf_L,plus) + s_slack(1774,sunf_L,minus) + s_slack(1774,temf_H,plus)
     
      + s_slack(1774,temf_H,minus) + s_slack(1774,temf_L,plus) + s_slack(1774,temf_L,minus) + s_slack(1774,temf_S,plus) + s_slack(1774,temf_S,minus) + s_slack(1774,toba_H,plus) + s_slack(1774,toba_H,minus) + s_slack(1774,toba_L,plus)
     
      + s_slack(1774,toba_L,minus) + s_slack(1774,trof_L,plus) + s_slack(1774,trof_L,minus) + s_slack(1774,trof_S,plus) + s_slack(1774,trof_S,minus) + s_slack(1774,vege_H,plus) + s_slack(1774,vege_H,minus) + s_slack(1774,vege_L,plus)
     
      + s_slack(1774,vege_L,minus) + s_slack(1774,vege_S,plus) + s_slack(1774,vege_S,minus) + s_slack(1775,rice_I,plus) + s_slack(1775,rice_I,minus) + s_slack(1775,sugc_I,plus) + s_slack(1775,sugc_I,minus) + s_slack(1775,whea_I,plus)
     
      + s_slack(1775,whea_I,minus) + s_slack(1775,bean_H,plus) + s_slack(1775,bean_H,minus) + s_slack(1775,bean_L,plus) + s_slack(1775,bean_L,minus) + s_slack(1775,bean_S,plus) + s_slack(1775,bean_S,minus) + s_slack(1775,cass_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 130
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1775,cass_L,minus) + s_slack(1775,cass_S,plus) + s_slack(1775,cass_S,minus) + s_slack(1775,chic_H,plus) + s_slack(1775,chic_H,minus) + s_slack(1775,chic_L,plus) + s_slack(1775,chic_L,minus) + s_slack(1775,chic_S,plus)
     
      + s_slack(1775,chic_S,minus) + s_slack(1775,coff_H,plus) + s_slack(1775,coff_H,minus) + s_slack(1775,coff_L,plus) + s_slack(1775,coff_L,minus) + s_slack(1775,cott_L,plus) + s_slack(1775,cott_L,minus) + s_slack(1775,cowp_H,plus)
     
      + s_slack(1775,cowp_H,minus) + s_slack(1775,cowp_L,plus) + s_slack(1775,cowp_L,minus) + s_slack(1775,cowp_S,plus) + s_slack(1775,cowp_S,minus) + s_slack(1775,grou_H,plus) + s_slack(1775,grou_H,minus) + s_slack(1775,grou_L,plus)
     
      + s_slack(1775,grou_L,minus) + s_slack(1775,grou_S,plus) + s_slack(1775,grou_S,minus) + s_slack(1775,lent_H,plus) + s_slack(1775,lent_H,minus) + s_slack(1775,lent_L,plus) + s_slack(1775,lent_L,minus) + s_slack(1775,lent_S,plus)
     
      + s_slack(1775,lent_S,minus) + s_slack(1775,maiz_H,plus) + s_slack(1775,maiz_H,minus) + s_slack(1775,maiz_L,plus) + s_slack(1775,maiz_L,minus) + s_slack(1775,maiz_S,plus) + s_slack(1775,maiz_S,minus) + s_slack(1775,mill_H,plus)
     
      + s_slack(1775,mill_H,minus) + s_slack(1775,mill_L,plus) + s_slack(1775,mill_L,minus) + s_slack(1775,mill_S,plus) + s_slack(1775,mill_S,minus) + s_slack(1775,ofib_L,plus) + s_slack(1775,ofib_L,minus) + s_slack(1775,ooil_L,plus)
     
      + s_slack(1775,ooil_L,minus) + s_slack(1775,opul_H,plus) + s_slack(1775,opul_H,minus) + s_slack(1775,opul_L,plus) + s_slack(1775,opul_L,minus) + s_slack(1775,opul_S,plus) + s_slack(1775,opul_S,minus) + s_slack(1775,pige_H,plus)
     
      + s_slack(1775,pige_H,minus) + s_slack(1775,pige_L,plus) + s_slack(1775,pige_L,minus) + s_slack(1775,pige_S,plus) + s_slack(1775,pige_S,minus) + s_slack(1775,pota_H,plus) + s_slack(1775,pota_H,minus) + s_slack(1775,pota_L,plus)
     
      + s_slack(1775,pota_L,minus) + s_slack(1775,pota_S,plus) + s_slack(1775,pota_S,minus) + s_slack(1775,rest_H,plus) + s_slack(1775,rest_H,minus) + s_slack(1775,rest_L,plus) + s_slack(1775,rest_L,minus) + s_slack(1775,rest_S,plus)
     
      + s_slack(1775,rest_S,minus) + s_slack(1775,rice_H,plus) + s_slack(1775,rice_H,minus) + s_slack(1775,rice_L,plus) + s_slack(1775,rice_L,minus) + s_slack(1775,rice_S,plus) + s_slack(1775,rice_S,minus) + s_slack(1775,sorg_L,plus)
     
      + s_slack(1775,sorg_L,minus) + s_slack(1775,sorg_S,plus) + s_slack(1775,sorg_S,minus) + s_slack(1775,soyb_L,plus) + s_slack(1775,soyb_L,minus) + s_slack(1775,soyb_S,plus) + s_slack(1775,soyb_S,minus) + s_slack(1775,sunf_L,plus)
     
      + s_slack(1775,sunf_L,minus) + s_slack(1775,temf_H,plus) + s_slack(1775,temf_H,minus) + s_slack(1775,temf_L,plus) + s_slack(1775,temf_L,minus) + s_slack(1775,temf_S,plus) + s_slack(1775,temf_S,minus) + s_slack(1775,toba_H,plus)
     
      + s_slack(1775,toba_H,minus) + s_slack(1775,toba_L,plus) + s_slack(1775,toba_L,minus) + s_slack(1775,trof_L,plus) + s_slack(1775,trof_L,minus) + s_slack(1775,trof_S,plus) + s_slack(1775,trof_S,minus) + s_slack(1775,vege_H,plus)
     
      + s_slack(1775,vege_H,minus) + s_slack(1775,vege_L,plus) + s_slack(1775,vege_L,minus) + s_slack(1775,vege_S,plus) + s_slack(1775,vege_S,minus) + s_slack(1805,rice_I,plus) + s_slack(1805,rice_I,minus) + s_slack(1805,sugc_I,plus)
     
      + s_slack(1805,sugc_I,minus) + s_slack(1805,whea_I,plus) + s_slack(1805,whea_I,minus) + s_slack(1805,bean_H,plus) + s_slack(1805,bean_H,minus) + s_slack(1805,bean_L,plus) + s_slack(1805,bean_L,minus) + s_slack(1805,bean_S,plus)
     
      + s_slack(1805,bean_S,minus) + s_slack(1805,cass_L,plus) + s_slack(1805,cass_L,minus) + s_slack(1805,cass_S,plus) + s_slack(1805,cass_S,minus) + s_slack(1805,chic_H,plus) + s_slack(1805,chic_H,minus) + s_slack(1805,chic_L,plus)
     
      + s_slack(1805,chic_L,minus) + s_slack(1805,chic_S,plus) + s_slack(1805,chic_S,minus) + s_slack(1805,coff_H,plus) + s_slack(1805,coff_H,minus) + s_slack(1805,coff_L,plus) + s_slack(1805,coff_L,minus) + s_slack(1805,cott_L,plus)
     
      + s_slack(1805,cott_L,minus) + s_slack(1805,cowp_H,plus) + s_slack(1805,cowp_H,minus) + s_slack(1805,cowp_L,plus) + s_slack(1805,cowp_L,minus) + s_slack(1805,cowp_S,plus) + s_slack(1805,cowp_S,minus) + s_slack(1805,grou_H,plus)
     
      + s_slack(1805,grou_H,minus) + s_slack(1805,grou_L,plus) + s_slack(1805,grou_L,minus) + s_slack(1805,grou_S,plus) + s_slack(1805,grou_S,minus) + s_slack(1805,lent_H,plus) + s_slack(1805,lent_H,minus) + s_slack(1805,lent_L,plus)
     
      + s_slack(1805,lent_L,minus) + s_slack(1805,lent_S,plus) + s_slack(1805,lent_S,minus) + s_slack(1805,maiz_H,plus) + s_slack(1805,maiz_H,minus) + s_slack(1805,maiz_L,plus) + s_slack(1805,maiz_L,minus) + s_slack(1805,maiz_S,plus)
     
      + s_slack(1805,maiz_S,minus) + s_slack(1805,mill_H,plus) + s_slack(1805,mill_H,minus) + s_slack(1805,mill_L,plus) + s_slack(1805,mill_L,minus) + s_slack(1805,mill_S,plus) + s_slack(1805,mill_S,minus) + s_slack(1805,ofib_L,plus)
     
      + s_slack(1805,ofib_L,minus) + s_slack(1805,ooil_L,plus) + s_slack(1805,ooil_L,minus) + s_slack(1805,opul_H,plus) + s_slack(1805,opul_H,minus) + s_slack(1805,opul_L,plus) + s_slack(1805,opul_L,minus) + s_slack(1805,opul_S,plus)
     
      + s_slack(1805,opul_S,minus) + s_slack(1805,pige_H,plus) + s_slack(1805,pige_H,minus) + s_slack(1805,pige_L,plus) + s_slack(1805,pige_L,minus) + s_slack(1805,pige_S,plus) + s_slack(1805,pige_S,minus) + s_slack(1805,pota_H,plus)
     
      + s_slack(1805,pota_H,minus) + s_slack(1805,pota_L,plus) + s_slack(1805,pota_L,minus) + s_slack(1805,pota_S,plus) + s_slack(1805,pota_S,minus) + s_slack(1805,rest_H,plus) + s_slack(1805,rest_H,minus) + s_slack(1805,rest_L,plus)
     
      + s_slack(1805,rest_L,minus) + s_slack(1805,rest_S,plus) + s_slack(1805,rest_S,minus) + s_slack(1805,rice_H,plus) + s_slack(1805,rice_H,minus) + s_slack(1805,rice_L,plus) + s_slack(1805,rice_L,minus) + s_slack(1805,rice_S,plus)
     
      + s_slack(1805,rice_S,minus) + s_slack(1805,sorg_L,plus) + s_slack(1805,sorg_L,minus) + s_slack(1805,sorg_S,plus) + s_slack(1805,sorg_S,minus) + s_slack(1805,soyb_L,plus) + s_slack(1805,soyb_L,minus) + s_slack(1805,soyb_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 131
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1805,soyb_S,minus) + s_slack(1805,sunf_L,plus) + s_slack(1805,sunf_L,minus) + s_slack(1805,temf_H,plus) + s_slack(1805,temf_H,minus) + s_slack(1805,temf_L,plus) + s_slack(1805,temf_L,minus) + s_slack(1805,temf_S,plus)
     
      + s_slack(1805,temf_S,minus) + s_slack(1805,toba_H,plus) + s_slack(1805,toba_H,minus) + s_slack(1805,toba_L,plus) + s_slack(1805,toba_L,minus) + s_slack(1805,trof_L,plus) + s_slack(1805,trof_L,minus) + s_slack(1805,trof_S,plus)
     
      + s_slack(1805,trof_S,minus) + s_slack(1805,vege_H,plus) + s_slack(1805,vege_H,minus) + s_slack(1805,vege_L,plus) + s_slack(1805,vege_L,minus) + s_slack(1805,vege_S,plus) + s_slack(1805,vege_S,minus) + s_slack(1806,rice_I,plus)
     
      + s_slack(1806,rice_I,minus) + s_slack(1806,sugc_I,plus) + s_slack(1806,sugc_I,minus) + s_slack(1806,whea_I,plus) + s_slack(1806,whea_I,minus) + s_slack(1806,bean_H,plus) + s_slack(1806,bean_H,minus) + s_slack(1806,bean_L,plus)
     
      + s_slack(1806,bean_L,minus) + s_slack(1806,bean_S,plus) + s_slack(1806,bean_S,minus) + s_slack(1806,cass_L,plus) + s_slack(1806,cass_L,minus) + s_slack(1806,cass_S,plus) + s_slack(1806,cass_S,minus) + s_slack(1806,chic_H,plus)
     
      + s_slack(1806,chic_H,minus) + s_slack(1806,chic_L,plus) + s_slack(1806,chic_L,minus) + s_slack(1806,chic_S,plus) + s_slack(1806,chic_S,minus) + s_slack(1806,coff_H,plus) + s_slack(1806,coff_H,minus) + s_slack(1806,coff_L,plus)
     
      + s_slack(1806,coff_L,minus) + s_slack(1806,cott_L,plus) + s_slack(1806,cott_L,minus) + s_slack(1806,cowp_H,plus) + s_slack(1806,cowp_H,minus) + s_slack(1806,cowp_L,plus) + s_slack(1806,cowp_L,minus) + s_slack(1806,cowp_S,plus)
     
      + s_slack(1806,cowp_S,minus) + s_slack(1806,grou_H,plus) + s_slack(1806,grou_H,minus) + s_slack(1806,grou_L,plus) + s_slack(1806,grou_L,minus) + s_slack(1806,grou_S,plus) + s_slack(1806,grou_S,minus) + s_slack(1806,lent_H,plus)
     
      + s_slack(1806,lent_H,minus) + s_slack(1806,lent_L,plus) + s_slack(1806,lent_L,minus) + s_slack(1806,lent_S,plus) + s_slack(1806,lent_S,minus) + s_slack(1806,maiz_H,plus) + s_slack(1806,maiz_H,minus) + s_slack(1806,maiz_L,plus)
     
      + s_slack(1806,maiz_L,minus) + s_slack(1806,maiz_S,plus) + s_slack(1806,maiz_S,minus) + s_slack(1806,mill_H,plus) + s_slack(1806,mill_H,minus) + s_slack(1806,mill_L,plus) + s_slack(1806,mill_L,minus) + s_slack(1806,mill_S,plus)
     
      + s_slack(1806,mill_S,minus) + s_slack(1806,ofib_L,plus) + s_slack(1806,ofib_L,minus) + s_slack(1806,ooil_L,plus) + s_slack(1806,ooil_L,minus) + s_slack(1806,opul_H,plus) + s_slack(1806,opul_H,minus) + s_slack(1806,opul_L,plus)
     
      + s_slack(1806,opul_L,minus) + s_slack(1806,opul_S,plus) + s_slack(1806,opul_S,minus) + s_slack(1806,pige_H,plus) + s_slack(1806,pige_H,minus) + s_slack(1806,pige_L,plus) + s_slack(1806,pige_L,minus) + s_slack(1806,pige_S,plus)
     
      + s_slack(1806,pige_S,minus) + s_slack(1806,pota_H,plus) + s_slack(1806,pota_H,minus) + s_slack(1806,pota_L,plus) + s_slack(1806,pota_L,minus) + s_slack(1806,pota_S,plus) + s_slack(1806,pota_S,minus) + s_slack(1806,rest_H,plus)
     
      + s_slack(1806,rest_H,minus) + s_slack(1806,rest_L,plus) + s_slack(1806,rest_L,minus) + s_slack(1806,rest_S,plus) + s_slack(1806,rest_S,minus) + s_slack(1806,rice_H,plus) + s_slack(1806,rice_H,minus) + s_slack(1806,rice_L,plus)
     
      + s_slack(1806,rice_L,minus) + s_slack(1806,rice_S,plus) + s_slack(1806,rice_S,minus) + s_slack(1806,sorg_L,plus) + s_slack(1806,sorg_L,minus) + s_slack(1806,sorg_S,plus) + s_slack(1806,sorg_S,minus) + s_slack(1806,soyb_L,plus)
     
      + s_slack(1806,soyb_L,minus) + s_slack(1806,soyb_S,plus) + s_slack(1806,soyb_S,minus) + s_slack(1806,sunf_L,plus) + s_slack(1806,sunf_L,minus) + s_slack(1806,temf_H,plus) + s_slack(1806,temf_H,minus) + s_slack(1806,temf_L,plus)
     
      + s_slack(1806,temf_L,minus) + s_slack(1806,temf_S,plus) + s_slack(1806,temf_S,minus) + s_slack(1806,toba_H,plus) + s_slack(1806,toba_H,minus) + s_slack(1806,toba_L,plus) + s_slack(1806,toba_L,minus) + s_slack(1806,trof_L,plus)
     
      + s_slack(1806,trof_L,minus) + s_slack(1806,trof_S,plus) + s_slack(1806,trof_S,minus) + s_slack(1806,vege_H,plus) + s_slack(1806,vege_H,minus) + s_slack(1806,vege_L,plus) + s_slack(1806,vege_L,minus) + s_slack(1806,vege_S,plus)
     
      + s_slack(1806,vege_S,minus) + s_slack(1807,rice_I,plus) + s_slack(1807,rice_I,minus) + s_slack(1807,sugc_I,plus) + s_slack(1807,sugc_I,minus) + s_slack(1807,whea_I,plus) + s_slack(1807,whea_I,minus) + s_slack(1807,bean_H,plus)
     
      + s_slack(1807,bean_H,minus) + s_slack(1807,bean_L,plus) + s_slack(1807,bean_L,minus) + s_slack(1807,bean_S,plus) + s_slack(1807,bean_S,minus) + s_slack(1807,cass_L,plus) + s_slack(1807,cass_L,minus) + s_slack(1807,cass_S,plus)
     
      + s_slack(1807,cass_S,minus) + s_slack(1807,chic_H,plus) + s_slack(1807,chic_H,minus) + s_slack(1807,chic_L,plus) + s_slack(1807,chic_L,minus) + s_slack(1807,chic_S,plus) + s_slack(1807,chic_S,minus) + s_slack(1807,coff_H,plus)
     
      + s_slack(1807,coff_H,minus) + s_slack(1807,coff_L,plus) + s_slack(1807,coff_L,minus) + s_slack(1807,cott_L,plus) + s_slack(1807,cott_L,minus) + s_slack(1807,cowp_H,plus) + s_slack(1807,cowp_H,minus) + s_slack(1807,cowp_L,plus)
     
      + s_slack(1807,cowp_L,minus) + s_slack(1807,cowp_S,plus) + s_slack(1807,cowp_S,minus) + s_slack(1807,grou_H,plus) + s_slack(1807,grou_H,minus) + s_slack(1807,grou_L,plus) + s_slack(1807,grou_L,minus) + s_slack(1807,grou_S,plus)
     
      + s_slack(1807,grou_S,minus) + s_slack(1807,lent_H,plus) + s_slack(1807,lent_H,minus) + s_slack(1807,lent_L,plus) + s_slack(1807,lent_L,minus) + s_slack(1807,lent_S,plus) + s_slack(1807,lent_S,minus) + s_slack(1807,maiz_H,plus)
     
      + s_slack(1807,maiz_H,minus) + s_slack(1807,maiz_L,plus) + s_slack(1807,maiz_L,minus) + s_slack(1807,maiz_S,plus) + s_slack(1807,maiz_S,minus) + s_slack(1807,mill_H,plus) + s_slack(1807,mill_H,minus) + s_slack(1807,mill_L,plus)
     
      + s_slack(1807,mill_L,minus) + s_slack(1807,mill_S,plus) + s_slack(1807,mill_S,minus) + s_slack(1807,ofib_L,plus) + s_slack(1807,ofib_L,minus) + s_slack(1807,ooil_L,plus) + s_slack(1807,ooil_L,minus) + s_slack(1807,opul_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 132
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1807,opul_H,minus) + s_slack(1807,opul_L,plus) + s_slack(1807,opul_L,minus) + s_slack(1807,opul_S,plus) + s_slack(1807,opul_S,minus) + s_slack(1807,pige_H,plus) + s_slack(1807,pige_H,minus) + s_slack(1807,pige_L,plus)
     
      + s_slack(1807,pige_L,minus) + s_slack(1807,pige_S,plus) + s_slack(1807,pige_S,minus) + s_slack(1807,pota_H,plus) + s_slack(1807,pota_H,minus) + s_slack(1807,pota_L,plus) + s_slack(1807,pota_L,minus) + s_slack(1807,pota_S,plus)
     
      + s_slack(1807,pota_S,minus) + s_slack(1807,rest_H,plus) + s_slack(1807,rest_H,minus) + s_slack(1807,rest_L,plus) + s_slack(1807,rest_L,minus) + s_slack(1807,rest_S,plus) + s_slack(1807,rest_S,minus) + s_slack(1807,rice_H,plus)
     
      + s_slack(1807,rice_H,minus) + s_slack(1807,rice_L,plus) + s_slack(1807,rice_L,minus) + s_slack(1807,rice_S,plus) + s_slack(1807,rice_S,minus) + s_slack(1807,sorg_L,plus) + s_slack(1807,sorg_L,minus) + s_slack(1807,sorg_S,plus)
     
      + s_slack(1807,sorg_S,minus) + s_slack(1807,soyb_L,plus) + s_slack(1807,soyb_L,minus) + s_slack(1807,soyb_S,plus) + s_slack(1807,soyb_S,minus) + s_slack(1807,sunf_L,plus) + s_slack(1807,sunf_L,minus) + s_slack(1807,temf_H,plus)
     
      + s_slack(1807,temf_H,minus) + s_slack(1807,temf_L,plus) + s_slack(1807,temf_L,minus) + s_slack(1807,temf_S,plus) + s_slack(1807,temf_S,minus) + s_slack(1807,toba_H,plus) + s_slack(1807,toba_H,minus) + s_slack(1807,toba_L,plus)
     
      + s_slack(1807,toba_L,minus) + s_slack(1807,trof_L,plus) + s_slack(1807,trof_L,minus) + s_slack(1807,trof_S,plus) + s_slack(1807,trof_S,minus) + s_slack(1807,vege_H,plus) + s_slack(1807,vege_H,minus) + s_slack(1807,vege_L,plus)
     
      + s_slack(1807,vege_L,minus) + s_slack(1807,vege_S,plus) + s_slack(1807,vege_S,minus) + s_slack(1808,rice_I,plus) + s_slack(1808,rice_I,minus) + s_slack(1808,sugc_I,plus) + s_slack(1808,sugc_I,minus) + s_slack(1808,whea_I,plus)
     
      + s_slack(1808,whea_I,minus) + s_slack(1808,bean_H,plus) + s_slack(1808,bean_H,minus) + s_slack(1808,bean_L,plus) + s_slack(1808,bean_L,minus) + s_slack(1808,bean_S,plus) + s_slack(1808,bean_S,minus) + s_slack(1808,cass_L,plus)
     
      + s_slack(1808,cass_L,minus) + s_slack(1808,cass_S,plus) + s_slack(1808,cass_S,minus) + s_slack(1808,chic_H,plus) + s_slack(1808,chic_H,minus) + s_slack(1808,chic_L,plus) + s_slack(1808,chic_L,minus) + s_slack(1808,chic_S,plus)
     
      + s_slack(1808,chic_S,minus) + s_slack(1808,coff_H,plus) + s_slack(1808,coff_H,minus) + s_slack(1808,coff_L,plus) + s_slack(1808,coff_L,minus) + s_slack(1808,cott_L,plus) + s_slack(1808,cott_L,minus) + s_slack(1808,cowp_H,plus)
     
      + s_slack(1808,cowp_H,minus) + s_slack(1808,cowp_L,plus) + s_slack(1808,cowp_L,minus) + s_slack(1808,cowp_S,plus) + s_slack(1808,cowp_S,minus) + s_slack(1808,grou_H,plus) + s_slack(1808,grou_H,minus) + s_slack(1808,grou_L,plus)
     
      + s_slack(1808,grou_L,minus) + s_slack(1808,grou_S,plus) + s_slack(1808,grou_S,minus) + s_slack(1808,lent_H,plus) + s_slack(1808,lent_H,minus) + s_slack(1808,lent_L,plus) + s_slack(1808,lent_L,minus) + s_slack(1808,lent_S,plus)
     
      + s_slack(1808,lent_S,minus) + s_slack(1808,maiz_H,plus) + s_slack(1808,maiz_H,minus) + s_slack(1808,maiz_L,plus) + s_slack(1808,maiz_L,minus) + s_slack(1808,maiz_S,plus) + s_slack(1808,maiz_S,minus) + s_slack(1808,mill_H,plus)
     
      + s_slack(1808,mill_H,minus) + s_slack(1808,mill_L,plus) + s_slack(1808,mill_L,minus) + s_slack(1808,mill_S,plus) + s_slack(1808,mill_S,minus) + s_slack(1808,ofib_L,plus) + s_slack(1808,ofib_L,minus) + s_slack(1808,ooil_L,plus)
     
      + s_slack(1808,ooil_L,minus) + s_slack(1808,opul_H,plus) + s_slack(1808,opul_H,minus) + s_slack(1808,opul_L,plus) + s_slack(1808,opul_L,minus) + s_slack(1808,opul_S,plus) + s_slack(1808,opul_S,minus) + s_slack(1808,pige_H,plus)
     
      + s_slack(1808,pige_H,minus) + s_slack(1808,pige_L,plus) + s_slack(1808,pige_L,minus) + s_slack(1808,pige_S,plus) + s_slack(1808,pige_S,minus) + s_slack(1808,pota_H,plus) + s_slack(1808,pota_H,minus) + s_slack(1808,pota_L,plus)
     
      + s_slack(1808,pota_L,minus) + s_slack(1808,pota_S,plus) + s_slack(1808,pota_S,minus) + s_slack(1808,rest_H,plus) + s_slack(1808,rest_H,minus) + s_slack(1808,rest_L,plus) + s_slack(1808,rest_L,minus) + s_slack(1808,rest_S,plus)
     
      + s_slack(1808,rest_S,minus) + s_slack(1808,rice_H,plus) + s_slack(1808,rice_H,minus) + s_slack(1808,rice_L,plus) + s_slack(1808,rice_L,minus) + s_slack(1808,rice_S,plus) + s_slack(1808,rice_S,minus) + s_slack(1808,sorg_L,plus)
     
      + s_slack(1808,sorg_L,minus) + s_slack(1808,sorg_S,plus) + s_slack(1808,sorg_S,minus) + s_slack(1808,soyb_L,plus) + s_slack(1808,soyb_L,minus) + s_slack(1808,soyb_S,plus) + s_slack(1808,soyb_S,minus) + s_slack(1808,sunf_L,plus)
     
      + s_slack(1808,sunf_L,minus) + s_slack(1808,temf_H,plus) + s_slack(1808,temf_H,minus) + s_slack(1808,temf_L,plus) + s_slack(1808,temf_L,minus) + s_slack(1808,temf_S,plus) + s_slack(1808,temf_S,minus) + s_slack(1808,toba_H,plus)
     
      + s_slack(1808,toba_H,minus) + s_slack(1808,toba_L,plus) + s_slack(1808,toba_L,minus) + s_slack(1808,trof_L,plus) + s_slack(1808,trof_L,minus) + s_slack(1808,trof_S,plus) + s_slack(1808,trof_S,minus) + s_slack(1808,vege_H,plus)
     
      + s_slack(1808,vege_H,minus) + s_slack(1808,vege_L,plus) + s_slack(1808,vege_L,minus) + s_slack(1808,vege_S,plus) + s_slack(1808,vege_S,minus) + s_slack(1809,rice_I,plus) + s_slack(1809,rice_I,minus) + s_slack(1809,sugc_I,plus)
     
      + s_slack(1809,sugc_I,minus) + s_slack(1809,whea_I,plus) + s_slack(1809,whea_I,minus) + s_slack(1809,bean_H,plus) + s_slack(1809,bean_H,minus) + s_slack(1809,bean_L,plus) + s_slack(1809,bean_L,minus) + s_slack(1809,bean_S,plus)
     
      + s_slack(1809,bean_S,minus) + s_slack(1809,cass_L,plus) + s_slack(1809,cass_L,minus) + s_slack(1809,cass_S,plus) + s_slack(1809,cass_S,minus) + s_slack(1809,chic_H,plus) + s_slack(1809,chic_H,minus) + s_slack(1809,chic_L,plus)
     
      + s_slack(1809,chic_L,minus) + s_slack(1809,chic_S,plus) + s_slack(1809,chic_S,minus) + s_slack(1809,coff_H,plus) + s_slack(1809,coff_H,minus) + s_slack(1809,coff_L,plus) + s_slack(1809,coff_L,minus) + s_slack(1809,cott_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 133
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1809,cott_L,minus) + s_slack(1809,cowp_H,plus) + s_slack(1809,cowp_H,minus) + s_slack(1809,cowp_L,plus) + s_slack(1809,cowp_L,minus) + s_slack(1809,cowp_S,plus) + s_slack(1809,cowp_S,minus) + s_slack(1809,grou_H,plus)
     
      + s_slack(1809,grou_H,minus) + s_slack(1809,grou_L,plus) + s_slack(1809,grou_L,minus) + s_slack(1809,grou_S,plus) + s_slack(1809,grou_S,minus) + s_slack(1809,lent_H,plus) + s_slack(1809,lent_H,minus) + s_slack(1809,lent_L,plus)
     
      + s_slack(1809,lent_L,minus) + s_slack(1809,lent_S,plus) + s_slack(1809,lent_S,minus) + s_slack(1809,maiz_H,plus) + s_slack(1809,maiz_H,minus) + s_slack(1809,maiz_L,plus) + s_slack(1809,maiz_L,minus) + s_slack(1809,maiz_S,plus)
     
      + s_slack(1809,maiz_S,minus) + s_slack(1809,mill_H,plus) + s_slack(1809,mill_H,minus) + s_slack(1809,mill_L,plus) + s_slack(1809,mill_L,minus) + s_slack(1809,mill_S,plus) + s_slack(1809,mill_S,minus) + s_slack(1809,ofib_L,plus)
     
      + s_slack(1809,ofib_L,minus) + s_slack(1809,ooil_L,plus) + s_slack(1809,ooil_L,minus) + s_slack(1809,opul_H,plus) + s_slack(1809,opul_H,minus) + s_slack(1809,opul_L,plus) + s_slack(1809,opul_L,minus) + s_slack(1809,opul_S,plus)
     
      + s_slack(1809,opul_S,minus) + s_slack(1809,pige_H,plus) + s_slack(1809,pige_H,minus) + s_slack(1809,pige_L,plus) + s_slack(1809,pige_L,minus) + s_slack(1809,pige_S,plus) + s_slack(1809,pige_S,minus) + s_slack(1809,pota_H,plus)
     
      + s_slack(1809,pota_H,minus) + s_slack(1809,pota_L,plus) + s_slack(1809,pota_L,minus) + s_slack(1809,pota_S,plus) + s_slack(1809,pota_S,minus) + s_slack(1809,rest_H,plus) + s_slack(1809,rest_H,minus) + s_slack(1809,rest_L,plus)
     
      + s_slack(1809,rest_L,minus) + s_slack(1809,rest_S,plus) + s_slack(1809,rest_S,minus) + s_slack(1809,rice_H,plus) + s_slack(1809,rice_H,minus) + s_slack(1809,rice_L,plus) + s_slack(1809,rice_L,minus) + s_slack(1809,rice_S,plus)
     
      + s_slack(1809,rice_S,minus) + s_slack(1809,sorg_L,plus) + s_slack(1809,sorg_L,minus) + s_slack(1809,sorg_S,plus) + s_slack(1809,sorg_S,minus) + s_slack(1809,soyb_L,plus) + s_slack(1809,soyb_L,minus) + s_slack(1809,soyb_S,plus)
     
      + s_slack(1809,soyb_S,minus) + s_slack(1809,sunf_L,plus) + s_slack(1809,sunf_L,minus) + s_slack(1809,temf_H,plus) + s_slack(1809,temf_H,minus) + s_slack(1809,temf_L,plus) + s_slack(1809,temf_L,minus) + s_slack(1809,temf_S,plus)
     
      + s_slack(1809,temf_S,minus) + s_slack(1809,toba_H,plus) + s_slack(1809,toba_H,minus) + s_slack(1809,toba_L,plus) + s_slack(1809,toba_L,minus) + s_slack(1809,trof_L,plus) + s_slack(1809,trof_L,minus) + s_slack(1809,trof_S,plus)
     
      + s_slack(1809,trof_S,minus) + s_slack(1809,vege_H,plus) + s_slack(1809,vege_H,minus) + s_slack(1809,vege_L,plus) + s_slack(1809,vege_L,minus) + s_slack(1809,vege_S,plus) + s_slack(1809,vege_S,minus) + s_slack(1810,rice_I,plus)
     
      + s_slack(1810,rice_I,minus) + s_slack(1810,sugc_I,plus) + s_slack(1810,sugc_I,minus) + s_slack(1810,whea_I,plus) + s_slack(1810,whea_I,minus) + s_slack(1810,bean_H,plus) + s_slack(1810,bean_H,minus) + s_slack(1810,bean_L,plus)
     
      + s_slack(1810,bean_L,minus) + s_slack(1810,bean_S,plus) + s_slack(1810,bean_S,minus) + s_slack(1810,cass_L,plus) + s_slack(1810,cass_L,minus) + s_slack(1810,cass_S,plus) + s_slack(1810,cass_S,minus) + s_slack(1810,chic_H,plus)
     
      + s_slack(1810,chic_H,minus) + s_slack(1810,chic_L,plus) + s_slack(1810,chic_L,minus) + s_slack(1810,chic_S,plus) + s_slack(1810,chic_S,minus) + s_slack(1810,coff_H,plus) + s_slack(1810,coff_H,minus) + s_slack(1810,coff_L,plus)
     
      + s_slack(1810,coff_L,minus) + s_slack(1810,cott_L,plus) + s_slack(1810,cott_L,minus) + s_slack(1810,cowp_H,plus) + s_slack(1810,cowp_H,minus) + s_slack(1810,cowp_L,plus) + s_slack(1810,cowp_L,minus) + s_slack(1810,cowp_S,plus)
     
      + s_slack(1810,cowp_S,minus) + s_slack(1810,grou_H,plus) + s_slack(1810,grou_H,minus) + s_slack(1810,grou_L,plus) + s_slack(1810,grou_L,minus) + s_slack(1810,grou_S,plus) + s_slack(1810,grou_S,minus) + s_slack(1810,lent_H,plus)
     
      + s_slack(1810,lent_H,minus) + s_slack(1810,lent_L,plus) + s_slack(1810,lent_L,minus) + s_slack(1810,lent_S,plus) + s_slack(1810,lent_S,minus) + s_slack(1810,maiz_H,plus) + s_slack(1810,maiz_H,minus) + s_slack(1810,maiz_L,plus)
     
      + s_slack(1810,maiz_L,minus) + s_slack(1810,maiz_S,plus) + s_slack(1810,maiz_S,minus) + s_slack(1810,mill_H,plus) + s_slack(1810,mill_H,minus) + s_slack(1810,mill_L,plus) + s_slack(1810,mill_L,minus) + s_slack(1810,mill_S,plus)
     
      + s_slack(1810,mill_S,minus) + s_slack(1810,ofib_L,plus) + s_slack(1810,ofib_L,minus) + s_slack(1810,ooil_L,plus) + s_slack(1810,ooil_L,minus) + s_slack(1810,opul_H,plus) + s_slack(1810,opul_H,minus) + s_slack(1810,opul_L,plus)
     
      + s_slack(1810,opul_L,minus) + s_slack(1810,opul_S,plus) + s_slack(1810,opul_S,minus) + s_slack(1810,pige_H,plus) + s_slack(1810,pige_H,minus) + s_slack(1810,pige_L,plus) + s_slack(1810,pige_L,minus) + s_slack(1810,pige_S,plus)
     
      + s_slack(1810,pige_S,minus) + s_slack(1810,pota_H,plus) + s_slack(1810,pota_H,minus) + s_slack(1810,pota_L,plus) + s_slack(1810,pota_L,minus) + s_slack(1810,pota_S,plus) + s_slack(1810,pota_S,minus) + s_slack(1810,rest_H,plus)
     
      + s_slack(1810,rest_H,minus) + s_slack(1810,rest_L,plus) + s_slack(1810,rest_L,minus) + s_slack(1810,rest_S,plus) + s_slack(1810,rest_S,minus) + s_slack(1810,rice_H,plus) + s_slack(1810,rice_H,minus) + s_slack(1810,rice_L,plus)
     
      + s_slack(1810,rice_L,minus) + s_slack(1810,rice_S,plus) + s_slack(1810,rice_S,minus) + s_slack(1810,sorg_L,plus) + s_slack(1810,sorg_L,minus) + s_slack(1810,sorg_S,plus) + s_slack(1810,sorg_S,minus) + s_slack(1810,soyb_L,plus)
     
      + s_slack(1810,soyb_L,minus) + s_slack(1810,soyb_S,plus) + s_slack(1810,soyb_S,minus) + s_slack(1810,sunf_L,plus) + s_slack(1810,sunf_L,minus) + s_slack(1810,temf_H,plus) + s_slack(1810,temf_H,minus) + s_slack(1810,temf_L,plus)
     
      + s_slack(1810,temf_L,minus) + s_slack(1810,temf_S,plus) + s_slack(1810,temf_S,minus) + s_slack(1810,toba_H,plus) + s_slack(1810,toba_H,minus) + s_slack(1810,toba_L,plus) + s_slack(1810,toba_L,minus) + s_slack(1810,trof_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 134
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1810,trof_L,minus) + s_slack(1810,trof_S,plus) + s_slack(1810,trof_S,minus) + s_slack(1810,vege_H,plus) + s_slack(1810,vege_H,minus) + s_slack(1810,vege_L,plus) + s_slack(1810,vege_L,minus) + s_slack(1810,vege_S,plus)
     
      + s_slack(1810,vege_S,minus) + s_slack(1811,rice_I,plus) + s_slack(1811,rice_I,minus) + s_slack(1811,sugc_I,plus) + s_slack(1811,sugc_I,minus) + s_slack(1811,whea_I,plus) + s_slack(1811,whea_I,minus) + s_slack(1811,bean_H,plus)
     
      + s_slack(1811,bean_H,minus) + s_slack(1811,bean_L,plus) + s_slack(1811,bean_L,minus) + s_slack(1811,bean_S,plus) + s_slack(1811,bean_S,minus) + s_slack(1811,cass_L,plus) + s_slack(1811,cass_L,minus) + s_slack(1811,cass_S,plus)
     
      + s_slack(1811,cass_S,minus) + s_slack(1811,chic_H,plus) + s_slack(1811,chic_H,minus) + s_slack(1811,chic_L,plus) + s_slack(1811,chic_L,minus) + s_slack(1811,chic_S,plus) + s_slack(1811,chic_S,minus) + s_slack(1811,coff_H,plus)
     
      + s_slack(1811,coff_H,minus) + s_slack(1811,coff_L,plus) + s_slack(1811,coff_L,minus) + s_slack(1811,cott_L,plus) + s_slack(1811,cott_L,minus) + s_slack(1811,cowp_H,plus) + s_slack(1811,cowp_H,minus) + s_slack(1811,cowp_L,plus)
     
      + s_slack(1811,cowp_L,minus) + s_slack(1811,cowp_S,plus) + s_slack(1811,cowp_S,minus) + s_slack(1811,grou_H,plus) + s_slack(1811,grou_H,minus) + s_slack(1811,grou_L,plus) + s_slack(1811,grou_L,minus) + s_slack(1811,grou_S,plus)
     
      + s_slack(1811,grou_S,minus) + s_slack(1811,lent_H,plus) + s_slack(1811,lent_H,minus) + s_slack(1811,lent_L,plus) + s_slack(1811,lent_L,minus) + s_slack(1811,lent_S,plus) + s_slack(1811,lent_S,minus) + s_slack(1811,maiz_H,plus)
     
      + s_slack(1811,maiz_H,minus) + s_slack(1811,maiz_L,plus) + s_slack(1811,maiz_L,minus) + s_slack(1811,maiz_S,plus) + s_slack(1811,maiz_S,minus) + s_slack(1811,mill_H,plus) + s_slack(1811,mill_H,minus) + s_slack(1811,mill_L,plus)
     
      + s_slack(1811,mill_L,minus) + s_slack(1811,mill_S,plus) + s_slack(1811,mill_S,minus) + s_slack(1811,ofib_L,plus) + s_slack(1811,ofib_L,minus) + s_slack(1811,ooil_L,plus) + s_slack(1811,ooil_L,minus) + s_slack(1811,opul_H,plus)
     
      + s_slack(1811,opul_H,minus) + s_slack(1811,opul_L,plus) + s_slack(1811,opul_L,minus) + s_slack(1811,opul_S,plus) + s_slack(1811,opul_S,minus) + s_slack(1811,pige_H,plus) + s_slack(1811,pige_H,minus) + s_slack(1811,pige_L,plus)
     
      + s_slack(1811,pige_L,minus) + s_slack(1811,pige_S,plus) + s_slack(1811,pige_S,minus) + s_slack(1811,pota_H,plus) + s_slack(1811,pota_H,minus) + s_slack(1811,pota_L,plus) + s_slack(1811,pota_L,minus) + s_slack(1811,pota_S,plus)
     
      + s_slack(1811,pota_S,minus) + s_slack(1811,rest_H,plus) + s_slack(1811,rest_H,minus) + s_slack(1811,rest_L,plus) + s_slack(1811,rest_L,minus) + s_slack(1811,rest_S,plus) + s_slack(1811,rest_S,minus) + s_slack(1811,rice_H,plus)
     
      + s_slack(1811,rice_H,minus) + s_slack(1811,rice_L,plus) + s_slack(1811,rice_L,minus) + s_slack(1811,rice_S,plus) + s_slack(1811,rice_S,minus) + s_slack(1811,sorg_L,plus) + s_slack(1811,sorg_L,minus) + s_slack(1811,sorg_S,plus)
     
      + s_slack(1811,sorg_S,minus) + s_slack(1811,soyb_L,plus) + s_slack(1811,soyb_L,minus) + s_slack(1811,soyb_S,plus) + s_slack(1811,soyb_S,minus) + s_slack(1811,sunf_L,plus) + s_slack(1811,sunf_L,minus) + s_slack(1811,temf_H,plus)
     
      + s_slack(1811,temf_H,minus) + s_slack(1811,temf_L,plus) + s_slack(1811,temf_L,minus) + s_slack(1811,temf_S,plus) + s_slack(1811,temf_S,minus) + s_slack(1811,toba_H,plus) + s_slack(1811,toba_H,minus) + s_slack(1811,toba_L,plus)
     
      + s_slack(1811,toba_L,minus) + s_slack(1811,trof_L,plus) + s_slack(1811,trof_L,minus) + s_slack(1811,trof_S,plus) + s_slack(1811,trof_S,minus) + s_slack(1811,vege_H,plus) + s_slack(1811,vege_H,minus) + s_slack(1811,vege_L,plus)
     
      + s_slack(1811,vege_L,minus) + s_slack(1811,vege_S,plus) + s_slack(1811,vege_S,minus) + s_slack(1839,rice_I,plus) + s_slack(1839,rice_I,minus) + s_slack(1839,sugc_I,plus) + s_slack(1839,sugc_I,minus) + s_slack(1839,whea_I,plus)
     
      + s_slack(1839,whea_I,minus) + s_slack(1839,bean_H,plus) + s_slack(1839,bean_H,minus) + s_slack(1839,bean_L,plus) + s_slack(1839,bean_L,minus) + s_slack(1839,bean_S,plus) + s_slack(1839,bean_S,minus) + s_slack(1839,cass_L,plus)
     
      + s_slack(1839,cass_L,minus) + s_slack(1839,cass_S,plus) + s_slack(1839,cass_S,minus) + s_slack(1839,chic_H,plus) + s_slack(1839,chic_H,minus) + s_slack(1839,chic_L,plus) + s_slack(1839,chic_L,minus) + s_slack(1839,chic_S,plus)
     
      + s_slack(1839,chic_S,minus) + s_slack(1839,coff_H,plus) + s_slack(1839,coff_H,minus) + s_slack(1839,coff_L,plus) + s_slack(1839,coff_L,minus) + s_slack(1839,cott_L,plus) + s_slack(1839,cott_L,minus) + s_slack(1839,cowp_H,plus)
     
      + s_slack(1839,cowp_H,minus) + s_slack(1839,cowp_L,plus) + s_slack(1839,cowp_L,minus) + s_slack(1839,cowp_S,plus) + s_slack(1839,cowp_S,minus) + s_slack(1839,grou_H,plus) + s_slack(1839,grou_H,minus) + s_slack(1839,grou_L,plus)
     
      + s_slack(1839,grou_L,minus) + s_slack(1839,grou_S,plus) + s_slack(1839,grou_S,minus) + s_slack(1839,lent_H,plus) + s_slack(1839,lent_H,minus) + s_slack(1839,lent_L,plus) + s_slack(1839,lent_L,minus) + s_slack(1839,lent_S,plus)
     
      + s_slack(1839,lent_S,minus) + s_slack(1839,maiz_H,plus) + s_slack(1839,maiz_H,minus) + s_slack(1839,maiz_L,plus) + s_slack(1839,maiz_L,minus) + s_slack(1839,maiz_S,plus) + s_slack(1839,maiz_S,minus) + s_slack(1839,mill_H,plus)
     
      + s_slack(1839,mill_H,minus) + s_slack(1839,mill_L,plus) + s_slack(1839,mill_L,minus) + s_slack(1839,mill_S,plus) + s_slack(1839,mill_S,minus) + s_slack(1839,ofib_L,plus) + s_slack(1839,ofib_L,minus) + s_slack(1839,ooil_L,plus)
     
      + s_slack(1839,ooil_L,minus) + s_slack(1839,opul_H,plus) + s_slack(1839,opul_H,minus) + s_slack(1839,opul_L,plus) + s_slack(1839,opul_L,minus) + s_slack(1839,opul_S,plus) + s_slack(1839,opul_S,minus) + s_slack(1839,pige_H,plus)
     
      + s_slack(1839,pige_H,minus) + s_slack(1839,pige_L,plus) + s_slack(1839,pige_L,minus) + s_slack(1839,pige_S,plus) + s_slack(1839,pige_S,minus) + s_slack(1839,pota_H,plus) + s_slack(1839,pota_H,minus) + s_slack(1839,pota_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 135
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1839,pota_L,minus) + s_slack(1839,pota_S,plus) + s_slack(1839,pota_S,minus) + s_slack(1839,rest_H,plus) + s_slack(1839,rest_H,minus) + s_slack(1839,rest_L,plus) + s_slack(1839,rest_L,minus) + s_slack(1839,rest_S,plus)
     
      + s_slack(1839,rest_S,minus) + s_slack(1839,rice_H,plus) + s_slack(1839,rice_H,minus) + s_slack(1839,rice_L,plus) + s_slack(1839,rice_L,minus) + s_slack(1839,rice_S,plus) + s_slack(1839,rice_S,minus) + s_slack(1839,sorg_L,plus)
     
      + s_slack(1839,sorg_L,minus) + s_slack(1839,sorg_S,plus) + s_slack(1839,sorg_S,minus) + s_slack(1839,soyb_L,plus) + s_slack(1839,soyb_L,minus) + s_slack(1839,soyb_S,plus) + s_slack(1839,soyb_S,minus) + s_slack(1839,sunf_L,plus)
     
      + s_slack(1839,sunf_L,minus) + s_slack(1839,temf_H,plus) + s_slack(1839,temf_H,minus) + s_slack(1839,temf_L,plus) + s_slack(1839,temf_L,minus) + s_slack(1839,temf_S,plus) + s_slack(1839,temf_S,minus) + s_slack(1839,toba_H,plus)
     
      + s_slack(1839,toba_H,minus) + s_slack(1839,toba_L,plus) + s_slack(1839,toba_L,minus) + s_slack(1839,trof_L,plus) + s_slack(1839,trof_L,minus) + s_slack(1839,trof_S,plus) + s_slack(1839,trof_S,minus) + s_slack(1839,vege_H,plus)
     
      + s_slack(1839,vege_H,minus) + s_slack(1839,vege_L,plus) + s_slack(1839,vege_L,minus) + s_slack(1839,vege_S,plus) + s_slack(1839,vege_S,minus) + s_slack(1842,rice_I,plus) + s_slack(1842,rice_I,minus) + s_slack(1842,sugc_I,plus)
     
      + s_slack(1842,sugc_I,minus) + s_slack(1842,whea_I,plus) + s_slack(1842,whea_I,minus) + s_slack(1842,bean_H,plus) + s_slack(1842,bean_H,minus) + s_slack(1842,bean_L,plus) + s_slack(1842,bean_L,minus) + s_slack(1842,bean_S,plus)
     
      + s_slack(1842,bean_S,minus) + s_slack(1842,cass_L,plus) + s_slack(1842,cass_L,minus) + s_slack(1842,cass_S,plus) + s_slack(1842,cass_S,minus) + s_slack(1842,chic_H,plus) + s_slack(1842,chic_H,minus) + s_slack(1842,chic_L,plus)
     
      + s_slack(1842,chic_L,minus) + s_slack(1842,chic_S,plus) + s_slack(1842,chic_S,minus) + s_slack(1842,coff_H,plus) + s_slack(1842,coff_H,minus) + s_slack(1842,coff_L,plus) + s_slack(1842,coff_L,minus) + s_slack(1842,cott_L,plus)
     
      + s_slack(1842,cott_L,minus) + s_slack(1842,cowp_H,plus) + s_slack(1842,cowp_H,minus) + s_slack(1842,cowp_L,plus) + s_slack(1842,cowp_L,minus) + s_slack(1842,cowp_S,plus) + s_slack(1842,cowp_S,minus) + s_slack(1842,grou_H,plus)
     
      + s_slack(1842,grou_H,minus) + s_slack(1842,grou_L,plus) + s_slack(1842,grou_L,minus) + s_slack(1842,grou_S,plus) + s_slack(1842,grou_S,minus) + s_slack(1842,lent_H,plus) + s_slack(1842,lent_H,minus) + s_slack(1842,lent_L,plus)
     
      + s_slack(1842,lent_L,minus) + s_slack(1842,lent_S,plus) + s_slack(1842,lent_S,minus) + s_slack(1842,maiz_H,plus) + s_slack(1842,maiz_H,minus) + s_slack(1842,maiz_L,plus) + s_slack(1842,maiz_L,minus) + s_slack(1842,maiz_S,plus)
     
      + s_slack(1842,maiz_S,minus) + s_slack(1842,mill_H,plus) + s_slack(1842,mill_H,minus) + s_slack(1842,mill_L,plus) + s_slack(1842,mill_L,minus) + s_slack(1842,mill_S,plus) + s_slack(1842,mill_S,minus) + s_slack(1842,ofib_L,plus)
     
      + s_slack(1842,ofib_L,minus) + s_slack(1842,ooil_L,plus) + s_slack(1842,ooil_L,minus) + s_slack(1842,opul_H,plus) + s_slack(1842,opul_H,minus) + s_slack(1842,opul_L,plus) + s_slack(1842,opul_L,minus) + s_slack(1842,opul_S,plus)
     
      + s_slack(1842,opul_S,minus) + s_slack(1842,pige_H,plus) + s_slack(1842,pige_H,minus) + s_slack(1842,pige_L,plus) + s_slack(1842,pige_L,minus) + s_slack(1842,pige_S,plus) + s_slack(1842,pige_S,minus) + s_slack(1842,pota_H,plus)
     
      + s_slack(1842,pota_H,minus) + s_slack(1842,pota_L,plus) + s_slack(1842,pota_L,minus) + s_slack(1842,pota_S,plus) + s_slack(1842,pota_S,minus) + s_slack(1842,rest_H,plus) + s_slack(1842,rest_H,minus) + s_slack(1842,rest_L,plus)
     
      + s_slack(1842,rest_L,minus) + s_slack(1842,rest_S,plus) + s_slack(1842,rest_S,minus) + s_slack(1842,rice_H,plus) + s_slack(1842,rice_H,minus) + s_slack(1842,rice_L,plus) + s_slack(1842,rice_L,minus) + s_slack(1842,rice_S,plus)
     
      + s_slack(1842,rice_S,minus) + s_slack(1842,sorg_L,plus) + s_slack(1842,sorg_L,minus) + s_slack(1842,sorg_S,plus) + s_slack(1842,sorg_S,minus) + s_slack(1842,soyb_L,plus) + s_slack(1842,soyb_L,minus) + s_slack(1842,soyb_S,plus)
     
      + s_slack(1842,soyb_S,minus) + s_slack(1842,sunf_L,plus) + s_slack(1842,sunf_L,minus) + s_slack(1842,temf_H,plus) + s_slack(1842,temf_H,minus) + s_slack(1842,temf_L,plus) + s_slack(1842,temf_L,minus) + s_slack(1842,temf_S,plus)
     
      + s_slack(1842,temf_S,minus) + s_slack(1842,toba_H,plus) + s_slack(1842,toba_H,minus) + s_slack(1842,toba_L,plus) + s_slack(1842,toba_L,minus) + s_slack(1842,trof_L,plus) + s_slack(1842,trof_L,minus) + s_slack(1842,trof_S,plus)
     
      + s_slack(1842,trof_S,minus) + s_slack(1842,vege_H,plus) + s_slack(1842,vege_H,minus) + s_slack(1842,vege_L,plus) + s_slack(1842,vege_L,minus) + s_slack(1842,vege_S,plus) + s_slack(1842,vege_S,minus) + s_slack(1845,rice_I,plus)
     
      + s_slack(1845,rice_I,minus) + s_slack(1845,sugc_I,plus) + s_slack(1845,sugc_I,minus) + s_slack(1845,whea_I,plus) + s_slack(1845,whea_I,minus) + s_slack(1845,bean_H,plus) + s_slack(1845,bean_H,minus) + s_slack(1845,bean_L,plus)
     
      + s_slack(1845,bean_L,minus) + s_slack(1845,bean_S,plus) + s_slack(1845,bean_S,minus) + s_slack(1845,cass_L,plus) + s_slack(1845,cass_L,minus) + s_slack(1845,cass_S,plus) + s_slack(1845,cass_S,minus) + s_slack(1845,chic_H,plus)
     
      + s_slack(1845,chic_H,minus) + s_slack(1845,chic_L,plus) + s_slack(1845,chic_L,minus) + s_slack(1845,chic_S,plus) + s_slack(1845,chic_S,minus) + s_slack(1845,coff_H,plus) + s_slack(1845,coff_H,minus) + s_slack(1845,coff_L,plus)
     
      + s_slack(1845,coff_L,minus) + s_slack(1845,cott_L,plus) + s_slack(1845,cott_L,minus) + s_slack(1845,cowp_H,plus) + s_slack(1845,cowp_H,minus) + s_slack(1845,cowp_L,plus) + s_slack(1845,cowp_L,minus) + s_slack(1845,cowp_S,plus)
     
      + s_slack(1845,cowp_S,minus) + s_slack(1845,grou_H,plus) + s_slack(1845,grou_H,minus) + s_slack(1845,grou_L,plus) + s_slack(1845,grou_L,minus) + s_slack(1845,grou_S,plus) + s_slack(1845,grou_S,minus) + s_slack(1845,lent_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 136
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1845,lent_H,minus) + s_slack(1845,lent_L,plus) + s_slack(1845,lent_L,minus) + s_slack(1845,lent_S,plus) + s_slack(1845,lent_S,minus) + s_slack(1845,maiz_H,plus) + s_slack(1845,maiz_H,minus) + s_slack(1845,maiz_L,plus)
     
      + s_slack(1845,maiz_L,minus) + s_slack(1845,maiz_S,plus) + s_slack(1845,maiz_S,minus) + s_slack(1845,mill_H,plus) + s_slack(1845,mill_H,minus) + s_slack(1845,mill_L,plus) + s_slack(1845,mill_L,minus) + s_slack(1845,mill_S,plus)
     
      + s_slack(1845,mill_S,minus) + s_slack(1845,ofib_L,plus) + s_slack(1845,ofib_L,minus) + s_slack(1845,ooil_L,plus) + s_slack(1845,ooil_L,minus) + s_slack(1845,opul_H,plus) + s_slack(1845,opul_H,minus) + s_slack(1845,opul_L,plus)
     
      + s_slack(1845,opul_L,minus) + s_slack(1845,opul_S,plus) + s_slack(1845,opul_S,minus) + s_slack(1845,pige_H,plus) + s_slack(1845,pige_H,minus) + s_slack(1845,pige_L,plus) + s_slack(1845,pige_L,minus) + s_slack(1845,pige_S,plus)
     
      + s_slack(1845,pige_S,minus) + s_slack(1845,pota_H,plus) + s_slack(1845,pota_H,minus) + s_slack(1845,pota_L,plus) + s_slack(1845,pota_L,minus) + s_slack(1845,pota_S,plus) + s_slack(1845,pota_S,minus) + s_slack(1845,rest_H,plus)
     
      + s_slack(1845,rest_H,minus) + s_slack(1845,rest_L,plus) + s_slack(1845,rest_L,minus) + s_slack(1845,rest_S,plus) + s_slack(1845,rest_S,minus) + s_slack(1845,rice_H,plus) + s_slack(1845,rice_H,minus) + s_slack(1845,rice_L,plus)
     
      + s_slack(1845,rice_L,minus) + s_slack(1845,rice_S,plus) + s_slack(1845,rice_S,minus) + s_slack(1845,sorg_L,plus) + s_slack(1845,sorg_L,minus) + s_slack(1845,sorg_S,plus) + s_slack(1845,sorg_S,minus) + s_slack(1845,soyb_L,plus)
     
      + s_slack(1845,soyb_L,minus) + s_slack(1845,soyb_S,plus) + s_slack(1845,soyb_S,minus) + s_slack(1845,sunf_L,plus) + s_slack(1845,sunf_L,minus) + s_slack(1845,temf_H,plus) + s_slack(1845,temf_H,minus) + s_slack(1845,temf_L,plus)
     
      + s_slack(1845,temf_L,minus) + s_slack(1845,temf_S,plus) + s_slack(1845,temf_S,minus) + s_slack(1845,toba_H,plus) + s_slack(1845,toba_H,minus) + s_slack(1845,toba_L,plus) + s_slack(1845,toba_L,minus) + s_slack(1845,trof_L,plus)
     
      + s_slack(1845,trof_L,minus) + s_slack(1845,trof_S,plus) + s_slack(1845,trof_S,minus) + s_slack(1845,vege_H,plus) + s_slack(1845,vege_H,minus) + s_slack(1845,vege_L,plus) + s_slack(1845,vege_L,minus) + s_slack(1845,vege_S,plus)
     
      + s_slack(1845,vege_S,minus) + s_slack(1846,rice_I,plus) + s_slack(1846,rice_I,minus) + s_slack(1846,sugc_I,plus) + s_slack(1846,sugc_I,minus) + s_slack(1846,whea_I,plus) + s_slack(1846,whea_I,minus) + s_slack(1846,bean_H,plus)
     
      + s_slack(1846,bean_H,minus) + s_slack(1846,bean_L,plus) + s_slack(1846,bean_L,minus) + s_slack(1846,bean_S,plus) + s_slack(1846,bean_S,minus) + s_slack(1846,cass_L,plus) + s_slack(1846,cass_L,minus) + s_slack(1846,cass_S,plus)
     
      + s_slack(1846,cass_S,minus) + s_slack(1846,chic_H,plus) + s_slack(1846,chic_H,minus) + s_slack(1846,chic_L,plus) + s_slack(1846,chic_L,minus) + s_slack(1846,chic_S,plus) + s_slack(1846,chic_S,minus) + s_slack(1846,coff_H,plus)
     
      + s_slack(1846,coff_H,minus) + s_slack(1846,coff_L,plus) + s_slack(1846,coff_L,minus) + s_slack(1846,cott_L,plus) + s_slack(1846,cott_L,minus) + s_slack(1846,cowp_H,plus) + s_slack(1846,cowp_H,minus) + s_slack(1846,cowp_L,plus)
     
      + s_slack(1846,cowp_L,minus) + s_slack(1846,cowp_S,plus) + s_slack(1846,cowp_S,minus) + s_slack(1846,grou_H,plus) + s_slack(1846,grou_H,minus) + s_slack(1846,grou_L,plus) + s_slack(1846,grou_L,minus) + s_slack(1846,grou_S,plus)
     
      + s_slack(1846,grou_S,minus) + s_slack(1846,lent_H,plus) + s_slack(1846,lent_H,minus) + s_slack(1846,lent_L,plus) + s_slack(1846,lent_L,minus) + s_slack(1846,lent_S,plus) + s_slack(1846,lent_S,minus) + s_slack(1846,maiz_H,plus)
     
      + s_slack(1846,maiz_H,minus) + s_slack(1846,maiz_L,plus) + s_slack(1846,maiz_L,minus) + s_slack(1846,maiz_S,plus) + s_slack(1846,maiz_S,minus) + s_slack(1846,mill_H,plus) + s_slack(1846,mill_H,minus) + s_slack(1846,mill_L,plus)
     
      + s_slack(1846,mill_L,minus) + s_slack(1846,mill_S,plus) + s_slack(1846,mill_S,minus) + s_slack(1846,ofib_L,plus) + s_slack(1846,ofib_L,minus) + s_slack(1846,ooil_L,plus) + s_slack(1846,ooil_L,minus) + s_slack(1846,opul_H,plus)
     
      + s_slack(1846,opul_H,minus) + s_slack(1846,opul_L,plus) + s_slack(1846,opul_L,minus) + s_slack(1846,opul_S,plus) + s_slack(1846,opul_S,minus) + s_slack(1846,pige_H,plus) + s_slack(1846,pige_H,minus) + s_slack(1846,pige_L,plus)
     
      + s_slack(1846,pige_L,minus) + s_slack(1846,pige_S,plus) + s_slack(1846,pige_S,minus) + s_slack(1846,pota_H,plus) + s_slack(1846,pota_H,minus) + s_slack(1846,pota_L,plus) + s_slack(1846,pota_L,minus) + s_slack(1846,pota_S,plus)
     
      + s_slack(1846,pota_S,minus) + s_slack(1846,rest_H,plus) + s_slack(1846,rest_H,minus) + s_slack(1846,rest_L,plus) + s_slack(1846,rest_L,minus) + s_slack(1846,rest_S,plus) + s_slack(1846,rest_S,minus) + s_slack(1846,rice_H,plus)
     
      + s_slack(1846,rice_H,minus) + s_slack(1846,rice_L,plus) + s_slack(1846,rice_L,minus) + s_slack(1846,rice_S,plus) + s_slack(1846,rice_S,minus) + s_slack(1846,sorg_L,plus) + s_slack(1846,sorg_L,minus) + s_slack(1846,sorg_S,plus)
     
      + s_slack(1846,sorg_S,minus) + s_slack(1846,soyb_L,plus) + s_slack(1846,soyb_L,minus) + s_slack(1846,soyb_S,plus) + s_slack(1846,soyb_S,minus) + s_slack(1846,sunf_L,plus) + s_slack(1846,sunf_L,minus) + s_slack(1846,temf_H,plus)
     
      + s_slack(1846,temf_H,minus) + s_slack(1846,temf_L,plus) + s_slack(1846,temf_L,minus) + s_slack(1846,temf_S,plus) + s_slack(1846,temf_S,minus) + s_slack(1846,toba_H,plus) + s_slack(1846,toba_H,minus) + s_slack(1846,toba_L,plus)
     
      + s_slack(1846,toba_L,minus) + s_slack(1846,trof_L,plus) + s_slack(1846,trof_L,minus) + s_slack(1846,trof_S,plus) + s_slack(1846,trof_S,minus) + s_slack(1846,vege_H,plus) + s_slack(1846,vege_H,minus) + s_slack(1846,vege_L,plus)
     
      + s_slack(1846,vege_L,minus) + s_slack(1846,vege_S,plus) + s_slack(1846,vege_S,minus) + s_slack(1847,rice_I,plus) + s_slack(1847,rice_I,minus) + s_slack(1847,sugc_I,plus) + s_slack(1847,sugc_I,minus) + s_slack(1847,whea_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 137
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1847,whea_I,minus) + s_slack(1847,bean_H,plus) + s_slack(1847,bean_H,minus) + s_slack(1847,bean_L,plus) + s_slack(1847,bean_L,minus) + s_slack(1847,bean_S,plus) + s_slack(1847,bean_S,minus) + s_slack(1847,cass_L,plus)
     
      + s_slack(1847,cass_L,minus) + s_slack(1847,cass_S,plus) + s_slack(1847,cass_S,minus) + s_slack(1847,chic_H,plus) + s_slack(1847,chic_H,minus) + s_slack(1847,chic_L,plus) + s_slack(1847,chic_L,minus) + s_slack(1847,chic_S,plus)
     
      + s_slack(1847,chic_S,minus) + s_slack(1847,coff_H,plus) + s_slack(1847,coff_H,minus) + s_slack(1847,coff_L,plus) + s_slack(1847,coff_L,minus) + s_slack(1847,cott_L,plus) + s_slack(1847,cott_L,minus) + s_slack(1847,cowp_H,plus)
     
      + s_slack(1847,cowp_H,minus) + s_slack(1847,cowp_L,plus) + s_slack(1847,cowp_L,minus) + s_slack(1847,cowp_S,plus) + s_slack(1847,cowp_S,minus) + s_slack(1847,grou_H,plus) + s_slack(1847,grou_H,minus) + s_slack(1847,grou_L,plus)
     
      + s_slack(1847,grou_L,minus) + s_slack(1847,grou_S,plus) + s_slack(1847,grou_S,minus) + s_slack(1847,lent_H,plus) + s_slack(1847,lent_H,minus) + s_slack(1847,lent_L,plus) + s_slack(1847,lent_L,minus) + s_slack(1847,lent_S,plus)
     
      + s_slack(1847,lent_S,minus) + s_slack(1847,maiz_H,plus) + s_slack(1847,maiz_H,minus) + s_slack(1847,maiz_L,plus) + s_slack(1847,maiz_L,minus) + s_slack(1847,maiz_S,plus) + s_slack(1847,maiz_S,minus) + s_slack(1847,mill_H,plus)
     
      + s_slack(1847,mill_H,minus) + s_slack(1847,mill_L,plus) + s_slack(1847,mill_L,minus) + s_slack(1847,mill_S,plus) + s_slack(1847,mill_S,minus) + s_slack(1847,ofib_L,plus) + s_slack(1847,ofib_L,minus) + s_slack(1847,ooil_L,plus)
     
      + s_slack(1847,ooil_L,minus) + s_slack(1847,opul_H,plus) + s_slack(1847,opul_H,minus) + s_slack(1847,opul_L,plus) + s_slack(1847,opul_L,minus) + s_slack(1847,opul_S,plus) + s_slack(1847,opul_S,minus) + s_slack(1847,pige_H,plus)
     
      + s_slack(1847,pige_H,minus) + s_slack(1847,pige_L,plus) + s_slack(1847,pige_L,minus) + s_slack(1847,pige_S,plus) + s_slack(1847,pige_S,minus) + s_slack(1847,pota_H,plus) + s_slack(1847,pota_H,minus) + s_slack(1847,pota_L,plus)
     
      + s_slack(1847,pota_L,minus) + s_slack(1847,pota_S,plus) + s_slack(1847,pota_S,minus) + s_slack(1847,rest_H,plus) + s_slack(1847,rest_H,minus) + s_slack(1847,rest_L,plus) + s_slack(1847,rest_L,minus) + s_slack(1847,rest_S,plus)
     
      + s_slack(1847,rest_S,minus) + s_slack(1847,rice_H,plus) + s_slack(1847,rice_H,minus) + s_slack(1847,rice_L,plus) + s_slack(1847,rice_L,minus) + s_slack(1847,rice_S,plus) + s_slack(1847,rice_S,minus) + s_slack(1847,sorg_L,plus)
     
      + s_slack(1847,sorg_L,minus) + s_slack(1847,sorg_S,plus) + s_slack(1847,sorg_S,minus) + s_slack(1847,soyb_L,plus) + s_slack(1847,soyb_L,minus) + s_slack(1847,soyb_S,plus) + s_slack(1847,soyb_S,minus) + s_slack(1847,sunf_L,plus)
     
      + s_slack(1847,sunf_L,minus) + s_slack(1847,temf_H,plus) + s_slack(1847,temf_H,minus) + s_slack(1847,temf_L,plus) + s_slack(1847,temf_L,minus) + s_slack(1847,temf_S,plus) + s_slack(1847,temf_S,minus) + s_slack(1847,toba_H,plus)
     
      + s_slack(1847,toba_H,minus) + s_slack(1847,toba_L,plus) + s_slack(1847,toba_L,minus) + s_slack(1847,trof_L,plus) + s_slack(1847,trof_L,minus) + s_slack(1847,trof_S,plus) + s_slack(1847,trof_S,minus) + s_slack(1847,vege_H,plus)
     
      + s_slack(1847,vege_H,minus) + s_slack(1847,vege_L,plus) + s_slack(1847,vege_L,minus) + s_slack(1847,vege_S,plus) + s_slack(1847,vege_S,minus) + s_slack(1848,rice_I,plus) + s_slack(1848,rice_I,minus) + s_slack(1848,sugc_I,plus)
     
      + s_slack(1848,sugc_I,minus) + s_slack(1848,whea_I,plus) + s_slack(1848,whea_I,minus) + s_slack(1848,bean_H,plus) + s_slack(1848,bean_H,minus) + s_slack(1848,bean_L,plus) + s_slack(1848,bean_L,minus) + s_slack(1848,bean_S,plus)
     
      + s_slack(1848,bean_S,minus) + s_slack(1848,cass_L,plus) + s_slack(1848,cass_L,minus) + s_slack(1848,cass_S,plus) + s_slack(1848,cass_S,minus) + s_slack(1848,chic_H,plus) + s_slack(1848,chic_H,minus) + s_slack(1848,chic_L,plus)
     
      + s_slack(1848,chic_L,minus) + s_slack(1848,chic_S,plus) + s_slack(1848,chic_S,minus) + s_slack(1848,coff_H,plus) + s_slack(1848,coff_H,minus) + s_slack(1848,coff_L,plus) + s_slack(1848,coff_L,minus) + s_slack(1848,cott_L,plus)
     
      + s_slack(1848,cott_L,minus) + s_slack(1848,cowp_H,plus) + s_slack(1848,cowp_H,minus) + s_slack(1848,cowp_L,plus) + s_slack(1848,cowp_L,minus) + s_slack(1848,cowp_S,plus) + s_slack(1848,cowp_S,minus) + s_slack(1848,grou_H,plus)
     
      + s_slack(1848,grou_H,minus) + s_slack(1848,grou_L,plus) + s_slack(1848,grou_L,minus) + s_slack(1848,grou_S,plus) + s_slack(1848,grou_S,minus) + s_slack(1848,lent_H,plus) + s_slack(1848,lent_H,minus) + s_slack(1848,lent_L,plus)
     
      + s_slack(1848,lent_L,minus) + s_slack(1848,lent_S,plus) + s_slack(1848,lent_S,minus) + s_slack(1848,maiz_H,plus) + s_slack(1848,maiz_H,minus) + s_slack(1848,maiz_L,plus) + s_slack(1848,maiz_L,minus) + s_slack(1848,maiz_S,plus)
     
      + s_slack(1848,maiz_S,minus) + s_slack(1848,mill_H,plus) + s_slack(1848,mill_H,minus) + s_slack(1848,mill_L,plus) + s_slack(1848,mill_L,minus) + s_slack(1848,mill_S,plus) + s_slack(1848,mill_S,minus) + s_slack(1848,ofib_L,plus)
     
      + s_slack(1848,ofib_L,minus) + s_slack(1848,ooil_L,plus) + s_slack(1848,ooil_L,minus) + s_slack(1848,opul_H,plus) + s_slack(1848,opul_H,minus) + s_slack(1848,opul_L,plus) + s_slack(1848,opul_L,minus) + s_slack(1848,opul_S,plus)
     
      + s_slack(1848,opul_S,minus) + s_slack(1848,pige_H,plus) + s_slack(1848,pige_H,minus) + s_slack(1848,pige_L,plus) + s_slack(1848,pige_L,minus) + s_slack(1848,pige_S,plus) + s_slack(1848,pige_S,minus) + s_slack(1848,pota_H,plus)
     
      + s_slack(1848,pota_H,minus) + s_slack(1848,pota_L,plus) + s_slack(1848,pota_L,minus) + s_slack(1848,pota_S,plus) + s_slack(1848,pota_S,minus) + s_slack(1848,rest_H,plus) + s_slack(1848,rest_H,minus) + s_slack(1848,rest_L,plus)
     
      + s_slack(1848,rest_L,minus) + s_slack(1848,rest_S,plus) + s_slack(1848,rest_S,minus) + s_slack(1848,rice_H,plus) + s_slack(1848,rice_H,minus) + s_slack(1848,rice_L,plus) + s_slack(1848,rice_L,minus) + s_slack(1848,rice_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 138
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1848,rice_S,minus) + s_slack(1848,sorg_L,plus) + s_slack(1848,sorg_L,minus) + s_slack(1848,sorg_S,plus) + s_slack(1848,sorg_S,minus) + s_slack(1848,soyb_L,plus) + s_slack(1848,soyb_L,minus) + s_slack(1848,soyb_S,plus)
     
      + s_slack(1848,soyb_S,minus) + s_slack(1848,sunf_L,plus) + s_slack(1848,sunf_L,minus) + s_slack(1848,temf_H,plus) + s_slack(1848,temf_H,minus) + s_slack(1848,temf_L,plus) + s_slack(1848,temf_L,minus) + s_slack(1848,temf_S,plus)
     
      + s_slack(1848,temf_S,minus) + s_slack(1848,toba_H,plus) + s_slack(1848,toba_H,minus) + s_slack(1848,toba_L,plus) + s_slack(1848,toba_L,minus) + s_slack(1848,trof_L,plus) + s_slack(1848,trof_L,minus) + s_slack(1848,trof_S,plus)
     
      + s_slack(1848,trof_S,minus) + s_slack(1848,vege_H,plus) + s_slack(1848,vege_H,minus) + s_slack(1848,vege_L,plus) + s_slack(1848,vege_L,minus) + s_slack(1848,vege_S,plus) + s_slack(1848,vege_S,minus) + s_slack(1849,rice_I,plus)
     
      + s_slack(1849,rice_I,minus) + s_slack(1849,sugc_I,plus) + s_slack(1849,sugc_I,minus) + s_slack(1849,whea_I,plus) + s_slack(1849,whea_I,minus) + s_slack(1849,bean_H,plus) + s_slack(1849,bean_H,minus) + s_slack(1849,bean_L,plus)
     
      + s_slack(1849,bean_L,minus) + s_slack(1849,bean_S,plus) + s_slack(1849,bean_S,minus) + s_slack(1849,cass_L,plus) + s_slack(1849,cass_L,minus) + s_slack(1849,cass_S,plus) + s_slack(1849,cass_S,minus) + s_slack(1849,chic_H,plus)
     
      + s_slack(1849,chic_H,minus) + s_slack(1849,chic_L,plus) + s_slack(1849,chic_L,minus) + s_slack(1849,chic_S,plus) + s_slack(1849,chic_S,minus) + s_slack(1849,coff_H,plus) + s_slack(1849,coff_H,minus) + s_slack(1849,coff_L,plus)
     
      + s_slack(1849,coff_L,minus) + s_slack(1849,cott_L,plus) + s_slack(1849,cott_L,minus) + s_slack(1849,cowp_H,plus) + s_slack(1849,cowp_H,minus) + s_slack(1849,cowp_L,plus) + s_slack(1849,cowp_L,minus) + s_slack(1849,cowp_S,plus)
     
      + s_slack(1849,cowp_S,minus) + s_slack(1849,grou_H,plus) + s_slack(1849,grou_H,minus) + s_slack(1849,grou_L,plus) + s_slack(1849,grou_L,minus) + s_slack(1849,grou_S,plus) + s_slack(1849,grou_S,minus) + s_slack(1849,lent_H,plus)
     
      + s_slack(1849,lent_H,minus) + s_slack(1849,lent_L,plus) + s_slack(1849,lent_L,minus) + s_slack(1849,lent_S,plus) + s_slack(1849,lent_S,minus) + s_slack(1849,maiz_H,plus) + s_slack(1849,maiz_H,minus) + s_slack(1849,maiz_L,plus)
     
      + s_slack(1849,maiz_L,minus) + s_slack(1849,maiz_S,plus) + s_slack(1849,maiz_S,minus) + s_slack(1849,mill_H,plus) + s_slack(1849,mill_H,minus) + s_slack(1849,mill_L,plus) + s_slack(1849,mill_L,minus) + s_slack(1849,mill_S,plus)
     
      + s_slack(1849,mill_S,minus) + s_slack(1849,ofib_L,plus) + s_slack(1849,ofib_L,minus) + s_slack(1849,ooil_L,plus) + s_slack(1849,ooil_L,minus) + s_slack(1849,opul_H,plus) + s_slack(1849,opul_H,minus) + s_slack(1849,opul_L,plus)
     
      + s_slack(1849,opul_L,minus) + s_slack(1849,opul_S,plus) + s_slack(1849,opul_S,minus) + s_slack(1849,pige_H,plus) + s_slack(1849,pige_H,minus) + s_slack(1849,pige_L,plus) + s_slack(1849,pige_L,minus) + s_slack(1849,pige_S,plus)
     
      + s_slack(1849,pige_S,minus) + s_slack(1849,pota_H,plus) + s_slack(1849,pota_H,minus) + s_slack(1849,pota_L,plus) + s_slack(1849,pota_L,minus) + s_slack(1849,pota_S,plus) + s_slack(1849,pota_S,minus) + s_slack(1849,rest_H,plus)
     
      + s_slack(1849,rest_H,minus) + s_slack(1849,rest_L,plus) + s_slack(1849,rest_L,minus) + s_slack(1849,rest_S,plus) + s_slack(1849,rest_S,minus) + s_slack(1849,rice_H,plus) + s_slack(1849,rice_H,minus) + s_slack(1849,rice_L,plus)
     
      + s_slack(1849,rice_L,minus) + s_slack(1849,rice_S,plus) + s_slack(1849,rice_S,minus) + s_slack(1849,sorg_L,plus) + s_slack(1849,sorg_L,minus) + s_slack(1849,sorg_S,plus) + s_slack(1849,sorg_S,minus) + s_slack(1849,soyb_L,plus)
     
      + s_slack(1849,soyb_L,minus) + s_slack(1849,soyb_S,plus) + s_slack(1849,soyb_S,minus) + s_slack(1849,sunf_L,plus) + s_slack(1849,sunf_L,minus) + s_slack(1849,temf_H,plus) + s_slack(1849,temf_H,minus) + s_slack(1849,temf_L,plus)
     
      + s_slack(1849,temf_L,minus) + s_slack(1849,temf_S,plus) + s_slack(1849,temf_S,minus) + s_slack(1849,toba_H,plus) + s_slack(1849,toba_H,minus) + s_slack(1849,toba_L,plus) + s_slack(1849,toba_L,minus) + s_slack(1849,trof_L,plus)
     
      + s_slack(1849,trof_L,minus) + s_slack(1849,trof_S,plus) + s_slack(1849,trof_S,minus) + s_slack(1849,vege_H,plus) + s_slack(1849,vege_H,minus) + s_slack(1849,vege_L,plus) + s_slack(1849,vege_L,minus) + s_slack(1849,vege_S,plus)
     
      + s_slack(1849,vege_S,minus) + s_slack(1850,rice_I,plus) + s_slack(1850,rice_I,minus) + s_slack(1850,sugc_I,plus) + s_slack(1850,sugc_I,minus) + s_slack(1850,whea_I,plus) + s_slack(1850,whea_I,minus) + s_slack(1850,bean_H,plus)
     
      + s_slack(1850,bean_H,minus) + s_slack(1850,bean_L,plus) + s_slack(1850,bean_L,minus) + s_slack(1850,bean_S,plus) + s_slack(1850,bean_S,minus) + s_slack(1850,cass_L,plus) + s_slack(1850,cass_L,minus) + s_slack(1850,cass_S,plus)
     
      + s_slack(1850,cass_S,minus) + s_slack(1850,chic_H,plus) + s_slack(1850,chic_H,minus) + s_slack(1850,chic_L,plus) + s_slack(1850,chic_L,minus) + s_slack(1850,chic_S,plus) + s_slack(1850,chic_S,minus) + s_slack(1850,coff_H,plus)
     
      + s_slack(1850,coff_H,minus) + s_slack(1850,coff_L,plus) + s_slack(1850,coff_L,minus) + s_slack(1850,cott_L,plus) + s_slack(1850,cott_L,minus) + s_slack(1850,cowp_H,plus) + s_slack(1850,cowp_H,minus) + s_slack(1850,cowp_L,plus)
     
      + s_slack(1850,cowp_L,minus) + s_slack(1850,cowp_S,plus) + s_slack(1850,cowp_S,minus) + s_slack(1850,grou_H,plus) + s_slack(1850,grou_H,minus) + s_slack(1850,grou_L,plus) + s_slack(1850,grou_L,minus) + s_slack(1850,grou_S,plus)
     
      + s_slack(1850,grou_S,minus) + s_slack(1850,lent_H,plus) + s_slack(1850,lent_H,minus) + s_slack(1850,lent_L,plus) + s_slack(1850,lent_L,minus) + s_slack(1850,lent_S,plus) + s_slack(1850,lent_S,minus) + s_slack(1850,maiz_H,plus)
     
      + s_slack(1850,maiz_H,minus) + s_slack(1850,maiz_L,plus) + s_slack(1850,maiz_L,minus) + s_slack(1850,maiz_S,plus) + s_slack(1850,maiz_S,minus) + s_slack(1850,mill_H,plus) + s_slack(1850,mill_H,minus) + s_slack(1850,mill_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 139
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1850,mill_L,minus) + s_slack(1850,mill_S,plus) + s_slack(1850,mill_S,minus) + s_slack(1850,ofib_L,plus) + s_slack(1850,ofib_L,minus) + s_slack(1850,ooil_L,plus) + s_slack(1850,ooil_L,minus) + s_slack(1850,opul_H,plus)
     
      + s_slack(1850,opul_H,minus) + s_slack(1850,opul_L,plus) + s_slack(1850,opul_L,minus) + s_slack(1850,opul_S,plus) + s_slack(1850,opul_S,minus) + s_slack(1850,pige_H,plus) + s_slack(1850,pige_H,minus) + s_slack(1850,pige_L,plus)
     
      + s_slack(1850,pige_L,minus) + s_slack(1850,pige_S,plus) + s_slack(1850,pige_S,minus) + s_slack(1850,pota_H,plus) + s_slack(1850,pota_H,minus) + s_slack(1850,pota_L,plus) + s_slack(1850,pota_L,minus) + s_slack(1850,pota_S,plus)
     
      + s_slack(1850,pota_S,minus) + s_slack(1850,rest_H,plus) + s_slack(1850,rest_H,minus) + s_slack(1850,rest_L,plus) + s_slack(1850,rest_L,minus) + s_slack(1850,rest_S,plus) + s_slack(1850,rest_S,minus) + s_slack(1850,rice_H,plus)
     
      + s_slack(1850,rice_H,minus) + s_slack(1850,rice_L,plus) + s_slack(1850,rice_L,minus) + s_slack(1850,rice_S,plus) + s_slack(1850,rice_S,minus) + s_slack(1850,sorg_L,plus) + s_slack(1850,sorg_L,minus) + s_slack(1850,sorg_S,plus)
     
      + s_slack(1850,sorg_S,minus) + s_slack(1850,soyb_L,plus) + s_slack(1850,soyb_L,minus) + s_slack(1850,soyb_S,plus) + s_slack(1850,soyb_S,minus) + s_slack(1850,sunf_L,plus) + s_slack(1850,sunf_L,minus) + s_slack(1850,temf_H,plus)
     
      + s_slack(1850,temf_H,minus) + s_slack(1850,temf_L,plus) + s_slack(1850,temf_L,minus) + s_slack(1850,temf_S,plus) + s_slack(1850,temf_S,minus) + s_slack(1850,toba_H,plus) + s_slack(1850,toba_H,minus) + s_slack(1850,toba_L,plus)
     
      + s_slack(1850,toba_L,minus) + s_slack(1850,trof_L,plus) + s_slack(1850,trof_L,minus) + s_slack(1850,trof_S,plus) + s_slack(1850,trof_S,minus) + s_slack(1850,vege_H,plus) + s_slack(1850,vege_H,minus) + s_slack(1850,vege_L,plus)
     
      + s_slack(1850,vege_L,minus) + s_slack(1850,vege_S,plus) + s_slack(1850,vege_S,minus) + s_slack(1851,rice_I,plus) + s_slack(1851,rice_I,minus) + s_slack(1851,sugc_I,plus) + s_slack(1851,sugc_I,minus) + s_slack(1851,whea_I,plus)
     
      + s_slack(1851,whea_I,minus) + s_slack(1851,bean_H,plus) + s_slack(1851,bean_H,minus) + s_slack(1851,bean_L,plus) + s_slack(1851,bean_L,minus) + s_slack(1851,bean_S,plus) + s_slack(1851,bean_S,minus) + s_slack(1851,cass_L,plus)
     
      + s_slack(1851,cass_L,minus) + s_slack(1851,cass_S,plus) + s_slack(1851,cass_S,minus) + s_slack(1851,chic_H,plus) + s_slack(1851,chic_H,minus) + s_slack(1851,chic_L,plus) + s_slack(1851,chic_L,minus) + s_slack(1851,chic_S,plus)
     
      + s_slack(1851,chic_S,minus) + s_slack(1851,coff_H,plus) + s_slack(1851,coff_H,minus) + s_slack(1851,coff_L,plus) + s_slack(1851,coff_L,minus) + s_slack(1851,cott_L,plus) + s_slack(1851,cott_L,minus) + s_slack(1851,cowp_H,plus)
     
      + s_slack(1851,cowp_H,minus) + s_slack(1851,cowp_L,plus) + s_slack(1851,cowp_L,minus) + s_slack(1851,cowp_S,plus) + s_slack(1851,cowp_S,minus) + s_slack(1851,grou_H,plus) + s_slack(1851,grou_H,minus) + s_slack(1851,grou_L,plus)
     
      + s_slack(1851,grou_L,minus) + s_slack(1851,grou_S,plus) + s_slack(1851,grou_S,minus) + s_slack(1851,lent_H,plus) + s_slack(1851,lent_H,minus) + s_slack(1851,lent_L,plus) + s_slack(1851,lent_L,minus) + s_slack(1851,lent_S,plus)
     
      + s_slack(1851,lent_S,minus) + s_slack(1851,maiz_H,plus) + s_slack(1851,maiz_H,minus) + s_slack(1851,maiz_L,plus) + s_slack(1851,maiz_L,minus) + s_slack(1851,maiz_S,plus) + s_slack(1851,maiz_S,minus) + s_slack(1851,mill_H,plus)
     
      + s_slack(1851,mill_H,minus) + s_slack(1851,mill_L,plus) + s_slack(1851,mill_L,minus) + s_slack(1851,mill_S,plus) + s_slack(1851,mill_S,minus) + s_slack(1851,ofib_L,plus) + s_slack(1851,ofib_L,minus) + s_slack(1851,ooil_L,plus)
     
      + s_slack(1851,ooil_L,minus) + s_slack(1851,opul_H,plus) + s_slack(1851,opul_H,minus) + s_slack(1851,opul_L,plus) + s_slack(1851,opul_L,minus) + s_slack(1851,opul_S,plus) + s_slack(1851,opul_S,minus) + s_slack(1851,pige_H,plus)
     
      + s_slack(1851,pige_H,minus) + s_slack(1851,pige_L,plus) + s_slack(1851,pige_L,minus) + s_slack(1851,pige_S,plus) + s_slack(1851,pige_S,minus) + s_slack(1851,pota_H,plus) + s_slack(1851,pota_H,minus) + s_slack(1851,pota_L,plus)
     
      + s_slack(1851,pota_L,minus) + s_slack(1851,pota_S,plus) + s_slack(1851,pota_S,minus) + s_slack(1851,rest_H,plus) + s_slack(1851,rest_H,minus) + s_slack(1851,rest_L,plus) + s_slack(1851,rest_L,minus) + s_slack(1851,rest_S,plus)
     
      + s_slack(1851,rest_S,minus) + s_slack(1851,rice_H,plus) + s_slack(1851,rice_H,minus) + s_slack(1851,rice_L,plus) + s_slack(1851,rice_L,minus) + s_slack(1851,rice_S,plus) + s_slack(1851,rice_S,minus) + s_slack(1851,sorg_L,plus)
     
      + s_slack(1851,sorg_L,minus) + s_slack(1851,sorg_S,plus) + s_slack(1851,sorg_S,minus) + s_slack(1851,soyb_L,plus) + s_slack(1851,soyb_L,minus) + s_slack(1851,soyb_S,plus) + s_slack(1851,soyb_S,minus) + s_slack(1851,sunf_L,plus)
     
      + s_slack(1851,sunf_L,minus) + s_slack(1851,temf_H,plus) + s_slack(1851,temf_H,minus) + s_slack(1851,temf_L,plus) + s_slack(1851,temf_L,minus) + s_slack(1851,temf_S,plus) + s_slack(1851,temf_S,minus) + s_slack(1851,toba_H,plus)
     
      + s_slack(1851,toba_H,minus) + s_slack(1851,toba_L,plus) + s_slack(1851,toba_L,minus) + s_slack(1851,trof_L,plus) + s_slack(1851,trof_L,minus) + s_slack(1851,trof_S,plus) + s_slack(1851,trof_S,minus) + s_slack(1851,vege_H,plus)
     
      + s_slack(1851,vege_H,minus) + s_slack(1851,vege_L,plus) + s_slack(1851,vege_L,minus) + s_slack(1851,vege_S,plus) + s_slack(1851,vege_S,minus) + s_slack(1853,rice_I,plus) + s_slack(1853,rice_I,minus) + s_slack(1853,sugc_I,plus)
     
      + s_slack(1853,sugc_I,minus) + s_slack(1853,whea_I,plus) + s_slack(1853,whea_I,minus) + s_slack(1853,bean_H,plus) + s_slack(1853,bean_H,minus) + s_slack(1853,bean_L,plus) + s_slack(1853,bean_L,minus) + s_slack(1853,bean_S,plus)
     
      + s_slack(1853,bean_S,minus) + s_slack(1853,cass_L,plus) + s_slack(1853,cass_L,minus) + s_slack(1853,cass_S,plus) + s_slack(1853,cass_S,minus) + s_slack(1853,chic_H,plus) + s_slack(1853,chic_H,minus) + s_slack(1853,chic_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 140
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1853,chic_L,minus) + s_slack(1853,chic_S,plus) + s_slack(1853,chic_S,minus) + s_slack(1853,coff_H,plus) + s_slack(1853,coff_H,minus) + s_slack(1853,coff_L,plus) + s_slack(1853,coff_L,minus) + s_slack(1853,cott_L,plus)
     
      + s_slack(1853,cott_L,minus) + s_slack(1853,cowp_H,plus) + s_slack(1853,cowp_H,minus) + s_slack(1853,cowp_L,plus) + s_slack(1853,cowp_L,minus) + s_slack(1853,cowp_S,plus) + s_slack(1853,cowp_S,minus) + s_slack(1853,grou_H,plus)
     
      + s_slack(1853,grou_H,minus) + s_slack(1853,grou_L,plus) + s_slack(1853,grou_L,minus) + s_slack(1853,grou_S,plus) + s_slack(1853,grou_S,minus) + s_slack(1853,lent_H,plus) + s_slack(1853,lent_H,minus) + s_slack(1853,lent_L,plus)
     
      + s_slack(1853,lent_L,minus) + s_slack(1853,lent_S,plus) + s_slack(1853,lent_S,minus) + s_slack(1853,maiz_H,plus) + s_slack(1853,maiz_H,minus) + s_slack(1853,maiz_L,plus) + s_slack(1853,maiz_L,minus) + s_slack(1853,maiz_S,plus)
     
      + s_slack(1853,maiz_S,minus) + s_slack(1853,mill_H,plus) + s_slack(1853,mill_H,minus) + s_slack(1853,mill_L,plus) + s_slack(1853,mill_L,minus) + s_slack(1853,mill_S,plus) + s_slack(1853,mill_S,minus) + s_slack(1853,ofib_L,plus)
     
      + s_slack(1853,ofib_L,minus) + s_slack(1853,ooil_L,plus) + s_slack(1853,ooil_L,minus) + s_slack(1853,opul_H,plus) + s_slack(1853,opul_H,minus) + s_slack(1853,opul_L,plus) + s_slack(1853,opul_L,minus) + s_slack(1853,opul_S,plus)
     
      + s_slack(1853,opul_S,minus) + s_slack(1853,pige_H,plus) + s_slack(1853,pige_H,minus) + s_slack(1853,pige_L,plus) + s_slack(1853,pige_L,minus) + s_slack(1853,pige_S,plus) + s_slack(1853,pige_S,minus) + s_slack(1853,pota_H,plus)
     
      + s_slack(1853,pota_H,minus) + s_slack(1853,pota_L,plus) + s_slack(1853,pota_L,minus) + s_slack(1853,pota_S,plus) + s_slack(1853,pota_S,minus) + s_slack(1853,rest_H,plus) + s_slack(1853,rest_H,minus) + s_slack(1853,rest_L,plus)
     
      + s_slack(1853,rest_L,minus) + s_slack(1853,rest_S,plus) + s_slack(1853,rest_S,minus) + s_slack(1853,rice_H,plus) + s_slack(1853,rice_H,minus) + s_slack(1853,rice_L,plus) + s_slack(1853,rice_L,minus) + s_slack(1853,rice_S,plus)
     
      + s_slack(1853,rice_S,minus) + s_slack(1853,sorg_L,plus) + s_slack(1853,sorg_L,minus) + s_slack(1853,sorg_S,plus) + s_slack(1853,sorg_S,minus) + s_slack(1853,soyb_L,plus) + s_slack(1853,soyb_L,minus) + s_slack(1853,soyb_S,plus)
     
      + s_slack(1853,soyb_S,minus) + s_slack(1853,sunf_L,plus) + s_slack(1853,sunf_L,minus) + s_slack(1853,temf_H,plus) + s_slack(1853,temf_H,minus) + s_slack(1853,temf_L,plus) + s_slack(1853,temf_L,minus) + s_slack(1853,temf_S,plus)
     
      + s_slack(1853,temf_S,minus) + s_slack(1853,toba_H,plus) + s_slack(1853,toba_H,minus) + s_slack(1853,toba_L,plus) + s_slack(1853,toba_L,minus) + s_slack(1853,trof_L,plus) + s_slack(1853,trof_L,minus) + s_slack(1853,trof_S,plus)
     
      + s_slack(1853,trof_S,minus) + s_slack(1853,vege_H,plus) + s_slack(1853,vege_H,minus) + s_slack(1853,vege_L,plus) + s_slack(1853,vege_L,minus) + s_slack(1853,vege_S,plus) + s_slack(1853,vege_S,minus) + s_slack(1876,rice_I,plus)
     
      + s_slack(1876,rice_I,minus) + s_slack(1876,sugc_I,plus) + s_slack(1876,sugc_I,minus) + s_slack(1876,whea_I,plus) + s_slack(1876,whea_I,minus) + s_slack(1876,bean_H,plus) + s_slack(1876,bean_H,minus) + s_slack(1876,bean_L,plus)
     
      + s_slack(1876,bean_L,minus) + s_slack(1876,bean_S,plus) + s_slack(1876,bean_S,minus) + s_slack(1876,cass_L,plus) + s_slack(1876,cass_L,minus) + s_slack(1876,cass_S,plus) + s_slack(1876,cass_S,minus) + s_slack(1876,chic_H,plus)
     
      + s_slack(1876,chic_H,minus) + s_slack(1876,chic_L,plus) + s_slack(1876,chic_L,minus) + s_slack(1876,chic_S,plus) + s_slack(1876,chic_S,minus) + s_slack(1876,coff_H,plus) + s_slack(1876,coff_H,minus) + s_slack(1876,coff_L,plus)
     
      + s_slack(1876,coff_L,minus) + s_slack(1876,cott_L,plus) + s_slack(1876,cott_L,minus) + s_slack(1876,cowp_H,plus) + s_slack(1876,cowp_H,minus) + s_slack(1876,cowp_L,plus) + s_slack(1876,cowp_L,minus) + s_slack(1876,cowp_S,plus)
     
      + s_slack(1876,cowp_S,minus) + s_slack(1876,grou_H,plus) + s_slack(1876,grou_H,minus) + s_slack(1876,grou_L,plus) + s_slack(1876,grou_L,minus) + s_slack(1876,grou_S,plus) + s_slack(1876,grou_S,minus) + s_slack(1876,lent_H,plus)
     
      + s_slack(1876,lent_H,minus) + s_slack(1876,lent_L,plus) + s_slack(1876,lent_L,minus) + s_slack(1876,lent_S,plus) + s_slack(1876,lent_S,minus) + s_slack(1876,maiz_H,plus) + s_slack(1876,maiz_H,minus) + s_slack(1876,maiz_L,plus)
     
      + s_slack(1876,maiz_L,minus) + s_slack(1876,maiz_S,plus) + s_slack(1876,maiz_S,minus) + s_slack(1876,mill_H,plus) + s_slack(1876,mill_H,minus) + s_slack(1876,mill_L,plus) + s_slack(1876,mill_L,minus) + s_slack(1876,mill_S,plus)
     
      + s_slack(1876,mill_S,minus) + s_slack(1876,ofib_L,plus) + s_slack(1876,ofib_L,minus) + s_slack(1876,ooil_L,plus) + s_slack(1876,ooil_L,minus) + s_slack(1876,opul_H,plus) + s_slack(1876,opul_H,minus) + s_slack(1876,opul_L,plus)
     
      + s_slack(1876,opul_L,minus) + s_slack(1876,opul_S,plus) + s_slack(1876,opul_S,minus) + s_slack(1876,pige_H,plus) + s_slack(1876,pige_H,minus) + s_slack(1876,pige_L,plus) + s_slack(1876,pige_L,minus) + s_slack(1876,pige_S,plus)
     
      + s_slack(1876,pige_S,minus) + s_slack(1876,pota_H,plus) + s_slack(1876,pota_H,minus) + s_slack(1876,pota_L,plus) + s_slack(1876,pota_L,minus) + s_slack(1876,pota_S,plus) + s_slack(1876,pota_S,minus) + s_slack(1876,rest_H,plus)
     
      + s_slack(1876,rest_H,minus) + s_slack(1876,rest_L,plus) + s_slack(1876,rest_L,minus) + s_slack(1876,rest_S,plus) + s_slack(1876,rest_S,minus) + s_slack(1876,rice_H,plus) + s_slack(1876,rice_H,minus) + s_slack(1876,rice_L,plus)
     
      + s_slack(1876,rice_L,minus) + s_slack(1876,rice_S,plus) + s_slack(1876,rice_S,minus) + s_slack(1876,sorg_L,plus) + s_slack(1876,sorg_L,minus) + s_slack(1876,sorg_S,plus) + s_slack(1876,sorg_S,minus) + s_slack(1876,soyb_L,plus)
     
      + s_slack(1876,soyb_L,minus) + s_slack(1876,soyb_S,plus) + s_slack(1876,soyb_S,minus) + s_slack(1876,sunf_L,plus) + s_slack(1876,sunf_L,minus) + s_slack(1876,temf_H,plus) + s_slack(1876,temf_H,minus) + s_slack(1876,temf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 141
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1876,temf_L,minus) + s_slack(1876,temf_S,plus) + s_slack(1876,temf_S,minus) + s_slack(1876,toba_H,plus) + s_slack(1876,toba_H,minus) + s_slack(1876,toba_L,plus) + s_slack(1876,toba_L,minus) + s_slack(1876,trof_L,plus)
     
      + s_slack(1876,trof_L,minus) + s_slack(1876,trof_S,plus) + s_slack(1876,trof_S,minus) + s_slack(1876,vege_H,plus) + s_slack(1876,vege_H,minus) + s_slack(1876,vege_L,plus) + s_slack(1876,vege_L,minus) + s_slack(1876,vege_S,plus)
     
      + s_slack(1876,vege_S,minus) + s_slack(1879,rice_I,plus) + s_slack(1879,rice_I,minus) + s_slack(1879,sugc_I,plus) + s_slack(1879,sugc_I,minus) + s_slack(1879,whea_I,plus) + s_slack(1879,whea_I,minus) + s_slack(1879,bean_H,plus)
     
      + s_slack(1879,bean_H,minus) + s_slack(1879,bean_L,plus) + s_slack(1879,bean_L,minus) + s_slack(1879,bean_S,plus) + s_slack(1879,bean_S,minus) + s_slack(1879,cass_L,plus) + s_slack(1879,cass_L,minus) + s_slack(1879,cass_S,plus)
     
      + s_slack(1879,cass_S,minus) + s_slack(1879,chic_H,plus) + s_slack(1879,chic_H,minus) + s_slack(1879,chic_L,plus) + s_slack(1879,chic_L,minus) + s_slack(1879,chic_S,plus) + s_slack(1879,chic_S,minus) + s_slack(1879,coff_H,plus)
     
      + s_slack(1879,coff_H,minus) + s_slack(1879,coff_L,plus) + s_slack(1879,coff_L,minus) + s_slack(1879,cott_L,plus) + s_slack(1879,cott_L,minus) + s_slack(1879,cowp_H,plus) + s_slack(1879,cowp_H,minus) + s_slack(1879,cowp_L,plus)
     
      + s_slack(1879,cowp_L,minus) + s_slack(1879,cowp_S,plus) + s_slack(1879,cowp_S,minus) + s_slack(1879,grou_H,plus) + s_slack(1879,grou_H,minus) + s_slack(1879,grou_L,plus) + s_slack(1879,grou_L,minus) + s_slack(1879,grou_S,plus)
     
      + s_slack(1879,grou_S,minus) + s_slack(1879,lent_H,plus) + s_slack(1879,lent_H,minus) + s_slack(1879,lent_L,plus) + s_slack(1879,lent_L,minus) + s_slack(1879,lent_S,plus) + s_slack(1879,lent_S,minus) + s_slack(1879,maiz_H,plus)
     
      + s_slack(1879,maiz_H,minus) + s_slack(1879,maiz_L,plus) + s_slack(1879,maiz_L,minus) + s_slack(1879,maiz_S,plus) + s_slack(1879,maiz_S,minus) + s_slack(1879,mill_H,plus) + s_slack(1879,mill_H,minus) + s_slack(1879,mill_L,plus)
     
      + s_slack(1879,mill_L,minus) + s_slack(1879,mill_S,plus) + s_slack(1879,mill_S,minus) + s_slack(1879,ofib_L,plus) + s_slack(1879,ofib_L,minus) + s_slack(1879,ooil_L,plus) + s_slack(1879,ooil_L,minus) + s_slack(1879,opul_H,plus)
     
      + s_slack(1879,opul_H,minus) + s_slack(1879,opul_L,plus) + s_slack(1879,opul_L,minus) + s_slack(1879,opul_S,plus) + s_slack(1879,opul_S,minus) + s_slack(1879,pige_H,plus) + s_slack(1879,pige_H,minus) + s_slack(1879,pige_L,plus)
     
      + s_slack(1879,pige_L,minus) + s_slack(1879,pige_S,plus) + s_slack(1879,pige_S,minus) + s_slack(1879,pota_H,plus) + s_slack(1879,pota_H,minus) + s_slack(1879,pota_L,plus) + s_slack(1879,pota_L,minus) + s_slack(1879,pota_S,plus)
     
      + s_slack(1879,pota_S,minus) + s_slack(1879,rest_H,plus) + s_slack(1879,rest_H,minus) + s_slack(1879,rest_L,plus) + s_slack(1879,rest_L,minus) + s_slack(1879,rest_S,plus) + s_slack(1879,rest_S,minus) + s_slack(1879,rice_H,plus)
     
      + s_slack(1879,rice_H,minus) + s_slack(1879,rice_L,plus) + s_slack(1879,rice_L,minus) + s_slack(1879,rice_S,plus) + s_slack(1879,rice_S,minus) + s_slack(1879,sorg_L,plus) + s_slack(1879,sorg_L,minus) + s_slack(1879,sorg_S,plus)
     
      + s_slack(1879,sorg_S,minus) + s_slack(1879,soyb_L,plus) + s_slack(1879,soyb_L,minus) + s_slack(1879,soyb_S,plus) + s_slack(1879,soyb_S,minus) + s_slack(1879,sunf_L,plus) + s_slack(1879,sunf_L,minus) + s_slack(1879,temf_H,plus)
     
      + s_slack(1879,temf_H,minus) + s_slack(1879,temf_L,plus) + s_slack(1879,temf_L,minus) + s_slack(1879,temf_S,plus) + s_slack(1879,temf_S,minus) + s_slack(1879,toba_H,plus) + s_slack(1879,toba_H,minus) + s_slack(1879,toba_L,plus)
     
      + s_slack(1879,toba_L,minus) + s_slack(1879,trof_L,plus) + s_slack(1879,trof_L,minus) + s_slack(1879,trof_S,plus) + s_slack(1879,trof_S,minus) + s_slack(1879,vege_H,plus) + s_slack(1879,vege_H,minus) + s_slack(1879,vege_L,plus)
     
      + s_slack(1879,vege_L,minus) + s_slack(1879,vege_S,plus) + s_slack(1879,vege_S,minus) + s_slack(1880,rice_I,plus) + s_slack(1880,rice_I,minus) + s_slack(1880,sugc_I,plus) + s_slack(1880,sugc_I,minus) + s_slack(1880,whea_I,plus)
     
      + s_slack(1880,whea_I,minus) + s_slack(1880,bean_H,plus) + s_slack(1880,bean_H,minus) + s_slack(1880,bean_L,plus) + s_slack(1880,bean_L,minus) + s_slack(1880,bean_S,plus) + s_slack(1880,bean_S,minus) + s_slack(1880,cass_L,plus)
     
      + s_slack(1880,cass_L,minus) + s_slack(1880,cass_S,plus) + s_slack(1880,cass_S,minus) + s_slack(1880,chic_H,plus) + s_slack(1880,chic_H,minus) + s_slack(1880,chic_L,plus) + s_slack(1880,chic_L,minus) + s_slack(1880,chic_S,plus)
     
      + s_slack(1880,chic_S,minus) + s_slack(1880,coff_H,plus) + s_slack(1880,coff_H,minus) + s_slack(1880,coff_L,plus) + s_slack(1880,coff_L,minus) + s_slack(1880,cott_L,plus) + s_slack(1880,cott_L,minus) + s_slack(1880,cowp_H,plus)
     
      + s_slack(1880,cowp_H,minus) + s_slack(1880,cowp_L,plus) + s_slack(1880,cowp_L,minus) + s_slack(1880,cowp_S,plus) + s_slack(1880,cowp_S,minus) + s_slack(1880,grou_H,plus) + s_slack(1880,grou_H,minus) + s_slack(1880,grou_L,plus)
     
      + s_slack(1880,grou_L,minus) + s_slack(1880,grou_S,plus) + s_slack(1880,grou_S,minus) + s_slack(1880,lent_H,plus) + s_slack(1880,lent_H,minus) + s_slack(1880,lent_L,plus) + s_slack(1880,lent_L,minus) + s_slack(1880,lent_S,plus)
     
      + s_slack(1880,lent_S,minus) + s_slack(1880,maiz_H,plus) + s_slack(1880,maiz_H,minus) + s_slack(1880,maiz_L,plus) + s_slack(1880,maiz_L,minus) + s_slack(1880,maiz_S,plus) + s_slack(1880,maiz_S,minus) + s_slack(1880,mill_H,plus)
     
      + s_slack(1880,mill_H,minus) + s_slack(1880,mill_L,plus) + s_slack(1880,mill_L,minus) + s_slack(1880,mill_S,plus) + s_slack(1880,mill_S,minus) + s_slack(1880,ofib_L,plus) + s_slack(1880,ofib_L,minus) + s_slack(1880,ooil_L,plus)
     
      + s_slack(1880,ooil_L,minus) + s_slack(1880,opul_H,plus) + s_slack(1880,opul_H,minus) + s_slack(1880,opul_L,plus) + s_slack(1880,opul_L,minus) + s_slack(1880,opul_S,plus) + s_slack(1880,opul_S,minus) + s_slack(1880,pige_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 142
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1880,pige_H,minus) + s_slack(1880,pige_L,plus) + s_slack(1880,pige_L,minus) + s_slack(1880,pige_S,plus) + s_slack(1880,pige_S,minus) + s_slack(1880,pota_H,plus) + s_slack(1880,pota_H,minus) + s_slack(1880,pota_L,plus)
     
      + s_slack(1880,pota_L,minus) + s_slack(1880,pota_S,plus) + s_slack(1880,pota_S,minus) + s_slack(1880,rest_H,plus) + s_slack(1880,rest_H,minus) + s_slack(1880,rest_L,plus) + s_slack(1880,rest_L,minus) + s_slack(1880,rest_S,plus)
     
      + s_slack(1880,rest_S,minus) + s_slack(1880,rice_H,plus) + s_slack(1880,rice_H,minus) + s_slack(1880,rice_L,plus) + s_slack(1880,rice_L,minus) + s_slack(1880,rice_S,plus) + s_slack(1880,rice_S,minus) + s_slack(1880,sorg_L,plus)
     
      + s_slack(1880,sorg_L,minus) + s_slack(1880,sorg_S,plus) + s_slack(1880,sorg_S,minus) + s_slack(1880,soyb_L,plus) + s_slack(1880,soyb_L,minus) + s_slack(1880,soyb_S,plus) + s_slack(1880,soyb_S,minus) + s_slack(1880,sunf_L,plus)
     
      + s_slack(1880,sunf_L,minus) + s_slack(1880,temf_H,plus) + s_slack(1880,temf_H,minus) + s_slack(1880,temf_L,plus) + s_slack(1880,temf_L,minus) + s_slack(1880,temf_S,plus) + s_slack(1880,temf_S,minus) + s_slack(1880,toba_H,plus)
     
      + s_slack(1880,toba_H,minus) + s_slack(1880,toba_L,plus) + s_slack(1880,toba_L,minus) + s_slack(1880,trof_L,plus) + s_slack(1880,trof_L,minus) + s_slack(1880,trof_S,plus) + s_slack(1880,trof_S,minus) + s_slack(1880,vege_H,plus)
     
      + s_slack(1880,vege_H,minus) + s_slack(1880,vege_L,plus) + s_slack(1880,vege_L,minus) + s_slack(1880,vege_S,plus) + s_slack(1880,vege_S,minus) + s_slack(1881,rice_I,plus) + s_slack(1881,rice_I,minus) + s_slack(1881,sugc_I,plus)
     
      + s_slack(1881,sugc_I,minus) + s_slack(1881,whea_I,plus) + s_slack(1881,whea_I,minus) + s_slack(1881,bean_H,plus) + s_slack(1881,bean_H,minus) + s_slack(1881,bean_L,plus) + s_slack(1881,bean_L,minus) + s_slack(1881,bean_S,plus)
     
      + s_slack(1881,bean_S,minus) + s_slack(1881,cass_L,plus) + s_slack(1881,cass_L,minus) + s_slack(1881,cass_S,plus) + s_slack(1881,cass_S,minus) + s_slack(1881,chic_H,plus) + s_slack(1881,chic_H,minus) + s_slack(1881,chic_L,plus)
     
      + s_slack(1881,chic_L,minus) + s_slack(1881,chic_S,plus) + s_slack(1881,chic_S,minus) + s_slack(1881,coff_H,plus) + s_slack(1881,coff_H,minus) + s_slack(1881,coff_L,plus) + s_slack(1881,coff_L,minus) + s_slack(1881,cott_L,plus)
     
      + s_slack(1881,cott_L,minus) + s_slack(1881,cowp_H,plus) + s_slack(1881,cowp_H,minus) + s_slack(1881,cowp_L,plus) + s_slack(1881,cowp_L,minus) + s_slack(1881,cowp_S,plus) + s_slack(1881,cowp_S,minus) + s_slack(1881,grou_H,plus)
     
      + s_slack(1881,grou_H,minus) + s_slack(1881,grou_L,plus) + s_slack(1881,grou_L,minus) + s_slack(1881,grou_S,plus) + s_slack(1881,grou_S,minus) + s_slack(1881,lent_H,plus) + s_slack(1881,lent_H,minus) + s_slack(1881,lent_L,plus)
     
      + s_slack(1881,lent_L,minus) + s_slack(1881,lent_S,plus) + s_slack(1881,lent_S,minus) + s_slack(1881,maiz_H,plus) + s_slack(1881,maiz_H,minus) + s_slack(1881,maiz_L,plus) + s_slack(1881,maiz_L,minus) + s_slack(1881,maiz_S,plus)
     
      + s_slack(1881,maiz_S,minus) + s_slack(1881,mill_H,plus) + s_slack(1881,mill_H,minus) + s_slack(1881,mill_L,plus) + s_slack(1881,mill_L,minus) + s_slack(1881,mill_S,plus) + s_slack(1881,mill_S,minus) + s_slack(1881,ofib_L,plus)
     
      + s_slack(1881,ofib_L,minus) + s_slack(1881,ooil_L,plus) + s_slack(1881,ooil_L,minus) + s_slack(1881,opul_H,plus) + s_slack(1881,opul_H,minus) + s_slack(1881,opul_L,plus) + s_slack(1881,opul_L,minus) + s_slack(1881,opul_S,plus)
     
      + s_slack(1881,opul_S,minus) + s_slack(1881,pige_H,plus) + s_slack(1881,pige_H,minus) + s_slack(1881,pige_L,plus) + s_slack(1881,pige_L,minus) + s_slack(1881,pige_S,plus) + s_slack(1881,pige_S,minus) + s_slack(1881,pota_H,plus)
     
      + s_slack(1881,pota_H,minus) + s_slack(1881,pota_L,plus) + s_slack(1881,pota_L,minus) + s_slack(1881,pota_S,plus) + s_slack(1881,pota_S,minus) + s_slack(1881,rest_H,plus) + s_slack(1881,rest_H,minus) + s_slack(1881,rest_L,plus)
     
      + s_slack(1881,rest_L,minus) + s_slack(1881,rest_S,plus) + s_slack(1881,rest_S,minus) + s_slack(1881,rice_H,plus) + s_slack(1881,rice_H,minus) + s_slack(1881,rice_L,plus) + s_slack(1881,rice_L,minus) + s_slack(1881,rice_S,plus)
     
      + s_slack(1881,rice_S,minus) + s_slack(1881,sorg_L,plus) + s_slack(1881,sorg_L,minus) + s_slack(1881,sorg_S,plus) + s_slack(1881,sorg_S,minus) + s_slack(1881,soyb_L,plus) + s_slack(1881,soyb_L,minus) + s_slack(1881,soyb_S,plus)
     
      + s_slack(1881,soyb_S,minus) + s_slack(1881,sunf_L,plus) + s_slack(1881,sunf_L,minus) + s_slack(1881,temf_H,plus) + s_slack(1881,temf_H,minus) + s_slack(1881,temf_L,plus) + s_slack(1881,temf_L,minus) + s_slack(1881,temf_S,plus)
     
      + s_slack(1881,temf_S,minus) + s_slack(1881,toba_H,plus) + s_slack(1881,toba_H,minus) + s_slack(1881,toba_L,plus) + s_slack(1881,toba_L,minus) + s_slack(1881,trof_L,plus) + s_slack(1881,trof_L,minus) + s_slack(1881,trof_S,plus)
     
      + s_slack(1881,trof_S,minus) + s_slack(1881,vege_H,plus) + s_slack(1881,vege_H,minus) + s_slack(1881,vege_L,plus) + s_slack(1881,vege_L,minus) + s_slack(1881,vege_S,plus) + s_slack(1881,vege_S,minus) + s_slack(1882,rice_I,plus)
     
      + s_slack(1882,rice_I,minus) + s_slack(1882,sugc_I,plus) + s_slack(1882,sugc_I,minus) + s_slack(1882,whea_I,plus) + s_slack(1882,whea_I,minus) + s_slack(1882,bean_H,plus) + s_slack(1882,bean_H,minus) + s_slack(1882,bean_L,plus)
     
      + s_slack(1882,bean_L,minus) + s_slack(1882,bean_S,plus) + s_slack(1882,bean_S,minus) + s_slack(1882,cass_L,plus) + s_slack(1882,cass_L,minus) + s_slack(1882,cass_S,plus) + s_slack(1882,cass_S,minus) + s_slack(1882,chic_H,plus)
     
      + s_slack(1882,chic_H,minus) + s_slack(1882,chic_L,plus) + s_slack(1882,chic_L,minus) + s_slack(1882,chic_S,plus) + s_slack(1882,chic_S,minus) + s_slack(1882,coff_H,plus) + s_slack(1882,coff_H,minus) + s_slack(1882,coff_L,plus)
     
      + s_slack(1882,coff_L,minus) + s_slack(1882,cott_L,plus) + s_slack(1882,cott_L,minus) + s_slack(1882,cowp_H,plus) + s_slack(1882,cowp_H,minus) + s_slack(1882,cowp_L,plus) + s_slack(1882,cowp_L,minus) + s_slack(1882,cowp_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 143
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1882,cowp_S,minus) + s_slack(1882,grou_H,plus) + s_slack(1882,grou_H,minus) + s_slack(1882,grou_L,plus) + s_slack(1882,grou_L,minus) + s_slack(1882,grou_S,plus) + s_slack(1882,grou_S,minus) + s_slack(1882,lent_H,plus)
     
      + s_slack(1882,lent_H,minus) + s_slack(1882,lent_L,plus) + s_slack(1882,lent_L,minus) + s_slack(1882,lent_S,plus) + s_slack(1882,lent_S,minus) + s_slack(1882,maiz_H,plus) + s_slack(1882,maiz_H,minus) + s_slack(1882,maiz_L,plus)
     
      + s_slack(1882,maiz_L,minus) + s_slack(1882,maiz_S,plus) + s_slack(1882,maiz_S,minus) + s_slack(1882,mill_H,plus) + s_slack(1882,mill_H,minus) + s_slack(1882,mill_L,plus) + s_slack(1882,mill_L,minus) + s_slack(1882,mill_S,plus)
     
      + s_slack(1882,mill_S,minus) + s_slack(1882,ofib_L,plus) + s_slack(1882,ofib_L,minus) + s_slack(1882,ooil_L,plus) + s_slack(1882,ooil_L,minus) + s_slack(1882,opul_H,plus) + s_slack(1882,opul_H,minus) + s_slack(1882,opul_L,plus)
     
      + s_slack(1882,opul_L,minus) + s_slack(1882,opul_S,plus) + s_slack(1882,opul_S,minus) + s_slack(1882,pige_H,plus) + s_slack(1882,pige_H,minus) + s_slack(1882,pige_L,plus) + s_slack(1882,pige_L,minus) + s_slack(1882,pige_S,plus)
     
      + s_slack(1882,pige_S,minus) + s_slack(1882,pota_H,plus) + s_slack(1882,pota_H,minus) + s_slack(1882,pota_L,plus) + s_slack(1882,pota_L,minus) + s_slack(1882,pota_S,plus) + s_slack(1882,pota_S,minus) + s_slack(1882,rest_H,plus)
     
      + s_slack(1882,rest_H,minus) + s_slack(1882,rest_L,plus) + s_slack(1882,rest_L,minus) + s_slack(1882,rest_S,plus) + s_slack(1882,rest_S,minus) + s_slack(1882,rice_H,plus) + s_slack(1882,rice_H,minus) + s_slack(1882,rice_L,plus)
     
      + s_slack(1882,rice_L,minus) + s_slack(1882,rice_S,plus) + s_slack(1882,rice_S,minus) + s_slack(1882,sorg_L,plus) + s_slack(1882,sorg_L,minus) + s_slack(1882,sorg_S,plus) + s_slack(1882,sorg_S,minus) + s_slack(1882,soyb_L,plus)
     
      + s_slack(1882,soyb_L,minus) + s_slack(1882,soyb_S,plus) + s_slack(1882,soyb_S,minus) + s_slack(1882,sunf_L,plus) + s_slack(1882,sunf_L,minus) + s_slack(1882,temf_H,plus) + s_slack(1882,temf_H,minus) + s_slack(1882,temf_L,plus)
     
      + s_slack(1882,temf_L,minus) + s_slack(1882,temf_S,plus) + s_slack(1882,temf_S,minus) + s_slack(1882,toba_H,plus) + s_slack(1882,toba_H,minus) + s_slack(1882,toba_L,plus) + s_slack(1882,toba_L,minus) + s_slack(1882,trof_L,plus)
     
      + s_slack(1882,trof_L,minus) + s_slack(1882,trof_S,plus) + s_slack(1882,trof_S,minus) + s_slack(1882,vege_H,plus) + s_slack(1882,vege_H,minus) + s_slack(1882,vege_L,plus) + s_slack(1882,vege_L,minus) + s_slack(1882,vege_S,plus)
     
      + s_slack(1882,vege_S,minus) + s_slack(1883,rice_I,plus) + s_slack(1883,rice_I,minus) + s_slack(1883,sugc_I,plus) + s_slack(1883,sugc_I,minus) + s_slack(1883,whea_I,plus) + s_slack(1883,whea_I,minus) + s_slack(1883,bean_H,plus)
     
      + s_slack(1883,bean_H,minus) + s_slack(1883,bean_L,plus) + s_slack(1883,bean_L,minus) + s_slack(1883,bean_S,plus) + s_slack(1883,bean_S,minus) + s_slack(1883,cass_L,plus) + s_slack(1883,cass_L,minus) + s_slack(1883,cass_S,plus)
     
      + s_slack(1883,cass_S,minus) + s_slack(1883,chic_H,plus) + s_slack(1883,chic_H,minus) + s_slack(1883,chic_L,plus) + s_slack(1883,chic_L,minus) + s_slack(1883,chic_S,plus) + s_slack(1883,chic_S,minus) + s_slack(1883,coff_H,plus)
     
      + s_slack(1883,coff_H,minus) + s_slack(1883,coff_L,plus) + s_slack(1883,coff_L,minus) + s_slack(1883,cott_L,plus) + s_slack(1883,cott_L,minus) + s_slack(1883,cowp_H,plus) + s_slack(1883,cowp_H,minus) + s_slack(1883,cowp_L,plus)
     
      + s_slack(1883,cowp_L,minus) + s_slack(1883,cowp_S,plus) + s_slack(1883,cowp_S,minus) + s_slack(1883,grou_H,plus) + s_slack(1883,grou_H,minus) + s_slack(1883,grou_L,plus) + s_slack(1883,grou_L,minus) + s_slack(1883,grou_S,plus)
     
      + s_slack(1883,grou_S,minus) + s_slack(1883,lent_H,plus) + s_slack(1883,lent_H,minus) + s_slack(1883,lent_L,plus) + s_slack(1883,lent_L,minus) + s_slack(1883,lent_S,plus) + s_slack(1883,lent_S,minus) + s_slack(1883,maiz_H,plus)
     
      + s_slack(1883,maiz_H,minus) + s_slack(1883,maiz_L,plus) + s_slack(1883,maiz_L,minus) + s_slack(1883,maiz_S,plus) + s_slack(1883,maiz_S,minus) + s_slack(1883,mill_H,plus) + s_slack(1883,mill_H,minus) + s_slack(1883,mill_L,plus)
     
      + s_slack(1883,mill_L,minus) + s_slack(1883,mill_S,plus) + s_slack(1883,mill_S,minus) + s_slack(1883,ofib_L,plus) + s_slack(1883,ofib_L,minus) + s_slack(1883,ooil_L,plus) + s_slack(1883,ooil_L,minus) + s_slack(1883,opul_H,plus)
     
      + s_slack(1883,opul_H,minus) + s_slack(1883,opul_L,plus) + s_slack(1883,opul_L,minus) + s_slack(1883,opul_S,plus) + s_slack(1883,opul_S,minus) + s_slack(1883,pige_H,plus) + s_slack(1883,pige_H,minus) + s_slack(1883,pige_L,plus)
     
      + s_slack(1883,pige_L,minus) + s_slack(1883,pige_S,plus) + s_slack(1883,pige_S,minus) + s_slack(1883,pota_H,plus) + s_slack(1883,pota_H,minus) + s_slack(1883,pota_L,plus) + s_slack(1883,pota_L,minus) + s_slack(1883,pota_S,plus)
     
      + s_slack(1883,pota_S,minus) + s_slack(1883,rest_H,plus) + s_slack(1883,rest_H,minus) + s_slack(1883,rest_L,plus) + s_slack(1883,rest_L,minus) + s_slack(1883,rest_S,plus) + s_slack(1883,rest_S,minus) + s_slack(1883,rice_H,plus)
     
      + s_slack(1883,rice_H,minus) + s_slack(1883,rice_L,plus) + s_slack(1883,rice_L,minus) + s_slack(1883,rice_S,plus) + s_slack(1883,rice_S,minus) + s_slack(1883,sorg_L,plus) + s_slack(1883,sorg_L,minus) + s_slack(1883,sorg_S,plus)
     
      + s_slack(1883,sorg_S,minus) + s_slack(1883,soyb_L,plus) + s_slack(1883,soyb_L,minus) + s_slack(1883,soyb_S,plus) + s_slack(1883,soyb_S,minus) + s_slack(1883,sunf_L,plus) + s_slack(1883,sunf_L,minus) + s_slack(1883,temf_H,plus)
     
      + s_slack(1883,temf_H,minus) + s_slack(1883,temf_L,plus) + s_slack(1883,temf_L,minus) + s_slack(1883,temf_S,plus) + s_slack(1883,temf_S,minus) + s_slack(1883,toba_H,plus) + s_slack(1883,toba_H,minus) + s_slack(1883,toba_L,plus)
     
      + s_slack(1883,toba_L,minus) + s_slack(1883,trof_L,plus) + s_slack(1883,trof_L,minus) + s_slack(1883,trof_S,plus) + s_slack(1883,trof_S,minus) + s_slack(1883,vege_H,plus) + s_slack(1883,vege_H,minus) + s_slack(1883,vege_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 144
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1883,vege_L,minus) + s_slack(1883,vege_S,plus) + s_slack(1883,vege_S,minus) + s_slack(1884,rice_I,plus) + s_slack(1884,rice_I,minus) + s_slack(1884,sugc_I,plus) + s_slack(1884,sugc_I,minus) + s_slack(1884,whea_I,plus)
     
      + s_slack(1884,whea_I,minus) + s_slack(1884,bean_H,plus) + s_slack(1884,bean_H,minus) + s_slack(1884,bean_L,plus) + s_slack(1884,bean_L,minus) + s_slack(1884,bean_S,plus) + s_slack(1884,bean_S,minus) + s_slack(1884,cass_L,plus)
     
      + s_slack(1884,cass_L,minus) + s_slack(1884,cass_S,plus) + s_slack(1884,cass_S,minus) + s_slack(1884,chic_H,plus) + s_slack(1884,chic_H,minus) + s_slack(1884,chic_L,plus) + s_slack(1884,chic_L,minus) + s_slack(1884,chic_S,plus)
     
      + s_slack(1884,chic_S,minus) + s_slack(1884,coff_H,plus) + s_slack(1884,coff_H,minus) + s_slack(1884,coff_L,plus) + s_slack(1884,coff_L,minus) + s_slack(1884,cott_L,plus) + s_slack(1884,cott_L,minus) + s_slack(1884,cowp_H,plus)
     
      + s_slack(1884,cowp_H,minus) + s_slack(1884,cowp_L,plus) + s_slack(1884,cowp_L,minus) + s_slack(1884,cowp_S,plus) + s_slack(1884,cowp_S,minus) + s_slack(1884,grou_H,plus) + s_slack(1884,grou_H,minus) + s_slack(1884,grou_L,plus)
     
      + s_slack(1884,grou_L,minus) + s_slack(1884,grou_S,plus) + s_slack(1884,grou_S,minus) + s_slack(1884,lent_H,plus) + s_slack(1884,lent_H,minus) + s_slack(1884,lent_L,plus) + s_slack(1884,lent_L,minus) + s_slack(1884,lent_S,plus)
     
      + s_slack(1884,lent_S,minus) + s_slack(1884,maiz_H,plus) + s_slack(1884,maiz_H,minus) + s_slack(1884,maiz_L,plus) + s_slack(1884,maiz_L,minus) + s_slack(1884,maiz_S,plus) + s_slack(1884,maiz_S,minus) + s_slack(1884,mill_H,plus)
     
      + s_slack(1884,mill_H,minus) + s_slack(1884,mill_L,plus) + s_slack(1884,mill_L,minus) + s_slack(1884,mill_S,plus) + s_slack(1884,mill_S,minus) + s_slack(1884,ofib_L,plus) + s_slack(1884,ofib_L,minus) + s_slack(1884,ooil_L,plus)
     
      + s_slack(1884,ooil_L,minus) + s_slack(1884,opul_H,plus) + s_slack(1884,opul_H,minus) + s_slack(1884,opul_L,plus) + s_slack(1884,opul_L,minus) + s_slack(1884,opul_S,plus) + s_slack(1884,opul_S,minus) + s_slack(1884,pige_H,plus)
     
      + s_slack(1884,pige_H,minus) + s_slack(1884,pige_L,plus) + s_slack(1884,pige_L,minus) + s_slack(1884,pige_S,plus) + s_slack(1884,pige_S,minus) + s_slack(1884,pota_H,plus) + s_slack(1884,pota_H,minus) + s_slack(1884,pota_L,plus)
     
      + s_slack(1884,pota_L,minus) + s_slack(1884,pota_S,plus) + s_slack(1884,pota_S,minus) + s_slack(1884,rest_H,plus) + s_slack(1884,rest_H,minus) + s_slack(1884,rest_L,plus) + s_slack(1884,rest_L,minus) + s_slack(1884,rest_S,plus)
     
      + s_slack(1884,rest_S,minus) + s_slack(1884,rice_H,plus) + s_slack(1884,rice_H,minus) + s_slack(1884,rice_L,plus) + s_slack(1884,rice_L,minus) + s_slack(1884,rice_S,plus) + s_slack(1884,rice_S,minus) + s_slack(1884,sorg_L,plus)
     
      + s_slack(1884,sorg_L,minus) + s_slack(1884,sorg_S,plus) + s_slack(1884,sorg_S,minus) + s_slack(1884,soyb_L,plus) + s_slack(1884,soyb_L,minus) + s_slack(1884,soyb_S,plus) + s_slack(1884,soyb_S,minus) + s_slack(1884,sunf_L,plus)
     
      + s_slack(1884,sunf_L,minus) + s_slack(1884,temf_H,plus) + s_slack(1884,temf_H,minus) + s_slack(1884,temf_L,plus) + s_slack(1884,temf_L,minus) + s_slack(1884,temf_S,plus) + s_slack(1884,temf_S,minus) + s_slack(1884,toba_H,plus)
     
      + s_slack(1884,toba_H,minus) + s_slack(1884,toba_L,plus) + s_slack(1884,toba_L,minus) + s_slack(1884,trof_L,plus) + s_slack(1884,trof_L,minus) + s_slack(1884,trof_S,plus) + s_slack(1884,trof_S,minus) + s_slack(1884,vege_H,plus)
     
      + s_slack(1884,vege_H,minus) + s_slack(1884,vege_L,plus) + s_slack(1884,vege_L,minus) + s_slack(1884,vege_S,plus) + s_slack(1884,vege_S,minus) + s_slack(1885,rice_I,plus) + s_slack(1885,rice_I,minus) + s_slack(1885,sugc_I,plus)
     
      + s_slack(1885,sugc_I,minus) + s_slack(1885,whea_I,plus) + s_slack(1885,whea_I,minus) + s_slack(1885,bean_H,plus) + s_slack(1885,bean_H,minus) + s_slack(1885,bean_L,plus) + s_slack(1885,bean_L,minus) + s_slack(1885,bean_S,plus)
     
      + s_slack(1885,bean_S,minus) + s_slack(1885,cass_L,plus) + s_slack(1885,cass_L,minus) + s_slack(1885,cass_S,plus) + s_slack(1885,cass_S,minus) + s_slack(1885,chic_H,plus) + s_slack(1885,chic_H,minus) + s_slack(1885,chic_L,plus)
     
      + s_slack(1885,chic_L,minus) + s_slack(1885,chic_S,plus) + s_slack(1885,chic_S,minus) + s_slack(1885,coff_H,plus) + s_slack(1885,coff_H,minus) + s_slack(1885,coff_L,plus) + s_slack(1885,coff_L,minus) + s_slack(1885,cott_L,plus)
     
      + s_slack(1885,cott_L,minus) + s_slack(1885,cowp_H,plus) + s_slack(1885,cowp_H,minus) + s_slack(1885,cowp_L,plus) + s_slack(1885,cowp_L,minus) + s_slack(1885,cowp_S,plus) + s_slack(1885,cowp_S,minus) + s_slack(1885,grou_H,plus)
     
      + s_slack(1885,grou_H,minus) + s_slack(1885,grou_L,plus) + s_slack(1885,grou_L,minus) + s_slack(1885,grou_S,plus) + s_slack(1885,grou_S,minus) + s_slack(1885,lent_H,plus) + s_slack(1885,lent_H,minus) + s_slack(1885,lent_L,plus)
     
      + s_slack(1885,lent_L,minus) + s_slack(1885,lent_S,plus) + s_slack(1885,lent_S,minus) + s_slack(1885,maiz_H,plus) + s_slack(1885,maiz_H,minus) + s_slack(1885,maiz_L,plus) + s_slack(1885,maiz_L,minus) + s_slack(1885,maiz_S,plus)
     
      + s_slack(1885,maiz_S,minus) + s_slack(1885,mill_H,plus) + s_slack(1885,mill_H,minus) + s_slack(1885,mill_L,plus) + s_slack(1885,mill_L,minus) + s_slack(1885,mill_S,plus) + s_slack(1885,mill_S,minus) + s_slack(1885,ofib_L,plus)
     
      + s_slack(1885,ofib_L,minus) + s_slack(1885,ooil_L,plus) + s_slack(1885,ooil_L,minus) + s_slack(1885,opul_H,plus) + s_slack(1885,opul_H,minus) + s_slack(1885,opul_L,plus) + s_slack(1885,opul_L,minus) + s_slack(1885,opul_S,plus)
     
      + s_slack(1885,opul_S,minus) + s_slack(1885,pige_H,plus) + s_slack(1885,pige_H,minus) + s_slack(1885,pige_L,plus) + s_slack(1885,pige_L,minus) + s_slack(1885,pige_S,plus) + s_slack(1885,pige_S,minus) + s_slack(1885,pota_H,plus)
     
      + s_slack(1885,pota_H,minus) + s_slack(1885,pota_L,plus) + s_slack(1885,pota_L,minus) + s_slack(1885,pota_S,plus) + s_slack(1885,pota_S,minus) + s_slack(1885,rest_H,plus) + s_slack(1885,rest_H,minus) + s_slack(1885,rest_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 145
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1885,rest_L,minus) + s_slack(1885,rest_S,plus) + s_slack(1885,rest_S,minus) + s_slack(1885,rice_H,plus) + s_slack(1885,rice_H,minus) + s_slack(1885,rice_L,plus) + s_slack(1885,rice_L,minus) + s_slack(1885,rice_S,plus)
     
      + s_slack(1885,rice_S,minus) + s_slack(1885,sorg_L,plus) + s_slack(1885,sorg_L,minus) + s_slack(1885,sorg_S,plus) + s_slack(1885,sorg_S,minus) + s_slack(1885,soyb_L,plus) + s_slack(1885,soyb_L,minus) + s_slack(1885,soyb_S,plus)
     
      + s_slack(1885,soyb_S,minus) + s_slack(1885,sunf_L,plus) + s_slack(1885,sunf_L,minus) + s_slack(1885,temf_H,plus) + s_slack(1885,temf_H,minus) + s_slack(1885,temf_L,plus) + s_slack(1885,temf_L,minus) + s_slack(1885,temf_S,plus)
     
      + s_slack(1885,temf_S,minus) + s_slack(1885,toba_H,plus) + s_slack(1885,toba_H,minus) + s_slack(1885,toba_L,plus) + s_slack(1885,toba_L,minus) + s_slack(1885,trof_L,plus) + s_slack(1885,trof_L,minus) + s_slack(1885,trof_S,plus)
     
      + s_slack(1885,trof_S,minus) + s_slack(1885,vege_H,plus) + s_slack(1885,vege_H,minus) + s_slack(1885,vege_L,plus) + s_slack(1885,vege_L,minus) + s_slack(1885,vege_S,plus) + s_slack(1885,vege_S,minus) + s_slack(1886,rice_I,plus)
     
      + s_slack(1886,rice_I,minus) + s_slack(1886,sugc_I,plus) + s_slack(1886,sugc_I,minus) + s_slack(1886,whea_I,plus) + s_slack(1886,whea_I,minus) + s_slack(1886,bean_H,plus) + s_slack(1886,bean_H,minus) + s_slack(1886,bean_L,plus)
     
      + s_slack(1886,bean_L,minus) + s_slack(1886,bean_S,plus) + s_slack(1886,bean_S,minus) + s_slack(1886,cass_L,plus) + s_slack(1886,cass_L,minus) + s_slack(1886,cass_S,plus) + s_slack(1886,cass_S,minus) + s_slack(1886,chic_H,plus)
     
      + s_slack(1886,chic_H,minus) + s_slack(1886,chic_L,plus) + s_slack(1886,chic_L,minus) + s_slack(1886,chic_S,plus) + s_slack(1886,chic_S,minus) + s_slack(1886,coff_H,plus) + s_slack(1886,coff_H,minus) + s_slack(1886,coff_L,plus)
     
      + s_slack(1886,coff_L,minus) + s_slack(1886,cott_L,plus) + s_slack(1886,cott_L,minus) + s_slack(1886,cowp_H,plus) + s_slack(1886,cowp_H,minus) + s_slack(1886,cowp_L,plus) + s_slack(1886,cowp_L,minus) + s_slack(1886,cowp_S,plus)
     
      + s_slack(1886,cowp_S,minus) + s_slack(1886,grou_H,plus) + s_slack(1886,grou_H,minus) + s_slack(1886,grou_L,plus) + s_slack(1886,grou_L,minus) + s_slack(1886,grou_S,plus) + s_slack(1886,grou_S,minus) + s_slack(1886,lent_H,plus)
     
      + s_slack(1886,lent_H,minus) + s_slack(1886,lent_L,plus) + s_slack(1886,lent_L,minus) + s_slack(1886,lent_S,plus) + s_slack(1886,lent_S,minus) + s_slack(1886,maiz_H,plus) + s_slack(1886,maiz_H,minus) + s_slack(1886,maiz_L,plus)
     
      + s_slack(1886,maiz_L,minus) + s_slack(1886,maiz_S,plus) + s_slack(1886,maiz_S,minus) + s_slack(1886,mill_H,plus) + s_slack(1886,mill_H,minus) + s_slack(1886,mill_L,plus) + s_slack(1886,mill_L,minus) + s_slack(1886,mill_S,plus)
     
      + s_slack(1886,mill_S,minus) + s_slack(1886,ofib_L,plus) + s_slack(1886,ofib_L,minus) + s_slack(1886,ooil_L,plus) + s_slack(1886,ooil_L,minus) + s_slack(1886,opul_H,plus) + s_slack(1886,opul_H,minus) + s_slack(1886,opul_L,plus)
     
      + s_slack(1886,opul_L,minus) + s_slack(1886,opul_S,plus) + s_slack(1886,opul_S,minus) + s_slack(1886,pige_H,plus) + s_slack(1886,pige_H,minus) + s_slack(1886,pige_L,plus) + s_slack(1886,pige_L,minus) + s_slack(1886,pige_S,plus)
     
      + s_slack(1886,pige_S,minus) + s_slack(1886,pota_H,plus) + s_slack(1886,pota_H,minus) + s_slack(1886,pota_L,plus) + s_slack(1886,pota_L,minus) + s_slack(1886,pota_S,plus) + s_slack(1886,pota_S,minus) + s_slack(1886,rest_H,plus)
     
      + s_slack(1886,rest_H,minus) + s_slack(1886,rest_L,plus) + s_slack(1886,rest_L,minus) + s_slack(1886,rest_S,plus) + s_slack(1886,rest_S,minus) + s_slack(1886,rice_H,plus) + s_slack(1886,rice_H,minus) + s_slack(1886,rice_L,plus)
     
      + s_slack(1886,rice_L,minus) + s_slack(1886,rice_S,plus) + s_slack(1886,rice_S,minus) + s_slack(1886,sorg_L,plus) + s_slack(1886,sorg_L,minus) + s_slack(1886,sorg_S,plus) + s_slack(1886,sorg_S,minus) + s_slack(1886,soyb_L,plus)
     
      + s_slack(1886,soyb_L,minus) + s_slack(1886,soyb_S,plus) + s_slack(1886,soyb_S,minus) + s_slack(1886,sunf_L,plus) + s_slack(1886,sunf_L,minus) + s_slack(1886,temf_H,plus) + s_slack(1886,temf_H,minus) + s_slack(1886,temf_L,plus)
     
      + s_slack(1886,temf_L,minus) + s_slack(1886,temf_S,plus) + s_slack(1886,temf_S,minus) + s_slack(1886,toba_H,plus) + s_slack(1886,toba_H,minus) + s_slack(1886,toba_L,plus) + s_slack(1886,toba_L,minus) + s_slack(1886,trof_L,plus)
     
      + s_slack(1886,trof_L,minus) + s_slack(1886,trof_S,plus) + s_slack(1886,trof_S,minus) + s_slack(1886,vege_H,plus) + s_slack(1886,vege_H,minus) + s_slack(1886,vege_L,plus) + s_slack(1886,vege_L,minus) + s_slack(1886,vege_S,plus)
     
      + s_slack(1886,vege_S,minus) + s_slack(1887,rice_I,plus) + s_slack(1887,rice_I,minus) + s_slack(1887,sugc_I,plus) + s_slack(1887,sugc_I,minus) + s_slack(1887,whea_I,plus) + s_slack(1887,whea_I,minus) + s_slack(1887,bean_H,plus)
     
      + s_slack(1887,bean_H,minus) + s_slack(1887,bean_L,plus) + s_slack(1887,bean_L,minus) + s_slack(1887,bean_S,plus) + s_slack(1887,bean_S,minus) + s_slack(1887,cass_L,plus) + s_slack(1887,cass_L,minus) + s_slack(1887,cass_S,plus)
     
      + s_slack(1887,cass_S,minus) + s_slack(1887,chic_H,plus) + s_slack(1887,chic_H,minus) + s_slack(1887,chic_L,plus) + s_slack(1887,chic_L,minus) + s_slack(1887,chic_S,plus) + s_slack(1887,chic_S,minus) + s_slack(1887,coff_H,plus)
     
      + s_slack(1887,coff_H,minus) + s_slack(1887,coff_L,plus) + s_slack(1887,coff_L,minus) + s_slack(1887,cott_L,plus) + s_slack(1887,cott_L,minus) + s_slack(1887,cowp_H,plus) + s_slack(1887,cowp_H,minus) + s_slack(1887,cowp_L,plus)
     
      + s_slack(1887,cowp_L,minus) + s_slack(1887,cowp_S,plus) + s_slack(1887,cowp_S,minus) + s_slack(1887,grou_H,plus) + s_slack(1887,grou_H,minus) + s_slack(1887,grou_L,plus) + s_slack(1887,grou_L,minus) + s_slack(1887,grou_S,plus)
     
      + s_slack(1887,grou_S,minus) + s_slack(1887,lent_H,plus) + s_slack(1887,lent_H,minus) + s_slack(1887,lent_L,plus) + s_slack(1887,lent_L,minus) + s_slack(1887,lent_S,plus) + s_slack(1887,lent_S,minus) + s_slack(1887,maiz_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 146
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1887,maiz_H,minus) + s_slack(1887,maiz_L,plus) + s_slack(1887,maiz_L,minus) + s_slack(1887,maiz_S,plus) + s_slack(1887,maiz_S,minus) + s_slack(1887,mill_H,plus) + s_slack(1887,mill_H,minus) + s_slack(1887,mill_L,plus)
     
      + s_slack(1887,mill_L,minus) + s_slack(1887,mill_S,plus) + s_slack(1887,mill_S,minus) + s_slack(1887,ofib_L,plus) + s_slack(1887,ofib_L,minus) + s_slack(1887,ooil_L,plus) + s_slack(1887,ooil_L,minus) + s_slack(1887,opul_H,plus)
     
      + s_slack(1887,opul_H,minus) + s_slack(1887,opul_L,plus) + s_slack(1887,opul_L,minus) + s_slack(1887,opul_S,plus) + s_slack(1887,opul_S,minus) + s_slack(1887,pige_H,plus) + s_slack(1887,pige_H,minus) + s_slack(1887,pige_L,plus)
     
      + s_slack(1887,pige_L,minus) + s_slack(1887,pige_S,plus) + s_slack(1887,pige_S,minus) + s_slack(1887,pota_H,plus) + s_slack(1887,pota_H,minus) + s_slack(1887,pota_L,plus) + s_slack(1887,pota_L,minus) + s_slack(1887,pota_S,plus)
     
      + s_slack(1887,pota_S,minus) + s_slack(1887,rest_H,plus) + s_slack(1887,rest_H,minus) + s_slack(1887,rest_L,plus) + s_slack(1887,rest_L,minus) + s_slack(1887,rest_S,plus) + s_slack(1887,rest_S,minus) + s_slack(1887,rice_H,plus)
     
      + s_slack(1887,rice_H,minus) + s_slack(1887,rice_L,plus) + s_slack(1887,rice_L,minus) + s_slack(1887,rice_S,plus) + s_slack(1887,rice_S,minus) + s_slack(1887,sorg_L,plus) + s_slack(1887,sorg_L,minus) + s_slack(1887,sorg_S,plus)
     
      + s_slack(1887,sorg_S,minus) + s_slack(1887,soyb_L,plus) + s_slack(1887,soyb_L,minus) + s_slack(1887,soyb_S,plus) + s_slack(1887,soyb_S,minus) + s_slack(1887,sunf_L,plus) + s_slack(1887,sunf_L,minus) + s_slack(1887,temf_H,plus)
     
      + s_slack(1887,temf_H,minus) + s_slack(1887,temf_L,plus) + s_slack(1887,temf_L,minus) + s_slack(1887,temf_S,plus) + s_slack(1887,temf_S,minus) + s_slack(1887,toba_H,plus) + s_slack(1887,toba_H,minus) + s_slack(1887,toba_L,plus)
     
      + s_slack(1887,toba_L,minus) + s_slack(1887,trof_L,plus) + s_slack(1887,trof_L,minus) + s_slack(1887,trof_S,plus) + s_slack(1887,trof_S,minus) + s_slack(1887,vege_H,plus) + s_slack(1887,vege_H,minus) + s_slack(1887,vege_L,plus)
     
      + s_slack(1887,vege_L,minus) + s_slack(1887,vege_S,plus) + s_slack(1887,vege_S,minus) + s_slack(1888,rice_I,plus) + s_slack(1888,rice_I,minus) + s_slack(1888,sugc_I,plus) + s_slack(1888,sugc_I,minus) + s_slack(1888,whea_I,plus)
     
      + s_slack(1888,whea_I,minus) + s_slack(1888,bean_H,plus) + s_slack(1888,bean_H,minus) + s_slack(1888,bean_L,plus) + s_slack(1888,bean_L,minus) + s_slack(1888,bean_S,plus) + s_slack(1888,bean_S,minus) + s_slack(1888,cass_L,plus)
     
      + s_slack(1888,cass_L,minus) + s_slack(1888,cass_S,plus) + s_slack(1888,cass_S,minus) + s_slack(1888,chic_H,plus) + s_slack(1888,chic_H,minus) + s_slack(1888,chic_L,plus) + s_slack(1888,chic_L,minus) + s_slack(1888,chic_S,plus)
     
      + s_slack(1888,chic_S,minus) + s_slack(1888,coff_H,plus) + s_slack(1888,coff_H,minus) + s_slack(1888,coff_L,plus) + s_slack(1888,coff_L,minus) + s_slack(1888,cott_L,plus) + s_slack(1888,cott_L,minus) + s_slack(1888,cowp_H,plus)
     
      + s_slack(1888,cowp_H,minus) + s_slack(1888,cowp_L,plus) + s_slack(1888,cowp_L,minus) + s_slack(1888,cowp_S,plus) + s_slack(1888,cowp_S,minus) + s_slack(1888,grou_H,plus) + s_slack(1888,grou_H,minus) + s_slack(1888,grou_L,plus)
     
      + s_slack(1888,grou_L,minus) + s_slack(1888,grou_S,plus) + s_slack(1888,grou_S,minus) + s_slack(1888,lent_H,plus) + s_slack(1888,lent_H,minus) + s_slack(1888,lent_L,plus) + s_slack(1888,lent_L,minus) + s_slack(1888,lent_S,plus)
     
      + s_slack(1888,lent_S,minus) + s_slack(1888,maiz_H,plus) + s_slack(1888,maiz_H,minus) + s_slack(1888,maiz_L,plus) + s_slack(1888,maiz_L,minus) + s_slack(1888,maiz_S,plus) + s_slack(1888,maiz_S,minus) + s_slack(1888,mill_H,plus)
     
      + s_slack(1888,mill_H,minus) + s_slack(1888,mill_L,plus) + s_slack(1888,mill_L,minus) + s_slack(1888,mill_S,plus) + s_slack(1888,mill_S,minus) + s_slack(1888,ofib_L,plus) + s_slack(1888,ofib_L,minus) + s_slack(1888,ooil_L,plus)
     
      + s_slack(1888,ooil_L,minus) + s_slack(1888,opul_H,plus) + s_slack(1888,opul_H,minus) + s_slack(1888,opul_L,plus) + s_slack(1888,opul_L,minus) + s_slack(1888,opul_S,plus) + s_slack(1888,opul_S,minus) + s_slack(1888,pige_H,plus)
     
      + s_slack(1888,pige_H,minus) + s_slack(1888,pige_L,plus) + s_slack(1888,pige_L,minus) + s_slack(1888,pige_S,plus) + s_slack(1888,pige_S,minus) + s_slack(1888,pota_H,plus) + s_slack(1888,pota_H,minus) + s_slack(1888,pota_L,plus)
     
      + s_slack(1888,pota_L,minus) + s_slack(1888,pota_S,plus) + s_slack(1888,pota_S,minus) + s_slack(1888,rest_H,plus) + s_slack(1888,rest_H,minus) + s_slack(1888,rest_L,plus) + s_slack(1888,rest_L,minus) + s_slack(1888,rest_S,plus)
     
      + s_slack(1888,rest_S,minus) + s_slack(1888,rice_H,plus) + s_slack(1888,rice_H,minus) + s_slack(1888,rice_L,plus) + s_slack(1888,rice_L,minus) + s_slack(1888,rice_S,plus) + s_slack(1888,rice_S,minus) + s_slack(1888,sorg_L,plus)
     
      + s_slack(1888,sorg_L,minus) + s_slack(1888,sorg_S,plus) + s_slack(1888,sorg_S,minus) + s_slack(1888,soyb_L,plus) + s_slack(1888,soyb_L,minus) + s_slack(1888,soyb_S,plus) + s_slack(1888,soyb_S,minus) + s_slack(1888,sunf_L,plus)
     
      + s_slack(1888,sunf_L,minus) + s_slack(1888,temf_H,plus) + s_slack(1888,temf_H,minus) + s_slack(1888,temf_L,plus) + s_slack(1888,temf_L,minus) + s_slack(1888,temf_S,plus) + s_slack(1888,temf_S,minus) + s_slack(1888,toba_H,plus)
     
      + s_slack(1888,toba_H,minus) + s_slack(1888,toba_L,plus) + s_slack(1888,toba_L,minus) + s_slack(1888,trof_L,plus) + s_slack(1888,trof_L,minus) + s_slack(1888,trof_S,plus) + s_slack(1888,trof_S,minus) + s_slack(1888,vege_H,plus)
     
      + s_slack(1888,vege_H,minus) + s_slack(1888,vege_L,plus) + s_slack(1888,vege_L,minus) + s_slack(1888,vege_S,plus) + s_slack(1888,vege_S,minus) + s_slack(1889,rice_I,plus) + s_slack(1889,rice_I,minus) + s_slack(1889,sugc_I,plus)
     
      + s_slack(1889,sugc_I,minus) + s_slack(1889,whea_I,plus) + s_slack(1889,whea_I,minus) + s_slack(1889,bean_H,plus) + s_slack(1889,bean_H,minus) + s_slack(1889,bean_L,plus) + s_slack(1889,bean_L,minus) + s_slack(1889,bean_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 147
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1889,bean_S,minus) + s_slack(1889,cass_L,plus) + s_slack(1889,cass_L,minus) + s_slack(1889,cass_S,plus) + s_slack(1889,cass_S,minus) + s_slack(1889,chic_H,plus) + s_slack(1889,chic_H,minus) + s_slack(1889,chic_L,plus)
     
      + s_slack(1889,chic_L,minus) + s_slack(1889,chic_S,plus) + s_slack(1889,chic_S,minus) + s_slack(1889,coff_H,plus) + s_slack(1889,coff_H,minus) + s_slack(1889,coff_L,plus) + s_slack(1889,coff_L,minus) + s_slack(1889,cott_L,plus)
     
      + s_slack(1889,cott_L,minus) + s_slack(1889,cowp_H,plus) + s_slack(1889,cowp_H,minus) + s_slack(1889,cowp_L,plus) + s_slack(1889,cowp_L,minus) + s_slack(1889,cowp_S,plus) + s_slack(1889,cowp_S,minus) + s_slack(1889,grou_H,plus)
     
      + s_slack(1889,grou_H,minus) + s_slack(1889,grou_L,plus) + s_slack(1889,grou_L,minus) + s_slack(1889,grou_S,plus) + s_slack(1889,grou_S,minus) + s_slack(1889,lent_H,plus) + s_slack(1889,lent_H,minus) + s_slack(1889,lent_L,plus)
     
      + s_slack(1889,lent_L,minus) + s_slack(1889,lent_S,plus) + s_slack(1889,lent_S,minus) + s_slack(1889,maiz_H,plus) + s_slack(1889,maiz_H,minus) + s_slack(1889,maiz_L,plus) + s_slack(1889,maiz_L,minus) + s_slack(1889,maiz_S,plus)
     
      + s_slack(1889,maiz_S,minus) + s_slack(1889,mill_H,plus) + s_slack(1889,mill_H,minus) + s_slack(1889,mill_L,plus) + s_slack(1889,mill_L,minus) + s_slack(1889,mill_S,plus) + s_slack(1889,mill_S,minus) + s_slack(1889,ofib_L,plus)
     
      + s_slack(1889,ofib_L,minus) + s_slack(1889,ooil_L,plus) + s_slack(1889,ooil_L,minus) + s_slack(1889,opul_H,plus) + s_slack(1889,opul_H,minus) + s_slack(1889,opul_L,plus) + s_slack(1889,opul_L,minus) + s_slack(1889,opul_S,plus)
     
      + s_slack(1889,opul_S,minus) + s_slack(1889,pige_H,plus) + s_slack(1889,pige_H,minus) + s_slack(1889,pige_L,plus) + s_slack(1889,pige_L,minus) + s_slack(1889,pige_S,plus) + s_slack(1889,pige_S,minus) + s_slack(1889,pota_H,plus)
     
      + s_slack(1889,pota_H,minus) + s_slack(1889,pota_L,plus) + s_slack(1889,pota_L,minus) + s_slack(1889,pota_S,plus) + s_slack(1889,pota_S,minus) + s_slack(1889,rest_H,plus) + s_slack(1889,rest_H,minus) + s_slack(1889,rest_L,plus)
     
      + s_slack(1889,rest_L,minus) + s_slack(1889,rest_S,plus) + s_slack(1889,rest_S,minus) + s_slack(1889,rice_H,plus) + s_slack(1889,rice_H,minus) + s_slack(1889,rice_L,plus) + s_slack(1889,rice_L,minus) + s_slack(1889,rice_S,plus)
     
      + s_slack(1889,rice_S,minus) + s_slack(1889,sorg_L,plus) + s_slack(1889,sorg_L,minus) + s_slack(1889,sorg_S,plus) + s_slack(1889,sorg_S,minus) + s_slack(1889,soyb_L,plus) + s_slack(1889,soyb_L,minus) + s_slack(1889,soyb_S,plus)
     
      + s_slack(1889,soyb_S,minus) + s_slack(1889,sunf_L,plus) + s_slack(1889,sunf_L,minus) + s_slack(1889,temf_H,plus) + s_slack(1889,temf_H,minus) + s_slack(1889,temf_L,plus) + s_slack(1889,temf_L,minus) + s_slack(1889,temf_S,plus)
     
      + s_slack(1889,temf_S,minus) + s_slack(1889,toba_H,plus) + s_slack(1889,toba_H,minus) + s_slack(1889,toba_L,plus) + s_slack(1889,toba_L,minus) + s_slack(1889,trof_L,plus) + s_slack(1889,trof_L,minus) + s_slack(1889,trof_S,plus)
     
      + s_slack(1889,trof_S,minus) + s_slack(1889,vege_H,plus) + s_slack(1889,vege_H,minus) + s_slack(1889,vege_L,plus) + s_slack(1889,vege_L,minus) + s_slack(1889,vege_S,plus) + s_slack(1889,vege_S,minus) + s_slack(1890,rice_I,plus)
     
      + s_slack(1890,rice_I,minus) + s_slack(1890,sugc_I,plus) + s_slack(1890,sugc_I,minus) + s_slack(1890,whea_I,plus) + s_slack(1890,whea_I,minus) + s_slack(1890,bean_H,plus) + s_slack(1890,bean_H,minus) + s_slack(1890,bean_L,plus)
     
      + s_slack(1890,bean_L,minus) + s_slack(1890,bean_S,plus) + s_slack(1890,bean_S,minus) + s_slack(1890,cass_L,plus) + s_slack(1890,cass_L,minus) + s_slack(1890,cass_S,plus) + s_slack(1890,cass_S,minus) + s_slack(1890,chic_H,plus)
     
      + s_slack(1890,chic_H,minus) + s_slack(1890,chic_L,plus) + s_slack(1890,chic_L,minus) + s_slack(1890,chic_S,plus) + s_slack(1890,chic_S,minus) + s_slack(1890,coff_H,plus) + s_slack(1890,coff_H,minus) + s_slack(1890,coff_L,plus)
     
      + s_slack(1890,coff_L,minus) + s_slack(1890,cott_L,plus) + s_slack(1890,cott_L,minus) + s_slack(1890,cowp_H,plus) + s_slack(1890,cowp_H,minus) + s_slack(1890,cowp_L,plus) + s_slack(1890,cowp_L,minus) + s_slack(1890,cowp_S,plus)
     
      + s_slack(1890,cowp_S,minus) + s_slack(1890,grou_H,plus) + s_slack(1890,grou_H,minus) + s_slack(1890,grou_L,plus) + s_slack(1890,grou_L,minus) + s_slack(1890,grou_S,plus) + s_slack(1890,grou_S,minus) + s_slack(1890,lent_H,plus)
     
      + s_slack(1890,lent_H,minus) + s_slack(1890,lent_L,plus) + s_slack(1890,lent_L,minus) + s_slack(1890,lent_S,plus) + s_slack(1890,lent_S,minus) + s_slack(1890,maiz_H,plus) + s_slack(1890,maiz_H,minus) + s_slack(1890,maiz_L,plus)
     
      + s_slack(1890,maiz_L,minus) + s_slack(1890,maiz_S,plus) + s_slack(1890,maiz_S,minus) + s_slack(1890,mill_H,plus) + s_slack(1890,mill_H,minus) + s_slack(1890,mill_L,plus) + s_slack(1890,mill_L,minus) + s_slack(1890,mill_S,plus)
     
      + s_slack(1890,mill_S,minus) + s_slack(1890,ofib_L,plus) + s_slack(1890,ofib_L,minus) + s_slack(1890,ooil_L,plus) + s_slack(1890,ooil_L,minus) + s_slack(1890,opul_H,plus) + s_slack(1890,opul_H,minus) + s_slack(1890,opul_L,plus)
     
      + s_slack(1890,opul_L,minus) + s_slack(1890,opul_S,plus) + s_slack(1890,opul_S,minus) + s_slack(1890,pige_H,plus) + s_slack(1890,pige_H,minus) + s_slack(1890,pige_L,plus) + s_slack(1890,pige_L,minus) + s_slack(1890,pige_S,plus)
     
      + s_slack(1890,pige_S,minus) + s_slack(1890,pota_H,plus) + s_slack(1890,pota_H,minus) + s_slack(1890,pota_L,plus) + s_slack(1890,pota_L,minus) + s_slack(1890,pota_S,plus) + s_slack(1890,pota_S,minus) + s_slack(1890,rest_H,plus)
     
      + s_slack(1890,rest_H,minus) + s_slack(1890,rest_L,plus) + s_slack(1890,rest_L,minus) + s_slack(1890,rest_S,plus) + s_slack(1890,rest_S,minus) + s_slack(1890,rice_H,plus) + s_slack(1890,rice_H,minus) + s_slack(1890,rice_L,plus)
     
      + s_slack(1890,rice_L,minus) + s_slack(1890,rice_S,plus) + s_slack(1890,rice_S,minus) + s_slack(1890,sorg_L,plus) + s_slack(1890,sorg_L,minus) + s_slack(1890,sorg_S,plus) + s_slack(1890,sorg_S,minus) + s_slack(1890,soyb_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 148
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1890,soyb_L,minus) + s_slack(1890,soyb_S,plus) + s_slack(1890,soyb_S,minus) + s_slack(1890,sunf_L,plus) + s_slack(1890,sunf_L,minus) + s_slack(1890,temf_H,plus) + s_slack(1890,temf_H,minus) + s_slack(1890,temf_L,plus)
     
      + s_slack(1890,temf_L,minus) + s_slack(1890,temf_S,plus) + s_slack(1890,temf_S,minus) + s_slack(1890,toba_H,plus) + s_slack(1890,toba_H,minus) + s_slack(1890,toba_L,plus) + s_slack(1890,toba_L,minus) + s_slack(1890,trof_L,plus)
     
      + s_slack(1890,trof_L,minus) + s_slack(1890,trof_S,plus) + s_slack(1890,trof_S,minus) + s_slack(1890,vege_H,plus) + s_slack(1890,vege_H,minus) + s_slack(1890,vege_L,plus) + s_slack(1890,vege_L,minus) + s_slack(1890,vege_S,plus)
     
      + s_slack(1890,vege_S,minus) + s_slack(1891,rice_I,plus) + s_slack(1891,rice_I,minus) + s_slack(1891,sugc_I,plus) + s_slack(1891,sugc_I,minus) + s_slack(1891,whea_I,plus) + s_slack(1891,whea_I,minus) + s_slack(1891,bean_H,plus)
     
      + s_slack(1891,bean_H,minus) + s_slack(1891,bean_L,plus) + s_slack(1891,bean_L,minus) + s_slack(1891,bean_S,plus) + s_slack(1891,bean_S,minus) + s_slack(1891,cass_L,plus) + s_slack(1891,cass_L,minus) + s_slack(1891,cass_S,plus)
     
      + s_slack(1891,cass_S,minus) + s_slack(1891,chic_H,plus) + s_slack(1891,chic_H,minus) + s_slack(1891,chic_L,plus) + s_slack(1891,chic_L,minus) + s_slack(1891,chic_S,plus) + s_slack(1891,chic_S,minus) + s_slack(1891,coff_H,plus)
     
      + s_slack(1891,coff_H,minus) + s_slack(1891,coff_L,plus) + s_slack(1891,coff_L,minus) + s_slack(1891,cott_L,plus) + s_slack(1891,cott_L,minus) + s_slack(1891,cowp_H,plus) + s_slack(1891,cowp_H,minus) + s_slack(1891,cowp_L,plus)
     
      + s_slack(1891,cowp_L,minus) + s_slack(1891,cowp_S,plus) + s_slack(1891,cowp_S,minus) + s_slack(1891,grou_H,plus) + s_slack(1891,grou_H,minus) + s_slack(1891,grou_L,plus) + s_slack(1891,grou_L,minus) + s_slack(1891,grou_S,plus)
     
      + s_slack(1891,grou_S,minus) + s_slack(1891,lent_H,plus) + s_slack(1891,lent_H,minus) + s_slack(1891,lent_L,plus) + s_slack(1891,lent_L,minus) + s_slack(1891,lent_S,plus) + s_slack(1891,lent_S,minus) + s_slack(1891,maiz_H,plus)
     
      + s_slack(1891,maiz_H,minus) + s_slack(1891,maiz_L,plus) + s_slack(1891,maiz_L,minus) + s_slack(1891,maiz_S,plus) + s_slack(1891,maiz_S,minus) + s_slack(1891,mill_H,plus) + s_slack(1891,mill_H,minus) + s_slack(1891,mill_L,plus)
     
      + s_slack(1891,mill_L,minus) + s_slack(1891,mill_S,plus) + s_slack(1891,mill_S,minus) + s_slack(1891,ofib_L,plus) + s_slack(1891,ofib_L,minus) + s_slack(1891,ooil_L,plus) + s_slack(1891,ooil_L,minus) + s_slack(1891,opul_H,plus)
     
      + s_slack(1891,opul_H,minus) + s_slack(1891,opul_L,plus) + s_slack(1891,opul_L,minus) + s_slack(1891,opul_S,plus) + s_slack(1891,opul_S,minus) + s_slack(1891,pige_H,plus) + s_slack(1891,pige_H,minus) + s_slack(1891,pige_L,plus)
     
      + s_slack(1891,pige_L,minus) + s_slack(1891,pige_S,plus) + s_slack(1891,pige_S,minus) + s_slack(1891,pota_H,plus) + s_slack(1891,pota_H,minus) + s_slack(1891,pota_L,plus) + s_slack(1891,pota_L,minus) + s_slack(1891,pota_S,plus)
     
      + s_slack(1891,pota_S,minus) + s_slack(1891,rest_H,plus) + s_slack(1891,rest_H,minus) + s_slack(1891,rest_L,plus) + s_slack(1891,rest_L,minus) + s_slack(1891,rest_S,plus) + s_slack(1891,rest_S,minus) + s_slack(1891,rice_H,plus)
     
      + s_slack(1891,rice_H,minus) + s_slack(1891,rice_L,plus) + s_slack(1891,rice_L,minus) + s_slack(1891,rice_S,plus) + s_slack(1891,rice_S,minus) + s_slack(1891,sorg_L,plus) + s_slack(1891,sorg_L,minus) + s_slack(1891,sorg_S,plus)
     
      + s_slack(1891,sorg_S,minus) + s_slack(1891,soyb_L,plus) + s_slack(1891,soyb_L,minus) + s_slack(1891,soyb_S,plus) + s_slack(1891,soyb_S,minus) + s_slack(1891,sunf_L,plus) + s_slack(1891,sunf_L,minus) + s_slack(1891,temf_H,plus)
     
      + s_slack(1891,temf_H,minus) + s_slack(1891,temf_L,plus) + s_slack(1891,temf_L,minus) + s_slack(1891,temf_S,plus) + s_slack(1891,temf_S,minus) + s_slack(1891,toba_H,plus) + s_slack(1891,toba_H,minus) + s_slack(1891,toba_L,plus)
     
      + s_slack(1891,toba_L,minus) + s_slack(1891,trof_L,plus) + s_slack(1891,trof_L,minus) + s_slack(1891,trof_S,plus) + s_slack(1891,trof_S,minus) + s_slack(1891,vege_H,plus) + s_slack(1891,vege_H,minus) + s_slack(1891,vege_L,plus)
     
      + s_slack(1891,vege_L,minus) + s_slack(1891,vege_S,plus) + s_slack(1891,vege_S,minus) + s_slack(1892,rice_I,plus) + s_slack(1892,rice_I,minus) + s_slack(1892,sugc_I,plus) + s_slack(1892,sugc_I,minus) + s_slack(1892,whea_I,plus)
     
      + s_slack(1892,whea_I,minus) + s_slack(1892,bean_H,plus) + s_slack(1892,bean_H,minus) + s_slack(1892,bean_L,plus) + s_slack(1892,bean_L,minus) + s_slack(1892,bean_S,plus) + s_slack(1892,bean_S,minus) + s_slack(1892,cass_L,plus)
     
      + s_slack(1892,cass_L,minus) + s_slack(1892,cass_S,plus) + s_slack(1892,cass_S,minus) + s_slack(1892,chic_H,plus) + s_slack(1892,chic_H,minus) + s_slack(1892,chic_L,plus) + s_slack(1892,chic_L,minus) + s_slack(1892,chic_S,plus)
     
      + s_slack(1892,chic_S,minus) + s_slack(1892,coff_H,plus) + s_slack(1892,coff_H,minus) + s_slack(1892,coff_L,plus) + s_slack(1892,coff_L,minus) + s_slack(1892,cott_L,plus) + s_slack(1892,cott_L,minus) + s_slack(1892,cowp_H,plus)
     
      + s_slack(1892,cowp_H,minus) + s_slack(1892,cowp_L,plus) + s_slack(1892,cowp_L,minus) + s_slack(1892,cowp_S,plus) + s_slack(1892,cowp_S,minus) + s_slack(1892,grou_H,plus) + s_slack(1892,grou_H,minus) + s_slack(1892,grou_L,plus)
     
      + s_slack(1892,grou_L,minus) + s_slack(1892,grou_S,plus) + s_slack(1892,grou_S,minus) + s_slack(1892,lent_H,plus) + s_slack(1892,lent_H,minus) + s_slack(1892,lent_L,plus) + s_slack(1892,lent_L,minus) + s_slack(1892,lent_S,plus)
     
      + s_slack(1892,lent_S,minus) + s_slack(1892,maiz_H,plus) + s_slack(1892,maiz_H,minus) + s_slack(1892,maiz_L,plus) + s_slack(1892,maiz_L,minus) + s_slack(1892,maiz_S,plus) + s_slack(1892,maiz_S,minus) + s_slack(1892,mill_H,plus)
     
      + s_slack(1892,mill_H,minus) + s_slack(1892,mill_L,plus) + s_slack(1892,mill_L,minus) + s_slack(1892,mill_S,plus) + s_slack(1892,mill_S,minus) + s_slack(1892,ofib_L,plus) + s_slack(1892,ofib_L,minus) + s_slack(1892,ooil_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 149
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1892,ooil_L,minus) + s_slack(1892,opul_H,plus) + s_slack(1892,opul_H,minus) + s_slack(1892,opul_L,plus) + s_slack(1892,opul_L,minus) + s_slack(1892,opul_S,plus) + s_slack(1892,opul_S,minus) + s_slack(1892,pige_H,plus)
     
      + s_slack(1892,pige_H,minus) + s_slack(1892,pige_L,plus) + s_slack(1892,pige_L,minus) + s_slack(1892,pige_S,plus) + s_slack(1892,pige_S,minus) + s_slack(1892,pota_H,plus) + s_slack(1892,pota_H,minus) + s_slack(1892,pota_L,plus)
     
      + s_slack(1892,pota_L,minus) + s_slack(1892,pota_S,plus) + s_slack(1892,pota_S,minus) + s_slack(1892,rest_H,plus) + s_slack(1892,rest_H,minus) + s_slack(1892,rest_L,plus) + s_slack(1892,rest_L,minus) + s_slack(1892,rest_S,plus)
     
      + s_slack(1892,rest_S,minus) + s_slack(1892,rice_H,plus) + s_slack(1892,rice_H,minus) + s_slack(1892,rice_L,plus) + s_slack(1892,rice_L,minus) + s_slack(1892,rice_S,plus) + s_slack(1892,rice_S,minus) + s_slack(1892,sorg_L,plus)
     
      + s_slack(1892,sorg_L,minus) + s_slack(1892,sorg_S,plus) + s_slack(1892,sorg_S,minus) + s_slack(1892,soyb_L,plus) + s_slack(1892,soyb_L,minus) + s_slack(1892,soyb_S,plus) + s_slack(1892,soyb_S,minus) + s_slack(1892,sunf_L,plus)
     
      + s_slack(1892,sunf_L,minus) + s_slack(1892,temf_H,plus) + s_slack(1892,temf_H,minus) + s_slack(1892,temf_L,plus) + s_slack(1892,temf_L,minus) + s_slack(1892,temf_S,plus) + s_slack(1892,temf_S,minus) + s_slack(1892,toba_H,plus)
     
      + s_slack(1892,toba_H,minus) + s_slack(1892,toba_L,plus) + s_slack(1892,toba_L,minus) + s_slack(1892,trof_L,plus) + s_slack(1892,trof_L,minus) + s_slack(1892,trof_S,plus) + s_slack(1892,trof_S,minus) + s_slack(1892,vege_H,plus)
     
      + s_slack(1892,vege_H,minus) + s_slack(1892,vege_L,plus) + s_slack(1892,vege_L,minus) + s_slack(1892,vege_S,plus) + s_slack(1892,vege_S,minus) + s_slack(1915,rice_I,plus) + s_slack(1915,rice_I,minus) + s_slack(1915,sugc_I,plus)
     
      + s_slack(1915,sugc_I,minus) + s_slack(1915,whea_I,plus) + s_slack(1915,whea_I,minus) + s_slack(1915,bean_H,plus) + s_slack(1915,bean_H,minus) + s_slack(1915,bean_L,plus) + s_slack(1915,bean_L,minus) + s_slack(1915,bean_S,plus)
     
      + s_slack(1915,bean_S,minus) + s_slack(1915,cass_L,plus) + s_slack(1915,cass_L,minus) + s_slack(1915,cass_S,plus) + s_slack(1915,cass_S,minus) + s_slack(1915,chic_H,plus) + s_slack(1915,chic_H,minus) + s_slack(1915,chic_L,plus)
     
      + s_slack(1915,chic_L,minus) + s_slack(1915,chic_S,plus) + s_slack(1915,chic_S,minus) + s_slack(1915,coff_H,plus) + s_slack(1915,coff_H,minus) + s_slack(1915,coff_L,plus) + s_slack(1915,coff_L,minus) + s_slack(1915,cott_L,plus)
     
      + s_slack(1915,cott_L,minus) + s_slack(1915,cowp_H,plus) + s_slack(1915,cowp_H,minus) + s_slack(1915,cowp_L,plus) + s_slack(1915,cowp_L,minus) + s_slack(1915,cowp_S,plus) + s_slack(1915,cowp_S,minus) + s_slack(1915,grou_H,plus)
     
      + s_slack(1915,grou_H,minus) + s_slack(1915,grou_L,plus) + s_slack(1915,grou_L,minus) + s_slack(1915,grou_S,plus) + s_slack(1915,grou_S,minus) + s_slack(1915,lent_H,plus) + s_slack(1915,lent_H,minus) + s_slack(1915,lent_L,plus)
     
      + s_slack(1915,lent_L,minus) + s_slack(1915,lent_S,plus) + s_slack(1915,lent_S,minus) + s_slack(1915,maiz_H,plus) + s_slack(1915,maiz_H,minus) + s_slack(1915,maiz_L,plus) + s_slack(1915,maiz_L,minus) + s_slack(1915,maiz_S,plus)
     
      + s_slack(1915,maiz_S,minus) + s_slack(1915,mill_H,plus) + s_slack(1915,mill_H,minus) + s_slack(1915,mill_L,plus) + s_slack(1915,mill_L,minus) + s_slack(1915,mill_S,plus) + s_slack(1915,mill_S,minus) + s_slack(1915,ofib_L,plus)
     
      + s_slack(1915,ofib_L,minus) + s_slack(1915,ooil_L,plus) + s_slack(1915,ooil_L,minus) + s_slack(1915,opul_H,plus) + s_slack(1915,opul_H,minus) + s_slack(1915,opul_L,plus) + s_slack(1915,opul_L,minus) + s_slack(1915,opul_S,plus)
     
      + s_slack(1915,opul_S,minus) + s_slack(1915,pige_H,plus) + s_slack(1915,pige_H,minus) + s_slack(1915,pige_L,plus) + s_slack(1915,pige_L,minus) + s_slack(1915,pige_S,plus) + s_slack(1915,pige_S,minus) + s_slack(1915,pota_H,plus)
     
      + s_slack(1915,pota_H,minus) + s_slack(1915,pota_L,plus) + s_slack(1915,pota_L,minus) + s_slack(1915,pota_S,plus) + s_slack(1915,pota_S,minus) + s_slack(1915,rest_H,plus) + s_slack(1915,rest_H,minus) + s_slack(1915,rest_L,plus)
     
      + s_slack(1915,rest_L,minus) + s_slack(1915,rest_S,plus) + s_slack(1915,rest_S,minus) + s_slack(1915,rice_H,plus) + s_slack(1915,rice_H,minus) + s_slack(1915,rice_L,plus) + s_slack(1915,rice_L,minus) + s_slack(1915,rice_S,plus)
     
      + s_slack(1915,rice_S,minus) + s_slack(1915,sorg_L,plus) + s_slack(1915,sorg_L,minus) + s_slack(1915,sorg_S,plus) + s_slack(1915,sorg_S,minus) + s_slack(1915,soyb_L,plus) + s_slack(1915,soyb_L,minus) + s_slack(1915,soyb_S,plus)
     
      + s_slack(1915,soyb_S,minus) + s_slack(1915,sunf_L,plus) + s_slack(1915,sunf_L,minus) + s_slack(1915,temf_H,plus) + s_slack(1915,temf_H,minus) + s_slack(1915,temf_L,plus) + s_slack(1915,temf_L,minus) + s_slack(1915,temf_S,plus)
     
      + s_slack(1915,temf_S,minus) + s_slack(1915,toba_H,plus) + s_slack(1915,toba_H,minus) + s_slack(1915,toba_L,plus) + s_slack(1915,toba_L,minus) + s_slack(1915,trof_L,plus) + s_slack(1915,trof_L,minus) + s_slack(1915,trof_S,plus)
     
      + s_slack(1915,trof_S,minus) + s_slack(1915,vege_H,plus) + s_slack(1915,vege_H,minus) + s_slack(1915,vege_L,plus) + s_slack(1915,vege_L,minus) + s_slack(1915,vege_S,plus) + s_slack(1915,vege_S,minus) + s_slack(1918,rice_I,plus)
     
      + s_slack(1918,rice_I,minus) + s_slack(1918,sugc_I,plus) + s_slack(1918,sugc_I,minus) + s_slack(1918,whea_I,plus) + s_slack(1918,whea_I,minus) + s_slack(1918,bean_H,plus) + s_slack(1918,bean_H,minus) + s_slack(1918,bean_L,plus)
     
      + s_slack(1918,bean_L,minus) + s_slack(1918,bean_S,plus) + s_slack(1918,bean_S,minus) + s_slack(1918,cass_L,plus) + s_slack(1918,cass_L,minus) + s_slack(1918,cass_S,plus) + s_slack(1918,cass_S,minus) + s_slack(1918,chic_H,plus)
     
      + s_slack(1918,chic_H,minus) + s_slack(1918,chic_L,plus) + s_slack(1918,chic_L,minus) + s_slack(1918,chic_S,plus) + s_slack(1918,chic_S,minus) + s_slack(1918,coff_H,plus) + s_slack(1918,coff_H,minus) + s_slack(1918,coff_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 150
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1918,coff_L,minus) + s_slack(1918,cott_L,plus) + s_slack(1918,cott_L,minus) + s_slack(1918,cowp_H,plus) + s_slack(1918,cowp_H,minus) + s_slack(1918,cowp_L,plus) + s_slack(1918,cowp_L,minus) + s_slack(1918,cowp_S,plus)
     
      + s_slack(1918,cowp_S,minus) + s_slack(1918,grou_H,plus) + s_slack(1918,grou_H,minus) + s_slack(1918,grou_L,plus) + s_slack(1918,grou_L,minus) + s_slack(1918,grou_S,plus) + s_slack(1918,grou_S,minus) + s_slack(1918,lent_H,plus)
     
      + s_slack(1918,lent_H,minus) + s_slack(1918,lent_L,plus) + s_slack(1918,lent_L,minus) + s_slack(1918,lent_S,plus) + s_slack(1918,lent_S,minus) + s_slack(1918,maiz_H,plus) + s_slack(1918,maiz_H,minus) + s_slack(1918,maiz_L,plus)
     
      + s_slack(1918,maiz_L,minus) + s_slack(1918,maiz_S,plus) + s_slack(1918,maiz_S,minus) + s_slack(1918,mill_H,plus) + s_slack(1918,mill_H,minus) + s_slack(1918,mill_L,plus) + s_slack(1918,mill_L,minus) + s_slack(1918,mill_S,plus)
     
      + s_slack(1918,mill_S,minus) + s_slack(1918,ofib_L,plus) + s_slack(1918,ofib_L,minus) + s_slack(1918,ooil_L,plus) + s_slack(1918,ooil_L,minus) + s_slack(1918,opul_H,plus) + s_slack(1918,opul_H,minus) + s_slack(1918,opul_L,plus)
     
      + s_slack(1918,opul_L,minus) + s_slack(1918,opul_S,plus) + s_slack(1918,opul_S,minus) + s_slack(1918,pige_H,plus) + s_slack(1918,pige_H,minus) + s_slack(1918,pige_L,plus) + s_slack(1918,pige_L,minus) + s_slack(1918,pige_S,plus)
     
      + s_slack(1918,pige_S,minus) + s_slack(1918,pota_H,plus) + s_slack(1918,pota_H,minus) + s_slack(1918,pota_L,plus) + s_slack(1918,pota_L,minus) + s_slack(1918,pota_S,plus) + s_slack(1918,pota_S,minus) + s_slack(1918,rest_H,plus)
     
      + s_slack(1918,rest_H,minus) + s_slack(1918,rest_L,plus) + s_slack(1918,rest_L,minus) + s_slack(1918,rest_S,plus) + s_slack(1918,rest_S,minus) + s_slack(1918,rice_H,plus) + s_slack(1918,rice_H,minus) + s_slack(1918,rice_L,plus)
     
      + s_slack(1918,rice_L,minus) + s_slack(1918,rice_S,plus) + s_slack(1918,rice_S,minus) + s_slack(1918,sorg_L,plus) + s_slack(1918,sorg_L,minus) + s_slack(1918,sorg_S,plus) + s_slack(1918,sorg_S,minus) + s_slack(1918,soyb_L,plus)
     
      + s_slack(1918,soyb_L,minus) + s_slack(1918,soyb_S,plus) + s_slack(1918,soyb_S,minus) + s_slack(1918,sunf_L,plus) + s_slack(1918,sunf_L,minus) + s_slack(1918,temf_H,plus) + s_slack(1918,temf_H,minus) + s_slack(1918,temf_L,plus)
     
      + s_slack(1918,temf_L,minus) + s_slack(1918,temf_S,plus) + s_slack(1918,temf_S,minus) + s_slack(1918,toba_H,plus) + s_slack(1918,toba_H,minus) + s_slack(1918,toba_L,plus) + s_slack(1918,toba_L,minus) + s_slack(1918,trof_L,plus)
     
      + s_slack(1918,trof_L,minus) + s_slack(1918,trof_S,plus) + s_slack(1918,trof_S,minus) + s_slack(1918,vege_H,plus) + s_slack(1918,vege_H,minus) + s_slack(1918,vege_L,plus) + s_slack(1918,vege_L,minus) + s_slack(1918,vege_S,plus)
     
      + s_slack(1918,vege_S,minus) + s_slack(1919,rice_I,plus) + s_slack(1919,rice_I,minus) + s_slack(1919,sugc_I,plus) + s_slack(1919,sugc_I,minus) + s_slack(1919,whea_I,plus) + s_slack(1919,whea_I,minus) + s_slack(1919,bean_H,plus)
     
      + s_slack(1919,bean_H,minus) + s_slack(1919,bean_L,plus) + s_slack(1919,bean_L,minus) + s_slack(1919,bean_S,plus) + s_slack(1919,bean_S,minus) + s_slack(1919,cass_L,plus) + s_slack(1919,cass_L,minus) + s_slack(1919,cass_S,plus)
     
      + s_slack(1919,cass_S,minus) + s_slack(1919,chic_H,plus) + s_slack(1919,chic_H,minus) + s_slack(1919,chic_L,plus) + s_slack(1919,chic_L,minus) + s_slack(1919,chic_S,plus) + s_slack(1919,chic_S,minus) + s_slack(1919,coff_H,plus)
     
      + s_slack(1919,coff_H,minus) + s_slack(1919,coff_L,plus) + s_slack(1919,coff_L,minus) + s_slack(1919,cott_L,plus) + s_slack(1919,cott_L,minus) + s_slack(1919,cowp_H,plus) + s_slack(1919,cowp_H,minus) + s_slack(1919,cowp_L,plus)
     
      + s_slack(1919,cowp_L,minus) + s_slack(1919,cowp_S,plus) + s_slack(1919,cowp_S,minus) + s_slack(1919,grou_H,plus) + s_slack(1919,grou_H,minus) + s_slack(1919,grou_L,plus) + s_slack(1919,grou_L,minus) + s_slack(1919,grou_S,plus)
     
      + s_slack(1919,grou_S,minus) + s_slack(1919,lent_H,plus) + s_slack(1919,lent_H,minus) + s_slack(1919,lent_L,plus) + s_slack(1919,lent_L,minus) + s_slack(1919,lent_S,plus) + s_slack(1919,lent_S,minus) + s_slack(1919,maiz_H,plus)
     
      + s_slack(1919,maiz_H,minus) + s_slack(1919,maiz_L,plus) + s_slack(1919,maiz_L,minus) + s_slack(1919,maiz_S,plus) + s_slack(1919,maiz_S,minus) + s_slack(1919,mill_H,plus) + s_slack(1919,mill_H,minus) + s_slack(1919,mill_L,plus)
     
      + s_slack(1919,mill_L,minus) + s_slack(1919,mill_S,plus) + s_slack(1919,mill_S,minus) + s_slack(1919,ofib_L,plus) + s_slack(1919,ofib_L,minus) + s_slack(1919,ooil_L,plus) + s_slack(1919,ooil_L,minus) + s_slack(1919,opul_H,plus)
     
      + s_slack(1919,opul_H,minus) + s_slack(1919,opul_L,plus) + s_slack(1919,opul_L,minus) + s_slack(1919,opul_S,plus) + s_slack(1919,opul_S,minus) + s_slack(1919,pige_H,plus) + s_slack(1919,pige_H,minus) + s_slack(1919,pige_L,plus)
     
      + s_slack(1919,pige_L,minus) + s_slack(1919,pige_S,plus) + s_slack(1919,pige_S,minus) + s_slack(1919,pota_H,plus) + s_slack(1919,pota_H,minus) + s_slack(1919,pota_L,plus) + s_slack(1919,pota_L,minus) + s_slack(1919,pota_S,plus)
     
      + s_slack(1919,pota_S,minus) + s_slack(1919,rest_H,plus) + s_slack(1919,rest_H,minus) + s_slack(1919,rest_L,plus) + s_slack(1919,rest_L,minus) + s_slack(1919,rest_S,plus) + s_slack(1919,rest_S,minus) + s_slack(1919,rice_H,plus)
     
      + s_slack(1919,rice_H,minus) + s_slack(1919,rice_L,plus) + s_slack(1919,rice_L,minus) + s_slack(1919,rice_S,plus) + s_slack(1919,rice_S,minus) + s_slack(1919,sorg_L,plus) + s_slack(1919,sorg_L,minus) + s_slack(1919,sorg_S,plus)
     
      + s_slack(1919,sorg_S,minus) + s_slack(1919,soyb_L,plus) + s_slack(1919,soyb_L,minus) + s_slack(1919,soyb_S,plus) + s_slack(1919,soyb_S,minus) + s_slack(1919,sunf_L,plus) + s_slack(1919,sunf_L,minus) + s_slack(1919,temf_H,plus)
     
      + s_slack(1919,temf_H,minus) + s_slack(1919,temf_L,plus) + s_slack(1919,temf_L,minus) + s_slack(1919,temf_S,plus) + s_slack(1919,temf_S,minus) + s_slack(1919,toba_H,plus) + s_slack(1919,toba_H,minus) + s_slack(1919,toba_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 151
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1919,toba_L,minus) + s_slack(1919,trof_L,plus) + s_slack(1919,trof_L,minus) + s_slack(1919,trof_S,plus) + s_slack(1919,trof_S,minus) + s_slack(1919,vege_H,plus) + s_slack(1919,vege_H,minus) + s_slack(1919,vege_L,plus)
     
      + s_slack(1919,vege_L,minus) + s_slack(1919,vege_S,plus) + s_slack(1919,vege_S,minus) + s_slack(1920,rice_I,plus) + s_slack(1920,rice_I,minus) + s_slack(1920,sugc_I,plus) + s_slack(1920,sugc_I,minus) + s_slack(1920,whea_I,plus)
     
      + s_slack(1920,whea_I,minus) + s_slack(1920,bean_H,plus) + s_slack(1920,bean_H,minus) + s_slack(1920,bean_L,plus) + s_slack(1920,bean_L,minus) + s_slack(1920,bean_S,plus) + s_slack(1920,bean_S,minus) + s_slack(1920,cass_L,plus)
     
      + s_slack(1920,cass_L,minus) + s_slack(1920,cass_S,plus) + s_slack(1920,cass_S,minus) + s_slack(1920,chic_H,plus) + s_slack(1920,chic_H,minus) + s_slack(1920,chic_L,plus) + s_slack(1920,chic_L,minus) + s_slack(1920,chic_S,plus)
     
      + s_slack(1920,chic_S,minus) + s_slack(1920,coff_H,plus) + s_slack(1920,coff_H,minus) + s_slack(1920,coff_L,plus) + s_slack(1920,coff_L,minus) + s_slack(1920,cott_L,plus) + s_slack(1920,cott_L,minus) + s_slack(1920,cowp_H,plus)
     
      + s_slack(1920,cowp_H,minus) + s_slack(1920,cowp_L,plus) + s_slack(1920,cowp_L,minus) + s_slack(1920,cowp_S,plus) + s_slack(1920,cowp_S,minus) + s_slack(1920,grou_H,plus) + s_slack(1920,grou_H,minus) + s_slack(1920,grou_L,plus)
     
      + s_slack(1920,grou_L,minus) + s_slack(1920,grou_S,plus) + s_slack(1920,grou_S,minus) + s_slack(1920,lent_H,plus) + s_slack(1920,lent_H,minus) + s_slack(1920,lent_L,plus) + s_slack(1920,lent_L,minus) + s_slack(1920,lent_S,plus)
     
      + s_slack(1920,lent_S,minus) + s_slack(1920,maiz_H,plus) + s_slack(1920,maiz_H,minus) + s_slack(1920,maiz_L,plus) + s_slack(1920,maiz_L,minus) + s_slack(1920,maiz_S,plus) + s_slack(1920,maiz_S,minus) + s_slack(1920,mill_H,plus)
     
      + s_slack(1920,mill_H,minus) + s_slack(1920,mill_L,plus) + s_slack(1920,mill_L,minus) + s_slack(1920,mill_S,plus) + s_slack(1920,mill_S,minus) + s_slack(1920,ofib_L,plus) + s_slack(1920,ofib_L,minus) + s_slack(1920,ooil_L,plus)
     
      + s_slack(1920,ooil_L,minus) + s_slack(1920,opul_H,plus) + s_slack(1920,opul_H,minus) + s_slack(1920,opul_L,plus) + s_slack(1920,opul_L,minus) + s_slack(1920,opul_S,plus) + s_slack(1920,opul_S,minus) + s_slack(1920,pige_H,plus)
     
      + s_slack(1920,pige_H,minus) + s_slack(1920,pige_L,plus) + s_slack(1920,pige_L,minus) + s_slack(1920,pige_S,plus) + s_slack(1920,pige_S,minus) + s_slack(1920,pota_H,plus) + s_slack(1920,pota_H,minus) + s_slack(1920,pota_L,plus)
     
      + s_slack(1920,pota_L,minus) + s_slack(1920,pota_S,plus) + s_slack(1920,pota_S,minus) + s_slack(1920,rest_H,plus) + s_slack(1920,rest_H,minus) + s_slack(1920,rest_L,plus) + s_slack(1920,rest_L,minus) + s_slack(1920,rest_S,plus)
     
      + s_slack(1920,rest_S,minus) + s_slack(1920,rice_H,plus) + s_slack(1920,rice_H,minus) + s_slack(1920,rice_L,plus) + s_slack(1920,rice_L,minus) + s_slack(1920,rice_S,plus) + s_slack(1920,rice_S,minus) + s_slack(1920,sorg_L,plus)
     
      + s_slack(1920,sorg_L,minus) + s_slack(1920,sorg_S,plus) + s_slack(1920,sorg_S,minus) + s_slack(1920,soyb_L,plus) + s_slack(1920,soyb_L,minus) + s_slack(1920,soyb_S,plus) + s_slack(1920,soyb_S,minus) + s_slack(1920,sunf_L,plus)
     
      + s_slack(1920,sunf_L,minus) + s_slack(1920,temf_H,plus) + s_slack(1920,temf_H,minus) + s_slack(1920,temf_L,plus) + s_slack(1920,temf_L,minus) + s_slack(1920,temf_S,plus) + s_slack(1920,temf_S,minus) + s_slack(1920,toba_H,plus)
     
      + s_slack(1920,toba_H,minus) + s_slack(1920,toba_L,plus) + s_slack(1920,toba_L,minus) + s_slack(1920,trof_L,plus) + s_slack(1920,trof_L,minus) + s_slack(1920,trof_S,plus) + s_slack(1920,trof_S,minus) + s_slack(1920,vege_H,plus)
     
      + s_slack(1920,vege_H,minus) + s_slack(1920,vege_L,plus) + s_slack(1920,vege_L,minus) + s_slack(1920,vege_S,plus) + s_slack(1920,vege_S,minus) + s_slack(1921,rice_I,plus) + s_slack(1921,rice_I,minus) + s_slack(1921,sugc_I,plus)
     
      + s_slack(1921,sugc_I,minus) + s_slack(1921,whea_I,plus) + s_slack(1921,whea_I,minus) + s_slack(1921,bean_H,plus) + s_slack(1921,bean_H,minus) + s_slack(1921,bean_L,plus) + s_slack(1921,bean_L,minus) + s_slack(1921,bean_S,plus)
     
      + s_slack(1921,bean_S,minus) + s_slack(1921,cass_L,plus) + s_slack(1921,cass_L,minus) + s_slack(1921,cass_S,plus) + s_slack(1921,cass_S,minus) + s_slack(1921,chic_H,plus) + s_slack(1921,chic_H,minus) + s_slack(1921,chic_L,plus)
     
      + s_slack(1921,chic_L,minus) + s_slack(1921,chic_S,plus) + s_slack(1921,chic_S,minus) + s_slack(1921,coff_H,plus) + s_slack(1921,coff_H,minus) + s_slack(1921,coff_L,plus) + s_slack(1921,coff_L,minus) + s_slack(1921,cott_L,plus)
     
      + s_slack(1921,cott_L,minus) + s_slack(1921,cowp_H,plus) + s_slack(1921,cowp_H,minus) + s_slack(1921,cowp_L,plus) + s_slack(1921,cowp_L,minus) + s_slack(1921,cowp_S,plus) + s_slack(1921,cowp_S,minus) + s_slack(1921,grou_H,plus)
     
      + s_slack(1921,grou_H,minus) + s_slack(1921,grou_L,plus) + s_slack(1921,grou_L,minus) + s_slack(1921,grou_S,plus) + s_slack(1921,grou_S,minus) + s_slack(1921,lent_H,plus) + s_slack(1921,lent_H,minus) + s_slack(1921,lent_L,plus)
     
      + s_slack(1921,lent_L,minus) + s_slack(1921,lent_S,plus) + s_slack(1921,lent_S,minus) + s_slack(1921,maiz_H,plus) + s_slack(1921,maiz_H,minus) + s_slack(1921,maiz_L,plus) + s_slack(1921,maiz_L,minus) + s_slack(1921,maiz_S,plus)
     
      + s_slack(1921,maiz_S,minus) + s_slack(1921,mill_H,plus) + s_slack(1921,mill_H,minus) + s_slack(1921,mill_L,plus) + s_slack(1921,mill_L,minus) + s_slack(1921,mill_S,plus) + s_slack(1921,mill_S,minus) + s_slack(1921,ofib_L,plus)
     
      + s_slack(1921,ofib_L,minus) + s_slack(1921,ooil_L,plus) + s_slack(1921,ooil_L,minus) + s_slack(1921,opul_H,plus) + s_slack(1921,opul_H,minus) + s_slack(1921,opul_L,plus) + s_slack(1921,opul_L,minus) + s_slack(1921,opul_S,plus)
     
      + s_slack(1921,opul_S,minus) + s_slack(1921,pige_H,plus) + s_slack(1921,pige_H,minus) + s_slack(1921,pige_L,plus) + s_slack(1921,pige_L,minus) + s_slack(1921,pige_S,plus) + s_slack(1921,pige_S,minus) + s_slack(1921,pota_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 152
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1921,pota_H,minus) + s_slack(1921,pota_L,plus) + s_slack(1921,pota_L,minus) + s_slack(1921,pota_S,plus) + s_slack(1921,pota_S,minus) + s_slack(1921,rest_H,plus) + s_slack(1921,rest_H,minus) + s_slack(1921,rest_L,plus)
     
      + s_slack(1921,rest_L,minus) + s_slack(1921,rest_S,plus) + s_slack(1921,rest_S,minus) + s_slack(1921,rice_H,plus) + s_slack(1921,rice_H,minus) + s_slack(1921,rice_L,plus) + s_slack(1921,rice_L,minus) + s_slack(1921,rice_S,plus)
     
      + s_slack(1921,rice_S,minus) + s_slack(1921,sorg_L,plus) + s_slack(1921,sorg_L,minus) + s_slack(1921,sorg_S,plus) + s_slack(1921,sorg_S,minus) + s_slack(1921,soyb_L,plus) + s_slack(1921,soyb_L,minus) + s_slack(1921,soyb_S,plus)
     
      + s_slack(1921,soyb_S,minus) + s_slack(1921,sunf_L,plus) + s_slack(1921,sunf_L,minus) + s_slack(1921,temf_H,plus) + s_slack(1921,temf_H,minus) + s_slack(1921,temf_L,plus) + s_slack(1921,temf_L,minus) + s_slack(1921,temf_S,plus)
     
      + s_slack(1921,temf_S,minus) + s_slack(1921,toba_H,plus) + s_slack(1921,toba_H,minus) + s_slack(1921,toba_L,plus) + s_slack(1921,toba_L,minus) + s_slack(1921,trof_L,plus) + s_slack(1921,trof_L,minus) + s_slack(1921,trof_S,plus)
     
      + s_slack(1921,trof_S,minus) + s_slack(1921,vege_H,plus) + s_slack(1921,vege_H,minus) + s_slack(1921,vege_L,plus) + s_slack(1921,vege_L,minus) + s_slack(1921,vege_S,plus) + s_slack(1921,vege_S,minus) + s_slack(1922,rice_I,plus)
     
      + s_slack(1922,rice_I,minus) + s_slack(1922,sugc_I,plus) + s_slack(1922,sugc_I,minus) + s_slack(1922,whea_I,plus) + s_slack(1922,whea_I,minus) + s_slack(1922,bean_H,plus) + s_slack(1922,bean_H,minus) + s_slack(1922,bean_L,plus)
     
      + s_slack(1922,bean_L,minus) + s_slack(1922,bean_S,plus) + s_slack(1922,bean_S,minus) + s_slack(1922,cass_L,plus) + s_slack(1922,cass_L,minus) + s_slack(1922,cass_S,plus) + s_slack(1922,cass_S,minus) + s_slack(1922,chic_H,plus)
     
      + s_slack(1922,chic_H,minus) + s_slack(1922,chic_L,plus) + s_slack(1922,chic_L,minus) + s_slack(1922,chic_S,plus) + s_slack(1922,chic_S,minus) + s_slack(1922,coff_H,plus) + s_slack(1922,coff_H,minus) + s_slack(1922,coff_L,plus)
     
      + s_slack(1922,coff_L,minus) + s_slack(1922,cott_L,plus) + s_slack(1922,cott_L,minus) + s_slack(1922,cowp_H,plus) + s_slack(1922,cowp_H,minus) + s_slack(1922,cowp_L,plus) + s_slack(1922,cowp_L,minus) + s_slack(1922,cowp_S,plus)
     
      + s_slack(1922,cowp_S,minus) + s_slack(1922,grou_H,plus) + s_slack(1922,grou_H,minus) + s_slack(1922,grou_L,plus) + s_slack(1922,grou_L,minus) + s_slack(1922,grou_S,plus) + s_slack(1922,grou_S,minus) + s_slack(1922,lent_H,plus)
     
      + s_slack(1922,lent_H,minus) + s_slack(1922,lent_L,plus) + s_slack(1922,lent_L,minus) + s_slack(1922,lent_S,plus) + s_slack(1922,lent_S,minus) + s_slack(1922,maiz_H,plus) + s_slack(1922,maiz_H,minus) + s_slack(1922,maiz_L,plus)
     
      + s_slack(1922,maiz_L,minus) + s_slack(1922,maiz_S,plus) + s_slack(1922,maiz_S,minus) + s_slack(1922,mill_H,plus) + s_slack(1922,mill_H,minus) + s_slack(1922,mill_L,plus) + s_slack(1922,mill_L,minus) + s_slack(1922,mill_S,plus)
     
      + s_slack(1922,mill_S,minus) + s_slack(1922,ofib_L,plus) + s_slack(1922,ofib_L,minus) + s_slack(1922,ooil_L,plus) + s_slack(1922,ooil_L,minus) + s_slack(1922,opul_H,plus) + s_slack(1922,opul_H,minus) + s_slack(1922,opul_L,plus)
     
      + s_slack(1922,opul_L,minus) + s_slack(1922,opul_S,plus) + s_slack(1922,opul_S,minus) + s_slack(1922,pige_H,plus) + s_slack(1922,pige_H,minus) + s_slack(1922,pige_L,plus) + s_slack(1922,pige_L,minus) + s_slack(1922,pige_S,plus)
     
      + s_slack(1922,pige_S,minus) + s_slack(1922,pota_H,plus) + s_slack(1922,pota_H,minus) + s_slack(1922,pota_L,plus) + s_slack(1922,pota_L,minus) + s_slack(1922,pota_S,plus) + s_slack(1922,pota_S,minus) + s_slack(1922,rest_H,plus)
     
      + s_slack(1922,rest_H,minus) + s_slack(1922,rest_L,plus) + s_slack(1922,rest_L,minus) + s_slack(1922,rest_S,plus) + s_slack(1922,rest_S,minus) + s_slack(1922,rice_H,plus) + s_slack(1922,rice_H,minus) + s_slack(1922,rice_L,plus)
     
      + s_slack(1922,rice_L,minus) + s_slack(1922,rice_S,plus) + s_slack(1922,rice_S,minus) + s_slack(1922,sorg_L,plus) + s_slack(1922,sorg_L,minus) + s_slack(1922,sorg_S,plus) + s_slack(1922,sorg_S,minus) + s_slack(1922,soyb_L,plus)
     
      + s_slack(1922,soyb_L,minus) + s_slack(1922,soyb_S,plus) + s_slack(1922,soyb_S,minus) + s_slack(1922,sunf_L,plus) + s_slack(1922,sunf_L,minus) + s_slack(1922,temf_H,plus) + s_slack(1922,temf_H,minus) + s_slack(1922,temf_L,plus)
     
      + s_slack(1922,temf_L,minus) + s_slack(1922,temf_S,plus) + s_slack(1922,temf_S,minus) + s_slack(1922,toba_H,plus) + s_slack(1922,toba_H,minus) + s_slack(1922,toba_L,plus) + s_slack(1922,toba_L,minus) + s_slack(1922,trof_L,plus)
     
      + s_slack(1922,trof_L,minus) + s_slack(1922,trof_S,plus) + s_slack(1922,trof_S,minus) + s_slack(1922,vege_H,plus) + s_slack(1922,vege_H,minus) + s_slack(1922,vege_L,plus) + s_slack(1922,vege_L,minus) + s_slack(1922,vege_S,plus)
     
      + s_slack(1922,vege_S,minus) + s_slack(1923,rice_I,plus) + s_slack(1923,rice_I,minus) + s_slack(1923,sugc_I,plus) + s_slack(1923,sugc_I,minus) + s_slack(1923,whea_I,plus) + s_slack(1923,whea_I,minus) + s_slack(1923,bean_H,plus)
     
      + s_slack(1923,bean_H,minus) + s_slack(1923,bean_L,plus) + s_slack(1923,bean_L,minus) + s_slack(1923,bean_S,plus) + s_slack(1923,bean_S,minus) + s_slack(1923,cass_L,plus) + s_slack(1923,cass_L,minus) + s_slack(1923,cass_S,plus)
     
      + s_slack(1923,cass_S,minus) + s_slack(1923,chic_H,plus) + s_slack(1923,chic_H,minus) + s_slack(1923,chic_L,plus) + s_slack(1923,chic_L,minus) + s_slack(1923,chic_S,plus) + s_slack(1923,chic_S,minus) + s_slack(1923,coff_H,plus)
     
      + s_slack(1923,coff_H,minus) + s_slack(1923,coff_L,plus) + s_slack(1923,coff_L,minus) + s_slack(1923,cott_L,plus) + s_slack(1923,cott_L,minus) + s_slack(1923,cowp_H,plus) + s_slack(1923,cowp_H,minus) + s_slack(1923,cowp_L,plus)
     
      + s_slack(1923,cowp_L,minus) + s_slack(1923,cowp_S,plus) + s_slack(1923,cowp_S,minus) + s_slack(1923,grou_H,plus) + s_slack(1923,grou_H,minus) + s_slack(1923,grou_L,plus) + s_slack(1923,grou_L,minus) + s_slack(1923,grou_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 153
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1923,grou_S,minus) + s_slack(1923,lent_H,plus) + s_slack(1923,lent_H,minus) + s_slack(1923,lent_L,plus) + s_slack(1923,lent_L,minus) + s_slack(1923,lent_S,plus) + s_slack(1923,lent_S,minus) + s_slack(1923,maiz_H,plus)
     
      + s_slack(1923,maiz_H,minus) + s_slack(1923,maiz_L,plus) + s_slack(1923,maiz_L,minus) + s_slack(1923,maiz_S,plus) + s_slack(1923,maiz_S,minus) + s_slack(1923,mill_H,plus) + s_slack(1923,mill_H,minus) + s_slack(1923,mill_L,plus)
     
      + s_slack(1923,mill_L,minus) + s_slack(1923,mill_S,plus) + s_slack(1923,mill_S,minus) + s_slack(1923,ofib_L,plus) + s_slack(1923,ofib_L,minus) + s_slack(1923,ooil_L,plus) + s_slack(1923,ooil_L,minus) + s_slack(1923,opul_H,plus)
     
      + s_slack(1923,opul_H,minus) + s_slack(1923,opul_L,plus) + s_slack(1923,opul_L,minus) + s_slack(1923,opul_S,plus) + s_slack(1923,opul_S,minus) + s_slack(1923,pige_H,plus) + s_slack(1923,pige_H,minus) + s_slack(1923,pige_L,plus)
     
      + s_slack(1923,pige_L,minus) + s_slack(1923,pige_S,plus) + s_slack(1923,pige_S,minus) + s_slack(1923,pota_H,plus) + s_slack(1923,pota_H,minus) + s_slack(1923,pota_L,plus) + s_slack(1923,pota_L,minus) + s_slack(1923,pota_S,plus)
     
      + s_slack(1923,pota_S,minus) + s_slack(1923,rest_H,plus) + s_slack(1923,rest_H,minus) + s_slack(1923,rest_L,plus) + s_slack(1923,rest_L,minus) + s_slack(1923,rest_S,plus) + s_slack(1923,rest_S,minus) + s_slack(1923,rice_H,plus)
     
      + s_slack(1923,rice_H,minus) + s_slack(1923,rice_L,plus) + s_slack(1923,rice_L,minus) + s_slack(1923,rice_S,plus) + s_slack(1923,rice_S,minus) + s_slack(1923,sorg_L,plus) + s_slack(1923,sorg_L,minus) + s_slack(1923,sorg_S,plus)
     
      + s_slack(1923,sorg_S,minus) + s_slack(1923,soyb_L,plus) + s_slack(1923,soyb_L,minus) + s_slack(1923,soyb_S,plus) + s_slack(1923,soyb_S,minus) + s_slack(1923,sunf_L,plus) + s_slack(1923,sunf_L,minus) + s_slack(1923,temf_H,plus)
     
      + s_slack(1923,temf_H,minus) + s_slack(1923,temf_L,plus) + s_slack(1923,temf_L,minus) + s_slack(1923,temf_S,plus) + s_slack(1923,temf_S,minus) + s_slack(1923,toba_H,plus) + s_slack(1923,toba_H,minus) + s_slack(1923,toba_L,plus)
     
      + s_slack(1923,toba_L,minus) + s_slack(1923,trof_L,plus) + s_slack(1923,trof_L,minus) + s_slack(1923,trof_S,plus) + s_slack(1923,trof_S,minus) + s_slack(1923,vege_H,plus) + s_slack(1923,vege_H,minus) + s_slack(1923,vege_L,plus)
     
      + s_slack(1923,vege_L,minus) + s_slack(1923,vege_S,plus) + s_slack(1923,vege_S,minus) + s_slack(1924,rice_I,plus) + s_slack(1924,rice_I,minus) + s_slack(1924,sugc_I,plus) + s_slack(1924,sugc_I,minus) + s_slack(1924,whea_I,plus)
     
      + s_slack(1924,whea_I,minus) + s_slack(1924,bean_H,plus) + s_slack(1924,bean_H,minus) + s_slack(1924,bean_L,plus) + s_slack(1924,bean_L,minus) + s_slack(1924,bean_S,plus) + s_slack(1924,bean_S,minus) + s_slack(1924,cass_L,plus)
     
      + s_slack(1924,cass_L,minus) + s_slack(1924,cass_S,plus) + s_slack(1924,cass_S,minus) + s_slack(1924,chic_H,plus) + s_slack(1924,chic_H,minus) + s_slack(1924,chic_L,plus) + s_slack(1924,chic_L,minus) + s_slack(1924,chic_S,plus)
     
      + s_slack(1924,chic_S,minus) + s_slack(1924,coff_H,plus) + s_slack(1924,coff_H,minus) + s_slack(1924,coff_L,plus) + s_slack(1924,coff_L,minus) + s_slack(1924,cott_L,plus) + s_slack(1924,cott_L,minus) + s_slack(1924,cowp_H,plus)
     
      + s_slack(1924,cowp_H,minus) + s_slack(1924,cowp_L,plus) + s_slack(1924,cowp_L,minus) + s_slack(1924,cowp_S,plus) + s_slack(1924,cowp_S,minus) + s_slack(1924,grou_H,plus) + s_slack(1924,grou_H,minus) + s_slack(1924,grou_L,plus)
     
      + s_slack(1924,grou_L,minus) + s_slack(1924,grou_S,plus) + s_slack(1924,grou_S,minus) + s_slack(1924,lent_H,plus) + s_slack(1924,lent_H,minus) + s_slack(1924,lent_L,plus) + s_slack(1924,lent_L,minus) + s_slack(1924,lent_S,plus)
     
      + s_slack(1924,lent_S,minus) + s_slack(1924,maiz_H,plus) + s_slack(1924,maiz_H,minus) + s_slack(1924,maiz_L,plus) + s_slack(1924,maiz_L,minus) + s_slack(1924,maiz_S,plus) + s_slack(1924,maiz_S,minus) + s_slack(1924,mill_H,plus)
     
      + s_slack(1924,mill_H,minus) + s_slack(1924,mill_L,plus) + s_slack(1924,mill_L,minus) + s_slack(1924,mill_S,plus) + s_slack(1924,mill_S,minus) + s_slack(1924,ofib_L,plus) + s_slack(1924,ofib_L,minus) + s_slack(1924,ooil_L,plus)
     
      + s_slack(1924,ooil_L,minus) + s_slack(1924,opul_H,plus) + s_slack(1924,opul_H,minus) + s_slack(1924,opul_L,plus) + s_slack(1924,opul_L,minus) + s_slack(1924,opul_S,plus) + s_slack(1924,opul_S,minus) + s_slack(1924,pige_H,plus)
     
      + s_slack(1924,pige_H,minus) + s_slack(1924,pige_L,plus) + s_slack(1924,pige_L,minus) + s_slack(1924,pige_S,plus) + s_slack(1924,pige_S,minus) + s_slack(1924,pota_H,plus) + s_slack(1924,pota_H,minus) + s_slack(1924,pota_L,plus)
     
      + s_slack(1924,pota_L,minus) + s_slack(1924,pota_S,plus) + s_slack(1924,pota_S,minus) + s_slack(1924,rest_H,plus) + s_slack(1924,rest_H,minus) + s_slack(1924,rest_L,plus) + s_slack(1924,rest_L,minus) + s_slack(1924,rest_S,plus)
     
      + s_slack(1924,rest_S,minus) + s_slack(1924,rice_H,plus) + s_slack(1924,rice_H,minus) + s_slack(1924,rice_L,plus) + s_slack(1924,rice_L,minus) + s_slack(1924,rice_S,plus) + s_slack(1924,rice_S,minus) + s_slack(1924,sorg_L,plus)
     
      + s_slack(1924,sorg_L,minus) + s_slack(1924,sorg_S,plus) + s_slack(1924,sorg_S,minus) + s_slack(1924,soyb_L,plus) + s_slack(1924,soyb_L,minus) + s_slack(1924,soyb_S,plus) + s_slack(1924,soyb_S,minus) + s_slack(1924,sunf_L,plus)
     
      + s_slack(1924,sunf_L,minus) + s_slack(1924,temf_H,plus) + s_slack(1924,temf_H,minus) + s_slack(1924,temf_L,plus) + s_slack(1924,temf_L,minus) + s_slack(1924,temf_S,plus) + s_slack(1924,temf_S,minus) + s_slack(1924,toba_H,plus)
     
      + s_slack(1924,toba_H,minus) + s_slack(1924,toba_L,plus) + s_slack(1924,toba_L,minus) + s_slack(1924,trof_L,plus) + s_slack(1924,trof_L,minus) + s_slack(1924,trof_S,plus) + s_slack(1924,trof_S,minus) + s_slack(1924,vege_H,plus)
     
      + s_slack(1924,vege_H,minus) + s_slack(1924,vege_L,plus) + s_slack(1924,vege_L,minus) + s_slack(1924,vege_S,plus) + s_slack(1924,vege_S,minus) + s_slack(1925,rice_I,plus) + s_slack(1925,rice_I,minus) + s_slack(1925,sugc_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 154
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1925,sugc_I,minus) + s_slack(1925,whea_I,plus) + s_slack(1925,whea_I,minus) + s_slack(1925,bean_H,plus) + s_slack(1925,bean_H,minus) + s_slack(1925,bean_L,plus) + s_slack(1925,bean_L,minus) + s_slack(1925,bean_S,plus)
     
      + s_slack(1925,bean_S,minus) + s_slack(1925,cass_L,plus) + s_slack(1925,cass_L,minus) + s_slack(1925,cass_S,plus) + s_slack(1925,cass_S,minus) + s_slack(1925,chic_H,plus) + s_slack(1925,chic_H,minus) + s_slack(1925,chic_L,plus)
     
      + s_slack(1925,chic_L,minus) + s_slack(1925,chic_S,plus) + s_slack(1925,chic_S,minus) + s_slack(1925,coff_H,plus) + s_slack(1925,coff_H,minus) + s_slack(1925,coff_L,plus) + s_slack(1925,coff_L,minus) + s_slack(1925,cott_L,plus)
     
      + s_slack(1925,cott_L,minus) + s_slack(1925,cowp_H,plus) + s_slack(1925,cowp_H,minus) + s_slack(1925,cowp_L,plus) + s_slack(1925,cowp_L,minus) + s_slack(1925,cowp_S,plus) + s_slack(1925,cowp_S,minus) + s_slack(1925,grou_H,plus)
     
      + s_slack(1925,grou_H,minus) + s_slack(1925,grou_L,plus) + s_slack(1925,grou_L,minus) + s_slack(1925,grou_S,plus) + s_slack(1925,grou_S,minus) + s_slack(1925,lent_H,plus) + s_slack(1925,lent_H,minus) + s_slack(1925,lent_L,plus)
     
      + s_slack(1925,lent_L,minus) + s_slack(1925,lent_S,plus) + s_slack(1925,lent_S,minus) + s_slack(1925,maiz_H,plus) + s_slack(1925,maiz_H,minus) + s_slack(1925,maiz_L,plus) + s_slack(1925,maiz_L,minus) + s_slack(1925,maiz_S,plus)
     
      + s_slack(1925,maiz_S,minus) + s_slack(1925,mill_H,plus) + s_slack(1925,mill_H,minus) + s_slack(1925,mill_L,plus) + s_slack(1925,mill_L,minus) + s_slack(1925,mill_S,plus) + s_slack(1925,mill_S,minus) + s_slack(1925,ofib_L,plus)
     
      + s_slack(1925,ofib_L,minus) + s_slack(1925,ooil_L,plus) + s_slack(1925,ooil_L,minus) + s_slack(1925,opul_H,plus) + s_slack(1925,opul_H,minus) + s_slack(1925,opul_L,plus) + s_slack(1925,opul_L,minus) + s_slack(1925,opul_S,plus)
     
      + s_slack(1925,opul_S,minus) + s_slack(1925,pige_H,plus) + s_slack(1925,pige_H,minus) + s_slack(1925,pige_L,plus) + s_slack(1925,pige_L,minus) + s_slack(1925,pige_S,plus) + s_slack(1925,pige_S,minus) + s_slack(1925,pota_H,plus)
     
      + s_slack(1925,pota_H,minus) + s_slack(1925,pota_L,plus) + s_slack(1925,pota_L,minus) + s_slack(1925,pota_S,plus) + s_slack(1925,pota_S,minus) + s_slack(1925,rest_H,plus) + s_slack(1925,rest_H,minus) + s_slack(1925,rest_L,plus)
     
      + s_slack(1925,rest_L,minus) + s_slack(1925,rest_S,plus) + s_slack(1925,rest_S,minus) + s_slack(1925,rice_H,plus) + s_slack(1925,rice_H,minus) + s_slack(1925,rice_L,plus) + s_slack(1925,rice_L,minus) + s_slack(1925,rice_S,plus)
     
      + s_slack(1925,rice_S,minus) + s_slack(1925,sorg_L,plus) + s_slack(1925,sorg_L,minus) + s_slack(1925,sorg_S,plus) + s_slack(1925,sorg_S,minus) + s_slack(1925,soyb_L,plus) + s_slack(1925,soyb_L,minus) + s_slack(1925,soyb_S,plus)
     
      + s_slack(1925,soyb_S,minus) + s_slack(1925,sunf_L,plus) + s_slack(1925,sunf_L,minus) + s_slack(1925,temf_H,plus) + s_slack(1925,temf_H,minus) + s_slack(1925,temf_L,plus) + s_slack(1925,temf_L,minus) + s_slack(1925,temf_S,plus)
     
      + s_slack(1925,temf_S,minus) + s_slack(1925,toba_H,plus) + s_slack(1925,toba_H,minus) + s_slack(1925,toba_L,plus) + s_slack(1925,toba_L,minus) + s_slack(1925,trof_L,plus) + s_slack(1925,trof_L,minus) + s_slack(1925,trof_S,plus)
     
      + s_slack(1925,trof_S,minus) + s_slack(1925,vege_H,plus) + s_slack(1925,vege_H,minus) + s_slack(1925,vege_L,plus) + s_slack(1925,vege_L,minus) + s_slack(1925,vege_S,plus) + s_slack(1925,vege_S,minus) + s_slack(1926,rice_I,plus)
     
      + s_slack(1926,rice_I,minus) + s_slack(1926,sugc_I,plus) + s_slack(1926,sugc_I,minus) + s_slack(1926,whea_I,plus) + s_slack(1926,whea_I,minus) + s_slack(1926,bean_H,plus) + s_slack(1926,bean_H,minus) + s_slack(1926,bean_L,plus)
     
      + s_slack(1926,bean_L,minus) + s_slack(1926,bean_S,plus) + s_slack(1926,bean_S,minus) + s_slack(1926,cass_L,plus) + s_slack(1926,cass_L,minus) + s_slack(1926,cass_S,plus) + s_slack(1926,cass_S,minus) + s_slack(1926,chic_H,plus)
     
      + s_slack(1926,chic_H,minus) + s_slack(1926,chic_L,plus) + s_slack(1926,chic_L,minus) + s_slack(1926,chic_S,plus) + s_slack(1926,chic_S,minus) + s_slack(1926,coff_H,plus) + s_slack(1926,coff_H,minus) + s_slack(1926,coff_L,plus)
     
      + s_slack(1926,coff_L,minus) + s_slack(1926,cott_L,plus) + s_slack(1926,cott_L,minus) + s_slack(1926,cowp_H,plus) + s_slack(1926,cowp_H,minus) + s_slack(1926,cowp_L,plus) + s_slack(1926,cowp_L,minus) + s_slack(1926,cowp_S,plus)
     
      + s_slack(1926,cowp_S,minus) + s_slack(1926,grou_H,plus) + s_slack(1926,grou_H,minus) + s_slack(1926,grou_L,plus) + s_slack(1926,grou_L,minus) + s_slack(1926,grou_S,plus) + s_slack(1926,grou_S,minus) + s_slack(1926,lent_H,plus)
     
      + s_slack(1926,lent_H,minus) + s_slack(1926,lent_L,plus) + s_slack(1926,lent_L,minus) + s_slack(1926,lent_S,plus) + s_slack(1926,lent_S,minus) + s_slack(1926,maiz_H,plus) + s_slack(1926,maiz_H,minus) + s_slack(1926,maiz_L,plus)
     
      + s_slack(1926,maiz_L,minus) + s_slack(1926,maiz_S,plus) + s_slack(1926,maiz_S,minus) + s_slack(1926,mill_H,plus) + s_slack(1926,mill_H,minus) + s_slack(1926,mill_L,plus) + s_slack(1926,mill_L,minus) + s_slack(1926,mill_S,plus)
     
      + s_slack(1926,mill_S,minus) + s_slack(1926,ofib_L,plus) + s_slack(1926,ofib_L,minus) + s_slack(1926,ooil_L,plus) + s_slack(1926,ooil_L,minus) + s_slack(1926,opul_H,plus) + s_slack(1926,opul_H,minus) + s_slack(1926,opul_L,plus)
     
      + s_slack(1926,opul_L,minus) + s_slack(1926,opul_S,plus) + s_slack(1926,opul_S,minus) + s_slack(1926,pige_H,plus) + s_slack(1926,pige_H,minus) + s_slack(1926,pige_L,plus) + s_slack(1926,pige_L,minus) + s_slack(1926,pige_S,plus)
     
      + s_slack(1926,pige_S,minus) + s_slack(1926,pota_H,plus) + s_slack(1926,pota_H,minus) + s_slack(1926,pota_L,plus) + s_slack(1926,pota_L,minus) + s_slack(1926,pota_S,plus) + s_slack(1926,pota_S,minus) + s_slack(1926,rest_H,plus)
     
      + s_slack(1926,rest_H,minus) + s_slack(1926,rest_L,plus) + s_slack(1926,rest_L,minus) + s_slack(1926,rest_S,plus) + s_slack(1926,rest_S,minus) + s_slack(1926,rice_H,plus) + s_slack(1926,rice_H,minus) + s_slack(1926,rice_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 155
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1926,rice_L,minus) + s_slack(1926,rice_S,plus) + s_slack(1926,rice_S,minus) + s_slack(1926,sorg_L,plus) + s_slack(1926,sorg_L,minus) + s_slack(1926,sorg_S,plus) + s_slack(1926,sorg_S,minus) + s_slack(1926,soyb_L,plus)
     
      + s_slack(1926,soyb_L,minus) + s_slack(1926,soyb_S,plus) + s_slack(1926,soyb_S,minus) + s_slack(1926,sunf_L,plus) + s_slack(1926,sunf_L,minus) + s_slack(1926,temf_H,plus) + s_slack(1926,temf_H,minus) + s_slack(1926,temf_L,plus)
     
      + s_slack(1926,temf_L,minus) + s_slack(1926,temf_S,plus) + s_slack(1926,temf_S,minus) + s_slack(1926,toba_H,plus) + s_slack(1926,toba_H,minus) + s_slack(1926,toba_L,plus) + s_slack(1926,toba_L,minus) + s_slack(1926,trof_L,plus)
     
      + s_slack(1926,trof_L,minus) + s_slack(1926,trof_S,plus) + s_slack(1926,trof_S,minus) + s_slack(1926,vege_H,plus) + s_slack(1926,vege_H,minus) + s_slack(1926,vege_L,plus) + s_slack(1926,vege_L,minus) + s_slack(1926,vege_S,plus)
     
      + s_slack(1926,vege_S,minus) + s_slack(1927,rice_I,plus) + s_slack(1927,rice_I,minus) + s_slack(1927,sugc_I,plus) + s_slack(1927,sugc_I,minus) + s_slack(1927,whea_I,plus) + s_slack(1927,whea_I,minus) + s_slack(1927,bean_H,plus)
     
      + s_slack(1927,bean_H,minus) + s_slack(1927,bean_L,plus) + s_slack(1927,bean_L,minus) + s_slack(1927,bean_S,plus) + s_slack(1927,bean_S,minus) + s_slack(1927,cass_L,plus) + s_slack(1927,cass_L,minus) + s_slack(1927,cass_S,plus)
     
      + s_slack(1927,cass_S,minus) + s_slack(1927,chic_H,plus) + s_slack(1927,chic_H,minus) + s_slack(1927,chic_L,plus) + s_slack(1927,chic_L,minus) + s_slack(1927,chic_S,plus) + s_slack(1927,chic_S,minus) + s_slack(1927,coff_H,plus)
     
      + s_slack(1927,coff_H,minus) + s_slack(1927,coff_L,plus) + s_slack(1927,coff_L,minus) + s_slack(1927,cott_L,plus) + s_slack(1927,cott_L,minus) + s_slack(1927,cowp_H,plus) + s_slack(1927,cowp_H,minus) + s_slack(1927,cowp_L,plus)
     
      + s_slack(1927,cowp_L,minus) + s_slack(1927,cowp_S,plus) + s_slack(1927,cowp_S,minus) + s_slack(1927,grou_H,plus) + s_slack(1927,grou_H,minus) + s_slack(1927,grou_L,plus) + s_slack(1927,grou_L,minus) + s_slack(1927,grou_S,plus)
     
      + s_slack(1927,grou_S,minus) + s_slack(1927,lent_H,plus) + s_slack(1927,lent_H,minus) + s_slack(1927,lent_L,plus) + s_slack(1927,lent_L,minus) + s_slack(1927,lent_S,plus) + s_slack(1927,lent_S,minus) + s_slack(1927,maiz_H,plus)
     
      + s_slack(1927,maiz_H,minus) + s_slack(1927,maiz_L,plus) + s_slack(1927,maiz_L,minus) + s_slack(1927,maiz_S,plus) + s_slack(1927,maiz_S,minus) + s_slack(1927,mill_H,plus) + s_slack(1927,mill_H,minus) + s_slack(1927,mill_L,plus)
     
      + s_slack(1927,mill_L,minus) + s_slack(1927,mill_S,plus) + s_slack(1927,mill_S,minus) + s_slack(1927,ofib_L,plus) + s_slack(1927,ofib_L,minus) + s_slack(1927,ooil_L,plus) + s_slack(1927,ooil_L,minus) + s_slack(1927,opul_H,plus)
     
      + s_slack(1927,opul_H,minus) + s_slack(1927,opul_L,plus) + s_slack(1927,opul_L,minus) + s_slack(1927,opul_S,plus) + s_slack(1927,opul_S,minus) + s_slack(1927,pige_H,plus) + s_slack(1927,pige_H,minus) + s_slack(1927,pige_L,plus)
     
      + s_slack(1927,pige_L,minus) + s_slack(1927,pige_S,plus) + s_slack(1927,pige_S,minus) + s_slack(1927,pota_H,plus) + s_slack(1927,pota_H,minus) + s_slack(1927,pota_L,plus) + s_slack(1927,pota_L,minus) + s_slack(1927,pota_S,plus)
     
      + s_slack(1927,pota_S,minus) + s_slack(1927,rest_H,plus) + s_slack(1927,rest_H,minus) + s_slack(1927,rest_L,plus) + s_slack(1927,rest_L,minus) + s_slack(1927,rest_S,plus) + s_slack(1927,rest_S,minus) + s_slack(1927,rice_H,plus)
     
      + s_slack(1927,rice_H,minus) + s_slack(1927,rice_L,plus) + s_slack(1927,rice_L,minus) + s_slack(1927,rice_S,plus) + s_slack(1927,rice_S,minus) + s_slack(1927,sorg_L,plus) + s_slack(1927,sorg_L,minus) + s_slack(1927,sorg_S,plus)
     
      + s_slack(1927,sorg_S,minus) + s_slack(1927,soyb_L,plus) + s_slack(1927,soyb_L,minus) + s_slack(1927,soyb_S,plus) + s_slack(1927,soyb_S,minus) + s_slack(1927,sunf_L,plus) + s_slack(1927,sunf_L,minus) + s_slack(1927,temf_H,plus)
     
      + s_slack(1927,temf_H,minus) + s_slack(1927,temf_L,plus) + s_slack(1927,temf_L,minus) + s_slack(1927,temf_S,plus) + s_slack(1927,temf_S,minus) + s_slack(1927,toba_H,plus) + s_slack(1927,toba_H,minus) + s_slack(1927,toba_L,plus)
     
      + s_slack(1927,toba_L,minus) + s_slack(1927,trof_L,plus) + s_slack(1927,trof_L,minus) + s_slack(1927,trof_S,plus) + s_slack(1927,trof_S,minus) + s_slack(1927,vege_H,plus) + s_slack(1927,vege_H,minus) + s_slack(1927,vege_L,plus)
     
      + s_slack(1927,vege_L,minus) + s_slack(1927,vege_S,plus) + s_slack(1927,vege_S,minus) + s_slack(1928,rice_I,plus) + s_slack(1928,rice_I,minus) + s_slack(1928,sugc_I,plus) + s_slack(1928,sugc_I,minus) + s_slack(1928,whea_I,plus)
     
      + s_slack(1928,whea_I,minus) + s_slack(1928,bean_H,plus) + s_slack(1928,bean_H,minus) + s_slack(1928,bean_L,plus) + s_slack(1928,bean_L,minus) + s_slack(1928,bean_S,plus) + s_slack(1928,bean_S,minus) + s_slack(1928,cass_L,plus)
     
      + s_slack(1928,cass_L,minus) + s_slack(1928,cass_S,plus) + s_slack(1928,cass_S,minus) + s_slack(1928,chic_H,plus) + s_slack(1928,chic_H,minus) + s_slack(1928,chic_L,plus) + s_slack(1928,chic_L,minus) + s_slack(1928,chic_S,plus)
     
      + s_slack(1928,chic_S,minus) + s_slack(1928,coff_H,plus) + s_slack(1928,coff_H,minus) + s_slack(1928,coff_L,plus) + s_slack(1928,coff_L,minus) + s_slack(1928,cott_L,plus) + s_slack(1928,cott_L,minus) + s_slack(1928,cowp_H,plus)
     
      + s_slack(1928,cowp_H,minus) + s_slack(1928,cowp_L,plus) + s_slack(1928,cowp_L,minus) + s_slack(1928,cowp_S,plus) + s_slack(1928,cowp_S,minus) + s_slack(1928,grou_H,plus) + s_slack(1928,grou_H,minus) + s_slack(1928,grou_L,plus)
     
      + s_slack(1928,grou_L,minus) + s_slack(1928,grou_S,plus) + s_slack(1928,grou_S,minus) + s_slack(1928,lent_H,plus) + s_slack(1928,lent_H,minus) + s_slack(1928,lent_L,plus) + s_slack(1928,lent_L,minus) + s_slack(1928,lent_S,plus)
     
      + s_slack(1928,lent_S,minus) + s_slack(1928,maiz_H,plus) + s_slack(1928,maiz_H,minus) + s_slack(1928,maiz_L,plus) + s_slack(1928,maiz_L,minus) + s_slack(1928,maiz_S,plus) + s_slack(1928,maiz_S,minus) + s_slack(1928,mill_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 156
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1928,mill_H,minus) + s_slack(1928,mill_L,plus) + s_slack(1928,mill_L,minus) + s_slack(1928,mill_S,plus) + s_slack(1928,mill_S,minus) + s_slack(1928,ofib_L,plus) + s_slack(1928,ofib_L,minus) + s_slack(1928,ooil_L,plus)
     
      + s_slack(1928,ooil_L,minus) + s_slack(1928,opul_H,plus) + s_slack(1928,opul_H,minus) + s_slack(1928,opul_L,plus) + s_slack(1928,opul_L,minus) + s_slack(1928,opul_S,plus) + s_slack(1928,opul_S,minus) + s_slack(1928,pige_H,plus)
     
      + s_slack(1928,pige_H,minus) + s_slack(1928,pige_L,plus) + s_slack(1928,pige_L,minus) + s_slack(1928,pige_S,plus) + s_slack(1928,pige_S,minus) + s_slack(1928,pota_H,plus) + s_slack(1928,pota_H,minus) + s_slack(1928,pota_L,plus)
     
      + s_slack(1928,pota_L,minus) + s_slack(1928,pota_S,plus) + s_slack(1928,pota_S,minus) + s_slack(1928,rest_H,plus) + s_slack(1928,rest_H,minus) + s_slack(1928,rest_L,plus) + s_slack(1928,rest_L,minus) + s_slack(1928,rest_S,plus)
     
      + s_slack(1928,rest_S,minus) + s_slack(1928,rice_H,plus) + s_slack(1928,rice_H,minus) + s_slack(1928,rice_L,plus) + s_slack(1928,rice_L,minus) + s_slack(1928,rice_S,plus) + s_slack(1928,rice_S,minus) + s_slack(1928,sorg_L,plus)
     
      + s_slack(1928,sorg_L,minus) + s_slack(1928,sorg_S,plus) + s_slack(1928,sorg_S,minus) + s_slack(1928,soyb_L,plus) + s_slack(1928,soyb_L,minus) + s_slack(1928,soyb_S,plus) + s_slack(1928,soyb_S,minus) + s_slack(1928,sunf_L,plus)
     
      + s_slack(1928,sunf_L,minus) + s_slack(1928,temf_H,plus) + s_slack(1928,temf_H,minus) + s_slack(1928,temf_L,plus) + s_slack(1928,temf_L,minus) + s_slack(1928,temf_S,plus) + s_slack(1928,temf_S,minus) + s_slack(1928,toba_H,plus)
     
      + s_slack(1928,toba_H,minus) + s_slack(1928,toba_L,plus) + s_slack(1928,toba_L,minus) + s_slack(1928,trof_L,plus) + s_slack(1928,trof_L,minus) + s_slack(1928,trof_S,plus) + s_slack(1928,trof_S,minus) + s_slack(1928,vege_H,plus)
     
      + s_slack(1928,vege_H,minus) + s_slack(1928,vege_L,plus) + s_slack(1928,vege_L,minus) + s_slack(1928,vege_S,plus) + s_slack(1928,vege_S,minus) + s_slack(1929,rice_I,plus) + s_slack(1929,rice_I,minus) + s_slack(1929,sugc_I,plus)
     
      + s_slack(1929,sugc_I,minus) + s_slack(1929,whea_I,plus) + s_slack(1929,whea_I,minus) + s_slack(1929,bean_H,plus) + s_slack(1929,bean_H,minus) + s_slack(1929,bean_L,plus) + s_slack(1929,bean_L,minus) + s_slack(1929,bean_S,plus)
     
      + s_slack(1929,bean_S,minus) + s_slack(1929,cass_L,plus) + s_slack(1929,cass_L,minus) + s_slack(1929,cass_S,plus) + s_slack(1929,cass_S,minus) + s_slack(1929,chic_H,plus) + s_slack(1929,chic_H,minus) + s_slack(1929,chic_L,plus)
     
      + s_slack(1929,chic_L,minus) + s_slack(1929,chic_S,plus) + s_slack(1929,chic_S,minus) + s_slack(1929,coff_H,plus) + s_slack(1929,coff_H,minus) + s_slack(1929,coff_L,plus) + s_slack(1929,coff_L,minus) + s_slack(1929,cott_L,plus)
     
      + s_slack(1929,cott_L,minus) + s_slack(1929,cowp_H,plus) + s_slack(1929,cowp_H,minus) + s_slack(1929,cowp_L,plus) + s_slack(1929,cowp_L,minus) + s_slack(1929,cowp_S,plus) + s_slack(1929,cowp_S,minus) + s_slack(1929,grou_H,plus)
     
      + s_slack(1929,grou_H,minus) + s_slack(1929,grou_L,plus) + s_slack(1929,grou_L,minus) + s_slack(1929,grou_S,plus) + s_slack(1929,grou_S,minus) + s_slack(1929,lent_H,plus) + s_slack(1929,lent_H,minus) + s_slack(1929,lent_L,plus)
     
      + s_slack(1929,lent_L,minus) + s_slack(1929,lent_S,plus) + s_slack(1929,lent_S,minus) + s_slack(1929,maiz_H,plus) + s_slack(1929,maiz_H,minus) + s_slack(1929,maiz_L,plus) + s_slack(1929,maiz_L,minus) + s_slack(1929,maiz_S,plus)
     
      + s_slack(1929,maiz_S,minus) + s_slack(1929,mill_H,plus) + s_slack(1929,mill_H,minus) + s_slack(1929,mill_L,plus) + s_slack(1929,mill_L,minus) + s_slack(1929,mill_S,plus) + s_slack(1929,mill_S,minus) + s_slack(1929,ofib_L,plus)
     
      + s_slack(1929,ofib_L,minus) + s_slack(1929,ooil_L,plus) + s_slack(1929,ooil_L,minus) + s_slack(1929,opul_H,plus) + s_slack(1929,opul_H,minus) + s_slack(1929,opul_L,plus) + s_slack(1929,opul_L,minus) + s_slack(1929,opul_S,plus)
     
      + s_slack(1929,opul_S,minus) + s_slack(1929,pige_H,plus) + s_slack(1929,pige_H,minus) + s_slack(1929,pige_L,plus) + s_slack(1929,pige_L,minus) + s_slack(1929,pige_S,plus) + s_slack(1929,pige_S,minus) + s_slack(1929,pota_H,plus)
     
      + s_slack(1929,pota_H,minus) + s_slack(1929,pota_L,plus) + s_slack(1929,pota_L,minus) + s_slack(1929,pota_S,plus) + s_slack(1929,pota_S,minus) + s_slack(1929,rest_H,plus) + s_slack(1929,rest_H,minus) + s_slack(1929,rest_L,plus)
     
      + s_slack(1929,rest_L,minus) + s_slack(1929,rest_S,plus) + s_slack(1929,rest_S,minus) + s_slack(1929,rice_H,plus) + s_slack(1929,rice_H,minus) + s_slack(1929,rice_L,plus) + s_slack(1929,rice_L,minus) + s_slack(1929,rice_S,plus)
     
      + s_slack(1929,rice_S,minus) + s_slack(1929,sorg_L,plus) + s_slack(1929,sorg_L,minus) + s_slack(1929,sorg_S,plus) + s_slack(1929,sorg_S,minus) + s_slack(1929,soyb_L,plus) + s_slack(1929,soyb_L,minus) + s_slack(1929,soyb_S,plus)
     
      + s_slack(1929,soyb_S,minus) + s_slack(1929,sunf_L,plus) + s_slack(1929,sunf_L,minus) + s_slack(1929,temf_H,plus) + s_slack(1929,temf_H,minus) + s_slack(1929,temf_L,plus) + s_slack(1929,temf_L,minus) + s_slack(1929,temf_S,plus)
     
      + s_slack(1929,temf_S,minus) + s_slack(1929,toba_H,plus) + s_slack(1929,toba_H,minus) + s_slack(1929,toba_L,plus) + s_slack(1929,toba_L,minus) + s_slack(1929,trof_L,plus) + s_slack(1929,trof_L,minus) + s_slack(1929,trof_S,plus)
     
      + s_slack(1929,trof_S,minus) + s_slack(1929,vege_H,plus) + s_slack(1929,vege_H,minus) + s_slack(1929,vege_L,plus) + s_slack(1929,vege_L,minus) + s_slack(1929,vege_S,plus) + s_slack(1929,vege_S,minus) + s_slack(1930,rice_I,plus)
     
      + s_slack(1930,rice_I,minus) + s_slack(1930,sugc_I,plus) + s_slack(1930,sugc_I,minus) + s_slack(1930,whea_I,plus) + s_slack(1930,whea_I,minus) + s_slack(1930,bean_H,plus) + s_slack(1930,bean_H,minus) + s_slack(1930,bean_L,plus)
     
      + s_slack(1930,bean_L,minus) + s_slack(1930,bean_S,plus) + s_slack(1930,bean_S,minus) + s_slack(1930,cass_L,plus) + s_slack(1930,cass_L,minus) + s_slack(1930,cass_S,plus) + s_slack(1930,cass_S,minus) + s_slack(1930,chic_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 157
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1930,chic_H,minus) + s_slack(1930,chic_L,plus) + s_slack(1930,chic_L,minus) + s_slack(1930,chic_S,plus) + s_slack(1930,chic_S,minus) + s_slack(1930,coff_H,plus) + s_slack(1930,coff_H,minus) + s_slack(1930,coff_L,plus)
     
      + s_slack(1930,coff_L,minus) + s_slack(1930,cott_L,plus) + s_slack(1930,cott_L,minus) + s_slack(1930,cowp_H,plus) + s_slack(1930,cowp_H,minus) + s_slack(1930,cowp_L,plus) + s_slack(1930,cowp_L,minus) + s_slack(1930,cowp_S,plus)
     
      + s_slack(1930,cowp_S,minus) + s_slack(1930,grou_H,plus) + s_slack(1930,grou_H,minus) + s_slack(1930,grou_L,plus) + s_slack(1930,grou_L,minus) + s_slack(1930,grou_S,plus) + s_slack(1930,grou_S,minus) + s_slack(1930,lent_H,plus)
     
      + s_slack(1930,lent_H,minus) + s_slack(1930,lent_L,plus) + s_slack(1930,lent_L,minus) + s_slack(1930,lent_S,plus) + s_slack(1930,lent_S,minus) + s_slack(1930,maiz_H,plus) + s_slack(1930,maiz_H,minus) + s_slack(1930,maiz_L,plus)
     
      + s_slack(1930,maiz_L,minus) + s_slack(1930,maiz_S,plus) + s_slack(1930,maiz_S,minus) + s_slack(1930,mill_H,plus) + s_slack(1930,mill_H,minus) + s_slack(1930,mill_L,plus) + s_slack(1930,mill_L,minus) + s_slack(1930,mill_S,plus)
     
      + s_slack(1930,mill_S,minus) + s_slack(1930,ofib_L,plus) + s_slack(1930,ofib_L,minus) + s_slack(1930,ooil_L,plus) + s_slack(1930,ooil_L,minus) + s_slack(1930,opul_H,plus) + s_slack(1930,opul_H,minus) + s_slack(1930,opul_L,plus)
     
      + s_slack(1930,opul_L,minus) + s_slack(1930,opul_S,plus) + s_slack(1930,opul_S,minus) + s_slack(1930,pige_H,plus) + s_slack(1930,pige_H,minus) + s_slack(1930,pige_L,plus) + s_slack(1930,pige_L,minus) + s_slack(1930,pige_S,plus)
     
      + s_slack(1930,pige_S,minus) + s_slack(1930,pota_H,plus) + s_slack(1930,pota_H,minus) + s_slack(1930,pota_L,plus) + s_slack(1930,pota_L,minus) + s_slack(1930,pota_S,plus) + s_slack(1930,pota_S,minus) + s_slack(1930,rest_H,plus)
     
      + s_slack(1930,rest_H,minus) + s_slack(1930,rest_L,plus) + s_slack(1930,rest_L,minus) + s_slack(1930,rest_S,plus) + s_slack(1930,rest_S,minus) + s_slack(1930,rice_H,plus) + s_slack(1930,rice_H,minus) + s_slack(1930,rice_L,plus)
     
      + s_slack(1930,rice_L,minus) + s_slack(1930,rice_S,plus) + s_slack(1930,rice_S,minus) + s_slack(1930,sorg_L,plus) + s_slack(1930,sorg_L,minus) + s_slack(1930,sorg_S,plus) + s_slack(1930,sorg_S,minus) + s_slack(1930,soyb_L,plus)
     
      + s_slack(1930,soyb_L,minus) + s_slack(1930,soyb_S,plus) + s_slack(1930,soyb_S,minus) + s_slack(1930,sunf_L,plus) + s_slack(1930,sunf_L,minus) + s_slack(1930,temf_H,plus) + s_slack(1930,temf_H,minus) + s_slack(1930,temf_L,plus)
     
      + s_slack(1930,temf_L,minus) + s_slack(1930,temf_S,plus) + s_slack(1930,temf_S,minus) + s_slack(1930,toba_H,plus) + s_slack(1930,toba_H,minus) + s_slack(1930,toba_L,plus) + s_slack(1930,toba_L,minus) + s_slack(1930,trof_L,plus)
     
      + s_slack(1930,trof_L,minus) + s_slack(1930,trof_S,plus) + s_slack(1930,trof_S,minus) + s_slack(1930,vege_H,plus) + s_slack(1930,vege_H,minus) + s_slack(1930,vege_L,plus) + s_slack(1930,vege_L,minus) + s_slack(1930,vege_S,plus)
     
      + s_slack(1930,vege_S,minus) + s_slack(1931,rice_I,plus) + s_slack(1931,rice_I,minus) + s_slack(1931,sugc_I,plus) + s_slack(1931,sugc_I,minus) + s_slack(1931,whea_I,plus) + s_slack(1931,whea_I,minus) + s_slack(1931,bean_H,plus)
     
      + s_slack(1931,bean_H,minus) + s_slack(1931,bean_L,plus) + s_slack(1931,bean_L,minus) + s_slack(1931,bean_S,plus) + s_slack(1931,bean_S,minus) + s_slack(1931,cass_L,plus) + s_slack(1931,cass_L,minus) + s_slack(1931,cass_S,plus)
     
      + s_slack(1931,cass_S,minus) + s_slack(1931,chic_H,plus) + s_slack(1931,chic_H,minus) + s_slack(1931,chic_L,plus) + s_slack(1931,chic_L,minus) + s_slack(1931,chic_S,plus) + s_slack(1931,chic_S,minus) + s_slack(1931,coff_H,plus)
     
      + s_slack(1931,coff_H,minus) + s_slack(1931,coff_L,plus) + s_slack(1931,coff_L,minus) + s_slack(1931,cott_L,plus) + s_slack(1931,cott_L,minus) + s_slack(1931,cowp_H,plus) + s_slack(1931,cowp_H,minus) + s_slack(1931,cowp_L,plus)
     
      + s_slack(1931,cowp_L,minus) + s_slack(1931,cowp_S,plus) + s_slack(1931,cowp_S,minus) + s_slack(1931,grou_H,plus) + s_slack(1931,grou_H,minus) + s_slack(1931,grou_L,plus) + s_slack(1931,grou_L,minus) + s_slack(1931,grou_S,plus)
     
      + s_slack(1931,grou_S,minus) + s_slack(1931,lent_H,plus) + s_slack(1931,lent_H,minus) + s_slack(1931,lent_L,plus) + s_slack(1931,lent_L,minus) + s_slack(1931,lent_S,plus) + s_slack(1931,lent_S,minus) + s_slack(1931,maiz_H,plus)
     
      + s_slack(1931,maiz_H,minus) + s_slack(1931,maiz_L,plus) + s_slack(1931,maiz_L,minus) + s_slack(1931,maiz_S,plus) + s_slack(1931,maiz_S,minus) + s_slack(1931,mill_H,plus) + s_slack(1931,mill_H,minus) + s_slack(1931,mill_L,plus)
     
      + s_slack(1931,mill_L,minus) + s_slack(1931,mill_S,plus) + s_slack(1931,mill_S,minus) + s_slack(1931,ofib_L,plus) + s_slack(1931,ofib_L,minus) + s_slack(1931,ooil_L,plus) + s_slack(1931,ooil_L,minus) + s_slack(1931,opul_H,plus)
     
      + s_slack(1931,opul_H,minus) + s_slack(1931,opul_L,plus) + s_slack(1931,opul_L,minus) + s_slack(1931,opul_S,plus) + s_slack(1931,opul_S,minus) + s_slack(1931,pige_H,plus) + s_slack(1931,pige_H,minus) + s_slack(1931,pige_L,plus)
     
      + s_slack(1931,pige_L,minus) + s_slack(1931,pige_S,plus) + s_slack(1931,pige_S,minus) + s_slack(1931,pota_H,plus) + s_slack(1931,pota_H,minus) + s_slack(1931,pota_L,plus) + s_slack(1931,pota_L,minus) + s_slack(1931,pota_S,plus)
     
      + s_slack(1931,pota_S,minus) + s_slack(1931,rest_H,plus) + s_slack(1931,rest_H,minus) + s_slack(1931,rest_L,plus) + s_slack(1931,rest_L,minus) + s_slack(1931,rest_S,plus) + s_slack(1931,rest_S,minus) + s_slack(1931,rice_H,plus)
     
      + s_slack(1931,rice_H,minus) + s_slack(1931,rice_L,plus) + s_slack(1931,rice_L,minus) + s_slack(1931,rice_S,plus) + s_slack(1931,rice_S,minus) + s_slack(1931,sorg_L,plus) + s_slack(1931,sorg_L,minus) + s_slack(1931,sorg_S,plus)
     
      + s_slack(1931,sorg_S,minus) + s_slack(1931,soyb_L,plus) + s_slack(1931,soyb_L,minus) + s_slack(1931,soyb_S,plus) + s_slack(1931,soyb_S,minus) + s_slack(1931,sunf_L,plus) + s_slack(1931,sunf_L,minus) + s_slack(1931,temf_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 158
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1931,temf_H,minus) + s_slack(1931,temf_L,plus) + s_slack(1931,temf_L,minus) + s_slack(1931,temf_S,plus) + s_slack(1931,temf_S,minus) + s_slack(1931,toba_H,plus) + s_slack(1931,toba_H,minus) + s_slack(1931,toba_L,plus)
     
      + s_slack(1931,toba_L,minus) + s_slack(1931,trof_L,plus) + s_slack(1931,trof_L,minus) + s_slack(1931,trof_S,plus) + s_slack(1931,trof_S,minus) + s_slack(1931,vege_H,plus) + s_slack(1931,vege_H,minus) + s_slack(1931,vege_L,plus)
     
      + s_slack(1931,vege_L,minus) + s_slack(1931,vege_S,plus) + s_slack(1931,vege_S,minus) + s_slack(1953,rice_I,plus) + s_slack(1953,rice_I,minus) + s_slack(1953,sugc_I,plus) + s_slack(1953,sugc_I,minus) + s_slack(1953,whea_I,plus)
     
      + s_slack(1953,whea_I,minus) + s_slack(1953,bean_H,plus) + s_slack(1953,bean_H,minus) + s_slack(1953,bean_L,plus) + s_slack(1953,bean_L,minus) + s_slack(1953,bean_S,plus) + s_slack(1953,bean_S,minus) + s_slack(1953,cass_L,plus)
     
      + s_slack(1953,cass_L,minus) + s_slack(1953,cass_S,plus) + s_slack(1953,cass_S,minus) + s_slack(1953,chic_H,plus) + s_slack(1953,chic_H,minus) + s_slack(1953,chic_L,plus) + s_slack(1953,chic_L,minus) + s_slack(1953,chic_S,plus)
     
      + s_slack(1953,chic_S,minus) + s_slack(1953,coff_H,plus) + s_slack(1953,coff_H,minus) + s_slack(1953,coff_L,plus) + s_slack(1953,coff_L,minus) + s_slack(1953,cott_L,plus) + s_slack(1953,cott_L,minus) + s_slack(1953,cowp_H,plus)
     
      + s_slack(1953,cowp_H,minus) + s_slack(1953,cowp_L,plus) + s_slack(1953,cowp_L,minus) + s_slack(1953,cowp_S,plus) + s_slack(1953,cowp_S,minus) + s_slack(1953,grou_H,plus) + s_slack(1953,grou_H,minus) + s_slack(1953,grou_L,plus)
     
      + s_slack(1953,grou_L,minus) + s_slack(1953,grou_S,plus) + s_slack(1953,grou_S,minus) + s_slack(1953,lent_H,plus) + s_slack(1953,lent_H,minus) + s_slack(1953,lent_L,plus) + s_slack(1953,lent_L,minus) + s_slack(1953,lent_S,plus)
     
      + s_slack(1953,lent_S,minus) + s_slack(1953,maiz_H,plus) + s_slack(1953,maiz_H,minus) + s_slack(1953,maiz_L,plus) + s_slack(1953,maiz_L,minus) + s_slack(1953,maiz_S,plus) + s_slack(1953,maiz_S,minus) + s_slack(1953,mill_H,plus)
     
      + s_slack(1953,mill_H,minus) + s_slack(1953,mill_L,plus) + s_slack(1953,mill_L,minus) + s_slack(1953,mill_S,plus) + s_slack(1953,mill_S,minus) + s_slack(1953,ofib_L,plus) + s_slack(1953,ofib_L,minus) + s_slack(1953,ooil_L,plus)
     
      + s_slack(1953,ooil_L,minus) + s_slack(1953,opul_H,plus) + s_slack(1953,opul_H,minus) + s_slack(1953,opul_L,plus) + s_slack(1953,opul_L,minus) + s_slack(1953,opul_S,plus) + s_slack(1953,opul_S,minus) + s_slack(1953,pige_H,plus)
     
      + s_slack(1953,pige_H,minus) + s_slack(1953,pige_L,plus) + s_slack(1953,pige_L,minus) + s_slack(1953,pige_S,plus) + s_slack(1953,pige_S,minus) + s_slack(1953,pota_H,plus) + s_slack(1953,pota_H,minus) + s_slack(1953,pota_L,plus)
     
      + s_slack(1953,pota_L,minus) + s_slack(1953,pota_S,plus) + s_slack(1953,pota_S,minus) + s_slack(1953,rest_H,plus) + s_slack(1953,rest_H,minus) + s_slack(1953,rest_L,plus) + s_slack(1953,rest_L,minus) + s_slack(1953,rest_S,plus)
     
      + s_slack(1953,rest_S,minus) + s_slack(1953,rice_H,plus) + s_slack(1953,rice_H,minus) + s_slack(1953,rice_L,plus) + s_slack(1953,rice_L,minus) + s_slack(1953,rice_S,plus) + s_slack(1953,rice_S,minus) + s_slack(1953,sorg_L,plus)
     
      + s_slack(1953,sorg_L,minus) + s_slack(1953,sorg_S,plus) + s_slack(1953,sorg_S,minus) + s_slack(1953,soyb_L,plus) + s_slack(1953,soyb_L,minus) + s_slack(1953,soyb_S,plus) + s_slack(1953,soyb_S,minus) + s_slack(1953,sunf_L,plus)
     
      + s_slack(1953,sunf_L,minus) + s_slack(1953,temf_H,plus) + s_slack(1953,temf_H,minus) + s_slack(1953,temf_L,plus) + s_slack(1953,temf_L,minus) + s_slack(1953,temf_S,plus) + s_slack(1953,temf_S,minus) + s_slack(1953,toba_H,plus)
     
      + s_slack(1953,toba_H,minus) + s_slack(1953,toba_L,plus) + s_slack(1953,toba_L,minus) + s_slack(1953,trof_L,plus) + s_slack(1953,trof_L,minus) + s_slack(1953,trof_S,plus) + s_slack(1953,trof_S,minus) + s_slack(1953,vege_H,plus)
     
      + s_slack(1953,vege_H,minus) + s_slack(1953,vege_L,plus) + s_slack(1953,vege_L,minus) + s_slack(1953,vege_S,plus) + s_slack(1953,vege_S,minus) + s_slack(1954,rice_I,plus) + s_slack(1954,rice_I,minus) + s_slack(1954,sugc_I,plus)
     
      + s_slack(1954,sugc_I,minus) + s_slack(1954,whea_I,plus) + s_slack(1954,whea_I,minus) + s_slack(1954,bean_H,plus) + s_slack(1954,bean_H,minus) + s_slack(1954,bean_L,plus) + s_slack(1954,bean_L,minus) + s_slack(1954,bean_S,plus)
     
      + s_slack(1954,bean_S,minus) + s_slack(1954,cass_L,plus) + s_slack(1954,cass_L,minus) + s_slack(1954,cass_S,plus) + s_slack(1954,cass_S,minus) + s_slack(1954,chic_H,plus) + s_slack(1954,chic_H,minus) + s_slack(1954,chic_L,plus)
     
      + s_slack(1954,chic_L,minus) + s_slack(1954,chic_S,plus) + s_slack(1954,chic_S,minus) + s_slack(1954,coff_H,plus) + s_slack(1954,coff_H,minus) + s_slack(1954,coff_L,plus) + s_slack(1954,coff_L,minus) + s_slack(1954,cott_L,plus)
     
      + s_slack(1954,cott_L,minus) + s_slack(1954,cowp_H,plus) + s_slack(1954,cowp_H,minus) + s_slack(1954,cowp_L,plus) + s_slack(1954,cowp_L,minus) + s_slack(1954,cowp_S,plus) + s_slack(1954,cowp_S,minus) + s_slack(1954,grou_H,plus)
     
      + s_slack(1954,grou_H,minus) + s_slack(1954,grou_L,plus) + s_slack(1954,grou_L,minus) + s_slack(1954,grou_S,plus) + s_slack(1954,grou_S,minus) + s_slack(1954,lent_H,plus) + s_slack(1954,lent_H,minus) + s_slack(1954,lent_L,plus)
     
      + s_slack(1954,lent_L,minus) + s_slack(1954,lent_S,plus) + s_slack(1954,lent_S,minus) + s_slack(1954,maiz_H,plus) + s_slack(1954,maiz_H,minus) + s_slack(1954,maiz_L,plus) + s_slack(1954,maiz_L,minus) + s_slack(1954,maiz_S,plus)
     
      + s_slack(1954,maiz_S,minus) + s_slack(1954,mill_H,plus) + s_slack(1954,mill_H,minus) + s_slack(1954,mill_L,plus) + s_slack(1954,mill_L,minus) + s_slack(1954,mill_S,plus) + s_slack(1954,mill_S,minus) + s_slack(1954,ofib_L,plus)
     
      + s_slack(1954,ofib_L,minus) + s_slack(1954,ooil_L,plus) + s_slack(1954,ooil_L,minus) + s_slack(1954,opul_H,plus) + s_slack(1954,opul_H,minus) + s_slack(1954,opul_L,plus) + s_slack(1954,opul_L,minus) + s_slack(1954,opul_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 159
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1954,opul_S,minus) + s_slack(1954,pige_H,plus) + s_slack(1954,pige_H,minus) + s_slack(1954,pige_L,plus) + s_slack(1954,pige_L,minus) + s_slack(1954,pige_S,plus) + s_slack(1954,pige_S,minus) + s_slack(1954,pota_H,plus)
     
      + s_slack(1954,pota_H,minus) + s_slack(1954,pota_L,plus) + s_slack(1954,pota_L,minus) + s_slack(1954,pota_S,plus) + s_slack(1954,pota_S,minus) + s_slack(1954,rest_H,plus) + s_slack(1954,rest_H,minus) + s_slack(1954,rest_L,plus)
     
      + s_slack(1954,rest_L,minus) + s_slack(1954,rest_S,plus) + s_slack(1954,rest_S,minus) + s_slack(1954,rice_H,plus) + s_slack(1954,rice_H,minus) + s_slack(1954,rice_L,plus) + s_slack(1954,rice_L,minus) + s_slack(1954,rice_S,plus)
     
      + s_slack(1954,rice_S,minus) + s_slack(1954,sorg_L,plus) + s_slack(1954,sorg_L,minus) + s_slack(1954,sorg_S,plus) + s_slack(1954,sorg_S,minus) + s_slack(1954,soyb_L,plus) + s_slack(1954,soyb_L,minus) + s_slack(1954,soyb_S,plus)
     
      + s_slack(1954,soyb_S,minus) + s_slack(1954,sunf_L,plus) + s_slack(1954,sunf_L,minus) + s_slack(1954,temf_H,plus) + s_slack(1954,temf_H,minus) + s_slack(1954,temf_L,plus) + s_slack(1954,temf_L,minus) + s_slack(1954,temf_S,plus)
     
      + s_slack(1954,temf_S,minus) + s_slack(1954,toba_H,plus) + s_slack(1954,toba_H,minus) + s_slack(1954,toba_L,plus) + s_slack(1954,toba_L,minus) + s_slack(1954,trof_L,plus) + s_slack(1954,trof_L,minus) + s_slack(1954,trof_S,plus)
     
      + s_slack(1954,trof_S,minus) + s_slack(1954,vege_H,plus) + s_slack(1954,vege_H,minus) + s_slack(1954,vege_L,plus) + s_slack(1954,vege_L,minus) + s_slack(1954,vege_S,plus) + s_slack(1954,vege_S,minus) + s_slack(1955,rice_I,plus)
     
      + s_slack(1955,rice_I,minus) + s_slack(1955,sugc_I,plus) + s_slack(1955,sugc_I,minus) + s_slack(1955,whea_I,plus) + s_slack(1955,whea_I,minus) + s_slack(1955,bean_H,plus) + s_slack(1955,bean_H,minus) + s_slack(1955,bean_L,plus)
     
      + s_slack(1955,bean_L,minus) + s_slack(1955,bean_S,plus) + s_slack(1955,bean_S,minus) + s_slack(1955,cass_L,plus) + s_slack(1955,cass_L,minus) + s_slack(1955,cass_S,plus) + s_slack(1955,cass_S,minus) + s_slack(1955,chic_H,plus)
     
      + s_slack(1955,chic_H,minus) + s_slack(1955,chic_L,plus) + s_slack(1955,chic_L,minus) + s_slack(1955,chic_S,plus) + s_slack(1955,chic_S,minus) + s_slack(1955,coff_H,plus) + s_slack(1955,coff_H,minus) + s_slack(1955,coff_L,plus)
     
      + s_slack(1955,coff_L,minus) + s_slack(1955,cott_L,plus) + s_slack(1955,cott_L,minus) + s_slack(1955,cowp_H,plus) + s_slack(1955,cowp_H,minus) + s_slack(1955,cowp_L,plus) + s_slack(1955,cowp_L,minus) + s_slack(1955,cowp_S,plus)
     
      + s_slack(1955,cowp_S,minus) + s_slack(1955,grou_H,plus) + s_slack(1955,grou_H,minus) + s_slack(1955,grou_L,plus) + s_slack(1955,grou_L,minus) + s_slack(1955,grou_S,plus) + s_slack(1955,grou_S,minus) + s_slack(1955,lent_H,plus)
     
      + s_slack(1955,lent_H,minus) + s_slack(1955,lent_L,plus) + s_slack(1955,lent_L,minus) + s_slack(1955,lent_S,plus) + s_slack(1955,lent_S,minus) + s_slack(1955,maiz_H,plus) + s_slack(1955,maiz_H,minus) + s_slack(1955,maiz_L,plus)
     
      + s_slack(1955,maiz_L,minus) + s_slack(1955,maiz_S,plus) + s_slack(1955,maiz_S,minus) + s_slack(1955,mill_H,plus) + s_slack(1955,mill_H,minus) + s_slack(1955,mill_L,plus) + s_slack(1955,mill_L,minus) + s_slack(1955,mill_S,plus)
     
      + s_slack(1955,mill_S,minus) + s_slack(1955,ofib_L,plus) + s_slack(1955,ofib_L,minus) + s_slack(1955,ooil_L,plus) + s_slack(1955,ooil_L,minus) + s_slack(1955,opul_H,plus) + s_slack(1955,opul_H,minus) + s_slack(1955,opul_L,plus)
     
      + s_slack(1955,opul_L,minus) + s_slack(1955,opul_S,plus) + s_slack(1955,opul_S,minus) + s_slack(1955,pige_H,plus) + s_slack(1955,pige_H,minus) + s_slack(1955,pige_L,plus) + s_slack(1955,pige_L,minus) + s_slack(1955,pige_S,plus)
     
      + s_slack(1955,pige_S,minus) + s_slack(1955,pota_H,plus) + s_slack(1955,pota_H,minus) + s_slack(1955,pota_L,plus) + s_slack(1955,pota_L,minus) + s_slack(1955,pota_S,plus) + s_slack(1955,pota_S,minus) + s_slack(1955,rest_H,plus)
     
      + s_slack(1955,rest_H,minus) + s_slack(1955,rest_L,plus) + s_slack(1955,rest_L,minus) + s_slack(1955,rest_S,plus) + s_slack(1955,rest_S,minus) + s_slack(1955,rice_H,plus) + s_slack(1955,rice_H,minus) + s_slack(1955,rice_L,plus)
     
      + s_slack(1955,rice_L,minus) + s_slack(1955,rice_S,plus) + s_slack(1955,rice_S,minus) + s_slack(1955,sorg_L,plus) + s_slack(1955,sorg_L,minus) + s_slack(1955,sorg_S,plus) + s_slack(1955,sorg_S,minus) + s_slack(1955,soyb_L,plus)
     
      + s_slack(1955,soyb_L,minus) + s_slack(1955,soyb_S,plus) + s_slack(1955,soyb_S,minus) + s_slack(1955,sunf_L,plus) + s_slack(1955,sunf_L,minus) + s_slack(1955,temf_H,plus) + s_slack(1955,temf_H,minus) + s_slack(1955,temf_L,plus)
     
      + s_slack(1955,temf_L,minus) + s_slack(1955,temf_S,plus) + s_slack(1955,temf_S,minus) + s_slack(1955,toba_H,plus) + s_slack(1955,toba_H,minus) + s_slack(1955,toba_L,plus) + s_slack(1955,toba_L,minus) + s_slack(1955,trof_L,plus)
     
      + s_slack(1955,trof_L,minus) + s_slack(1955,trof_S,plus) + s_slack(1955,trof_S,minus) + s_slack(1955,vege_H,plus) + s_slack(1955,vege_H,minus) + s_slack(1955,vege_L,plus) + s_slack(1955,vege_L,minus) + s_slack(1955,vege_S,plus)
     
      + s_slack(1955,vege_S,minus) + s_slack(1956,rice_I,plus) + s_slack(1956,rice_I,minus) + s_slack(1956,sugc_I,plus) + s_slack(1956,sugc_I,minus) + s_slack(1956,whea_I,plus) + s_slack(1956,whea_I,minus) + s_slack(1956,bean_H,plus)
     
      + s_slack(1956,bean_H,minus) + s_slack(1956,bean_L,plus) + s_slack(1956,bean_L,minus) + s_slack(1956,bean_S,plus) + s_slack(1956,bean_S,minus) + s_slack(1956,cass_L,plus) + s_slack(1956,cass_L,minus) + s_slack(1956,cass_S,plus)
     
      + s_slack(1956,cass_S,minus) + s_slack(1956,chic_H,plus) + s_slack(1956,chic_H,minus) + s_slack(1956,chic_L,plus) + s_slack(1956,chic_L,minus) + s_slack(1956,chic_S,plus) + s_slack(1956,chic_S,minus) + s_slack(1956,coff_H,plus)
     
      + s_slack(1956,coff_H,minus) + s_slack(1956,coff_L,plus) + s_slack(1956,coff_L,minus) + s_slack(1956,cott_L,plus) + s_slack(1956,cott_L,minus) + s_slack(1956,cowp_H,plus) + s_slack(1956,cowp_H,minus) + s_slack(1956,cowp_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 160
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1956,cowp_L,minus) + s_slack(1956,cowp_S,plus) + s_slack(1956,cowp_S,minus) + s_slack(1956,grou_H,plus) + s_slack(1956,grou_H,minus) + s_slack(1956,grou_L,plus) + s_slack(1956,grou_L,minus) + s_slack(1956,grou_S,plus)
     
      + s_slack(1956,grou_S,minus) + s_slack(1956,lent_H,plus) + s_slack(1956,lent_H,minus) + s_slack(1956,lent_L,plus) + s_slack(1956,lent_L,minus) + s_slack(1956,lent_S,plus) + s_slack(1956,lent_S,minus) + s_slack(1956,maiz_H,plus)
     
      + s_slack(1956,maiz_H,minus) + s_slack(1956,maiz_L,plus) + s_slack(1956,maiz_L,minus) + s_slack(1956,maiz_S,plus) + s_slack(1956,maiz_S,minus) + s_slack(1956,mill_H,plus) + s_slack(1956,mill_H,minus) + s_slack(1956,mill_L,plus)
     
      + s_slack(1956,mill_L,minus) + s_slack(1956,mill_S,plus) + s_slack(1956,mill_S,minus) + s_slack(1956,ofib_L,plus) + s_slack(1956,ofib_L,minus) + s_slack(1956,ooil_L,plus) + s_slack(1956,ooil_L,minus) + s_slack(1956,opul_H,plus)
     
      + s_slack(1956,opul_H,minus) + s_slack(1956,opul_L,plus) + s_slack(1956,opul_L,minus) + s_slack(1956,opul_S,plus) + s_slack(1956,opul_S,minus) + s_slack(1956,pige_H,plus) + s_slack(1956,pige_H,minus) + s_slack(1956,pige_L,plus)
     
      + s_slack(1956,pige_L,minus) + s_slack(1956,pige_S,plus) + s_slack(1956,pige_S,minus) + s_slack(1956,pota_H,plus) + s_slack(1956,pota_H,minus) + s_slack(1956,pota_L,plus) + s_slack(1956,pota_L,minus) + s_slack(1956,pota_S,plus)
     
      + s_slack(1956,pota_S,minus) + s_slack(1956,rest_H,plus) + s_slack(1956,rest_H,minus) + s_slack(1956,rest_L,plus) + s_slack(1956,rest_L,minus) + s_slack(1956,rest_S,plus) + s_slack(1956,rest_S,minus) + s_slack(1956,rice_H,plus)
     
      + s_slack(1956,rice_H,minus) + s_slack(1956,rice_L,plus) + s_slack(1956,rice_L,minus) + s_slack(1956,rice_S,plus) + s_slack(1956,rice_S,minus) + s_slack(1956,sorg_L,plus) + s_slack(1956,sorg_L,minus) + s_slack(1956,sorg_S,plus)
     
      + s_slack(1956,sorg_S,minus) + s_slack(1956,soyb_L,plus) + s_slack(1956,soyb_L,minus) + s_slack(1956,soyb_S,plus) + s_slack(1956,soyb_S,minus) + s_slack(1956,sunf_L,plus) + s_slack(1956,sunf_L,minus) + s_slack(1956,temf_H,plus)
     
      + s_slack(1956,temf_H,minus) + s_slack(1956,temf_L,plus) + s_slack(1956,temf_L,minus) + s_slack(1956,temf_S,plus) + s_slack(1956,temf_S,minus) + s_slack(1956,toba_H,plus) + s_slack(1956,toba_H,minus) + s_slack(1956,toba_L,plus)
     
      + s_slack(1956,toba_L,minus) + s_slack(1956,trof_L,plus) + s_slack(1956,trof_L,minus) + s_slack(1956,trof_S,plus) + s_slack(1956,trof_S,minus) + s_slack(1956,vege_H,plus) + s_slack(1956,vege_H,minus) + s_slack(1956,vege_L,plus)
     
      + s_slack(1956,vege_L,minus) + s_slack(1956,vege_S,plus) + s_slack(1956,vege_S,minus) + s_slack(1957,rice_I,plus) + s_slack(1957,rice_I,minus) + s_slack(1957,sugc_I,plus) + s_slack(1957,sugc_I,minus) + s_slack(1957,whea_I,plus)
     
      + s_slack(1957,whea_I,minus) + s_slack(1957,bean_H,plus) + s_slack(1957,bean_H,minus) + s_slack(1957,bean_L,plus) + s_slack(1957,bean_L,minus) + s_slack(1957,bean_S,plus) + s_slack(1957,bean_S,minus) + s_slack(1957,cass_L,plus)
     
      + s_slack(1957,cass_L,minus) + s_slack(1957,cass_S,plus) + s_slack(1957,cass_S,minus) + s_slack(1957,chic_H,plus) + s_slack(1957,chic_H,minus) + s_slack(1957,chic_L,plus) + s_slack(1957,chic_L,minus) + s_slack(1957,chic_S,plus)
     
      + s_slack(1957,chic_S,minus) + s_slack(1957,coff_H,plus) + s_slack(1957,coff_H,minus) + s_slack(1957,coff_L,plus) + s_slack(1957,coff_L,minus) + s_slack(1957,cott_L,plus) + s_slack(1957,cott_L,minus) + s_slack(1957,cowp_H,plus)
     
      + s_slack(1957,cowp_H,minus) + s_slack(1957,cowp_L,plus) + s_slack(1957,cowp_L,minus) + s_slack(1957,cowp_S,plus) + s_slack(1957,cowp_S,minus) + s_slack(1957,grou_H,plus) + s_slack(1957,grou_H,minus) + s_slack(1957,grou_L,plus)
     
      + s_slack(1957,grou_L,minus) + s_slack(1957,grou_S,plus) + s_slack(1957,grou_S,minus) + s_slack(1957,lent_H,plus) + s_slack(1957,lent_H,minus) + s_slack(1957,lent_L,plus) + s_slack(1957,lent_L,minus) + s_slack(1957,lent_S,plus)
     
      + s_slack(1957,lent_S,minus) + s_slack(1957,maiz_H,plus) + s_slack(1957,maiz_H,minus) + s_slack(1957,maiz_L,plus) + s_slack(1957,maiz_L,minus) + s_slack(1957,maiz_S,plus) + s_slack(1957,maiz_S,minus) + s_slack(1957,mill_H,plus)
     
      + s_slack(1957,mill_H,minus) + s_slack(1957,mill_L,plus) + s_slack(1957,mill_L,minus) + s_slack(1957,mill_S,plus) + s_slack(1957,mill_S,minus) + s_slack(1957,ofib_L,plus) + s_slack(1957,ofib_L,minus) + s_slack(1957,ooil_L,plus)
     
      + s_slack(1957,ooil_L,minus) + s_slack(1957,opul_H,plus) + s_slack(1957,opul_H,minus) + s_slack(1957,opul_L,plus) + s_slack(1957,opul_L,minus) + s_slack(1957,opul_S,plus) + s_slack(1957,opul_S,minus) + s_slack(1957,pige_H,plus)
     
      + s_slack(1957,pige_H,minus) + s_slack(1957,pige_L,plus) + s_slack(1957,pige_L,minus) + s_slack(1957,pige_S,plus) + s_slack(1957,pige_S,minus) + s_slack(1957,pota_H,plus) + s_slack(1957,pota_H,minus) + s_slack(1957,pota_L,plus)
     
      + s_slack(1957,pota_L,minus) + s_slack(1957,pota_S,plus) + s_slack(1957,pota_S,minus) + s_slack(1957,rest_H,plus) + s_slack(1957,rest_H,minus) + s_slack(1957,rest_L,plus) + s_slack(1957,rest_L,minus) + s_slack(1957,rest_S,plus)
     
      + s_slack(1957,rest_S,minus) + s_slack(1957,rice_H,plus) + s_slack(1957,rice_H,minus) + s_slack(1957,rice_L,plus) + s_slack(1957,rice_L,minus) + s_slack(1957,rice_S,plus) + s_slack(1957,rice_S,minus) + s_slack(1957,sorg_L,plus)
     
      + s_slack(1957,sorg_L,minus) + s_slack(1957,sorg_S,plus) + s_slack(1957,sorg_S,minus) + s_slack(1957,soyb_L,plus) + s_slack(1957,soyb_L,minus) + s_slack(1957,soyb_S,plus) + s_slack(1957,soyb_S,minus) + s_slack(1957,sunf_L,plus)
     
      + s_slack(1957,sunf_L,minus) + s_slack(1957,temf_H,plus) + s_slack(1957,temf_H,minus) + s_slack(1957,temf_L,plus) + s_slack(1957,temf_L,minus) + s_slack(1957,temf_S,plus) + s_slack(1957,temf_S,minus) + s_slack(1957,toba_H,plus)
     
      + s_slack(1957,toba_H,minus) + s_slack(1957,toba_L,plus) + s_slack(1957,toba_L,minus) + s_slack(1957,trof_L,plus) + s_slack(1957,trof_L,minus) + s_slack(1957,trof_S,plus) + s_slack(1957,trof_S,minus) + s_slack(1957,vege_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 161
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1957,vege_H,minus) + s_slack(1957,vege_L,plus) + s_slack(1957,vege_L,minus) + s_slack(1957,vege_S,plus) + s_slack(1957,vege_S,minus) + s_slack(1958,rice_I,plus) + s_slack(1958,rice_I,minus) + s_slack(1958,sugc_I,plus)
     
      + s_slack(1958,sugc_I,minus) + s_slack(1958,whea_I,plus) + s_slack(1958,whea_I,minus) + s_slack(1958,bean_H,plus) + s_slack(1958,bean_H,minus) + s_slack(1958,bean_L,plus) + s_slack(1958,bean_L,minus) + s_slack(1958,bean_S,plus)
     
      + s_slack(1958,bean_S,minus) + s_slack(1958,cass_L,plus) + s_slack(1958,cass_L,minus) + s_slack(1958,cass_S,plus) + s_slack(1958,cass_S,minus) + s_slack(1958,chic_H,plus) + s_slack(1958,chic_H,minus) + s_slack(1958,chic_L,plus)
     
      + s_slack(1958,chic_L,minus) + s_slack(1958,chic_S,plus) + s_slack(1958,chic_S,minus) + s_slack(1958,coff_H,plus) + s_slack(1958,coff_H,minus) + s_slack(1958,coff_L,plus) + s_slack(1958,coff_L,minus) + s_slack(1958,cott_L,plus)
     
      + s_slack(1958,cott_L,minus) + s_slack(1958,cowp_H,plus) + s_slack(1958,cowp_H,minus) + s_slack(1958,cowp_L,plus) + s_slack(1958,cowp_L,minus) + s_slack(1958,cowp_S,plus) + s_slack(1958,cowp_S,minus) + s_slack(1958,grou_H,plus)
     
      + s_slack(1958,grou_H,minus) + s_slack(1958,grou_L,plus) + s_slack(1958,grou_L,minus) + s_slack(1958,grou_S,plus) + s_slack(1958,grou_S,minus) + s_slack(1958,lent_H,plus) + s_slack(1958,lent_H,minus) + s_slack(1958,lent_L,plus)
     
      + s_slack(1958,lent_L,minus) + s_slack(1958,lent_S,plus) + s_slack(1958,lent_S,minus) + s_slack(1958,maiz_H,plus) + s_slack(1958,maiz_H,minus) + s_slack(1958,maiz_L,plus) + s_slack(1958,maiz_L,minus) + s_slack(1958,maiz_S,plus)
     
      + s_slack(1958,maiz_S,minus) + s_slack(1958,mill_H,plus) + s_slack(1958,mill_H,minus) + s_slack(1958,mill_L,plus) + s_slack(1958,mill_L,minus) + s_slack(1958,mill_S,plus) + s_slack(1958,mill_S,minus) + s_slack(1958,ofib_L,plus)
     
      + s_slack(1958,ofib_L,minus) + s_slack(1958,ooil_L,plus) + s_slack(1958,ooil_L,minus) + s_slack(1958,opul_H,plus) + s_slack(1958,opul_H,minus) + s_slack(1958,opul_L,plus) + s_slack(1958,opul_L,minus) + s_slack(1958,opul_S,plus)
     
      + s_slack(1958,opul_S,minus) + s_slack(1958,pige_H,plus) + s_slack(1958,pige_H,minus) + s_slack(1958,pige_L,plus) + s_slack(1958,pige_L,minus) + s_slack(1958,pige_S,plus) + s_slack(1958,pige_S,minus) + s_slack(1958,pota_H,plus)
     
      + s_slack(1958,pota_H,minus) + s_slack(1958,pota_L,plus) + s_slack(1958,pota_L,minus) + s_slack(1958,pota_S,plus) + s_slack(1958,pota_S,minus) + s_slack(1958,rest_H,plus) + s_slack(1958,rest_H,minus) + s_slack(1958,rest_L,plus)
     
      + s_slack(1958,rest_L,minus) + s_slack(1958,rest_S,plus) + s_slack(1958,rest_S,minus) + s_slack(1958,rice_H,plus) + s_slack(1958,rice_H,minus) + s_slack(1958,rice_L,plus) + s_slack(1958,rice_L,minus) + s_slack(1958,rice_S,plus)
     
      + s_slack(1958,rice_S,minus) + s_slack(1958,sorg_L,plus) + s_slack(1958,sorg_L,minus) + s_slack(1958,sorg_S,plus) + s_slack(1958,sorg_S,minus) + s_slack(1958,soyb_L,plus) + s_slack(1958,soyb_L,minus) + s_slack(1958,soyb_S,plus)
     
      + s_slack(1958,soyb_S,minus) + s_slack(1958,sunf_L,plus) + s_slack(1958,sunf_L,minus) + s_slack(1958,temf_H,plus) + s_slack(1958,temf_H,minus) + s_slack(1958,temf_L,plus) + s_slack(1958,temf_L,minus) + s_slack(1958,temf_S,plus)
     
      + s_slack(1958,temf_S,minus) + s_slack(1958,toba_H,plus) + s_slack(1958,toba_H,minus) + s_slack(1958,toba_L,plus) + s_slack(1958,toba_L,minus) + s_slack(1958,trof_L,plus) + s_slack(1958,trof_L,minus) + s_slack(1958,trof_S,plus)
     
      + s_slack(1958,trof_S,minus) + s_slack(1958,vege_H,plus) + s_slack(1958,vege_H,minus) + s_slack(1958,vege_L,plus) + s_slack(1958,vege_L,minus) + s_slack(1958,vege_S,plus) + s_slack(1958,vege_S,minus) + s_slack(1959,rice_I,plus)
     
      + s_slack(1959,rice_I,minus) + s_slack(1959,sugc_I,plus) + s_slack(1959,sugc_I,minus) + s_slack(1959,whea_I,plus) + s_slack(1959,whea_I,minus) + s_slack(1959,bean_H,plus) + s_slack(1959,bean_H,minus) + s_slack(1959,bean_L,plus)
     
      + s_slack(1959,bean_L,minus) + s_slack(1959,bean_S,plus) + s_slack(1959,bean_S,minus) + s_slack(1959,cass_L,plus) + s_slack(1959,cass_L,minus) + s_slack(1959,cass_S,plus) + s_slack(1959,cass_S,minus) + s_slack(1959,chic_H,plus)
     
      + s_slack(1959,chic_H,minus) + s_slack(1959,chic_L,plus) + s_slack(1959,chic_L,minus) + s_slack(1959,chic_S,plus) + s_slack(1959,chic_S,minus) + s_slack(1959,coff_H,plus) + s_slack(1959,coff_H,minus) + s_slack(1959,coff_L,plus)
     
      + s_slack(1959,coff_L,minus) + s_slack(1959,cott_L,plus) + s_slack(1959,cott_L,minus) + s_slack(1959,cowp_H,plus) + s_slack(1959,cowp_H,minus) + s_slack(1959,cowp_L,plus) + s_slack(1959,cowp_L,minus) + s_slack(1959,cowp_S,plus)
     
      + s_slack(1959,cowp_S,minus) + s_slack(1959,grou_H,plus) + s_slack(1959,grou_H,minus) + s_slack(1959,grou_L,plus) + s_slack(1959,grou_L,minus) + s_slack(1959,grou_S,plus) + s_slack(1959,grou_S,minus) + s_slack(1959,lent_H,plus)
     
      + s_slack(1959,lent_H,minus) + s_slack(1959,lent_L,plus) + s_slack(1959,lent_L,minus) + s_slack(1959,lent_S,plus) + s_slack(1959,lent_S,minus) + s_slack(1959,maiz_H,plus) + s_slack(1959,maiz_H,minus) + s_slack(1959,maiz_L,plus)
     
      + s_slack(1959,maiz_L,minus) + s_slack(1959,maiz_S,plus) + s_slack(1959,maiz_S,minus) + s_slack(1959,mill_H,plus) + s_slack(1959,mill_H,minus) + s_slack(1959,mill_L,plus) + s_slack(1959,mill_L,minus) + s_slack(1959,mill_S,plus)
     
      + s_slack(1959,mill_S,minus) + s_slack(1959,ofib_L,plus) + s_slack(1959,ofib_L,minus) + s_slack(1959,ooil_L,plus) + s_slack(1959,ooil_L,minus) + s_slack(1959,opul_H,plus) + s_slack(1959,opul_H,minus) + s_slack(1959,opul_L,plus)
     
      + s_slack(1959,opul_L,minus) + s_slack(1959,opul_S,plus) + s_slack(1959,opul_S,minus) + s_slack(1959,pige_H,plus) + s_slack(1959,pige_H,minus) + s_slack(1959,pige_L,plus) + s_slack(1959,pige_L,minus) + s_slack(1959,pige_S,plus)
     
      + s_slack(1959,pige_S,minus) + s_slack(1959,pota_H,plus) + s_slack(1959,pota_H,minus) + s_slack(1959,pota_L,plus) + s_slack(1959,pota_L,minus) + s_slack(1959,pota_S,plus) + s_slack(1959,pota_S,minus) + s_slack(1959,rest_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 162
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1959,rest_H,minus) + s_slack(1959,rest_L,plus) + s_slack(1959,rest_L,minus) + s_slack(1959,rest_S,plus) + s_slack(1959,rest_S,minus) + s_slack(1959,rice_H,plus) + s_slack(1959,rice_H,minus) + s_slack(1959,rice_L,plus)
     
      + s_slack(1959,rice_L,minus) + s_slack(1959,rice_S,plus) + s_slack(1959,rice_S,minus) + s_slack(1959,sorg_L,plus) + s_slack(1959,sorg_L,minus) + s_slack(1959,sorg_S,plus) + s_slack(1959,sorg_S,minus) + s_slack(1959,soyb_L,plus)
     
      + s_slack(1959,soyb_L,minus) + s_slack(1959,soyb_S,plus) + s_slack(1959,soyb_S,minus) + s_slack(1959,sunf_L,plus) + s_slack(1959,sunf_L,minus) + s_slack(1959,temf_H,plus) + s_slack(1959,temf_H,minus) + s_slack(1959,temf_L,plus)
     
      + s_slack(1959,temf_L,minus) + s_slack(1959,temf_S,plus) + s_slack(1959,temf_S,minus) + s_slack(1959,toba_H,plus) + s_slack(1959,toba_H,minus) + s_slack(1959,toba_L,plus) + s_slack(1959,toba_L,minus) + s_slack(1959,trof_L,plus)
     
      + s_slack(1959,trof_L,minus) + s_slack(1959,trof_S,plus) + s_slack(1959,trof_S,minus) + s_slack(1959,vege_H,plus) + s_slack(1959,vege_H,minus) + s_slack(1959,vege_L,plus) + s_slack(1959,vege_L,minus) + s_slack(1959,vege_S,plus)
     
      + s_slack(1959,vege_S,minus) + s_slack(1960,rice_I,plus) + s_slack(1960,rice_I,minus) + s_slack(1960,sugc_I,plus) + s_slack(1960,sugc_I,minus) + s_slack(1960,whea_I,plus) + s_slack(1960,whea_I,minus) + s_slack(1960,bean_H,plus)
     
      + s_slack(1960,bean_H,minus) + s_slack(1960,bean_L,plus) + s_slack(1960,bean_L,minus) + s_slack(1960,bean_S,plus) + s_slack(1960,bean_S,minus) + s_slack(1960,cass_L,plus) + s_slack(1960,cass_L,minus) + s_slack(1960,cass_S,plus)
     
      + s_slack(1960,cass_S,minus) + s_slack(1960,chic_H,plus) + s_slack(1960,chic_H,minus) + s_slack(1960,chic_L,plus) + s_slack(1960,chic_L,minus) + s_slack(1960,chic_S,plus) + s_slack(1960,chic_S,minus) + s_slack(1960,coff_H,plus)
     
      + s_slack(1960,coff_H,minus) + s_slack(1960,coff_L,plus) + s_slack(1960,coff_L,minus) + s_slack(1960,cott_L,plus) + s_slack(1960,cott_L,minus) + s_slack(1960,cowp_H,plus) + s_slack(1960,cowp_H,minus) + s_slack(1960,cowp_L,plus)
     
      + s_slack(1960,cowp_L,minus) + s_slack(1960,cowp_S,plus) + s_slack(1960,cowp_S,minus) + s_slack(1960,grou_H,plus) + s_slack(1960,grou_H,minus) + s_slack(1960,grou_L,plus) + s_slack(1960,grou_L,minus) + s_slack(1960,grou_S,plus)
     
      + s_slack(1960,grou_S,minus) + s_slack(1960,lent_H,plus) + s_slack(1960,lent_H,minus) + s_slack(1960,lent_L,plus) + s_slack(1960,lent_L,minus) + s_slack(1960,lent_S,plus) + s_slack(1960,lent_S,minus) + s_slack(1960,maiz_H,plus)
     
      + s_slack(1960,maiz_H,minus) + s_slack(1960,maiz_L,plus) + s_slack(1960,maiz_L,minus) + s_slack(1960,maiz_S,plus) + s_slack(1960,maiz_S,minus) + s_slack(1960,mill_H,plus) + s_slack(1960,mill_H,minus) + s_slack(1960,mill_L,plus)
     
      + s_slack(1960,mill_L,minus) + s_slack(1960,mill_S,plus) + s_slack(1960,mill_S,minus) + s_slack(1960,ofib_L,plus) + s_slack(1960,ofib_L,minus) + s_slack(1960,ooil_L,plus) + s_slack(1960,ooil_L,minus) + s_slack(1960,opul_H,plus)
     
      + s_slack(1960,opul_H,minus) + s_slack(1960,opul_L,plus) + s_slack(1960,opul_L,minus) + s_slack(1960,opul_S,plus) + s_slack(1960,opul_S,minus) + s_slack(1960,pige_H,plus) + s_slack(1960,pige_H,minus) + s_slack(1960,pige_L,plus)
     
      + s_slack(1960,pige_L,minus) + s_slack(1960,pige_S,plus) + s_slack(1960,pige_S,minus) + s_slack(1960,pota_H,plus) + s_slack(1960,pota_H,minus) + s_slack(1960,pota_L,plus) + s_slack(1960,pota_L,minus) + s_slack(1960,pota_S,plus)
     
      + s_slack(1960,pota_S,minus) + s_slack(1960,rest_H,plus) + s_slack(1960,rest_H,minus) + s_slack(1960,rest_L,plus) + s_slack(1960,rest_L,minus) + s_slack(1960,rest_S,plus) + s_slack(1960,rest_S,minus) + s_slack(1960,rice_H,plus)
     
      + s_slack(1960,rice_H,minus) + s_slack(1960,rice_L,plus) + s_slack(1960,rice_L,minus) + s_slack(1960,rice_S,plus) + s_slack(1960,rice_S,minus) + s_slack(1960,sorg_L,plus) + s_slack(1960,sorg_L,minus) + s_slack(1960,sorg_S,plus)
     
      + s_slack(1960,sorg_S,minus) + s_slack(1960,soyb_L,plus) + s_slack(1960,soyb_L,minus) + s_slack(1960,soyb_S,plus) + s_slack(1960,soyb_S,minus) + s_slack(1960,sunf_L,plus) + s_slack(1960,sunf_L,minus) + s_slack(1960,temf_H,plus)
     
      + s_slack(1960,temf_H,minus) + s_slack(1960,temf_L,plus) + s_slack(1960,temf_L,minus) + s_slack(1960,temf_S,plus) + s_slack(1960,temf_S,minus) + s_slack(1960,toba_H,plus) + s_slack(1960,toba_H,minus) + s_slack(1960,toba_L,plus)
     
      + s_slack(1960,toba_L,minus) + s_slack(1960,trof_L,plus) + s_slack(1960,trof_L,minus) + s_slack(1960,trof_S,plus) + s_slack(1960,trof_S,minus) + s_slack(1960,vege_H,plus) + s_slack(1960,vege_H,minus) + s_slack(1960,vege_L,plus)
     
      + s_slack(1960,vege_L,minus) + s_slack(1960,vege_S,plus) + s_slack(1960,vege_S,minus) + s_slack(1961,rice_I,plus) + s_slack(1961,rice_I,minus) + s_slack(1961,sugc_I,plus) + s_slack(1961,sugc_I,minus) + s_slack(1961,whea_I,plus)
     
      + s_slack(1961,whea_I,minus) + s_slack(1961,bean_H,plus) + s_slack(1961,bean_H,minus) + s_slack(1961,bean_L,plus) + s_slack(1961,bean_L,minus) + s_slack(1961,bean_S,plus) + s_slack(1961,bean_S,minus) + s_slack(1961,cass_L,plus)
     
      + s_slack(1961,cass_L,minus) + s_slack(1961,cass_S,plus) + s_slack(1961,cass_S,minus) + s_slack(1961,chic_H,plus) + s_slack(1961,chic_H,minus) + s_slack(1961,chic_L,plus) + s_slack(1961,chic_L,minus) + s_slack(1961,chic_S,plus)
     
      + s_slack(1961,chic_S,minus) + s_slack(1961,coff_H,plus) + s_slack(1961,coff_H,minus) + s_slack(1961,coff_L,plus) + s_slack(1961,coff_L,minus) + s_slack(1961,cott_L,plus) + s_slack(1961,cott_L,minus) + s_slack(1961,cowp_H,plus)
     
      + s_slack(1961,cowp_H,minus) + s_slack(1961,cowp_L,plus) + s_slack(1961,cowp_L,minus) + s_slack(1961,cowp_S,plus) + s_slack(1961,cowp_S,minus) + s_slack(1961,grou_H,plus) + s_slack(1961,grou_H,minus) + s_slack(1961,grou_L,plus)
     
      + s_slack(1961,grou_L,minus) + s_slack(1961,grou_S,plus) + s_slack(1961,grou_S,minus) + s_slack(1961,lent_H,plus) + s_slack(1961,lent_H,minus) + s_slack(1961,lent_L,plus) + s_slack(1961,lent_L,minus) + s_slack(1961,lent_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 163
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1961,lent_S,minus) + s_slack(1961,maiz_H,plus) + s_slack(1961,maiz_H,minus) + s_slack(1961,maiz_L,plus) + s_slack(1961,maiz_L,minus) + s_slack(1961,maiz_S,plus) + s_slack(1961,maiz_S,minus) + s_slack(1961,mill_H,plus)
     
      + s_slack(1961,mill_H,minus) + s_slack(1961,mill_L,plus) + s_slack(1961,mill_L,minus) + s_slack(1961,mill_S,plus) + s_slack(1961,mill_S,minus) + s_slack(1961,ofib_L,plus) + s_slack(1961,ofib_L,minus) + s_slack(1961,ooil_L,plus)
     
      + s_slack(1961,ooil_L,minus) + s_slack(1961,opul_H,plus) + s_slack(1961,opul_H,minus) + s_slack(1961,opul_L,plus) + s_slack(1961,opul_L,minus) + s_slack(1961,opul_S,plus) + s_slack(1961,opul_S,minus) + s_slack(1961,pige_H,plus)
     
      + s_slack(1961,pige_H,minus) + s_slack(1961,pige_L,plus) + s_slack(1961,pige_L,minus) + s_slack(1961,pige_S,plus) + s_slack(1961,pige_S,minus) + s_slack(1961,pota_H,plus) + s_slack(1961,pota_H,minus) + s_slack(1961,pota_L,plus)
     
      + s_slack(1961,pota_L,minus) + s_slack(1961,pota_S,plus) + s_slack(1961,pota_S,minus) + s_slack(1961,rest_H,plus) + s_slack(1961,rest_H,minus) + s_slack(1961,rest_L,plus) + s_slack(1961,rest_L,minus) + s_slack(1961,rest_S,plus)
     
      + s_slack(1961,rest_S,minus) + s_slack(1961,rice_H,plus) + s_slack(1961,rice_H,minus) + s_slack(1961,rice_L,plus) + s_slack(1961,rice_L,minus) + s_slack(1961,rice_S,plus) + s_slack(1961,rice_S,minus) + s_slack(1961,sorg_L,plus)
     
      + s_slack(1961,sorg_L,minus) + s_slack(1961,sorg_S,plus) + s_slack(1961,sorg_S,minus) + s_slack(1961,soyb_L,plus) + s_slack(1961,soyb_L,minus) + s_slack(1961,soyb_S,plus) + s_slack(1961,soyb_S,minus) + s_slack(1961,sunf_L,plus)
     
      + s_slack(1961,sunf_L,minus) + s_slack(1961,temf_H,plus) + s_slack(1961,temf_H,minus) + s_slack(1961,temf_L,plus) + s_slack(1961,temf_L,minus) + s_slack(1961,temf_S,plus) + s_slack(1961,temf_S,minus) + s_slack(1961,toba_H,plus)
     
      + s_slack(1961,toba_H,minus) + s_slack(1961,toba_L,plus) + s_slack(1961,toba_L,minus) + s_slack(1961,trof_L,plus) + s_slack(1961,trof_L,minus) + s_slack(1961,trof_S,plus) + s_slack(1961,trof_S,minus) + s_slack(1961,vege_H,plus)
     
      + s_slack(1961,vege_H,minus) + s_slack(1961,vege_L,plus) + s_slack(1961,vege_L,minus) + s_slack(1961,vege_S,plus) + s_slack(1961,vege_S,minus) + s_slack(1962,rice_I,plus) + s_slack(1962,rice_I,minus) + s_slack(1962,sugc_I,plus)
     
      + s_slack(1962,sugc_I,minus) + s_slack(1962,whea_I,plus) + s_slack(1962,whea_I,minus) + s_slack(1962,bean_H,plus) + s_slack(1962,bean_H,minus) + s_slack(1962,bean_L,plus) + s_slack(1962,bean_L,minus) + s_slack(1962,bean_S,plus)
     
      + s_slack(1962,bean_S,minus) + s_slack(1962,cass_L,plus) + s_slack(1962,cass_L,minus) + s_slack(1962,cass_S,plus) + s_slack(1962,cass_S,minus) + s_slack(1962,chic_H,plus) + s_slack(1962,chic_H,minus) + s_slack(1962,chic_L,plus)
     
      + s_slack(1962,chic_L,minus) + s_slack(1962,chic_S,plus) + s_slack(1962,chic_S,minus) + s_slack(1962,coff_H,plus) + s_slack(1962,coff_H,minus) + s_slack(1962,coff_L,plus) + s_slack(1962,coff_L,minus) + s_slack(1962,cott_L,plus)
     
      + s_slack(1962,cott_L,minus) + s_slack(1962,cowp_H,plus) + s_slack(1962,cowp_H,minus) + s_slack(1962,cowp_L,plus) + s_slack(1962,cowp_L,minus) + s_slack(1962,cowp_S,plus) + s_slack(1962,cowp_S,minus) + s_slack(1962,grou_H,plus)
     
      + s_slack(1962,grou_H,minus) + s_slack(1962,grou_L,plus) + s_slack(1962,grou_L,minus) + s_slack(1962,grou_S,plus) + s_slack(1962,grou_S,minus) + s_slack(1962,lent_H,plus) + s_slack(1962,lent_H,minus) + s_slack(1962,lent_L,plus)
     
      + s_slack(1962,lent_L,minus) + s_slack(1962,lent_S,plus) + s_slack(1962,lent_S,minus) + s_slack(1962,maiz_H,plus) + s_slack(1962,maiz_H,minus) + s_slack(1962,maiz_L,plus) + s_slack(1962,maiz_L,minus) + s_slack(1962,maiz_S,plus)
     
      + s_slack(1962,maiz_S,minus) + s_slack(1962,mill_H,plus) + s_slack(1962,mill_H,minus) + s_slack(1962,mill_L,plus) + s_slack(1962,mill_L,minus) + s_slack(1962,mill_S,plus) + s_slack(1962,mill_S,minus) + s_slack(1962,ofib_L,plus)
     
      + s_slack(1962,ofib_L,minus) + s_slack(1962,ooil_L,plus) + s_slack(1962,ooil_L,minus) + s_slack(1962,opul_H,plus) + s_slack(1962,opul_H,minus) + s_slack(1962,opul_L,plus) + s_slack(1962,opul_L,minus) + s_slack(1962,opul_S,plus)
     
      + s_slack(1962,opul_S,minus) + s_slack(1962,pige_H,plus) + s_slack(1962,pige_H,minus) + s_slack(1962,pige_L,plus) + s_slack(1962,pige_L,minus) + s_slack(1962,pige_S,plus) + s_slack(1962,pige_S,minus) + s_slack(1962,pota_H,plus)
     
      + s_slack(1962,pota_H,minus) + s_slack(1962,pota_L,plus) + s_slack(1962,pota_L,minus) + s_slack(1962,pota_S,plus) + s_slack(1962,pota_S,minus) + s_slack(1962,rest_H,plus) + s_slack(1962,rest_H,minus) + s_slack(1962,rest_L,plus)
     
      + s_slack(1962,rest_L,minus) + s_slack(1962,rest_S,plus) + s_slack(1962,rest_S,minus) + s_slack(1962,rice_H,plus) + s_slack(1962,rice_H,minus) + s_slack(1962,rice_L,plus) + s_slack(1962,rice_L,minus) + s_slack(1962,rice_S,plus)
     
      + s_slack(1962,rice_S,minus) + s_slack(1962,sorg_L,plus) + s_slack(1962,sorg_L,minus) + s_slack(1962,sorg_S,plus) + s_slack(1962,sorg_S,minus) + s_slack(1962,soyb_L,plus) + s_slack(1962,soyb_L,minus) + s_slack(1962,soyb_S,plus)
     
      + s_slack(1962,soyb_S,minus) + s_slack(1962,sunf_L,plus) + s_slack(1962,sunf_L,minus) + s_slack(1962,temf_H,plus) + s_slack(1962,temf_H,minus) + s_slack(1962,temf_L,plus) + s_slack(1962,temf_L,minus) + s_slack(1962,temf_S,plus)
     
      + s_slack(1962,temf_S,minus) + s_slack(1962,toba_H,plus) + s_slack(1962,toba_H,minus) + s_slack(1962,toba_L,plus) + s_slack(1962,toba_L,minus) + s_slack(1962,trof_L,plus) + s_slack(1962,trof_L,minus) + s_slack(1962,trof_S,plus)
     
      + s_slack(1962,trof_S,minus) + s_slack(1962,vege_H,plus) + s_slack(1962,vege_H,minus) + s_slack(1962,vege_L,plus) + s_slack(1962,vege_L,minus) + s_slack(1962,vege_S,plus) + s_slack(1962,vege_S,minus) + s_slack(1963,rice_I,plus)
     
      + s_slack(1963,rice_I,minus) + s_slack(1963,sugc_I,plus) + s_slack(1963,sugc_I,minus) + s_slack(1963,whea_I,plus) + s_slack(1963,whea_I,minus) + s_slack(1963,bean_H,plus) + s_slack(1963,bean_H,minus) + s_slack(1963,bean_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 164
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1963,bean_L,minus) + s_slack(1963,bean_S,plus) + s_slack(1963,bean_S,minus) + s_slack(1963,cass_L,plus) + s_slack(1963,cass_L,minus) + s_slack(1963,cass_S,plus) + s_slack(1963,cass_S,minus) + s_slack(1963,chic_H,plus)
     
      + s_slack(1963,chic_H,minus) + s_slack(1963,chic_L,plus) + s_slack(1963,chic_L,minus) + s_slack(1963,chic_S,plus) + s_slack(1963,chic_S,minus) + s_slack(1963,coff_H,plus) + s_slack(1963,coff_H,minus) + s_slack(1963,coff_L,plus)
     
      + s_slack(1963,coff_L,minus) + s_slack(1963,cott_L,plus) + s_slack(1963,cott_L,minus) + s_slack(1963,cowp_H,plus) + s_slack(1963,cowp_H,minus) + s_slack(1963,cowp_L,plus) + s_slack(1963,cowp_L,minus) + s_slack(1963,cowp_S,plus)
     
      + s_slack(1963,cowp_S,minus) + s_slack(1963,grou_H,plus) + s_slack(1963,grou_H,minus) + s_slack(1963,grou_L,plus) + s_slack(1963,grou_L,minus) + s_slack(1963,grou_S,plus) + s_slack(1963,grou_S,minus) + s_slack(1963,lent_H,plus)
     
      + s_slack(1963,lent_H,minus) + s_slack(1963,lent_L,plus) + s_slack(1963,lent_L,minus) + s_slack(1963,lent_S,plus) + s_slack(1963,lent_S,minus) + s_slack(1963,maiz_H,plus) + s_slack(1963,maiz_H,minus) + s_slack(1963,maiz_L,plus)
     
      + s_slack(1963,maiz_L,minus) + s_slack(1963,maiz_S,plus) + s_slack(1963,maiz_S,minus) + s_slack(1963,mill_H,plus) + s_slack(1963,mill_H,minus) + s_slack(1963,mill_L,plus) + s_slack(1963,mill_L,minus) + s_slack(1963,mill_S,plus)
     
      + s_slack(1963,mill_S,minus) + s_slack(1963,ofib_L,plus) + s_slack(1963,ofib_L,minus) + s_slack(1963,ooil_L,plus) + s_slack(1963,ooil_L,minus) + s_slack(1963,opul_H,plus) + s_slack(1963,opul_H,minus) + s_slack(1963,opul_L,plus)
     
      + s_slack(1963,opul_L,minus) + s_slack(1963,opul_S,plus) + s_slack(1963,opul_S,minus) + s_slack(1963,pige_H,plus) + s_slack(1963,pige_H,minus) + s_slack(1963,pige_L,plus) + s_slack(1963,pige_L,minus) + s_slack(1963,pige_S,plus)
     
      + s_slack(1963,pige_S,minus) + s_slack(1963,pota_H,plus) + s_slack(1963,pota_H,minus) + s_slack(1963,pota_L,plus) + s_slack(1963,pota_L,minus) + s_slack(1963,pota_S,plus) + s_slack(1963,pota_S,minus) + s_slack(1963,rest_H,plus)
     
      + s_slack(1963,rest_H,minus) + s_slack(1963,rest_L,plus) + s_slack(1963,rest_L,minus) + s_slack(1963,rest_S,plus) + s_slack(1963,rest_S,minus) + s_slack(1963,rice_H,plus) + s_slack(1963,rice_H,minus) + s_slack(1963,rice_L,plus)
     
      + s_slack(1963,rice_L,minus) + s_slack(1963,rice_S,plus) + s_slack(1963,rice_S,minus) + s_slack(1963,sorg_L,plus) + s_slack(1963,sorg_L,minus) + s_slack(1963,sorg_S,plus) + s_slack(1963,sorg_S,minus) + s_slack(1963,soyb_L,plus)
     
      + s_slack(1963,soyb_L,minus) + s_slack(1963,soyb_S,plus) + s_slack(1963,soyb_S,minus) + s_slack(1963,sunf_L,plus) + s_slack(1963,sunf_L,minus) + s_slack(1963,temf_H,plus) + s_slack(1963,temf_H,minus) + s_slack(1963,temf_L,plus)
     
      + s_slack(1963,temf_L,minus) + s_slack(1963,temf_S,plus) + s_slack(1963,temf_S,minus) + s_slack(1963,toba_H,plus) + s_slack(1963,toba_H,minus) + s_slack(1963,toba_L,plus) + s_slack(1963,toba_L,minus) + s_slack(1963,trof_L,plus)
     
      + s_slack(1963,trof_L,minus) + s_slack(1963,trof_S,plus) + s_slack(1963,trof_S,minus) + s_slack(1963,vege_H,plus) + s_slack(1963,vege_H,minus) + s_slack(1963,vege_L,plus) + s_slack(1963,vege_L,minus) + s_slack(1963,vege_S,plus)
     
      + s_slack(1963,vege_S,minus) + s_slack(1964,rice_I,plus) + s_slack(1964,rice_I,minus) + s_slack(1964,sugc_I,plus) + s_slack(1964,sugc_I,minus) + s_slack(1964,whea_I,plus) + s_slack(1964,whea_I,minus) + s_slack(1964,bean_H,plus)
     
      + s_slack(1964,bean_H,minus) + s_slack(1964,bean_L,plus) + s_slack(1964,bean_L,minus) + s_slack(1964,bean_S,plus) + s_slack(1964,bean_S,minus) + s_slack(1964,cass_L,plus) + s_slack(1964,cass_L,minus) + s_slack(1964,cass_S,plus)
     
      + s_slack(1964,cass_S,minus) + s_slack(1964,chic_H,plus) + s_slack(1964,chic_H,minus) + s_slack(1964,chic_L,plus) + s_slack(1964,chic_L,minus) + s_slack(1964,chic_S,plus) + s_slack(1964,chic_S,minus) + s_slack(1964,coff_H,plus)
     
      + s_slack(1964,coff_H,minus) + s_slack(1964,coff_L,plus) + s_slack(1964,coff_L,minus) + s_slack(1964,cott_L,plus) + s_slack(1964,cott_L,minus) + s_slack(1964,cowp_H,plus) + s_slack(1964,cowp_H,minus) + s_slack(1964,cowp_L,plus)
     
      + s_slack(1964,cowp_L,minus) + s_slack(1964,cowp_S,plus) + s_slack(1964,cowp_S,minus) + s_slack(1964,grou_H,plus) + s_slack(1964,grou_H,minus) + s_slack(1964,grou_L,plus) + s_slack(1964,grou_L,minus) + s_slack(1964,grou_S,plus)
     
      + s_slack(1964,grou_S,minus) + s_slack(1964,lent_H,plus) + s_slack(1964,lent_H,minus) + s_slack(1964,lent_L,plus) + s_slack(1964,lent_L,minus) + s_slack(1964,lent_S,plus) + s_slack(1964,lent_S,minus) + s_slack(1964,maiz_H,plus)
     
      + s_slack(1964,maiz_H,minus) + s_slack(1964,maiz_L,plus) + s_slack(1964,maiz_L,minus) + s_slack(1964,maiz_S,plus) + s_slack(1964,maiz_S,minus) + s_slack(1964,mill_H,plus) + s_slack(1964,mill_H,minus) + s_slack(1964,mill_L,plus)
     
      + s_slack(1964,mill_L,minus) + s_slack(1964,mill_S,plus) + s_slack(1964,mill_S,minus) + s_slack(1964,ofib_L,plus) + s_slack(1964,ofib_L,minus) + s_slack(1964,ooil_L,plus) + s_slack(1964,ooil_L,minus) + s_slack(1964,opul_H,plus)
     
      + s_slack(1964,opul_H,minus) + s_slack(1964,opul_L,plus) + s_slack(1964,opul_L,minus) + s_slack(1964,opul_S,plus) + s_slack(1964,opul_S,minus) + s_slack(1964,pige_H,plus) + s_slack(1964,pige_H,minus) + s_slack(1964,pige_L,plus)
     
      + s_slack(1964,pige_L,minus) + s_slack(1964,pige_S,plus) + s_slack(1964,pige_S,minus) + s_slack(1964,pota_H,plus) + s_slack(1964,pota_H,minus) + s_slack(1964,pota_L,plus) + s_slack(1964,pota_L,minus) + s_slack(1964,pota_S,plus)
     
      + s_slack(1964,pota_S,minus) + s_slack(1964,rest_H,plus) + s_slack(1964,rest_H,minus) + s_slack(1964,rest_L,plus) + s_slack(1964,rest_L,minus) + s_slack(1964,rest_S,plus) + s_slack(1964,rest_S,minus) + s_slack(1964,rice_H,plus)
     
      + s_slack(1964,rice_H,minus) + s_slack(1964,rice_L,plus) + s_slack(1964,rice_L,minus) + s_slack(1964,rice_S,plus) + s_slack(1964,rice_S,minus) + s_slack(1964,sorg_L,plus) + s_slack(1964,sorg_L,minus) + s_slack(1964,sorg_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 165
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1964,sorg_S,minus) + s_slack(1964,soyb_L,plus) + s_slack(1964,soyb_L,minus) + s_slack(1964,soyb_S,plus) + s_slack(1964,soyb_S,minus) + s_slack(1964,sunf_L,plus) + s_slack(1964,sunf_L,minus) + s_slack(1964,temf_H,plus)
     
      + s_slack(1964,temf_H,minus) + s_slack(1964,temf_L,plus) + s_slack(1964,temf_L,minus) + s_slack(1964,temf_S,plus) + s_slack(1964,temf_S,minus) + s_slack(1964,toba_H,plus) + s_slack(1964,toba_H,minus) + s_slack(1964,toba_L,plus)
     
      + s_slack(1964,toba_L,minus) + s_slack(1964,trof_L,plus) + s_slack(1964,trof_L,minus) + s_slack(1964,trof_S,plus) + s_slack(1964,trof_S,minus) + s_slack(1964,vege_H,plus) + s_slack(1964,vege_H,minus) + s_slack(1964,vege_L,plus)
     
      + s_slack(1964,vege_L,minus) + s_slack(1964,vege_S,plus) + s_slack(1964,vege_S,minus) + s_slack(1965,rice_I,plus) + s_slack(1965,rice_I,minus) + s_slack(1965,sugc_I,plus) + s_slack(1965,sugc_I,minus) + s_slack(1965,whea_I,plus)
     
      + s_slack(1965,whea_I,minus) + s_slack(1965,bean_H,plus) + s_slack(1965,bean_H,minus) + s_slack(1965,bean_L,plus) + s_slack(1965,bean_L,minus) + s_slack(1965,bean_S,plus) + s_slack(1965,bean_S,minus) + s_slack(1965,cass_L,plus)
     
      + s_slack(1965,cass_L,minus) + s_slack(1965,cass_S,plus) + s_slack(1965,cass_S,minus) + s_slack(1965,chic_H,plus) + s_slack(1965,chic_H,minus) + s_slack(1965,chic_L,plus) + s_slack(1965,chic_L,minus) + s_slack(1965,chic_S,plus)
     
      + s_slack(1965,chic_S,minus) + s_slack(1965,coff_H,plus) + s_slack(1965,coff_H,minus) + s_slack(1965,coff_L,plus) + s_slack(1965,coff_L,minus) + s_slack(1965,cott_L,plus) + s_slack(1965,cott_L,minus) + s_slack(1965,cowp_H,plus)
     
      + s_slack(1965,cowp_H,minus) + s_slack(1965,cowp_L,plus) + s_slack(1965,cowp_L,minus) + s_slack(1965,cowp_S,plus) + s_slack(1965,cowp_S,minus) + s_slack(1965,grou_H,plus) + s_slack(1965,grou_H,minus) + s_slack(1965,grou_L,plus)
     
      + s_slack(1965,grou_L,minus) + s_slack(1965,grou_S,plus) + s_slack(1965,grou_S,minus) + s_slack(1965,lent_H,plus) + s_slack(1965,lent_H,minus) + s_slack(1965,lent_L,plus) + s_slack(1965,lent_L,minus) + s_slack(1965,lent_S,plus)
     
      + s_slack(1965,lent_S,minus) + s_slack(1965,maiz_H,plus) + s_slack(1965,maiz_H,minus) + s_slack(1965,maiz_L,plus) + s_slack(1965,maiz_L,minus) + s_slack(1965,maiz_S,plus) + s_slack(1965,maiz_S,minus) + s_slack(1965,mill_H,plus)
     
      + s_slack(1965,mill_H,minus) + s_slack(1965,mill_L,plus) + s_slack(1965,mill_L,minus) + s_slack(1965,mill_S,plus) + s_slack(1965,mill_S,minus) + s_slack(1965,ofib_L,plus) + s_slack(1965,ofib_L,minus) + s_slack(1965,ooil_L,plus)
     
      + s_slack(1965,ooil_L,minus) + s_slack(1965,opul_H,plus) + s_slack(1965,opul_H,minus) + s_slack(1965,opul_L,plus) + s_slack(1965,opul_L,minus) + s_slack(1965,opul_S,plus) + s_slack(1965,opul_S,minus) + s_slack(1965,pige_H,plus)
     
      + s_slack(1965,pige_H,minus) + s_slack(1965,pige_L,plus) + s_slack(1965,pige_L,minus) + s_slack(1965,pige_S,plus) + s_slack(1965,pige_S,minus) + s_slack(1965,pota_H,plus) + s_slack(1965,pota_H,minus) + s_slack(1965,pota_L,plus)
     
      + s_slack(1965,pota_L,minus) + s_slack(1965,pota_S,plus) + s_slack(1965,pota_S,minus) + s_slack(1965,rest_H,plus) + s_slack(1965,rest_H,minus) + s_slack(1965,rest_L,plus) + s_slack(1965,rest_L,minus) + s_slack(1965,rest_S,plus)
     
      + s_slack(1965,rest_S,minus) + s_slack(1965,rice_H,plus) + s_slack(1965,rice_H,minus) + s_slack(1965,rice_L,plus) + s_slack(1965,rice_L,minus) + s_slack(1965,rice_S,plus) + s_slack(1965,rice_S,minus) + s_slack(1965,sorg_L,plus)
     
      + s_slack(1965,sorg_L,minus) + s_slack(1965,sorg_S,plus) + s_slack(1965,sorg_S,minus) + s_slack(1965,soyb_L,plus) + s_slack(1965,soyb_L,minus) + s_slack(1965,soyb_S,plus) + s_slack(1965,soyb_S,minus) + s_slack(1965,sunf_L,plus)
     
      + s_slack(1965,sunf_L,minus) + s_slack(1965,temf_H,plus) + s_slack(1965,temf_H,minus) + s_slack(1965,temf_L,plus) + s_slack(1965,temf_L,minus) + s_slack(1965,temf_S,plus) + s_slack(1965,temf_S,minus) + s_slack(1965,toba_H,plus)
     
      + s_slack(1965,toba_H,minus) + s_slack(1965,toba_L,plus) + s_slack(1965,toba_L,minus) + s_slack(1965,trof_L,plus) + s_slack(1965,trof_L,minus) + s_slack(1965,trof_S,plus) + s_slack(1965,trof_S,minus) + s_slack(1965,vege_H,plus)
     
      + s_slack(1965,vege_H,minus) + s_slack(1965,vege_L,plus) + s_slack(1965,vege_L,minus) + s_slack(1965,vege_S,plus) + s_slack(1965,vege_S,minus) + s_slack(1966,rice_I,plus) + s_slack(1966,rice_I,minus) + s_slack(1966,sugc_I,plus)
     
      + s_slack(1966,sugc_I,minus) + s_slack(1966,whea_I,plus) + s_slack(1966,whea_I,minus) + s_slack(1966,bean_H,plus) + s_slack(1966,bean_H,minus) + s_slack(1966,bean_L,plus) + s_slack(1966,bean_L,minus) + s_slack(1966,bean_S,plus)
     
      + s_slack(1966,bean_S,minus) + s_slack(1966,cass_L,plus) + s_slack(1966,cass_L,minus) + s_slack(1966,cass_S,plus) + s_slack(1966,cass_S,minus) + s_slack(1966,chic_H,plus) + s_slack(1966,chic_H,minus) + s_slack(1966,chic_L,plus)
     
      + s_slack(1966,chic_L,minus) + s_slack(1966,chic_S,plus) + s_slack(1966,chic_S,minus) + s_slack(1966,coff_H,plus) + s_slack(1966,coff_H,minus) + s_slack(1966,coff_L,plus) + s_slack(1966,coff_L,minus) + s_slack(1966,cott_L,plus)
     
      + s_slack(1966,cott_L,minus) + s_slack(1966,cowp_H,plus) + s_slack(1966,cowp_H,minus) + s_slack(1966,cowp_L,plus) + s_slack(1966,cowp_L,minus) + s_slack(1966,cowp_S,plus) + s_slack(1966,cowp_S,minus) + s_slack(1966,grou_H,plus)
     
      + s_slack(1966,grou_H,minus) + s_slack(1966,grou_L,plus) + s_slack(1966,grou_L,minus) + s_slack(1966,grou_S,plus) + s_slack(1966,grou_S,minus) + s_slack(1966,lent_H,plus) + s_slack(1966,lent_H,minus) + s_slack(1966,lent_L,plus)
     
      + s_slack(1966,lent_L,minus) + s_slack(1966,lent_S,plus) + s_slack(1966,lent_S,minus) + s_slack(1966,maiz_H,plus) + s_slack(1966,maiz_H,minus) + s_slack(1966,maiz_L,plus) + s_slack(1966,maiz_L,minus) + s_slack(1966,maiz_S,plus)
     
      + s_slack(1966,maiz_S,minus) + s_slack(1966,mill_H,plus) + s_slack(1966,mill_H,minus) + s_slack(1966,mill_L,plus) + s_slack(1966,mill_L,minus) + s_slack(1966,mill_S,plus) + s_slack(1966,mill_S,minus) + s_slack(1966,ofib_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 166
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1966,ofib_L,minus) + s_slack(1966,ooil_L,plus) + s_slack(1966,ooil_L,minus) + s_slack(1966,opul_H,plus) + s_slack(1966,opul_H,minus) + s_slack(1966,opul_L,plus) + s_slack(1966,opul_L,minus) + s_slack(1966,opul_S,plus)
     
      + s_slack(1966,opul_S,minus) + s_slack(1966,pige_H,plus) + s_slack(1966,pige_H,minus) + s_slack(1966,pige_L,plus) + s_slack(1966,pige_L,minus) + s_slack(1966,pige_S,plus) + s_slack(1966,pige_S,minus) + s_slack(1966,pota_H,plus)
     
      + s_slack(1966,pota_H,minus) + s_slack(1966,pota_L,plus) + s_slack(1966,pota_L,minus) + s_slack(1966,pota_S,plus) + s_slack(1966,pota_S,minus) + s_slack(1966,rest_H,plus) + s_slack(1966,rest_H,minus) + s_slack(1966,rest_L,plus)
     
      + s_slack(1966,rest_L,minus) + s_slack(1966,rest_S,plus) + s_slack(1966,rest_S,minus) + s_slack(1966,rice_H,plus) + s_slack(1966,rice_H,minus) + s_slack(1966,rice_L,plus) + s_slack(1966,rice_L,minus) + s_slack(1966,rice_S,plus)
     
      + s_slack(1966,rice_S,minus) + s_slack(1966,sorg_L,plus) + s_slack(1966,sorg_L,minus) + s_slack(1966,sorg_S,plus) + s_slack(1966,sorg_S,minus) + s_slack(1966,soyb_L,plus) + s_slack(1966,soyb_L,minus) + s_slack(1966,soyb_S,plus)
     
      + s_slack(1966,soyb_S,minus) + s_slack(1966,sunf_L,plus) + s_slack(1966,sunf_L,minus) + s_slack(1966,temf_H,plus) + s_slack(1966,temf_H,minus) + s_slack(1966,temf_L,plus) + s_slack(1966,temf_L,minus) + s_slack(1966,temf_S,plus)
     
      + s_slack(1966,temf_S,minus) + s_slack(1966,toba_H,plus) + s_slack(1966,toba_H,minus) + s_slack(1966,toba_L,plus) + s_slack(1966,toba_L,minus) + s_slack(1966,trof_L,plus) + s_slack(1966,trof_L,minus) + s_slack(1966,trof_S,plus)
     
      + s_slack(1966,trof_S,minus) + s_slack(1966,vege_H,plus) + s_slack(1966,vege_H,minus) + s_slack(1966,vege_L,plus) + s_slack(1966,vege_L,minus) + s_slack(1966,vege_S,plus) + s_slack(1966,vege_S,minus) + s_slack(1967,rice_I,plus)
     
      + s_slack(1967,rice_I,minus) + s_slack(1967,sugc_I,plus) + s_slack(1967,sugc_I,minus) + s_slack(1967,whea_I,plus) + s_slack(1967,whea_I,minus) + s_slack(1967,bean_H,plus) + s_slack(1967,bean_H,minus) + s_slack(1967,bean_L,plus)
     
      + s_slack(1967,bean_L,minus) + s_slack(1967,bean_S,plus) + s_slack(1967,bean_S,minus) + s_slack(1967,cass_L,plus) + s_slack(1967,cass_L,minus) + s_slack(1967,cass_S,plus) + s_slack(1967,cass_S,minus) + s_slack(1967,chic_H,plus)
     
      + s_slack(1967,chic_H,minus) + s_slack(1967,chic_L,plus) + s_slack(1967,chic_L,minus) + s_slack(1967,chic_S,plus) + s_slack(1967,chic_S,minus) + s_slack(1967,coff_H,plus) + s_slack(1967,coff_H,minus) + s_slack(1967,coff_L,plus)
     
      + s_slack(1967,coff_L,minus) + s_slack(1967,cott_L,plus) + s_slack(1967,cott_L,minus) + s_slack(1967,cowp_H,plus) + s_slack(1967,cowp_H,minus) + s_slack(1967,cowp_L,plus) + s_slack(1967,cowp_L,minus) + s_slack(1967,cowp_S,plus)
     
      + s_slack(1967,cowp_S,minus) + s_slack(1967,grou_H,plus) + s_slack(1967,grou_H,minus) + s_slack(1967,grou_L,plus) + s_slack(1967,grou_L,minus) + s_slack(1967,grou_S,plus) + s_slack(1967,grou_S,minus) + s_slack(1967,lent_H,plus)
     
      + s_slack(1967,lent_H,minus) + s_slack(1967,lent_L,plus) + s_slack(1967,lent_L,minus) + s_slack(1967,lent_S,plus) + s_slack(1967,lent_S,minus) + s_slack(1967,maiz_H,plus) + s_slack(1967,maiz_H,minus) + s_slack(1967,maiz_L,plus)
     
      + s_slack(1967,maiz_L,minus) + s_slack(1967,maiz_S,plus) + s_slack(1967,maiz_S,minus) + s_slack(1967,mill_H,plus) + s_slack(1967,mill_H,minus) + s_slack(1967,mill_L,plus) + s_slack(1967,mill_L,minus) + s_slack(1967,mill_S,plus)
     
      + s_slack(1967,mill_S,minus) + s_slack(1967,ofib_L,plus) + s_slack(1967,ofib_L,minus) + s_slack(1967,ooil_L,plus) + s_slack(1967,ooil_L,minus) + s_slack(1967,opul_H,plus) + s_slack(1967,opul_H,minus) + s_slack(1967,opul_L,plus)
     
      + s_slack(1967,opul_L,minus) + s_slack(1967,opul_S,plus) + s_slack(1967,opul_S,minus) + s_slack(1967,pige_H,plus) + s_slack(1967,pige_H,minus) + s_slack(1967,pige_L,plus) + s_slack(1967,pige_L,minus) + s_slack(1967,pige_S,plus)
     
      + s_slack(1967,pige_S,minus) + s_slack(1967,pota_H,plus) + s_slack(1967,pota_H,minus) + s_slack(1967,pota_L,plus) + s_slack(1967,pota_L,minus) + s_slack(1967,pota_S,plus) + s_slack(1967,pota_S,minus) + s_slack(1967,rest_H,plus)
     
      + s_slack(1967,rest_H,minus) + s_slack(1967,rest_L,plus) + s_slack(1967,rest_L,minus) + s_slack(1967,rest_S,plus) + s_slack(1967,rest_S,minus) + s_slack(1967,rice_H,plus) + s_slack(1967,rice_H,minus) + s_slack(1967,rice_L,plus)
     
      + s_slack(1967,rice_L,minus) + s_slack(1967,rice_S,plus) + s_slack(1967,rice_S,minus) + s_slack(1967,sorg_L,plus) + s_slack(1967,sorg_L,minus) + s_slack(1967,sorg_S,plus) + s_slack(1967,sorg_S,minus) + s_slack(1967,soyb_L,plus)
     
      + s_slack(1967,soyb_L,minus) + s_slack(1967,soyb_S,plus) + s_slack(1967,soyb_S,minus) + s_slack(1967,sunf_L,plus) + s_slack(1967,sunf_L,minus) + s_slack(1967,temf_H,plus) + s_slack(1967,temf_H,minus) + s_slack(1967,temf_L,plus)
     
      + s_slack(1967,temf_L,minus) + s_slack(1967,temf_S,plus) + s_slack(1967,temf_S,minus) + s_slack(1967,toba_H,plus) + s_slack(1967,toba_H,minus) + s_slack(1967,toba_L,plus) + s_slack(1967,toba_L,minus) + s_slack(1967,trof_L,plus)
     
      + s_slack(1967,trof_L,minus) + s_slack(1967,trof_S,plus) + s_slack(1967,trof_S,minus) + s_slack(1967,vege_H,plus) + s_slack(1967,vege_H,minus) + s_slack(1967,vege_L,plus) + s_slack(1967,vege_L,minus) + s_slack(1967,vege_S,plus)
     
      + s_slack(1967,vege_S,minus) + s_slack(1968,rice_I,plus) + s_slack(1968,rice_I,minus) + s_slack(1968,sugc_I,plus) + s_slack(1968,sugc_I,minus) + s_slack(1968,whea_I,plus) + s_slack(1968,whea_I,minus) + s_slack(1968,bean_H,plus)
     
      + s_slack(1968,bean_H,minus) + s_slack(1968,bean_L,plus) + s_slack(1968,bean_L,minus) + s_slack(1968,bean_S,plus) + s_slack(1968,bean_S,minus) + s_slack(1968,cass_L,plus) + s_slack(1968,cass_L,minus) + s_slack(1968,cass_S,plus)
     
      + s_slack(1968,cass_S,minus) + s_slack(1968,chic_H,plus) + s_slack(1968,chic_H,minus) + s_slack(1968,chic_L,plus) + s_slack(1968,chic_L,minus) + s_slack(1968,chic_S,plus) + s_slack(1968,chic_S,minus) + s_slack(1968,coff_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 167
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1968,coff_H,minus) + s_slack(1968,coff_L,plus) + s_slack(1968,coff_L,minus) + s_slack(1968,cott_L,plus) + s_slack(1968,cott_L,minus) + s_slack(1968,cowp_H,plus) + s_slack(1968,cowp_H,minus) + s_slack(1968,cowp_L,plus)
     
      + s_slack(1968,cowp_L,minus) + s_slack(1968,cowp_S,plus) + s_slack(1968,cowp_S,minus) + s_slack(1968,grou_H,plus) + s_slack(1968,grou_H,minus) + s_slack(1968,grou_L,plus) + s_slack(1968,grou_L,minus) + s_slack(1968,grou_S,plus)
     
      + s_slack(1968,grou_S,minus) + s_slack(1968,lent_H,plus) + s_slack(1968,lent_H,minus) + s_slack(1968,lent_L,plus) + s_slack(1968,lent_L,minus) + s_slack(1968,lent_S,plus) + s_slack(1968,lent_S,minus) + s_slack(1968,maiz_H,plus)
     
      + s_slack(1968,maiz_H,minus) + s_slack(1968,maiz_L,plus) + s_slack(1968,maiz_L,minus) + s_slack(1968,maiz_S,plus) + s_slack(1968,maiz_S,minus) + s_slack(1968,mill_H,plus) + s_slack(1968,mill_H,minus) + s_slack(1968,mill_L,plus)
     
      + s_slack(1968,mill_L,minus) + s_slack(1968,mill_S,plus) + s_slack(1968,mill_S,minus) + s_slack(1968,ofib_L,plus) + s_slack(1968,ofib_L,minus) + s_slack(1968,ooil_L,plus) + s_slack(1968,ooil_L,minus) + s_slack(1968,opul_H,plus)
     
      + s_slack(1968,opul_H,minus) + s_slack(1968,opul_L,plus) + s_slack(1968,opul_L,minus) + s_slack(1968,opul_S,plus) + s_slack(1968,opul_S,minus) + s_slack(1968,pige_H,plus) + s_slack(1968,pige_H,minus) + s_slack(1968,pige_L,plus)
     
      + s_slack(1968,pige_L,minus) + s_slack(1968,pige_S,plus) + s_slack(1968,pige_S,minus) + s_slack(1968,pota_H,plus) + s_slack(1968,pota_H,minus) + s_slack(1968,pota_L,plus) + s_slack(1968,pota_L,minus) + s_slack(1968,pota_S,plus)
     
      + s_slack(1968,pota_S,minus) + s_slack(1968,rest_H,plus) + s_slack(1968,rest_H,minus) + s_slack(1968,rest_L,plus) + s_slack(1968,rest_L,minus) + s_slack(1968,rest_S,plus) + s_slack(1968,rest_S,minus) + s_slack(1968,rice_H,plus)
     
      + s_slack(1968,rice_H,minus) + s_slack(1968,rice_L,plus) + s_slack(1968,rice_L,minus) + s_slack(1968,rice_S,plus) + s_slack(1968,rice_S,minus) + s_slack(1968,sorg_L,plus) + s_slack(1968,sorg_L,minus) + s_slack(1968,sorg_S,plus)
     
      + s_slack(1968,sorg_S,minus) + s_slack(1968,soyb_L,plus) + s_slack(1968,soyb_L,minus) + s_slack(1968,soyb_S,plus) + s_slack(1968,soyb_S,minus) + s_slack(1968,sunf_L,plus) + s_slack(1968,sunf_L,minus) + s_slack(1968,temf_H,plus)
     
      + s_slack(1968,temf_H,minus) + s_slack(1968,temf_L,plus) + s_slack(1968,temf_L,minus) + s_slack(1968,temf_S,plus) + s_slack(1968,temf_S,minus) + s_slack(1968,toba_H,plus) + s_slack(1968,toba_H,minus) + s_slack(1968,toba_L,plus)
     
      + s_slack(1968,toba_L,minus) + s_slack(1968,trof_L,plus) + s_slack(1968,trof_L,minus) + s_slack(1968,trof_S,plus) + s_slack(1968,trof_S,minus) + s_slack(1968,vege_H,plus) + s_slack(1968,vege_H,minus) + s_slack(1968,vege_L,plus)
     
      + s_slack(1968,vege_L,minus) + s_slack(1968,vege_S,plus) + s_slack(1968,vege_S,minus) + s_slack(1969,rice_I,plus) + s_slack(1969,rice_I,minus) + s_slack(1969,sugc_I,plus) + s_slack(1969,sugc_I,minus) + s_slack(1969,whea_I,plus)
     
      + s_slack(1969,whea_I,minus) + s_slack(1969,bean_H,plus) + s_slack(1969,bean_H,minus) + s_slack(1969,bean_L,plus) + s_slack(1969,bean_L,minus) + s_slack(1969,bean_S,plus) + s_slack(1969,bean_S,minus) + s_slack(1969,cass_L,plus)
     
      + s_slack(1969,cass_L,minus) + s_slack(1969,cass_S,plus) + s_slack(1969,cass_S,minus) + s_slack(1969,chic_H,plus) + s_slack(1969,chic_H,minus) + s_slack(1969,chic_L,plus) + s_slack(1969,chic_L,minus) + s_slack(1969,chic_S,plus)
     
      + s_slack(1969,chic_S,minus) + s_slack(1969,coff_H,plus) + s_slack(1969,coff_H,minus) + s_slack(1969,coff_L,plus) + s_slack(1969,coff_L,minus) + s_slack(1969,cott_L,plus) + s_slack(1969,cott_L,minus) + s_slack(1969,cowp_H,plus)
     
      + s_slack(1969,cowp_H,minus) + s_slack(1969,cowp_L,plus) + s_slack(1969,cowp_L,minus) + s_slack(1969,cowp_S,plus) + s_slack(1969,cowp_S,minus) + s_slack(1969,grou_H,plus) + s_slack(1969,grou_H,minus) + s_slack(1969,grou_L,plus)
     
      + s_slack(1969,grou_L,minus) + s_slack(1969,grou_S,plus) + s_slack(1969,grou_S,minus) + s_slack(1969,lent_H,plus) + s_slack(1969,lent_H,minus) + s_slack(1969,lent_L,plus) + s_slack(1969,lent_L,minus) + s_slack(1969,lent_S,plus)
     
      + s_slack(1969,lent_S,minus) + s_slack(1969,maiz_H,plus) + s_slack(1969,maiz_H,minus) + s_slack(1969,maiz_L,plus) + s_slack(1969,maiz_L,minus) + s_slack(1969,maiz_S,plus) + s_slack(1969,maiz_S,minus) + s_slack(1969,mill_H,plus)
     
      + s_slack(1969,mill_H,minus) + s_slack(1969,mill_L,plus) + s_slack(1969,mill_L,minus) + s_slack(1969,mill_S,plus) + s_slack(1969,mill_S,minus) + s_slack(1969,ofib_L,plus) + s_slack(1969,ofib_L,minus) + s_slack(1969,ooil_L,plus)
     
      + s_slack(1969,ooil_L,minus) + s_slack(1969,opul_H,plus) + s_slack(1969,opul_H,minus) + s_slack(1969,opul_L,plus) + s_slack(1969,opul_L,minus) + s_slack(1969,opul_S,plus) + s_slack(1969,opul_S,minus) + s_slack(1969,pige_H,plus)
     
      + s_slack(1969,pige_H,minus) + s_slack(1969,pige_L,plus) + s_slack(1969,pige_L,minus) + s_slack(1969,pige_S,plus) + s_slack(1969,pige_S,minus) + s_slack(1969,pota_H,plus) + s_slack(1969,pota_H,minus) + s_slack(1969,pota_L,plus)
     
      + s_slack(1969,pota_L,minus) + s_slack(1969,pota_S,plus) + s_slack(1969,pota_S,minus) + s_slack(1969,rest_H,plus) + s_slack(1969,rest_H,minus) + s_slack(1969,rest_L,plus) + s_slack(1969,rest_L,minus) + s_slack(1969,rest_S,plus)
     
      + s_slack(1969,rest_S,minus) + s_slack(1969,rice_H,plus) + s_slack(1969,rice_H,minus) + s_slack(1969,rice_L,plus) + s_slack(1969,rice_L,minus) + s_slack(1969,rice_S,plus) + s_slack(1969,rice_S,minus) + s_slack(1969,sorg_L,plus)
     
      + s_slack(1969,sorg_L,minus) + s_slack(1969,sorg_S,plus) + s_slack(1969,sorg_S,minus) + s_slack(1969,soyb_L,plus) + s_slack(1969,soyb_L,minus) + s_slack(1969,soyb_S,plus) + s_slack(1969,soyb_S,minus) + s_slack(1969,sunf_L,plus)
     
      + s_slack(1969,sunf_L,minus) + s_slack(1969,temf_H,plus) + s_slack(1969,temf_H,minus) + s_slack(1969,temf_L,plus) + s_slack(1969,temf_L,minus) + s_slack(1969,temf_S,plus) + s_slack(1969,temf_S,minus) + s_slack(1969,toba_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 168
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1969,toba_H,minus) + s_slack(1969,toba_L,plus) + s_slack(1969,toba_L,minus) + s_slack(1969,trof_L,plus) + s_slack(1969,trof_L,minus) + s_slack(1969,trof_S,plus) + s_slack(1969,trof_S,minus) + s_slack(1969,vege_H,plus)
     
      + s_slack(1969,vege_H,minus) + s_slack(1969,vege_L,plus) + s_slack(1969,vege_L,minus) + s_slack(1969,vege_S,plus) + s_slack(1969,vege_S,minus) + s_slack(1970,rice_I,plus) + s_slack(1970,rice_I,minus) + s_slack(1970,sugc_I,plus)
     
      + s_slack(1970,sugc_I,minus) + s_slack(1970,whea_I,plus) + s_slack(1970,whea_I,minus) + s_slack(1970,bean_H,plus) + s_slack(1970,bean_H,minus) + s_slack(1970,bean_L,plus) + s_slack(1970,bean_L,minus) + s_slack(1970,bean_S,plus)
     
      + s_slack(1970,bean_S,minus) + s_slack(1970,cass_L,plus) + s_slack(1970,cass_L,minus) + s_slack(1970,cass_S,plus) + s_slack(1970,cass_S,minus) + s_slack(1970,chic_H,plus) + s_slack(1970,chic_H,minus) + s_slack(1970,chic_L,plus)
     
      + s_slack(1970,chic_L,minus) + s_slack(1970,chic_S,plus) + s_slack(1970,chic_S,minus) + s_slack(1970,coff_H,plus) + s_slack(1970,coff_H,minus) + s_slack(1970,coff_L,plus) + s_slack(1970,coff_L,minus) + s_slack(1970,cott_L,plus)
     
      + s_slack(1970,cott_L,minus) + s_slack(1970,cowp_H,plus) + s_slack(1970,cowp_H,minus) + s_slack(1970,cowp_L,plus) + s_slack(1970,cowp_L,minus) + s_slack(1970,cowp_S,plus) + s_slack(1970,cowp_S,minus) + s_slack(1970,grou_H,plus)
     
      + s_slack(1970,grou_H,minus) + s_slack(1970,grou_L,plus) + s_slack(1970,grou_L,minus) + s_slack(1970,grou_S,plus) + s_slack(1970,grou_S,minus) + s_slack(1970,lent_H,plus) + s_slack(1970,lent_H,minus) + s_slack(1970,lent_L,plus)
     
      + s_slack(1970,lent_L,minus) + s_slack(1970,lent_S,plus) + s_slack(1970,lent_S,minus) + s_slack(1970,maiz_H,plus) + s_slack(1970,maiz_H,minus) + s_slack(1970,maiz_L,plus) + s_slack(1970,maiz_L,minus) + s_slack(1970,maiz_S,plus)
     
      + s_slack(1970,maiz_S,minus) + s_slack(1970,mill_H,plus) + s_slack(1970,mill_H,minus) + s_slack(1970,mill_L,plus) + s_slack(1970,mill_L,minus) + s_slack(1970,mill_S,plus) + s_slack(1970,mill_S,minus) + s_slack(1970,ofib_L,plus)
     
      + s_slack(1970,ofib_L,minus) + s_slack(1970,ooil_L,plus) + s_slack(1970,ooil_L,minus) + s_slack(1970,opul_H,plus) + s_slack(1970,opul_H,minus) + s_slack(1970,opul_L,plus) + s_slack(1970,opul_L,minus) + s_slack(1970,opul_S,plus)
     
      + s_slack(1970,opul_S,minus) + s_slack(1970,pige_H,plus) + s_slack(1970,pige_H,minus) + s_slack(1970,pige_L,plus) + s_slack(1970,pige_L,minus) + s_slack(1970,pige_S,plus) + s_slack(1970,pige_S,minus) + s_slack(1970,pota_H,plus)
     
      + s_slack(1970,pota_H,minus) + s_slack(1970,pota_L,plus) + s_slack(1970,pota_L,minus) + s_slack(1970,pota_S,plus) + s_slack(1970,pota_S,minus) + s_slack(1970,rest_H,plus) + s_slack(1970,rest_H,minus) + s_slack(1970,rest_L,plus)
     
      + s_slack(1970,rest_L,minus) + s_slack(1970,rest_S,plus) + s_slack(1970,rest_S,minus) + s_slack(1970,rice_H,plus) + s_slack(1970,rice_H,minus) + s_slack(1970,rice_L,plus) + s_slack(1970,rice_L,minus) + s_slack(1970,rice_S,plus)
     
      + s_slack(1970,rice_S,minus) + s_slack(1970,sorg_L,plus) + s_slack(1970,sorg_L,minus) + s_slack(1970,sorg_S,plus) + s_slack(1970,sorg_S,minus) + s_slack(1970,soyb_L,plus) + s_slack(1970,soyb_L,minus) + s_slack(1970,soyb_S,plus)
     
      + s_slack(1970,soyb_S,minus) + s_slack(1970,sunf_L,plus) + s_slack(1970,sunf_L,minus) + s_slack(1970,temf_H,plus) + s_slack(1970,temf_H,minus) + s_slack(1970,temf_L,plus) + s_slack(1970,temf_L,minus) + s_slack(1970,temf_S,plus)
     
      + s_slack(1970,temf_S,minus) + s_slack(1970,toba_H,plus) + s_slack(1970,toba_H,minus) + s_slack(1970,toba_L,plus) + s_slack(1970,toba_L,minus) + s_slack(1970,trof_L,plus) + s_slack(1970,trof_L,minus) + s_slack(1970,trof_S,plus)
     
      + s_slack(1970,trof_S,minus) + s_slack(1970,vege_H,plus) + s_slack(1970,vege_H,minus) + s_slack(1970,vege_L,plus) + s_slack(1970,vege_L,minus) + s_slack(1970,vege_S,plus) + s_slack(1970,vege_S,minus) + s_slack(1971,rice_I,plus)
     
      + s_slack(1971,rice_I,minus) + s_slack(1971,sugc_I,plus) + s_slack(1971,sugc_I,minus) + s_slack(1971,whea_I,plus) + s_slack(1971,whea_I,minus) + s_slack(1971,bean_H,plus) + s_slack(1971,bean_H,minus) + s_slack(1971,bean_L,plus)
     
      + s_slack(1971,bean_L,minus) + s_slack(1971,bean_S,plus) + s_slack(1971,bean_S,minus) + s_slack(1971,cass_L,plus) + s_slack(1971,cass_L,minus) + s_slack(1971,cass_S,plus) + s_slack(1971,cass_S,minus) + s_slack(1971,chic_H,plus)
     
      + s_slack(1971,chic_H,minus) + s_slack(1971,chic_L,plus) + s_slack(1971,chic_L,minus) + s_slack(1971,chic_S,plus) + s_slack(1971,chic_S,minus) + s_slack(1971,coff_H,plus) + s_slack(1971,coff_H,minus) + s_slack(1971,coff_L,plus)
     
      + s_slack(1971,coff_L,minus) + s_slack(1971,cott_L,plus) + s_slack(1971,cott_L,minus) + s_slack(1971,cowp_H,plus) + s_slack(1971,cowp_H,minus) + s_slack(1971,cowp_L,plus) + s_slack(1971,cowp_L,minus) + s_slack(1971,cowp_S,plus)
     
      + s_slack(1971,cowp_S,minus) + s_slack(1971,grou_H,plus) + s_slack(1971,grou_H,minus) + s_slack(1971,grou_L,plus) + s_slack(1971,grou_L,minus) + s_slack(1971,grou_S,plus) + s_slack(1971,grou_S,minus) + s_slack(1971,lent_H,plus)
     
      + s_slack(1971,lent_H,minus) + s_slack(1971,lent_L,plus) + s_slack(1971,lent_L,minus) + s_slack(1971,lent_S,plus) + s_slack(1971,lent_S,minus) + s_slack(1971,maiz_H,plus) + s_slack(1971,maiz_H,minus) + s_slack(1971,maiz_L,plus)
     
      + s_slack(1971,maiz_L,minus) + s_slack(1971,maiz_S,plus) + s_slack(1971,maiz_S,minus) + s_slack(1971,mill_H,plus) + s_slack(1971,mill_H,minus) + s_slack(1971,mill_L,plus) + s_slack(1971,mill_L,minus) + s_slack(1971,mill_S,plus)
     
      + s_slack(1971,mill_S,minus) + s_slack(1971,ofib_L,plus) + s_slack(1971,ofib_L,minus) + s_slack(1971,ooil_L,plus) + s_slack(1971,ooil_L,minus) + s_slack(1971,opul_H,plus) + s_slack(1971,opul_H,minus) + s_slack(1971,opul_L,plus)
     
      + s_slack(1971,opul_L,minus) + s_slack(1971,opul_S,plus) + s_slack(1971,opul_S,minus) + s_slack(1971,pige_H,plus) + s_slack(1971,pige_H,minus) + s_slack(1971,pige_L,plus) + s_slack(1971,pige_L,minus) + s_slack(1971,pige_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 169
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1971,pige_S,minus) + s_slack(1971,pota_H,plus) + s_slack(1971,pota_H,minus) + s_slack(1971,pota_L,plus) + s_slack(1971,pota_L,minus) + s_slack(1971,pota_S,plus) + s_slack(1971,pota_S,minus) + s_slack(1971,rest_H,plus)
     
      + s_slack(1971,rest_H,minus) + s_slack(1971,rest_L,plus) + s_slack(1971,rest_L,minus) + s_slack(1971,rest_S,plus) + s_slack(1971,rest_S,minus) + s_slack(1971,rice_H,plus) + s_slack(1971,rice_H,minus) + s_slack(1971,rice_L,plus)
     
      + s_slack(1971,rice_L,minus) + s_slack(1971,rice_S,plus) + s_slack(1971,rice_S,minus) + s_slack(1971,sorg_L,plus) + s_slack(1971,sorg_L,minus) + s_slack(1971,sorg_S,plus) + s_slack(1971,sorg_S,minus) + s_slack(1971,soyb_L,plus)
     
      + s_slack(1971,soyb_L,minus) + s_slack(1971,soyb_S,plus) + s_slack(1971,soyb_S,minus) + s_slack(1971,sunf_L,plus) + s_slack(1971,sunf_L,minus) + s_slack(1971,temf_H,plus) + s_slack(1971,temf_H,minus) + s_slack(1971,temf_L,plus)
     
      + s_slack(1971,temf_L,minus) + s_slack(1971,temf_S,plus) + s_slack(1971,temf_S,minus) + s_slack(1971,toba_H,plus) + s_slack(1971,toba_H,minus) + s_slack(1971,toba_L,plus) + s_slack(1971,toba_L,minus) + s_slack(1971,trof_L,plus)
     
      + s_slack(1971,trof_L,minus) + s_slack(1971,trof_S,plus) + s_slack(1971,trof_S,minus) + s_slack(1971,vege_H,plus) + s_slack(1971,vege_H,minus) + s_slack(1971,vege_L,plus) + s_slack(1971,vege_L,minus) + s_slack(1971,vege_S,plus)
     
      + s_slack(1971,vege_S,minus) + s_slack(1990,rice_I,plus) + s_slack(1990,rice_I,minus) + s_slack(1990,sugc_I,plus) + s_slack(1990,sugc_I,minus) + s_slack(1990,whea_I,plus) + s_slack(1990,whea_I,minus) + s_slack(1990,bean_H,plus)
     
      + s_slack(1990,bean_H,minus) + s_slack(1990,bean_L,plus) + s_slack(1990,bean_L,minus) + s_slack(1990,bean_S,plus) + s_slack(1990,bean_S,minus) + s_slack(1990,cass_L,plus) + s_slack(1990,cass_L,minus) + s_slack(1990,cass_S,plus)
     
      + s_slack(1990,cass_S,minus) + s_slack(1990,chic_H,plus) + s_slack(1990,chic_H,minus) + s_slack(1990,chic_L,plus) + s_slack(1990,chic_L,minus) + s_slack(1990,chic_S,plus) + s_slack(1990,chic_S,minus) + s_slack(1990,coff_H,plus)
     
      + s_slack(1990,coff_H,minus) + s_slack(1990,coff_L,plus) + s_slack(1990,coff_L,minus) + s_slack(1990,cott_L,plus) + s_slack(1990,cott_L,minus) + s_slack(1990,cowp_H,plus) + s_slack(1990,cowp_H,minus) + s_slack(1990,cowp_L,plus)
     
      + s_slack(1990,cowp_L,minus) + s_slack(1990,cowp_S,plus) + s_slack(1990,cowp_S,minus) + s_slack(1990,grou_H,plus) + s_slack(1990,grou_H,minus) + s_slack(1990,grou_L,plus) + s_slack(1990,grou_L,minus) + s_slack(1990,grou_S,plus)
     
      + s_slack(1990,grou_S,minus) + s_slack(1990,lent_H,plus) + s_slack(1990,lent_H,minus) + s_slack(1990,lent_L,plus) + s_slack(1990,lent_L,minus) + s_slack(1990,lent_S,plus) + s_slack(1990,lent_S,minus) + s_slack(1990,maiz_H,plus)
     
      + s_slack(1990,maiz_H,minus) + s_slack(1990,maiz_L,plus) + s_slack(1990,maiz_L,minus) + s_slack(1990,maiz_S,plus) + s_slack(1990,maiz_S,minus) + s_slack(1990,mill_H,plus) + s_slack(1990,mill_H,minus) + s_slack(1990,mill_L,plus)
     
      + s_slack(1990,mill_L,minus) + s_slack(1990,mill_S,plus) + s_slack(1990,mill_S,minus) + s_slack(1990,ofib_L,plus) + s_slack(1990,ofib_L,minus) + s_slack(1990,ooil_L,plus) + s_slack(1990,ooil_L,minus) + s_slack(1990,opul_H,plus)
     
      + s_slack(1990,opul_H,minus) + s_slack(1990,opul_L,plus) + s_slack(1990,opul_L,minus) + s_slack(1990,opul_S,plus) + s_slack(1990,opul_S,minus) + s_slack(1990,pige_H,plus) + s_slack(1990,pige_H,minus) + s_slack(1990,pige_L,plus)
     
      + s_slack(1990,pige_L,minus) + s_slack(1990,pige_S,plus) + s_slack(1990,pige_S,minus) + s_slack(1990,pota_H,plus) + s_slack(1990,pota_H,minus) + s_slack(1990,pota_L,plus) + s_slack(1990,pota_L,minus) + s_slack(1990,pota_S,plus)
     
      + s_slack(1990,pota_S,minus) + s_slack(1990,rest_H,plus) + s_slack(1990,rest_H,minus) + s_slack(1990,rest_L,plus) + s_slack(1990,rest_L,minus) + s_slack(1990,rest_S,plus) + s_slack(1990,rest_S,minus) + s_slack(1990,rice_H,plus)
     
      + s_slack(1990,rice_H,minus) + s_slack(1990,rice_L,plus) + s_slack(1990,rice_L,minus) + s_slack(1990,rice_S,plus) + s_slack(1990,rice_S,minus) + s_slack(1990,sorg_L,plus) + s_slack(1990,sorg_L,minus) + s_slack(1990,sorg_S,plus)
     
      + s_slack(1990,sorg_S,minus) + s_slack(1990,soyb_L,plus) + s_slack(1990,soyb_L,minus) + s_slack(1990,soyb_S,plus) + s_slack(1990,soyb_S,minus) + s_slack(1990,sunf_L,plus) + s_slack(1990,sunf_L,minus) + s_slack(1990,temf_H,plus)
     
      + s_slack(1990,temf_H,minus) + s_slack(1990,temf_L,plus) + s_slack(1990,temf_L,minus) + s_slack(1990,temf_S,plus) + s_slack(1990,temf_S,minus) + s_slack(1990,toba_H,plus) + s_slack(1990,toba_H,minus) + s_slack(1990,toba_L,plus)
     
      + s_slack(1990,toba_L,minus) + s_slack(1990,trof_L,plus) + s_slack(1990,trof_L,minus) + s_slack(1990,trof_S,plus) + s_slack(1990,trof_S,minus) + s_slack(1990,vege_H,plus) + s_slack(1990,vege_H,minus) + s_slack(1990,vege_L,plus)
     
      + s_slack(1990,vege_L,minus) + s_slack(1990,vege_S,plus) + s_slack(1990,vege_S,minus) + s_slack(1992,rice_I,plus) + s_slack(1992,rice_I,minus) + s_slack(1992,sugc_I,plus) + s_slack(1992,sugc_I,minus) + s_slack(1992,whea_I,plus)
     
      + s_slack(1992,whea_I,minus) + s_slack(1992,bean_H,plus) + s_slack(1992,bean_H,minus) + s_slack(1992,bean_L,plus) + s_slack(1992,bean_L,minus) + s_slack(1992,bean_S,plus) + s_slack(1992,bean_S,minus) + s_slack(1992,cass_L,plus)
     
      + s_slack(1992,cass_L,minus) + s_slack(1992,cass_S,plus) + s_slack(1992,cass_S,minus) + s_slack(1992,chic_H,plus) + s_slack(1992,chic_H,minus) + s_slack(1992,chic_L,plus) + s_slack(1992,chic_L,minus) + s_slack(1992,chic_S,plus)
     
      + s_slack(1992,chic_S,minus) + s_slack(1992,coff_H,plus) + s_slack(1992,coff_H,minus) + s_slack(1992,coff_L,plus) + s_slack(1992,coff_L,minus) + s_slack(1992,cott_L,plus) + s_slack(1992,cott_L,minus) + s_slack(1992,cowp_H,plus)
     
      + s_slack(1992,cowp_H,minus) + s_slack(1992,cowp_L,plus) + s_slack(1992,cowp_L,minus) + s_slack(1992,cowp_S,plus) + s_slack(1992,cowp_S,minus) + s_slack(1992,grou_H,plus) + s_slack(1992,grou_H,minus) + s_slack(1992,grou_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 170
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1992,grou_L,minus) + s_slack(1992,grou_S,plus) + s_slack(1992,grou_S,minus) + s_slack(1992,lent_H,plus) + s_slack(1992,lent_H,minus) + s_slack(1992,lent_L,plus) + s_slack(1992,lent_L,minus) + s_slack(1992,lent_S,plus)
     
      + s_slack(1992,lent_S,minus) + s_slack(1992,maiz_H,plus) + s_slack(1992,maiz_H,minus) + s_slack(1992,maiz_L,plus) + s_slack(1992,maiz_L,minus) + s_slack(1992,maiz_S,plus) + s_slack(1992,maiz_S,minus) + s_slack(1992,mill_H,plus)
     
      + s_slack(1992,mill_H,minus) + s_slack(1992,mill_L,plus) + s_slack(1992,mill_L,minus) + s_slack(1992,mill_S,plus) + s_slack(1992,mill_S,minus) + s_slack(1992,ofib_L,plus) + s_slack(1992,ofib_L,minus) + s_slack(1992,ooil_L,plus)
     
      + s_slack(1992,ooil_L,minus) + s_slack(1992,opul_H,plus) + s_slack(1992,opul_H,minus) + s_slack(1992,opul_L,plus) + s_slack(1992,opul_L,minus) + s_slack(1992,opul_S,plus) + s_slack(1992,opul_S,minus) + s_slack(1992,pige_H,plus)
     
      + s_slack(1992,pige_H,minus) + s_slack(1992,pige_L,plus) + s_slack(1992,pige_L,minus) + s_slack(1992,pige_S,plus) + s_slack(1992,pige_S,minus) + s_slack(1992,pota_H,plus) + s_slack(1992,pota_H,minus) + s_slack(1992,pota_L,plus)
     
      + s_slack(1992,pota_L,minus) + s_slack(1992,pota_S,plus) + s_slack(1992,pota_S,minus) + s_slack(1992,rest_H,plus) + s_slack(1992,rest_H,minus) + s_slack(1992,rest_L,plus) + s_slack(1992,rest_L,minus) + s_slack(1992,rest_S,plus)
     
      + s_slack(1992,rest_S,minus) + s_slack(1992,rice_H,plus) + s_slack(1992,rice_H,minus) + s_slack(1992,rice_L,plus) + s_slack(1992,rice_L,minus) + s_slack(1992,rice_S,plus) + s_slack(1992,rice_S,minus) + s_slack(1992,sorg_L,plus)
     
      + s_slack(1992,sorg_L,minus) + s_slack(1992,sorg_S,plus) + s_slack(1992,sorg_S,minus) + s_slack(1992,soyb_L,plus) + s_slack(1992,soyb_L,minus) + s_slack(1992,soyb_S,plus) + s_slack(1992,soyb_S,minus) + s_slack(1992,sunf_L,plus)
     
      + s_slack(1992,sunf_L,minus) + s_slack(1992,temf_H,plus) + s_slack(1992,temf_H,minus) + s_slack(1992,temf_L,plus) + s_slack(1992,temf_L,minus) + s_slack(1992,temf_S,plus) + s_slack(1992,temf_S,minus) + s_slack(1992,toba_H,plus)
     
      + s_slack(1992,toba_H,minus) + s_slack(1992,toba_L,plus) + s_slack(1992,toba_L,minus) + s_slack(1992,trof_L,plus) + s_slack(1992,trof_L,minus) + s_slack(1992,trof_S,plus) + s_slack(1992,trof_S,minus) + s_slack(1992,vege_H,plus)
     
      + s_slack(1992,vege_H,minus) + s_slack(1992,vege_L,plus) + s_slack(1992,vege_L,minus) + s_slack(1992,vege_S,plus) + s_slack(1992,vege_S,minus) + s_slack(1993,rice_I,plus) + s_slack(1993,rice_I,minus) + s_slack(1993,sugc_I,plus)
     
      + s_slack(1993,sugc_I,minus) + s_slack(1993,whea_I,plus) + s_slack(1993,whea_I,minus) + s_slack(1993,bean_H,plus) + s_slack(1993,bean_H,minus) + s_slack(1993,bean_L,plus) + s_slack(1993,bean_L,minus) + s_slack(1993,bean_S,plus)
     
      + s_slack(1993,bean_S,minus) + s_slack(1993,cass_L,plus) + s_slack(1993,cass_L,minus) + s_slack(1993,cass_S,plus) + s_slack(1993,cass_S,minus) + s_slack(1993,chic_H,plus) + s_slack(1993,chic_H,minus) + s_slack(1993,chic_L,plus)
     
      + s_slack(1993,chic_L,minus) + s_slack(1993,chic_S,plus) + s_slack(1993,chic_S,minus) + s_slack(1993,coff_H,plus) + s_slack(1993,coff_H,minus) + s_slack(1993,coff_L,plus) + s_slack(1993,coff_L,minus) + s_slack(1993,cott_L,plus)
     
      + s_slack(1993,cott_L,minus) + s_slack(1993,cowp_H,plus) + s_slack(1993,cowp_H,minus) + s_slack(1993,cowp_L,plus) + s_slack(1993,cowp_L,minus) + s_slack(1993,cowp_S,plus) + s_slack(1993,cowp_S,minus) + s_slack(1993,grou_H,plus)
     
      + s_slack(1993,grou_H,minus) + s_slack(1993,grou_L,plus) + s_slack(1993,grou_L,minus) + s_slack(1993,grou_S,plus) + s_slack(1993,grou_S,minus) + s_slack(1993,lent_H,plus) + s_slack(1993,lent_H,minus) + s_slack(1993,lent_L,plus)
     
      + s_slack(1993,lent_L,minus) + s_slack(1993,lent_S,plus) + s_slack(1993,lent_S,minus) + s_slack(1993,maiz_H,plus) + s_slack(1993,maiz_H,minus) + s_slack(1993,maiz_L,plus) + s_slack(1993,maiz_L,minus) + s_slack(1993,maiz_S,plus)
     
      + s_slack(1993,maiz_S,minus) + s_slack(1993,mill_H,plus) + s_slack(1993,mill_H,minus) + s_slack(1993,mill_L,plus) + s_slack(1993,mill_L,minus) + s_slack(1993,mill_S,plus) + s_slack(1993,mill_S,minus) + s_slack(1993,ofib_L,plus)
     
      + s_slack(1993,ofib_L,minus) + s_slack(1993,ooil_L,plus) + s_slack(1993,ooil_L,minus) + s_slack(1993,opul_H,plus) + s_slack(1993,opul_H,minus) + s_slack(1993,opul_L,plus) + s_slack(1993,opul_L,minus) + s_slack(1993,opul_S,plus)
     
      + s_slack(1993,opul_S,minus) + s_slack(1993,pige_H,plus) + s_slack(1993,pige_H,minus) + s_slack(1993,pige_L,plus) + s_slack(1993,pige_L,minus) + s_slack(1993,pige_S,plus) + s_slack(1993,pige_S,minus) + s_slack(1993,pota_H,plus)
     
      + s_slack(1993,pota_H,minus) + s_slack(1993,pota_L,plus) + s_slack(1993,pota_L,minus) + s_slack(1993,pota_S,plus) + s_slack(1993,pota_S,minus) + s_slack(1993,rest_H,plus) + s_slack(1993,rest_H,minus) + s_slack(1993,rest_L,plus)
     
      + s_slack(1993,rest_L,minus) + s_slack(1993,rest_S,plus) + s_slack(1993,rest_S,minus) + s_slack(1993,rice_H,plus) + s_slack(1993,rice_H,minus) + s_slack(1993,rice_L,plus) + s_slack(1993,rice_L,minus) + s_slack(1993,rice_S,plus)
     
      + s_slack(1993,rice_S,minus) + s_slack(1993,sorg_L,plus) + s_slack(1993,sorg_L,minus) + s_slack(1993,sorg_S,plus) + s_slack(1993,sorg_S,minus) + s_slack(1993,soyb_L,plus) + s_slack(1993,soyb_L,minus) + s_slack(1993,soyb_S,plus)
     
      + s_slack(1993,soyb_S,minus) + s_slack(1993,sunf_L,plus) + s_slack(1993,sunf_L,minus) + s_slack(1993,temf_H,plus) + s_slack(1993,temf_H,minus) + s_slack(1993,temf_L,plus) + s_slack(1993,temf_L,minus) + s_slack(1993,temf_S,plus)
     
      + s_slack(1993,temf_S,minus) + s_slack(1993,toba_H,plus) + s_slack(1993,toba_H,minus) + s_slack(1993,toba_L,plus) + s_slack(1993,toba_L,minus) + s_slack(1993,trof_L,plus) + s_slack(1993,trof_L,minus) + s_slack(1993,trof_S,plus)
     
      + s_slack(1993,trof_S,minus) + s_slack(1993,vege_H,plus) + s_slack(1993,vege_H,minus) + s_slack(1993,vege_L,plus) + s_slack(1993,vege_L,minus) + s_slack(1993,vege_S,plus) + s_slack(1993,vege_S,minus) + s_slack(1994,rice_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 171
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1994,rice_I,minus) + s_slack(1994,sugc_I,plus) + s_slack(1994,sugc_I,minus) + s_slack(1994,whea_I,plus) + s_slack(1994,whea_I,minus) + s_slack(1994,bean_H,plus) + s_slack(1994,bean_H,minus) + s_slack(1994,bean_L,plus)
     
      + s_slack(1994,bean_L,minus) + s_slack(1994,bean_S,plus) + s_slack(1994,bean_S,minus) + s_slack(1994,cass_L,plus) + s_slack(1994,cass_L,minus) + s_slack(1994,cass_S,plus) + s_slack(1994,cass_S,minus) + s_slack(1994,chic_H,plus)
     
      + s_slack(1994,chic_H,minus) + s_slack(1994,chic_L,plus) + s_slack(1994,chic_L,minus) + s_slack(1994,chic_S,plus) + s_slack(1994,chic_S,minus) + s_slack(1994,coff_H,plus) + s_slack(1994,coff_H,minus) + s_slack(1994,coff_L,plus)
     
      + s_slack(1994,coff_L,minus) + s_slack(1994,cott_L,plus) + s_slack(1994,cott_L,minus) + s_slack(1994,cowp_H,plus) + s_slack(1994,cowp_H,minus) + s_slack(1994,cowp_L,plus) + s_slack(1994,cowp_L,minus) + s_slack(1994,cowp_S,plus)
     
      + s_slack(1994,cowp_S,minus) + s_slack(1994,grou_H,plus) + s_slack(1994,grou_H,minus) + s_slack(1994,grou_L,plus) + s_slack(1994,grou_L,minus) + s_slack(1994,grou_S,plus) + s_slack(1994,grou_S,minus) + s_slack(1994,lent_H,plus)
     
      + s_slack(1994,lent_H,minus) + s_slack(1994,lent_L,plus) + s_slack(1994,lent_L,minus) + s_slack(1994,lent_S,plus) + s_slack(1994,lent_S,minus) + s_slack(1994,maiz_H,plus) + s_slack(1994,maiz_H,minus) + s_slack(1994,maiz_L,plus)
     
      + s_slack(1994,maiz_L,minus) + s_slack(1994,maiz_S,plus) + s_slack(1994,maiz_S,minus) + s_slack(1994,mill_H,plus) + s_slack(1994,mill_H,minus) + s_slack(1994,mill_L,plus) + s_slack(1994,mill_L,minus) + s_slack(1994,mill_S,plus)
     
      + s_slack(1994,mill_S,minus) + s_slack(1994,ofib_L,plus) + s_slack(1994,ofib_L,minus) + s_slack(1994,ooil_L,plus) + s_slack(1994,ooil_L,minus) + s_slack(1994,opul_H,plus) + s_slack(1994,opul_H,minus) + s_slack(1994,opul_L,plus)
     
      + s_slack(1994,opul_L,minus) + s_slack(1994,opul_S,plus) + s_slack(1994,opul_S,minus) + s_slack(1994,pige_H,plus) + s_slack(1994,pige_H,minus) + s_slack(1994,pige_L,plus) + s_slack(1994,pige_L,minus) + s_slack(1994,pige_S,plus)
     
      + s_slack(1994,pige_S,minus) + s_slack(1994,pota_H,plus) + s_slack(1994,pota_H,minus) + s_slack(1994,pota_L,plus) + s_slack(1994,pota_L,minus) + s_slack(1994,pota_S,plus) + s_slack(1994,pota_S,minus) + s_slack(1994,rest_H,plus)
     
      + s_slack(1994,rest_H,minus) + s_slack(1994,rest_L,plus) + s_slack(1994,rest_L,minus) + s_slack(1994,rest_S,plus) + s_slack(1994,rest_S,minus) + s_slack(1994,rice_H,plus) + s_slack(1994,rice_H,minus) + s_slack(1994,rice_L,plus)
     
      + s_slack(1994,rice_L,minus) + s_slack(1994,rice_S,plus) + s_slack(1994,rice_S,minus) + s_slack(1994,sorg_L,plus) + s_slack(1994,sorg_L,minus) + s_slack(1994,sorg_S,plus) + s_slack(1994,sorg_S,minus) + s_slack(1994,soyb_L,plus)
     
      + s_slack(1994,soyb_L,minus) + s_slack(1994,soyb_S,plus) + s_slack(1994,soyb_S,minus) + s_slack(1994,sunf_L,plus) + s_slack(1994,sunf_L,minus) + s_slack(1994,temf_H,plus) + s_slack(1994,temf_H,minus) + s_slack(1994,temf_L,plus)
     
      + s_slack(1994,temf_L,minus) + s_slack(1994,temf_S,plus) + s_slack(1994,temf_S,minus) + s_slack(1994,toba_H,plus) + s_slack(1994,toba_H,minus) + s_slack(1994,toba_L,plus) + s_slack(1994,toba_L,minus) + s_slack(1994,trof_L,plus)
     
      + s_slack(1994,trof_L,minus) + s_slack(1994,trof_S,plus) + s_slack(1994,trof_S,minus) + s_slack(1994,vege_H,plus) + s_slack(1994,vege_H,minus) + s_slack(1994,vege_L,plus) + s_slack(1994,vege_L,minus) + s_slack(1994,vege_S,plus)
     
      + s_slack(1994,vege_S,minus) + s_slack(1996,rice_I,plus) + s_slack(1996,rice_I,minus) + s_slack(1996,sugc_I,plus) + s_slack(1996,sugc_I,minus) + s_slack(1996,whea_I,plus) + s_slack(1996,whea_I,minus) + s_slack(1996,bean_H,plus)
     
      + s_slack(1996,bean_H,minus) + s_slack(1996,bean_L,plus) + s_slack(1996,bean_L,minus) + s_slack(1996,bean_S,plus) + s_slack(1996,bean_S,minus) + s_slack(1996,cass_L,plus) + s_slack(1996,cass_L,minus) + s_slack(1996,cass_S,plus)
     
      + s_slack(1996,cass_S,minus) + s_slack(1996,chic_H,plus) + s_slack(1996,chic_H,minus) + s_slack(1996,chic_L,plus) + s_slack(1996,chic_L,minus) + s_slack(1996,chic_S,plus) + s_slack(1996,chic_S,minus) + s_slack(1996,coff_H,plus)
     
      + s_slack(1996,coff_H,minus) + s_slack(1996,coff_L,plus) + s_slack(1996,coff_L,minus) + s_slack(1996,cott_L,plus) + s_slack(1996,cott_L,minus) + s_slack(1996,cowp_H,plus) + s_slack(1996,cowp_H,minus) + s_slack(1996,cowp_L,plus)
     
      + s_slack(1996,cowp_L,minus) + s_slack(1996,cowp_S,plus) + s_slack(1996,cowp_S,minus) + s_slack(1996,grou_H,plus) + s_slack(1996,grou_H,minus) + s_slack(1996,grou_L,plus) + s_slack(1996,grou_L,minus) + s_slack(1996,grou_S,plus)
     
      + s_slack(1996,grou_S,minus) + s_slack(1996,lent_H,plus) + s_slack(1996,lent_H,minus) + s_slack(1996,lent_L,plus) + s_slack(1996,lent_L,minus) + s_slack(1996,lent_S,plus) + s_slack(1996,lent_S,minus) + s_slack(1996,maiz_H,plus)
     
      + s_slack(1996,maiz_H,minus) + s_slack(1996,maiz_L,plus) + s_slack(1996,maiz_L,minus) + s_slack(1996,maiz_S,plus) + s_slack(1996,maiz_S,minus) + s_slack(1996,mill_H,plus) + s_slack(1996,mill_H,minus) + s_slack(1996,mill_L,plus)
     
      + s_slack(1996,mill_L,minus) + s_slack(1996,mill_S,plus) + s_slack(1996,mill_S,minus) + s_slack(1996,ofib_L,plus) + s_slack(1996,ofib_L,minus) + s_slack(1996,ooil_L,plus) + s_slack(1996,ooil_L,minus) + s_slack(1996,opul_H,plus)
     
      + s_slack(1996,opul_H,minus) + s_slack(1996,opul_L,plus) + s_slack(1996,opul_L,minus) + s_slack(1996,opul_S,plus) + s_slack(1996,opul_S,minus) + s_slack(1996,pige_H,plus) + s_slack(1996,pige_H,minus) + s_slack(1996,pige_L,plus)
     
      + s_slack(1996,pige_L,minus) + s_slack(1996,pige_S,plus) + s_slack(1996,pige_S,minus) + s_slack(1996,pota_H,plus) + s_slack(1996,pota_H,minus) + s_slack(1996,pota_L,plus) + s_slack(1996,pota_L,minus) + s_slack(1996,pota_S,plus)
     
      + s_slack(1996,pota_S,minus) + s_slack(1996,rest_H,plus) + s_slack(1996,rest_H,minus) + s_slack(1996,rest_L,plus) + s_slack(1996,rest_L,minus) + s_slack(1996,rest_S,plus) + s_slack(1996,rest_S,minus) + s_slack(1996,rice_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 172
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1996,rice_H,minus) + s_slack(1996,rice_L,plus) + s_slack(1996,rice_L,minus) + s_slack(1996,rice_S,plus) + s_slack(1996,rice_S,minus) + s_slack(1996,sorg_L,plus) + s_slack(1996,sorg_L,minus) + s_slack(1996,sorg_S,plus)
     
      + s_slack(1996,sorg_S,minus) + s_slack(1996,soyb_L,plus) + s_slack(1996,soyb_L,minus) + s_slack(1996,soyb_S,plus) + s_slack(1996,soyb_S,minus) + s_slack(1996,sunf_L,plus) + s_slack(1996,sunf_L,minus) + s_slack(1996,temf_H,plus)
     
      + s_slack(1996,temf_H,minus) + s_slack(1996,temf_L,plus) + s_slack(1996,temf_L,minus) + s_slack(1996,temf_S,plus) + s_slack(1996,temf_S,minus) + s_slack(1996,toba_H,plus) + s_slack(1996,toba_H,minus) + s_slack(1996,toba_L,plus)
     
      + s_slack(1996,toba_L,minus) + s_slack(1996,trof_L,plus) + s_slack(1996,trof_L,minus) + s_slack(1996,trof_S,plus) + s_slack(1996,trof_S,minus) + s_slack(1996,vege_H,plus) + s_slack(1996,vege_H,minus) + s_slack(1996,vege_L,plus)
     
      + s_slack(1996,vege_L,minus) + s_slack(1996,vege_S,plus) + s_slack(1996,vege_S,minus) + s_slack(1997,rice_I,plus) + s_slack(1997,rice_I,minus) + s_slack(1997,sugc_I,plus) + s_slack(1997,sugc_I,minus) + s_slack(1997,whea_I,plus)
     
      + s_slack(1997,whea_I,minus) + s_slack(1997,bean_H,plus) + s_slack(1997,bean_H,minus) + s_slack(1997,bean_L,plus) + s_slack(1997,bean_L,minus) + s_slack(1997,bean_S,plus) + s_slack(1997,bean_S,minus) + s_slack(1997,cass_L,plus)
     
      + s_slack(1997,cass_L,minus) + s_slack(1997,cass_S,plus) + s_slack(1997,cass_S,minus) + s_slack(1997,chic_H,plus) + s_slack(1997,chic_H,minus) + s_slack(1997,chic_L,plus) + s_slack(1997,chic_L,minus) + s_slack(1997,chic_S,plus)
     
      + s_slack(1997,chic_S,minus) + s_slack(1997,coff_H,plus) + s_slack(1997,coff_H,minus) + s_slack(1997,coff_L,plus) + s_slack(1997,coff_L,minus) + s_slack(1997,cott_L,plus) + s_slack(1997,cott_L,minus) + s_slack(1997,cowp_H,plus)
     
      + s_slack(1997,cowp_H,minus) + s_slack(1997,cowp_L,plus) + s_slack(1997,cowp_L,minus) + s_slack(1997,cowp_S,plus) + s_slack(1997,cowp_S,minus) + s_slack(1997,grou_H,plus) + s_slack(1997,grou_H,minus) + s_slack(1997,grou_L,plus)
     
      + s_slack(1997,grou_L,minus) + s_slack(1997,grou_S,plus) + s_slack(1997,grou_S,minus) + s_slack(1997,lent_H,plus) + s_slack(1997,lent_H,minus) + s_slack(1997,lent_L,plus) + s_slack(1997,lent_L,minus) + s_slack(1997,lent_S,plus)
     
      + s_slack(1997,lent_S,minus) + s_slack(1997,maiz_H,plus) + s_slack(1997,maiz_H,minus) + s_slack(1997,maiz_L,plus) + s_slack(1997,maiz_L,minus) + s_slack(1997,maiz_S,plus) + s_slack(1997,maiz_S,minus) + s_slack(1997,mill_H,plus)
     
      + s_slack(1997,mill_H,minus) + s_slack(1997,mill_L,plus) + s_slack(1997,mill_L,minus) + s_slack(1997,mill_S,plus) + s_slack(1997,mill_S,minus) + s_slack(1997,ofib_L,plus) + s_slack(1997,ofib_L,minus) + s_slack(1997,ooil_L,plus)
     
      + s_slack(1997,ooil_L,minus) + s_slack(1997,opul_H,plus) + s_slack(1997,opul_H,minus) + s_slack(1997,opul_L,plus) + s_slack(1997,opul_L,minus) + s_slack(1997,opul_S,plus) + s_slack(1997,opul_S,minus) + s_slack(1997,pige_H,plus)
     
      + s_slack(1997,pige_H,minus) + s_slack(1997,pige_L,plus) + s_slack(1997,pige_L,minus) + s_slack(1997,pige_S,plus) + s_slack(1997,pige_S,minus) + s_slack(1997,pota_H,plus) + s_slack(1997,pota_H,minus) + s_slack(1997,pota_L,plus)
     
      + s_slack(1997,pota_L,minus) + s_slack(1997,pota_S,plus) + s_slack(1997,pota_S,minus) + s_slack(1997,rest_H,plus) + s_slack(1997,rest_H,minus) + s_slack(1997,rest_L,plus) + s_slack(1997,rest_L,minus) + s_slack(1997,rest_S,plus)
     
      + s_slack(1997,rest_S,minus) + s_slack(1997,rice_H,plus) + s_slack(1997,rice_H,minus) + s_slack(1997,rice_L,plus) + s_slack(1997,rice_L,minus) + s_slack(1997,rice_S,plus) + s_slack(1997,rice_S,minus) + s_slack(1997,sorg_L,plus)
     
      + s_slack(1997,sorg_L,minus) + s_slack(1997,sorg_S,plus) + s_slack(1997,sorg_S,minus) + s_slack(1997,soyb_L,plus) + s_slack(1997,soyb_L,minus) + s_slack(1997,soyb_S,plus) + s_slack(1997,soyb_S,minus) + s_slack(1997,sunf_L,plus)
     
      + s_slack(1997,sunf_L,minus) + s_slack(1997,temf_H,plus) + s_slack(1997,temf_H,minus) + s_slack(1997,temf_L,plus) + s_slack(1997,temf_L,minus) + s_slack(1997,temf_S,plus) + s_slack(1997,temf_S,minus) + s_slack(1997,toba_H,plus)
     
      + s_slack(1997,toba_H,minus) + s_slack(1997,toba_L,plus) + s_slack(1997,toba_L,minus) + s_slack(1997,trof_L,plus) + s_slack(1997,trof_L,minus) + s_slack(1997,trof_S,plus) + s_slack(1997,trof_S,minus) + s_slack(1997,vege_H,plus)
     
      + s_slack(1997,vege_H,minus) + s_slack(1997,vege_L,plus) + s_slack(1997,vege_L,minus) + s_slack(1997,vege_S,plus) + s_slack(1997,vege_S,minus) + s_slack(1998,rice_I,plus) + s_slack(1998,rice_I,minus) + s_slack(1998,sugc_I,plus)
     
      + s_slack(1998,sugc_I,minus) + s_slack(1998,whea_I,plus) + s_slack(1998,whea_I,minus) + s_slack(1998,bean_H,plus) + s_slack(1998,bean_H,minus) + s_slack(1998,bean_L,plus) + s_slack(1998,bean_L,minus) + s_slack(1998,bean_S,plus)
     
      + s_slack(1998,bean_S,minus) + s_slack(1998,cass_L,plus) + s_slack(1998,cass_L,minus) + s_slack(1998,cass_S,plus) + s_slack(1998,cass_S,minus) + s_slack(1998,chic_H,plus) + s_slack(1998,chic_H,minus) + s_slack(1998,chic_L,plus)
     
      + s_slack(1998,chic_L,minus) + s_slack(1998,chic_S,plus) + s_slack(1998,chic_S,minus) + s_slack(1998,coff_H,plus) + s_slack(1998,coff_H,minus) + s_slack(1998,coff_L,plus) + s_slack(1998,coff_L,minus) + s_slack(1998,cott_L,plus)
     
      + s_slack(1998,cott_L,minus) + s_slack(1998,cowp_H,plus) + s_slack(1998,cowp_H,minus) + s_slack(1998,cowp_L,plus) + s_slack(1998,cowp_L,minus) + s_slack(1998,cowp_S,plus) + s_slack(1998,cowp_S,minus) + s_slack(1998,grou_H,plus)
     
      + s_slack(1998,grou_H,minus) + s_slack(1998,grou_L,plus) + s_slack(1998,grou_L,minus) + s_slack(1998,grou_S,plus) + s_slack(1998,grou_S,minus) + s_slack(1998,lent_H,plus) + s_slack(1998,lent_H,minus) + s_slack(1998,lent_L,plus)
     
      + s_slack(1998,lent_L,minus) + s_slack(1998,lent_S,plus) + s_slack(1998,lent_S,minus) + s_slack(1998,maiz_H,plus) + s_slack(1998,maiz_H,minus) + s_slack(1998,maiz_L,plus) + s_slack(1998,maiz_L,minus) + s_slack(1998,maiz_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 173
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(1998,maiz_S,minus) + s_slack(1998,mill_H,plus) + s_slack(1998,mill_H,minus) + s_slack(1998,mill_L,plus) + s_slack(1998,mill_L,minus) + s_slack(1998,mill_S,plus) + s_slack(1998,mill_S,minus) + s_slack(1998,ofib_L,plus)
     
      + s_slack(1998,ofib_L,minus) + s_slack(1998,ooil_L,plus) + s_slack(1998,ooil_L,minus) + s_slack(1998,opul_H,plus) + s_slack(1998,opul_H,minus) + s_slack(1998,opul_L,plus) + s_slack(1998,opul_L,minus) + s_slack(1998,opul_S,plus)
     
      + s_slack(1998,opul_S,minus) + s_slack(1998,pige_H,plus) + s_slack(1998,pige_H,minus) + s_slack(1998,pige_L,plus) + s_slack(1998,pige_L,minus) + s_slack(1998,pige_S,plus) + s_slack(1998,pige_S,minus) + s_slack(1998,pota_H,plus)
     
      + s_slack(1998,pota_H,minus) + s_slack(1998,pota_L,plus) + s_slack(1998,pota_L,minus) + s_slack(1998,pota_S,plus) + s_slack(1998,pota_S,minus) + s_slack(1998,rest_H,plus) + s_slack(1998,rest_H,minus) + s_slack(1998,rest_L,plus)
     
      + s_slack(1998,rest_L,minus) + s_slack(1998,rest_S,plus) + s_slack(1998,rest_S,minus) + s_slack(1998,rice_H,plus) + s_slack(1998,rice_H,minus) + s_slack(1998,rice_L,plus) + s_slack(1998,rice_L,minus) + s_slack(1998,rice_S,plus)
     
      + s_slack(1998,rice_S,minus) + s_slack(1998,sorg_L,plus) + s_slack(1998,sorg_L,minus) + s_slack(1998,sorg_S,plus) + s_slack(1998,sorg_S,minus) + s_slack(1998,soyb_L,plus) + s_slack(1998,soyb_L,minus) + s_slack(1998,soyb_S,plus)
     
      + s_slack(1998,soyb_S,minus) + s_slack(1998,sunf_L,plus) + s_slack(1998,sunf_L,minus) + s_slack(1998,temf_H,plus) + s_slack(1998,temf_H,minus) + s_slack(1998,temf_L,plus) + s_slack(1998,temf_L,minus) + s_slack(1998,temf_S,plus)
     
      + s_slack(1998,temf_S,minus) + s_slack(1998,toba_H,plus) + s_slack(1998,toba_H,minus) + s_slack(1998,toba_L,plus) + s_slack(1998,toba_L,minus) + s_slack(1998,trof_L,plus) + s_slack(1998,trof_L,minus) + s_slack(1998,trof_S,plus)
     
      + s_slack(1998,trof_S,minus) + s_slack(1998,vege_H,plus) + s_slack(1998,vege_H,minus) + s_slack(1998,vege_L,plus) + s_slack(1998,vege_L,minus) + s_slack(1998,vege_S,plus) + s_slack(1998,vege_S,minus) + s_slack(1999,rice_I,plus)
     
      + s_slack(1999,rice_I,minus) + s_slack(1999,sugc_I,plus) + s_slack(1999,sugc_I,minus) + s_slack(1999,whea_I,plus) + s_slack(1999,whea_I,minus) + s_slack(1999,bean_H,plus) + s_slack(1999,bean_H,minus) + s_slack(1999,bean_L,plus)
     
      + s_slack(1999,bean_L,minus) + s_slack(1999,bean_S,plus) + s_slack(1999,bean_S,minus) + s_slack(1999,cass_L,plus) + s_slack(1999,cass_L,minus) + s_slack(1999,cass_S,plus) + s_slack(1999,cass_S,minus) + s_slack(1999,chic_H,plus)
     
      + s_slack(1999,chic_H,minus) + s_slack(1999,chic_L,plus) + s_slack(1999,chic_L,minus) + s_slack(1999,chic_S,plus) + s_slack(1999,chic_S,minus) + s_slack(1999,coff_H,plus) + s_slack(1999,coff_H,minus) + s_slack(1999,coff_L,plus)
     
      + s_slack(1999,coff_L,minus) + s_slack(1999,cott_L,plus) + s_slack(1999,cott_L,minus) + s_slack(1999,cowp_H,plus) + s_slack(1999,cowp_H,minus) + s_slack(1999,cowp_L,plus) + s_slack(1999,cowp_L,minus) + s_slack(1999,cowp_S,plus)
     
      + s_slack(1999,cowp_S,minus) + s_slack(1999,grou_H,plus) + s_slack(1999,grou_H,minus) + s_slack(1999,grou_L,plus) + s_slack(1999,grou_L,minus) + s_slack(1999,grou_S,plus) + s_slack(1999,grou_S,minus) + s_slack(1999,lent_H,plus)
     
      + s_slack(1999,lent_H,minus) + s_slack(1999,lent_L,plus) + s_slack(1999,lent_L,minus) + s_slack(1999,lent_S,plus) + s_slack(1999,lent_S,minus) + s_slack(1999,maiz_H,plus) + s_slack(1999,maiz_H,minus) + s_slack(1999,maiz_L,plus)
     
      + s_slack(1999,maiz_L,minus) + s_slack(1999,maiz_S,plus) + s_slack(1999,maiz_S,minus) + s_slack(1999,mill_H,plus) + s_slack(1999,mill_H,minus) + s_slack(1999,mill_L,plus) + s_slack(1999,mill_L,minus) + s_slack(1999,mill_S,plus)
     
      + s_slack(1999,mill_S,minus) + s_slack(1999,ofib_L,plus) + s_slack(1999,ofib_L,minus) + s_slack(1999,ooil_L,plus) + s_slack(1999,ooil_L,minus) + s_slack(1999,opul_H,plus) + s_slack(1999,opul_H,minus) + s_slack(1999,opul_L,plus)
     
      + s_slack(1999,opul_L,minus) + s_slack(1999,opul_S,plus) + s_slack(1999,opul_S,minus) + s_slack(1999,pige_H,plus) + s_slack(1999,pige_H,minus) + s_slack(1999,pige_L,plus) + s_slack(1999,pige_L,minus) + s_slack(1999,pige_S,plus)
     
      + s_slack(1999,pige_S,minus) + s_slack(1999,pota_H,plus) + s_slack(1999,pota_H,minus) + s_slack(1999,pota_L,plus) + s_slack(1999,pota_L,minus) + s_slack(1999,pota_S,plus) + s_slack(1999,pota_S,minus) + s_slack(1999,rest_H,plus)
     
      + s_slack(1999,rest_H,minus) + s_slack(1999,rest_L,plus) + s_slack(1999,rest_L,minus) + s_slack(1999,rest_S,plus) + s_slack(1999,rest_S,minus) + s_slack(1999,rice_H,plus) + s_slack(1999,rice_H,minus) + s_slack(1999,rice_L,plus)
     
      + s_slack(1999,rice_L,minus) + s_slack(1999,rice_S,plus) + s_slack(1999,rice_S,minus) + s_slack(1999,sorg_L,plus) + s_slack(1999,sorg_L,minus) + s_slack(1999,sorg_S,plus) + s_slack(1999,sorg_S,minus) + s_slack(1999,soyb_L,plus)
     
      + s_slack(1999,soyb_L,minus) + s_slack(1999,soyb_S,plus) + s_slack(1999,soyb_S,minus) + s_slack(1999,sunf_L,plus) + s_slack(1999,sunf_L,minus) + s_slack(1999,temf_H,plus) + s_slack(1999,temf_H,minus) + s_slack(1999,temf_L,plus)
     
      + s_slack(1999,temf_L,minus) + s_slack(1999,temf_S,plus) + s_slack(1999,temf_S,minus) + s_slack(1999,toba_H,plus) + s_slack(1999,toba_H,minus) + s_slack(1999,toba_L,plus) + s_slack(1999,toba_L,minus) + s_slack(1999,trof_L,plus)
     
      + s_slack(1999,trof_L,minus) + s_slack(1999,trof_S,plus) + s_slack(1999,trof_S,minus) + s_slack(1999,vege_H,plus) + s_slack(1999,vege_H,minus) + s_slack(1999,vege_L,plus) + s_slack(1999,vege_L,minus) + s_slack(1999,vege_S,plus)
     
      + s_slack(1999,vege_S,minus) + s_slack(2000,rice_I,plus) + s_slack(2000,rice_I,minus) + s_slack(2000,sugc_I,plus) + s_slack(2000,sugc_I,minus) + s_slack(2000,whea_I,plus) + s_slack(2000,whea_I,minus) + s_slack(2000,bean_H,plus)
     
      + s_slack(2000,bean_H,minus) + s_slack(2000,bean_L,plus) + s_slack(2000,bean_L,minus) + s_slack(2000,bean_S,plus) + s_slack(2000,bean_S,minus) + s_slack(2000,cass_L,plus) + s_slack(2000,cass_L,minus) + s_slack(2000,cass_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 174
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2000,cass_S,minus) + s_slack(2000,chic_H,plus) + s_slack(2000,chic_H,minus) + s_slack(2000,chic_L,plus) + s_slack(2000,chic_L,minus) + s_slack(2000,chic_S,plus) + s_slack(2000,chic_S,minus) + s_slack(2000,coff_H,plus)
     
      + s_slack(2000,coff_H,minus) + s_slack(2000,coff_L,plus) + s_slack(2000,coff_L,minus) + s_slack(2000,cott_L,plus) + s_slack(2000,cott_L,minus) + s_slack(2000,cowp_H,plus) + s_slack(2000,cowp_H,minus) + s_slack(2000,cowp_L,plus)
     
      + s_slack(2000,cowp_L,minus) + s_slack(2000,cowp_S,plus) + s_slack(2000,cowp_S,minus) + s_slack(2000,grou_H,plus) + s_slack(2000,grou_H,minus) + s_slack(2000,grou_L,plus) + s_slack(2000,grou_L,minus) + s_slack(2000,grou_S,plus)
     
      + s_slack(2000,grou_S,minus) + s_slack(2000,lent_H,plus) + s_slack(2000,lent_H,minus) + s_slack(2000,lent_L,plus) + s_slack(2000,lent_L,minus) + s_slack(2000,lent_S,plus) + s_slack(2000,lent_S,minus) + s_slack(2000,maiz_H,plus)
     
      + s_slack(2000,maiz_H,minus) + s_slack(2000,maiz_L,plus) + s_slack(2000,maiz_L,minus) + s_slack(2000,maiz_S,plus) + s_slack(2000,maiz_S,minus) + s_slack(2000,mill_H,plus) + s_slack(2000,mill_H,minus) + s_slack(2000,mill_L,plus)
     
      + s_slack(2000,mill_L,minus) + s_slack(2000,mill_S,plus) + s_slack(2000,mill_S,minus) + s_slack(2000,ofib_L,plus) + s_slack(2000,ofib_L,minus) + s_slack(2000,ooil_L,plus) + s_slack(2000,ooil_L,minus) + s_slack(2000,opul_H,plus)
     
      + s_slack(2000,opul_H,minus) + s_slack(2000,opul_L,plus) + s_slack(2000,opul_L,minus) + s_slack(2000,opul_S,plus) + s_slack(2000,opul_S,minus) + s_slack(2000,pige_H,plus) + s_slack(2000,pige_H,minus) + s_slack(2000,pige_L,plus)
     
      + s_slack(2000,pige_L,minus) + s_slack(2000,pige_S,plus) + s_slack(2000,pige_S,minus) + s_slack(2000,pota_H,plus) + s_slack(2000,pota_H,minus) + s_slack(2000,pota_L,plus) + s_slack(2000,pota_L,minus) + s_slack(2000,pota_S,plus)
     
      + s_slack(2000,pota_S,minus) + s_slack(2000,rest_H,plus) + s_slack(2000,rest_H,minus) + s_slack(2000,rest_L,plus) + s_slack(2000,rest_L,minus) + s_slack(2000,rest_S,plus) + s_slack(2000,rest_S,minus) + s_slack(2000,rice_H,plus)
     
      + s_slack(2000,rice_H,minus) + s_slack(2000,rice_L,plus) + s_slack(2000,rice_L,minus) + s_slack(2000,rice_S,plus) + s_slack(2000,rice_S,minus) + s_slack(2000,sorg_L,plus) + s_slack(2000,sorg_L,minus) + s_slack(2000,sorg_S,plus)
     
      + s_slack(2000,sorg_S,minus) + s_slack(2000,soyb_L,plus) + s_slack(2000,soyb_L,minus) + s_slack(2000,soyb_S,plus) + s_slack(2000,soyb_S,minus) + s_slack(2000,sunf_L,plus) + s_slack(2000,sunf_L,minus) + s_slack(2000,temf_H,plus)
     
      + s_slack(2000,temf_H,minus) + s_slack(2000,temf_L,plus) + s_slack(2000,temf_L,minus) + s_slack(2000,temf_S,plus) + s_slack(2000,temf_S,minus) + s_slack(2000,toba_H,plus) + s_slack(2000,toba_H,minus) + s_slack(2000,toba_L,plus)
     
      + s_slack(2000,toba_L,minus) + s_slack(2000,trof_L,plus) + s_slack(2000,trof_L,minus) + s_slack(2000,trof_S,plus) + s_slack(2000,trof_S,minus) + s_slack(2000,vege_H,plus) + s_slack(2000,vege_H,minus) + s_slack(2000,vege_L,plus)
     
      + s_slack(2000,vege_L,minus) + s_slack(2000,vege_S,plus) + s_slack(2000,vege_S,minus) + s_slack(2001,rice_I,plus) + s_slack(2001,rice_I,minus) + s_slack(2001,sugc_I,plus) + s_slack(2001,sugc_I,minus) + s_slack(2001,whea_I,plus)
     
      + s_slack(2001,whea_I,minus) + s_slack(2001,bean_H,plus) + s_slack(2001,bean_H,minus) + s_slack(2001,bean_L,plus) + s_slack(2001,bean_L,minus) + s_slack(2001,bean_S,plus) + s_slack(2001,bean_S,minus) + s_slack(2001,cass_L,plus)
     
      + s_slack(2001,cass_L,minus) + s_slack(2001,cass_S,plus) + s_slack(2001,cass_S,minus) + s_slack(2001,chic_H,plus) + s_slack(2001,chic_H,minus) + s_slack(2001,chic_L,plus) + s_slack(2001,chic_L,minus) + s_slack(2001,chic_S,plus)
     
      + s_slack(2001,chic_S,minus) + s_slack(2001,coff_H,plus) + s_slack(2001,coff_H,minus) + s_slack(2001,coff_L,plus) + s_slack(2001,coff_L,minus) + s_slack(2001,cott_L,plus) + s_slack(2001,cott_L,minus) + s_slack(2001,cowp_H,plus)
     
      + s_slack(2001,cowp_H,minus) + s_slack(2001,cowp_L,plus) + s_slack(2001,cowp_L,minus) + s_slack(2001,cowp_S,plus) + s_slack(2001,cowp_S,minus) + s_slack(2001,grou_H,plus) + s_slack(2001,grou_H,minus) + s_slack(2001,grou_L,plus)
     
      + s_slack(2001,grou_L,minus) + s_slack(2001,grou_S,plus) + s_slack(2001,grou_S,minus) + s_slack(2001,lent_H,plus) + s_slack(2001,lent_H,minus) + s_slack(2001,lent_L,plus) + s_slack(2001,lent_L,minus) + s_slack(2001,lent_S,plus)
     
      + s_slack(2001,lent_S,minus) + s_slack(2001,maiz_H,plus) + s_slack(2001,maiz_H,minus) + s_slack(2001,maiz_L,plus) + s_slack(2001,maiz_L,minus) + s_slack(2001,maiz_S,plus) + s_slack(2001,maiz_S,minus) + s_slack(2001,mill_H,plus)
     
      + s_slack(2001,mill_H,minus) + s_slack(2001,mill_L,plus) + s_slack(2001,mill_L,minus) + s_slack(2001,mill_S,plus) + s_slack(2001,mill_S,minus) + s_slack(2001,ofib_L,plus) + s_slack(2001,ofib_L,minus) + s_slack(2001,ooil_L,plus)
     
      + s_slack(2001,ooil_L,minus) + s_slack(2001,opul_H,plus) + s_slack(2001,opul_H,minus) + s_slack(2001,opul_L,plus) + s_slack(2001,opul_L,minus) + s_slack(2001,opul_S,plus) + s_slack(2001,opul_S,minus) + s_slack(2001,pige_H,plus)
     
      + s_slack(2001,pige_H,minus) + s_slack(2001,pige_L,plus) + s_slack(2001,pige_L,minus) + s_slack(2001,pige_S,plus) + s_slack(2001,pige_S,minus) + s_slack(2001,pota_H,plus) + s_slack(2001,pota_H,minus) + s_slack(2001,pota_L,plus)
     
      + s_slack(2001,pota_L,minus) + s_slack(2001,pota_S,plus) + s_slack(2001,pota_S,minus) + s_slack(2001,rest_H,plus) + s_slack(2001,rest_H,minus) + s_slack(2001,rest_L,plus) + s_slack(2001,rest_L,minus) + s_slack(2001,rest_S,plus)
     
      + s_slack(2001,rest_S,minus) + s_slack(2001,rice_H,plus) + s_slack(2001,rice_H,minus) + s_slack(2001,rice_L,plus) + s_slack(2001,rice_L,minus) + s_slack(2001,rice_S,plus) + s_slack(2001,rice_S,minus) + s_slack(2001,sorg_L,plus)
     
      + s_slack(2001,sorg_L,minus) + s_slack(2001,sorg_S,plus) + s_slack(2001,sorg_S,minus) + s_slack(2001,soyb_L,plus) + s_slack(2001,soyb_L,minus) + s_slack(2001,soyb_S,plus) + s_slack(2001,soyb_S,minus) + s_slack(2001,sunf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 175
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2001,sunf_L,minus) + s_slack(2001,temf_H,plus) + s_slack(2001,temf_H,minus) + s_slack(2001,temf_L,plus) + s_slack(2001,temf_L,minus) + s_slack(2001,temf_S,plus) + s_slack(2001,temf_S,minus) + s_slack(2001,toba_H,plus)
     
      + s_slack(2001,toba_H,minus) + s_slack(2001,toba_L,plus) + s_slack(2001,toba_L,minus) + s_slack(2001,trof_L,plus) + s_slack(2001,trof_L,minus) + s_slack(2001,trof_S,plus) + s_slack(2001,trof_S,minus) + s_slack(2001,vege_H,plus)
     
      + s_slack(2001,vege_H,minus) + s_slack(2001,vege_L,plus) + s_slack(2001,vege_L,minus) + s_slack(2001,vege_S,plus) + s_slack(2001,vege_S,minus) + s_slack(2002,rice_I,plus) + s_slack(2002,rice_I,minus) + s_slack(2002,sugc_I,plus)
     
      + s_slack(2002,sugc_I,minus) + s_slack(2002,whea_I,plus) + s_slack(2002,whea_I,minus) + s_slack(2002,bean_H,plus) + s_slack(2002,bean_H,minus) + s_slack(2002,bean_L,plus) + s_slack(2002,bean_L,minus) + s_slack(2002,bean_S,plus)
     
      + s_slack(2002,bean_S,minus) + s_slack(2002,cass_L,plus) + s_slack(2002,cass_L,minus) + s_slack(2002,cass_S,plus) + s_slack(2002,cass_S,minus) + s_slack(2002,chic_H,plus) + s_slack(2002,chic_H,minus) + s_slack(2002,chic_L,plus)
     
      + s_slack(2002,chic_L,minus) + s_slack(2002,chic_S,plus) + s_slack(2002,chic_S,minus) + s_slack(2002,coff_H,plus) + s_slack(2002,coff_H,minus) + s_slack(2002,coff_L,plus) + s_slack(2002,coff_L,minus) + s_slack(2002,cott_L,plus)
     
      + s_slack(2002,cott_L,minus) + s_slack(2002,cowp_H,plus) + s_slack(2002,cowp_H,minus) + s_slack(2002,cowp_L,plus) + s_slack(2002,cowp_L,minus) + s_slack(2002,cowp_S,plus) + s_slack(2002,cowp_S,minus) + s_slack(2002,grou_H,plus)
     
      + s_slack(2002,grou_H,minus) + s_slack(2002,grou_L,plus) + s_slack(2002,grou_L,minus) + s_slack(2002,grou_S,plus) + s_slack(2002,grou_S,minus) + s_slack(2002,lent_H,plus) + s_slack(2002,lent_H,minus) + s_slack(2002,lent_L,plus)
     
      + s_slack(2002,lent_L,minus) + s_slack(2002,lent_S,plus) + s_slack(2002,lent_S,minus) + s_slack(2002,maiz_H,plus) + s_slack(2002,maiz_H,minus) + s_slack(2002,maiz_L,plus) + s_slack(2002,maiz_L,minus) + s_slack(2002,maiz_S,plus)
     
      + s_slack(2002,maiz_S,minus) + s_slack(2002,mill_H,plus) + s_slack(2002,mill_H,minus) + s_slack(2002,mill_L,plus) + s_slack(2002,mill_L,minus) + s_slack(2002,mill_S,plus) + s_slack(2002,mill_S,minus) + s_slack(2002,ofib_L,plus)
     
      + s_slack(2002,ofib_L,minus) + s_slack(2002,ooil_L,plus) + s_slack(2002,ooil_L,minus) + s_slack(2002,opul_H,plus) + s_slack(2002,opul_H,minus) + s_slack(2002,opul_L,plus) + s_slack(2002,opul_L,minus) + s_slack(2002,opul_S,plus)
     
      + s_slack(2002,opul_S,minus) + s_slack(2002,pige_H,plus) + s_slack(2002,pige_H,minus) + s_slack(2002,pige_L,plus) + s_slack(2002,pige_L,minus) + s_slack(2002,pige_S,plus) + s_slack(2002,pige_S,minus) + s_slack(2002,pota_H,plus)
     
      + s_slack(2002,pota_H,minus) + s_slack(2002,pota_L,plus) + s_slack(2002,pota_L,minus) + s_slack(2002,pota_S,plus) + s_slack(2002,pota_S,minus) + s_slack(2002,rest_H,plus) + s_slack(2002,rest_H,minus) + s_slack(2002,rest_L,plus)
     
      + s_slack(2002,rest_L,minus) + s_slack(2002,rest_S,plus) + s_slack(2002,rest_S,minus) + s_slack(2002,rice_H,plus) + s_slack(2002,rice_H,minus) + s_slack(2002,rice_L,plus) + s_slack(2002,rice_L,minus) + s_slack(2002,rice_S,plus)
     
      + s_slack(2002,rice_S,minus) + s_slack(2002,sorg_L,plus) + s_slack(2002,sorg_L,minus) + s_slack(2002,sorg_S,plus) + s_slack(2002,sorg_S,minus) + s_slack(2002,soyb_L,plus) + s_slack(2002,soyb_L,minus) + s_slack(2002,soyb_S,plus)
     
      + s_slack(2002,soyb_S,minus) + s_slack(2002,sunf_L,plus) + s_slack(2002,sunf_L,minus) + s_slack(2002,temf_H,plus) + s_slack(2002,temf_H,minus) + s_slack(2002,temf_L,plus) + s_slack(2002,temf_L,minus) + s_slack(2002,temf_S,plus)
     
      + s_slack(2002,temf_S,minus) + s_slack(2002,toba_H,plus) + s_slack(2002,toba_H,minus) + s_slack(2002,toba_L,plus) + s_slack(2002,toba_L,minus) + s_slack(2002,trof_L,plus) + s_slack(2002,trof_L,minus) + s_slack(2002,trof_S,plus)
     
      + s_slack(2002,trof_S,minus) + s_slack(2002,vege_H,plus) + s_slack(2002,vege_H,minus) + s_slack(2002,vege_L,plus) + s_slack(2002,vege_L,minus) + s_slack(2002,vege_S,plus) + s_slack(2002,vege_S,minus) + s_slack(2003,rice_I,plus)
     
      + s_slack(2003,rice_I,minus) + s_slack(2003,sugc_I,plus) + s_slack(2003,sugc_I,minus) + s_slack(2003,whea_I,plus) + s_slack(2003,whea_I,minus) + s_slack(2003,bean_H,plus) + s_slack(2003,bean_H,minus) + s_slack(2003,bean_L,plus)
     
      + s_slack(2003,bean_L,minus) + s_slack(2003,bean_S,plus) + s_slack(2003,bean_S,minus) + s_slack(2003,cass_L,plus) + s_slack(2003,cass_L,minus) + s_slack(2003,cass_S,plus) + s_slack(2003,cass_S,minus) + s_slack(2003,chic_H,plus)
     
      + s_slack(2003,chic_H,minus) + s_slack(2003,chic_L,plus) + s_slack(2003,chic_L,minus) + s_slack(2003,chic_S,plus) + s_slack(2003,chic_S,minus) + s_slack(2003,coff_H,plus) + s_slack(2003,coff_H,minus) + s_slack(2003,coff_L,plus)
     
      + s_slack(2003,coff_L,minus) + s_slack(2003,cott_L,plus) + s_slack(2003,cott_L,minus) + s_slack(2003,cowp_H,plus) + s_slack(2003,cowp_H,minus) + s_slack(2003,cowp_L,plus) + s_slack(2003,cowp_L,minus) + s_slack(2003,cowp_S,plus)
     
      + s_slack(2003,cowp_S,minus) + s_slack(2003,grou_H,plus) + s_slack(2003,grou_H,minus) + s_slack(2003,grou_L,plus) + s_slack(2003,grou_L,minus) + s_slack(2003,grou_S,plus) + s_slack(2003,grou_S,minus) + s_slack(2003,lent_H,plus)
     
      + s_slack(2003,lent_H,minus) + s_slack(2003,lent_L,plus) + s_slack(2003,lent_L,minus) + s_slack(2003,lent_S,plus) + s_slack(2003,lent_S,minus) + s_slack(2003,maiz_H,plus) + s_slack(2003,maiz_H,minus) + s_slack(2003,maiz_L,plus)
     
      + s_slack(2003,maiz_L,minus) + s_slack(2003,maiz_S,plus) + s_slack(2003,maiz_S,minus) + s_slack(2003,mill_H,plus) + s_slack(2003,mill_H,minus) + s_slack(2003,mill_L,plus) + s_slack(2003,mill_L,minus) + s_slack(2003,mill_S,plus)
     
      + s_slack(2003,mill_S,minus) + s_slack(2003,ofib_L,plus) + s_slack(2003,ofib_L,minus) + s_slack(2003,ooil_L,plus) + s_slack(2003,ooil_L,minus) + s_slack(2003,opul_H,plus) + s_slack(2003,opul_H,minus) + s_slack(2003,opul_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 176
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2003,opul_L,minus) + s_slack(2003,opul_S,plus) + s_slack(2003,opul_S,minus) + s_slack(2003,pige_H,plus) + s_slack(2003,pige_H,minus) + s_slack(2003,pige_L,plus) + s_slack(2003,pige_L,minus) + s_slack(2003,pige_S,plus)
     
      + s_slack(2003,pige_S,minus) + s_slack(2003,pota_H,plus) + s_slack(2003,pota_H,minus) + s_slack(2003,pota_L,plus) + s_slack(2003,pota_L,minus) + s_slack(2003,pota_S,plus) + s_slack(2003,pota_S,minus) + s_slack(2003,rest_H,plus)
     
      + s_slack(2003,rest_H,minus) + s_slack(2003,rest_L,plus) + s_slack(2003,rest_L,minus) + s_slack(2003,rest_S,plus) + s_slack(2003,rest_S,minus) + s_slack(2003,rice_H,plus) + s_slack(2003,rice_H,minus) + s_slack(2003,rice_L,plus)
     
      + s_slack(2003,rice_L,minus) + s_slack(2003,rice_S,plus) + s_slack(2003,rice_S,minus) + s_slack(2003,sorg_L,plus) + s_slack(2003,sorg_L,minus) + s_slack(2003,sorg_S,plus) + s_slack(2003,sorg_S,minus) + s_slack(2003,soyb_L,plus)
     
      + s_slack(2003,soyb_L,minus) + s_slack(2003,soyb_S,plus) + s_slack(2003,soyb_S,minus) + s_slack(2003,sunf_L,plus) + s_slack(2003,sunf_L,minus) + s_slack(2003,temf_H,plus) + s_slack(2003,temf_H,minus) + s_slack(2003,temf_L,plus)
     
      + s_slack(2003,temf_L,minus) + s_slack(2003,temf_S,plus) + s_slack(2003,temf_S,minus) + s_slack(2003,toba_H,plus) + s_slack(2003,toba_H,minus) + s_slack(2003,toba_L,plus) + s_slack(2003,toba_L,minus) + s_slack(2003,trof_L,plus)
     
      + s_slack(2003,trof_L,minus) + s_slack(2003,trof_S,plus) + s_slack(2003,trof_S,minus) + s_slack(2003,vege_H,plus) + s_slack(2003,vege_H,minus) + s_slack(2003,vege_L,plus) + s_slack(2003,vege_L,minus) + s_slack(2003,vege_S,plus)
     
      + s_slack(2003,vege_S,minus) + s_slack(2004,rice_I,plus) + s_slack(2004,rice_I,minus) + s_slack(2004,sugc_I,plus) + s_slack(2004,sugc_I,minus) + s_slack(2004,whea_I,plus) + s_slack(2004,whea_I,minus) + s_slack(2004,bean_H,plus)
     
      + s_slack(2004,bean_H,minus) + s_slack(2004,bean_L,plus) + s_slack(2004,bean_L,minus) + s_slack(2004,bean_S,plus) + s_slack(2004,bean_S,minus) + s_slack(2004,cass_L,plus) + s_slack(2004,cass_L,minus) + s_slack(2004,cass_S,plus)
     
      + s_slack(2004,cass_S,minus) + s_slack(2004,chic_H,plus) + s_slack(2004,chic_H,minus) + s_slack(2004,chic_L,plus) + s_slack(2004,chic_L,minus) + s_slack(2004,chic_S,plus) + s_slack(2004,chic_S,minus) + s_slack(2004,coff_H,plus)
     
      + s_slack(2004,coff_H,minus) + s_slack(2004,coff_L,plus) + s_slack(2004,coff_L,minus) + s_slack(2004,cott_L,plus) + s_slack(2004,cott_L,minus) + s_slack(2004,cowp_H,plus) + s_slack(2004,cowp_H,minus) + s_slack(2004,cowp_L,plus)
     
      + s_slack(2004,cowp_L,minus) + s_slack(2004,cowp_S,plus) + s_slack(2004,cowp_S,minus) + s_slack(2004,grou_H,plus) + s_slack(2004,grou_H,minus) + s_slack(2004,grou_L,plus) + s_slack(2004,grou_L,minus) + s_slack(2004,grou_S,plus)
     
      + s_slack(2004,grou_S,minus) + s_slack(2004,lent_H,plus) + s_slack(2004,lent_H,minus) + s_slack(2004,lent_L,plus) + s_slack(2004,lent_L,minus) + s_slack(2004,lent_S,plus) + s_slack(2004,lent_S,minus) + s_slack(2004,maiz_H,plus)
     
      + s_slack(2004,maiz_H,minus) + s_slack(2004,maiz_L,plus) + s_slack(2004,maiz_L,minus) + s_slack(2004,maiz_S,plus) + s_slack(2004,maiz_S,minus) + s_slack(2004,mill_H,plus) + s_slack(2004,mill_H,minus) + s_slack(2004,mill_L,plus)
     
      + s_slack(2004,mill_L,minus) + s_slack(2004,mill_S,plus) + s_slack(2004,mill_S,minus) + s_slack(2004,ofib_L,plus) + s_slack(2004,ofib_L,minus) + s_slack(2004,ooil_L,plus) + s_slack(2004,ooil_L,minus) + s_slack(2004,opul_H,plus)
     
      + s_slack(2004,opul_H,minus) + s_slack(2004,opul_L,plus) + s_slack(2004,opul_L,minus) + s_slack(2004,opul_S,plus) + s_slack(2004,opul_S,minus) + s_slack(2004,pige_H,plus) + s_slack(2004,pige_H,minus) + s_slack(2004,pige_L,plus)
     
      + s_slack(2004,pige_L,minus) + s_slack(2004,pige_S,plus) + s_slack(2004,pige_S,minus) + s_slack(2004,pota_H,plus) + s_slack(2004,pota_H,minus) + s_slack(2004,pota_L,plus) + s_slack(2004,pota_L,minus) + s_slack(2004,pota_S,plus)
     
      + s_slack(2004,pota_S,minus) + s_slack(2004,rest_H,plus) + s_slack(2004,rest_H,minus) + s_slack(2004,rest_L,plus) + s_slack(2004,rest_L,minus) + s_slack(2004,rest_S,plus) + s_slack(2004,rest_S,minus) + s_slack(2004,rice_H,plus)
     
      + s_slack(2004,rice_H,minus) + s_slack(2004,rice_L,plus) + s_slack(2004,rice_L,minus) + s_slack(2004,rice_S,plus) + s_slack(2004,rice_S,minus) + s_slack(2004,sorg_L,plus) + s_slack(2004,sorg_L,minus) + s_slack(2004,sorg_S,plus)
     
      + s_slack(2004,sorg_S,minus) + s_slack(2004,soyb_L,plus) + s_slack(2004,soyb_L,minus) + s_slack(2004,soyb_S,plus) + s_slack(2004,soyb_S,minus) + s_slack(2004,sunf_L,plus) + s_slack(2004,sunf_L,minus) + s_slack(2004,temf_H,plus)
     
      + s_slack(2004,temf_H,minus) + s_slack(2004,temf_L,plus) + s_slack(2004,temf_L,minus) + s_slack(2004,temf_S,plus) + s_slack(2004,temf_S,minus) + s_slack(2004,toba_H,plus) + s_slack(2004,toba_H,minus) + s_slack(2004,toba_L,plus)
     
      + s_slack(2004,toba_L,minus) + s_slack(2004,trof_L,plus) + s_slack(2004,trof_L,minus) + s_slack(2004,trof_S,plus) + s_slack(2004,trof_S,minus) + s_slack(2004,vege_H,plus) + s_slack(2004,vege_H,minus) + s_slack(2004,vege_L,plus)
     
      + s_slack(2004,vege_L,minus) + s_slack(2004,vege_S,plus) + s_slack(2004,vege_S,minus) + s_slack(2005,rice_I,plus) + s_slack(2005,rice_I,minus) + s_slack(2005,sugc_I,plus) + s_slack(2005,sugc_I,minus) + s_slack(2005,whea_I,plus)
     
      + s_slack(2005,whea_I,minus) + s_slack(2005,bean_H,plus) + s_slack(2005,bean_H,minus) + s_slack(2005,bean_L,plus) + s_slack(2005,bean_L,minus) + s_slack(2005,bean_S,plus) + s_slack(2005,bean_S,minus) + s_slack(2005,cass_L,plus)
     
      + s_slack(2005,cass_L,minus) + s_slack(2005,cass_S,plus) + s_slack(2005,cass_S,minus) + s_slack(2005,chic_H,plus) + s_slack(2005,chic_H,minus) + s_slack(2005,chic_L,plus) + s_slack(2005,chic_L,minus) + s_slack(2005,chic_S,plus)
     
      + s_slack(2005,chic_S,minus) + s_slack(2005,coff_H,plus) + s_slack(2005,coff_H,minus) + s_slack(2005,coff_L,plus) + s_slack(2005,coff_L,minus) + s_slack(2005,cott_L,plus) + s_slack(2005,cott_L,minus) + s_slack(2005,cowp_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 177
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2005,cowp_H,minus) + s_slack(2005,cowp_L,plus) + s_slack(2005,cowp_L,minus) + s_slack(2005,cowp_S,plus) + s_slack(2005,cowp_S,minus) + s_slack(2005,grou_H,plus) + s_slack(2005,grou_H,minus) + s_slack(2005,grou_L,plus)
     
      + s_slack(2005,grou_L,minus) + s_slack(2005,grou_S,plus) + s_slack(2005,grou_S,minus) + s_slack(2005,lent_H,plus) + s_slack(2005,lent_H,minus) + s_slack(2005,lent_L,plus) + s_slack(2005,lent_L,minus) + s_slack(2005,lent_S,plus)
     
      + s_slack(2005,lent_S,minus) + s_slack(2005,maiz_H,plus) + s_slack(2005,maiz_H,minus) + s_slack(2005,maiz_L,plus) + s_slack(2005,maiz_L,minus) + s_slack(2005,maiz_S,plus) + s_slack(2005,maiz_S,minus) + s_slack(2005,mill_H,plus)
     
      + s_slack(2005,mill_H,minus) + s_slack(2005,mill_L,plus) + s_slack(2005,mill_L,minus) + s_slack(2005,mill_S,plus) + s_slack(2005,mill_S,minus) + s_slack(2005,ofib_L,plus) + s_slack(2005,ofib_L,minus) + s_slack(2005,ooil_L,plus)
     
      + s_slack(2005,ooil_L,minus) + s_slack(2005,opul_H,plus) + s_slack(2005,opul_H,minus) + s_slack(2005,opul_L,plus) + s_slack(2005,opul_L,minus) + s_slack(2005,opul_S,plus) + s_slack(2005,opul_S,minus) + s_slack(2005,pige_H,plus)
     
      + s_slack(2005,pige_H,minus) + s_slack(2005,pige_L,plus) + s_slack(2005,pige_L,minus) + s_slack(2005,pige_S,plus) + s_slack(2005,pige_S,minus) + s_slack(2005,pota_H,plus) + s_slack(2005,pota_H,minus) + s_slack(2005,pota_L,plus)
     
      + s_slack(2005,pota_L,minus) + s_slack(2005,pota_S,plus) + s_slack(2005,pota_S,minus) + s_slack(2005,rest_H,plus) + s_slack(2005,rest_H,minus) + s_slack(2005,rest_L,plus) + s_slack(2005,rest_L,minus) + s_slack(2005,rest_S,plus)
     
      + s_slack(2005,rest_S,minus) + s_slack(2005,rice_H,plus) + s_slack(2005,rice_H,minus) + s_slack(2005,rice_L,plus) + s_slack(2005,rice_L,minus) + s_slack(2005,rice_S,plus) + s_slack(2005,rice_S,minus) + s_slack(2005,sorg_L,plus)
     
      + s_slack(2005,sorg_L,minus) + s_slack(2005,sorg_S,plus) + s_slack(2005,sorg_S,minus) + s_slack(2005,soyb_L,plus) + s_slack(2005,soyb_L,minus) + s_slack(2005,soyb_S,plus) + s_slack(2005,soyb_S,minus) + s_slack(2005,sunf_L,plus)
     
      + s_slack(2005,sunf_L,minus) + s_slack(2005,temf_H,plus) + s_slack(2005,temf_H,minus) + s_slack(2005,temf_L,plus) + s_slack(2005,temf_L,minus) + s_slack(2005,temf_S,plus) + s_slack(2005,temf_S,minus) + s_slack(2005,toba_H,plus)
     
      + s_slack(2005,toba_H,minus) + s_slack(2005,toba_L,plus) + s_slack(2005,toba_L,minus) + s_slack(2005,trof_L,plus) + s_slack(2005,trof_L,minus) + s_slack(2005,trof_S,plus) + s_slack(2005,trof_S,minus) + s_slack(2005,vege_H,plus)
     
      + s_slack(2005,vege_H,minus) + s_slack(2005,vege_L,plus) + s_slack(2005,vege_L,minus) + s_slack(2005,vege_S,plus) + s_slack(2005,vege_S,minus) + s_slack(2006,rice_I,plus) + s_slack(2006,rice_I,minus) + s_slack(2006,sugc_I,plus)
     
      + s_slack(2006,sugc_I,minus) + s_slack(2006,whea_I,plus) + s_slack(2006,whea_I,minus) + s_slack(2006,bean_H,plus) + s_slack(2006,bean_H,minus) + s_slack(2006,bean_L,plus) + s_slack(2006,bean_L,minus) + s_slack(2006,bean_S,plus)
     
      + s_slack(2006,bean_S,minus) + s_slack(2006,cass_L,plus) + s_slack(2006,cass_L,minus) + s_slack(2006,cass_S,plus) + s_slack(2006,cass_S,minus) + s_slack(2006,chic_H,plus) + s_slack(2006,chic_H,minus) + s_slack(2006,chic_L,plus)
     
      + s_slack(2006,chic_L,minus) + s_slack(2006,chic_S,plus) + s_slack(2006,chic_S,minus) + s_slack(2006,coff_H,plus) + s_slack(2006,coff_H,minus) + s_slack(2006,coff_L,plus) + s_slack(2006,coff_L,minus) + s_slack(2006,cott_L,plus)
     
      + s_slack(2006,cott_L,minus) + s_slack(2006,cowp_H,plus) + s_slack(2006,cowp_H,minus) + s_slack(2006,cowp_L,plus) + s_slack(2006,cowp_L,minus) + s_slack(2006,cowp_S,plus) + s_slack(2006,cowp_S,minus) + s_slack(2006,grou_H,plus)
     
      + s_slack(2006,grou_H,minus) + s_slack(2006,grou_L,plus) + s_slack(2006,grou_L,minus) + s_slack(2006,grou_S,plus) + s_slack(2006,grou_S,minus) + s_slack(2006,lent_H,plus) + s_slack(2006,lent_H,minus) + s_slack(2006,lent_L,plus)
     
      + s_slack(2006,lent_L,minus) + s_slack(2006,lent_S,plus) + s_slack(2006,lent_S,minus) + s_slack(2006,maiz_H,plus) + s_slack(2006,maiz_H,minus) + s_slack(2006,maiz_L,plus) + s_slack(2006,maiz_L,minus) + s_slack(2006,maiz_S,plus)
     
      + s_slack(2006,maiz_S,minus) + s_slack(2006,mill_H,plus) + s_slack(2006,mill_H,minus) + s_slack(2006,mill_L,plus) + s_slack(2006,mill_L,minus) + s_slack(2006,mill_S,plus) + s_slack(2006,mill_S,minus) + s_slack(2006,ofib_L,plus)
     
      + s_slack(2006,ofib_L,minus) + s_slack(2006,ooil_L,plus) + s_slack(2006,ooil_L,minus) + s_slack(2006,opul_H,plus) + s_slack(2006,opul_H,minus) + s_slack(2006,opul_L,plus) + s_slack(2006,opul_L,minus) + s_slack(2006,opul_S,plus)
     
      + s_slack(2006,opul_S,minus) + s_slack(2006,pige_H,plus) + s_slack(2006,pige_H,minus) + s_slack(2006,pige_L,plus) + s_slack(2006,pige_L,minus) + s_slack(2006,pige_S,plus) + s_slack(2006,pige_S,minus) + s_slack(2006,pota_H,plus)
     
      + s_slack(2006,pota_H,minus) + s_slack(2006,pota_L,plus) + s_slack(2006,pota_L,minus) + s_slack(2006,pota_S,plus) + s_slack(2006,pota_S,minus) + s_slack(2006,rest_H,plus) + s_slack(2006,rest_H,minus) + s_slack(2006,rest_L,plus)
     
      + s_slack(2006,rest_L,minus) + s_slack(2006,rest_S,plus) + s_slack(2006,rest_S,minus) + s_slack(2006,rice_H,plus) + s_slack(2006,rice_H,minus) + s_slack(2006,rice_L,plus) + s_slack(2006,rice_L,minus) + s_slack(2006,rice_S,plus)
     
      + s_slack(2006,rice_S,minus) + s_slack(2006,sorg_L,plus) + s_slack(2006,sorg_L,minus) + s_slack(2006,sorg_S,plus) + s_slack(2006,sorg_S,minus) + s_slack(2006,soyb_L,plus) + s_slack(2006,soyb_L,minus) + s_slack(2006,soyb_S,plus)
     
      + s_slack(2006,soyb_S,minus) + s_slack(2006,sunf_L,plus) + s_slack(2006,sunf_L,minus) + s_slack(2006,temf_H,plus) + s_slack(2006,temf_H,minus) + s_slack(2006,temf_L,plus) + s_slack(2006,temf_L,minus) + s_slack(2006,temf_S,plus)
     
      + s_slack(2006,temf_S,minus) + s_slack(2006,toba_H,plus) + s_slack(2006,toba_H,minus) + s_slack(2006,toba_L,plus) + s_slack(2006,toba_L,minus) + s_slack(2006,trof_L,plus) + s_slack(2006,trof_L,minus) + s_slack(2006,trof_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 178
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2006,trof_S,minus) + s_slack(2006,vege_H,plus) + s_slack(2006,vege_H,minus) + s_slack(2006,vege_L,plus) + s_slack(2006,vege_L,minus) + s_slack(2006,vege_S,plus) + s_slack(2006,vege_S,minus) + s_slack(2007,rice_I,plus)
     
      + s_slack(2007,rice_I,minus) + s_slack(2007,sugc_I,plus) + s_slack(2007,sugc_I,minus) + s_slack(2007,whea_I,plus) + s_slack(2007,whea_I,minus) + s_slack(2007,bean_H,plus) + s_slack(2007,bean_H,minus) + s_slack(2007,bean_L,plus)
     
      + s_slack(2007,bean_L,minus) + s_slack(2007,bean_S,plus) + s_slack(2007,bean_S,minus) + s_slack(2007,cass_L,plus) + s_slack(2007,cass_L,minus) + s_slack(2007,cass_S,plus) + s_slack(2007,cass_S,minus) + s_slack(2007,chic_H,plus)
     
      + s_slack(2007,chic_H,minus) + s_slack(2007,chic_L,plus) + s_slack(2007,chic_L,minus) + s_slack(2007,chic_S,plus) + s_slack(2007,chic_S,minus) + s_slack(2007,coff_H,plus) + s_slack(2007,coff_H,minus) + s_slack(2007,coff_L,plus)
     
      + s_slack(2007,coff_L,minus) + s_slack(2007,cott_L,plus) + s_slack(2007,cott_L,minus) + s_slack(2007,cowp_H,plus) + s_slack(2007,cowp_H,minus) + s_slack(2007,cowp_L,plus) + s_slack(2007,cowp_L,minus) + s_slack(2007,cowp_S,plus)
     
      + s_slack(2007,cowp_S,minus) + s_slack(2007,grou_H,plus) + s_slack(2007,grou_H,minus) + s_slack(2007,grou_L,plus) + s_slack(2007,grou_L,minus) + s_slack(2007,grou_S,plus) + s_slack(2007,grou_S,minus) + s_slack(2007,lent_H,plus)
     
      + s_slack(2007,lent_H,minus) + s_slack(2007,lent_L,plus) + s_slack(2007,lent_L,minus) + s_slack(2007,lent_S,plus) + s_slack(2007,lent_S,minus) + s_slack(2007,maiz_H,plus) + s_slack(2007,maiz_H,minus) + s_slack(2007,maiz_L,plus)
     
      + s_slack(2007,maiz_L,minus) + s_slack(2007,maiz_S,plus) + s_slack(2007,maiz_S,minus) + s_slack(2007,mill_H,plus) + s_slack(2007,mill_H,minus) + s_slack(2007,mill_L,plus) + s_slack(2007,mill_L,minus) + s_slack(2007,mill_S,plus)
     
      + s_slack(2007,mill_S,minus) + s_slack(2007,ofib_L,plus) + s_slack(2007,ofib_L,minus) + s_slack(2007,ooil_L,plus) + s_slack(2007,ooil_L,minus) + s_slack(2007,opul_H,plus) + s_slack(2007,opul_H,minus) + s_slack(2007,opul_L,plus)
     
      + s_slack(2007,opul_L,minus) + s_slack(2007,opul_S,plus) + s_slack(2007,opul_S,minus) + s_slack(2007,pige_H,plus) + s_slack(2007,pige_H,minus) + s_slack(2007,pige_L,plus) + s_slack(2007,pige_L,minus) + s_slack(2007,pige_S,plus)
     
      + s_slack(2007,pige_S,minus) + s_slack(2007,pota_H,plus) + s_slack(2007,pota_H,minus) + s_slack(2007,pota_L,plus) + s_slack(2007,pota_L,minus) + s_slack(2007,pota_S,plus) + s_slack(2007,pota_S,minus) + s_slack(2007,rest_H,plus)
     
      + s_slack(2007,rest_H,minus) + s_slack(2007,rest_L,plus) + s_slack(2007,rest_L,minus) + s_slack(2007,rest_S,plus) + s_slack(2007,rest_S,minus) + s_slack(2007,rice_H,plus) + s_slack(2007,rice_H,minus) + s_slack(2007,rice_L,plus)
     
      + s_slack(2007,rice_L,minus) + s_slack(2007,rice_S,plus) + s_slack(2007,rice_S,minus) + s_slack(2007,sorg_L,plus) + s_slack(2007,sorg_L,minus) + s_slack(2007,sorg_S,plus) + s_slack(2007,sorg_S,minus) + s_slack(2007,soyb_L,plus)
     
      + s_slack(2007,soyb_L,minus) + s_slack(2007,soyb_S,plus) + s_slack(2007,soyb_S,minus) + s_slack(2007,sunf_L,plus) + s_slack(2007,sunf_L,minus) + s_slack(2007,temf_H,plus) + s_slack(2007,temf_H,minus) + s_slack(2007,temf_L,plus)
     
      + s_slack(2007,temf_L,minus) + s_slack(2007,temf_S,plus) + s_slack(2007,temf_S,minus) + s_slack(2007,toba_H,plus) + s_slack(2007,toba_H,minus) + s_slack(2007,toba_L,plus) + s_slack(2007,toba_L,minus) + s_slack(2007,trof_L,plus)
     
      + s_slack(2007,trof_L,minus) + s_slack(2007,trof_S,plus) + s_slack(2007,trof_S,minus) + s_slack(2007,vege_H,plus) + s_slack(2007,vege_H,minus) + s_slack(2007,vege_L,plus) + s_slack(2007,vege_L,minus) + s_slack(2007,vege_S,plus)
     
      + s_slack(2007,vege_S,minus) + s_slack(2008,rice_I,plus) + s_slack(2008,rice_I,minus) + s_slack(2008,sugc_I,plus) + s_slack(2008,sugc_I,minus) + s_slack(2008,whea_I,plus) + s_slack(2008,whea_I,minus) + s_slack(2008,bean_H,plus)
     
      + s_slack(2008,bean_H,minus) + s_slack(2008,bean_L,plus) + s_slack(2008,bean_L,minus) + s_slack(2008,bean_S,plus) + s_slack(2008,bean_S,minus) + s_slack(2008,cass_L,plus) + s_slack(2008,cass_L,minus) + s_slack(2008,cass_S,plus)
     
      + s_slack(2008,cass_S,minus) + s_slack(2008,chic_H,plus) + s_slack(2008,chic_H,minus) + s_slack(2008,chic_L,plus) + s_slack(2008,chic_L,minus) + s_slack(2008,chic_S,plus) + s_slack(2008,chic_S,minus) + s_slack(2008,coff_H,plus)
     
      + s_slack(2008,coff_H,minus) + s_slack(2008,coff_L,plus) + s_slack(2008,coff_L,minus) + s_slack(2008,cott_L,plus) + s_slack(2008,cott_L,minus) + s_slack(2008,cowp_H,plus) + s_slack(2008,cowp_H,minus) + s_slack(2008,cowp_L,plus)
     
      + s_slack(2008,cowp_L,minus) + s_slack(2008,cowp_S,plus) + s_slack(2008,cowp_S,minus) + s_slack(2008,grou_H,plus) + s_slack(2008,grou_H,minus) + s_slack(2008,grou_L,plus) + s_slack(2008,grou_L,minus) + s_slack(2008,grou_S,plus)
     
      + s_slack(2008,grou_S,minus) + s_slack(2008,lent_H,plus) + s_slack(2008,lent_H,minus) + s_slack(2008,lent_L,plus) + s_slack(2008,lent_L,minus) + s_slack(2008,lent_S,plus) + s_slack(2008,lent_S,minus) + s_slack(2008,maiz_H,plus)
     
      + s_slack(2008,maiz_H,minus) + s_slack(2008,maiz_L,plus) + s_slack(2008,maiz_L,minus) + s_slack(2008,maiz_S,plus) + s_slack(2008,maiz_S,minus) + s_slack(2008,mill_H,plus) + s_slack(2008,mill_H,minus) + s_slack(2008,mill_L,plus)
     
      + s_slack(2008,mill_L,minus) + s_slack(2008,mill_S,plus) + s_slack(2008,mill_S,minus) + s_slack(2008,ofib_L,plus) + s_slack(2008,ofib_L,minus) + s_slack(2008,ooil_L,plus) + s_slack(2008,ooil_L,minus) + s_slack(2008,opul_H,plus)
     
      + s_slack(2008,opul_H,minus) + s_slack(2008,opul_L,plus) + s_slack(2008,opul_L,minus) + s_slack(2008,opul_S,plus) + s_slack(2008,opul_S,minus) + s_slack(2008,pige_H,plus) + s_slack(2008,pige_H,minus) + s_slack(2008,pige_L,plus)
     
      + s_slack(2008,pige_L,minus) + s_slack(2008,pige_S,plus) + s_slack(2008,pige_S,minus) + s_slack(2008,pota_H,plus) + s_slack(2008,pota_H,minus) + s_slack(2008,pota_L,plus) + s_slack(2008,pota_L,minus) + s_slack(2008,pota_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 179
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2008,pota_S,minus) + s_slack(2008,rest_H,plus) + s_slack(2008,rest_H,minus) + s_slack(2008,rest_L,plus) + s_slack(2008,rest_L,minus) + s_slack(2008,rest_S,plus) + s_slack(2008,rest_S,minus) + s_slack(2008,rice_H,plus)
     
      + s_slack(2008,rice_H,minus) + s_slack(2008,rice_L,plus) + s_slack(2008,rice_L,minus) + s_slack(2008,rice_S,plus) + s_slack(2008,rice_S,minus) + s_slack(2008,sorg_L,plus) + s_slack(2008,sorg_L,minus) + s_slack(2008,sorg_S,plus)
     
      + s_slack(2008,sorg_S,minus) + s_slack(2008,soyb_L,plus) + s_slack(2008,soyb_L,minus) + s_slack(2008,soyb_S,plus) + s_slack(2008,soyb_S,minus) + s_slack(2008,sunf_L,plus) + s_slack(2008,sunf_L,minus) + s_slack(2008,temf_H,plus)
     
      + s_slack(2008,temf_H,minus) + s_slack(2008,temf_L,plus) + s_slack(2008,temf_L,minus) + s_slack(2008,temf_S,plus) + s_slack(2008,temf_S,minus) + s_slack(2008,toba_H,plus) + s_slack(2008,toba_H,minus) + s_slack(2008,toba_L,plus)
     
      + s_slack(2008,toba_L,minus) + s_slack(2008,trof_L,plus) + s_slack(2008,trof_L,minus) + s_slack(2008,trof_S,plus) + s_slack(2008,trof_S,minus) + s_slack(2008,vege_H,plus) + s_slack(2008,vege_H,minus) + s_slack(2008,vege_L,plus)
     
      + s_slack(2008,vege_L,minus) + s_slack(2008,vege_S,plus) + s_slack(2008,vege_S,minus) + s_slack(2009,rice_I,plus) + s_slack(2009,rice_I,minus) + s_slack(2009,sugc_I,plus) + s_slack(2009,sugc_I,minus) + s_slack(2009,whea_I,plus)
     
      + s_slack(2009,whea_I,minus) + s_slack(2009,bean_H,plus) + s_slack(2009,bean_H,minus) + s_slack(2009,bean_L,plus) + s_slack(2009,bean_L,minus) + s_slack(2009,bean_S,plus) + s_slack(2009,bean_S,minus) + s_slack(2009,cass_L,plus)
     
      + s_slack(2009,cass_L,minus) + s_slack(2009,cass_S,plus) + s_slack(2009,cass_S,minus) + s_slack(2009,chic_H,plus) + s_slack(2009,chic_H,minus) + s_slack(2009,chic_L,plus) + s_slack(2009,chic_L,minus) + s_slack(2009,chic_S,plus)
     
      + s_slack(2009,chic_S,minus) + s_slack(2009,coff_H,plus) + s_slack(2009,coff_H,minus) + s_slack(2009,coff_L,plus) + s_slack(2009,coff_L,minus) + s_slack(2009,cott_L,plus) + s_slack(2009,cott_L,minus) + s_slack(2009,cowp_H,plus)
     
      + s_slack(2009,cowp_H,minus) + s_slack(2009,cowp_L,plus) + s_slack(2009,cowp_L,minus) + s_slack(2009,cowp_S,plus) + s_slack(2009,cowp_S,minus) + s_slack(2009,grou_H,plus) + s_slack(2009,grou_H,minus) + s_slack(2009,grou_L,plus)
     
      + s_slack(2009,grou_L,minus) + s_slack(2009,grou_S,plus) + s_slack(2009,grou_S,minus) + s_slack(2009,lent_H,plus) + s_slack(2009,lent_H,minus) + s_slack(2009,lent_L,plus) + s_slack(2009,lent_L,minus) + s_slack(2009,lent_S,plus)
     
      + s_slack(2009,lent_S,minus) + s_slack(2009,maiz_H,plus) + s_slack(2009,maiz_H,minus) + s_slack(2009,maiz_L,plus) + s_slack(2009,maiz_L,minus) + s_slack(2009,maiz_S,plus) + s_slack(2009,maiz_S,minus) + s_slack(2009,mill_H,plus)
     
      + s_slack(2009,mill_H,minus) + s_slack(2009,mill_L,plus) + s_slack(2009,mill_L,minus) + s_slack(2009,mill_S,plus) + s_slack(2009,mill_S,minus) + s_slack(2009,ofib_L,plus) + s_slack(2009,ofib_L,minus) + s_slack(2009,ooil_L,plus)
     
      + s_slack(2009,ooil_L,minus) + s_slack(2009,opul_H,plus) + s_slack(2009,opul_H,minus) + s_slack(2009,opul_L,plus) + s_slack(2009,opul_L,minus) + s_slack(2009,opul_S,plus) + s_slack(2009,opul_S,minus) + s_slack(2009,pige_H,plus)
     
      + s_slack(2009,pige_H,minus) + s_slack(2009,pige_L,plus) + s_slack(2009,pige_L,minus) + s_slack(2009,pige_S,plus) + s_slack(2009,pige_S,minus) + s_slack(2009,pota_H,plus) + s_slack(2009,pota_H,minus) + s_slack(2009,pota_L,plus)
     
      + s_slack(2009,pota_L,minus) + s_slack(2009,pota_S,plus) + s_slack(2009,pota_S,minus) + s_slack(2009,rest_H,plus) + s_slack(2009,rest_H,minus) + s_slack(2009,rest_L,plus) + s_slack(2009,rest_L,minus) + s_slack(2009,rest_S,plus)
     
      + s_slack(2009,rest_S,minus) + s_slack(2009,rice_H,plus) + s_slack(2009,rice_H,minus) + s_slack(2009,rice_L,plus) + s_slack(2009,rice_L,minus) + s_slack(2009,rice_S,plus) + s_slack(2009,rice_S,minus) + s_slack(2009,sorg_L,plus)
     
      + s_slack(2009,sorg_L,minus) + s_slack(2009,sorg_S,plus) + s_slack(2009,sorg_S,minus) + s_slack(2009,soyb_L,plus) + s_slack(2009,soyb_L,minus) + s_slack(2009,soyb_S,plus) + s_slack(2009,soyb_S,minus) + s_slack(2009,sunf_L,plus)
     
      + s_slack(2009,sunf_L,minus) + s_slack(2009,temf_H,plus) + s_slack(2009,temf_H,minus) + s_slack(2009,temf_L,plus) + s_slack(2009,temf_L,minus) + s_slack(2009,temf_S,plus) + s_slack(2009,temf_S,minus) + s_slack(2009,toba_H,plus)
     
      + s_slack(2009,toba_H,minus) + s_slack(2009,toba_L,plus) + s_slack(2009,toba_L,minus) + s_slack(2009,trof_L,plus) + s_slack(2009,trof_L,minus) + s_slack(2009,trof_S,plus) + s_slack(2009,trof_S,minus) + s_slack(2009,vege_H,plus)
     
      + s_slack(2009,vege_H,minus) + s_slack(2009,vege_L,plus) + s_slack(2009,vege_L,minus) + s_slack(2009,vege_S,plus) + s_slack(2009,vege_S,minus) + s_slack(2010,rice_I,plus) + s_slack(2010,rice_I,minus) + s_slack(2010,sugc_I,plus)
     
      + s_slack(2010,sugc_I,minus) + s_slack(2010,whea_I,plus) + s_slack(2010,whea_I,minus) + s_slack(2010,bean_H,plus) + s_slack(2010,bean_H,minus) + s_slack(2010,bean_L,plus) + s_slack(2010,bean_L,minus) + s_slack(2010,bean_S,plus)
     
      + s_slack(2010,bean_S,minus) + s_slack(2010,cass_L,plus) + s_slack(2010,cass_L,minus) + s_slack(2010,cass_S,plus) + s_slack(2010,cass_S,minus) + s_slack(2010,chic_H,plus) + s_slack(2010,chic_H,minus) + s_slack(2010,chic_L,plus)
     
      + s_slack(2010,chic_L,minus) + s_slack(2010,chic_S,plus) + s_slack(2010,chic_S,minus) + s_slack(2010,coff_H,plus) + s_slack(2010,coff_H,minus) + s_slack(2010,coff_L,plus) + s_slack(2010,coff_L,minus) + s_slack(2010,cott_L,plus)
     
      + s_slack(2010,cott_L,minus) + s_slack(2010,cowp_H,plus) + s_slack(2010,cowp_H,minus) + s_slack(2010,cowp_L,plus) + s_slack(2010,cowp_L,minus) + s_slack(2010,cowp_S,plus) + s_slack(2010,cowp_S,minus) + s_slack(2010,grou_H,plus)
     
      + s_slack(2010,grou_H,minus) + s_slack(2010,grou_L,plus) + s_slack(2010,grou_L,minus) + s_slack(2010,grou_S,plus) + s_slack(2010,grou_S,minus) + s_slack(2010,lent_H,plus) + s_slack(2010,lent_H,minus) + s_slack(2010,lent_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 180
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2010,lent_L,minus) + s_slack(2010,lent_S,plus) + s_slack(2010,lent_S,minus) + s_slack(2010,maiz_H,plus) + s_slack(2010,maiz_H,minus) + s_slack(2010,maiz_L,plus) + s_slack(2010,maiz_L,minus) + s_slack(2010,maiz_S,plus)
     
      + s_slack(2010,maiz_S,minus) + s_slack(2010,mill_H,plus) + s_slack(2010,mill_H,minus) + s_slack(2010,mill_L,plus) + s_slack(2010,mill_L,minus) + s_slack(2010,mill_S,plus) + s_slack(2010,mill_S,minus) + s_slack(2010,ofib_L,plus)
     
      + s_slack(2010,ofib_L,minus) + s_slack(2010,ooil_L,plus) + s_slack(2010,ooil_L,minus) + s_slack(2010,opul_H,plus) + s_slack(2010,opul_H,minus) + s_slack(2010,opul_L,plus) + s_slack(2010,opul_L,minus) + s_slack(2010,opul_S,plus)
     
      + s_slack(2010,opul_S,minus) + s_slack(2010,pige_H,plus) + s_slack(2010,pige_H,minus) + s_slack(2010,pige_L,plus) + s_slack(2010,pige_L,minus) + s_slack(2010,pige_S,plus) + s_slack(2010,pige_S,minus) + s_slack(2010,pota_H,plus)
     
      + s_slack(2010,pota_H,minus) + s_slack(2010,pota_L,plus) + s_slack(2010,pota_L,minus) + s_slack(2010,pota_S,plus) + s_slack(2010,pota_S,minus) + s_slack(2010,rest_H,plus) + s_slack(2010,rest_H,minus) + s_slack(2010,rest_L,plus)
     
      + s_slack(2010,rest_L,minus) + s_slack(2010,rest_S,plus) + s_slack(2010,rest_S,minus) + s_slack(2010,rice_H,plus) + s_slack(2010,rice_H,minus) + s_slack(2010,rice_L,plus) + s_slack(2010,rice_L,minus) + s_slack(2010,rice_S,plus)
     
      + s_slack(2010,rice_S,minus) + s_slack(2010,sorg_L,plus) + s_slack(2010,sorg_L,minus) + s_slack(2010,sorg_S,plus) + s_slack(2010,sorg_S,minus) + s_slack(2010,soyb_L,plus) + s_slack(2010,soyb_L,minus) + s_slack(2010,soyb_S,plus)
     
      + s_slack(2010,soyb_S,minus) + s_slack(2010,sunf_L,plus) + s_slack(2010,sunf_L,minus) + s_slack(2010,temf_H,plus) + s_slack(2010,temf_H,minus) + s_slack(2010,temf_L,plus) + s_slack(2010,temf_L,minus) + s_slack(2010,temf_S,plus)
     
      + s_slack(2010,temf_S,minus) + s_slack(2010,toba_H,plus) + s_slack(2010,toba_H,minus) + s_slack(2010,toba_L,plus) + s_slack(2010,toba_L,minus) + s_slack(2010,trof_L,plus) + s_slack(2010,trof_L,minus) + s_slack(2010,trof_S,plus)
     
      + s_slack(2010,trof_S,minus) + s_slack(2010,vege_H,plus) + s_slack(2010,vege_H,minus) + s_slack(2010,vege_L,plus) + s_slack(2010,vege_L,minus) + s_slack(2010,vege_S,plus) + s_slack(2010,vege_S,minus) + s_slack(2011,rice_I,plus)
     
      + s_slack(2011,rice_I,minus) + s_slack(2011,sugc_I,plus) + s_slack(2011,sugc_I,minus) + s_slack(2011,whea_I,plus) + s_slack(2011,whea_I,minus) + s_slack(2011,bean_H,plus) + s_slack(2011,bean_H,minus) + s_slack(2011,bean_L,plus)
     
      + s_slack(2011,bean_L,minus) + s_slack(2011,bean_S,plus) + s_slack(2011,bean_S,minus) + s_slack(2011,cass_L,plus) + s_slack(2011,cass_L,minus) + s_slack(2011,cass_S,plus) + s_slack(2011,cass_S,minus) + s_slack(2011,chic_H,plus)
     
      + s_slack(2011,chic_H,minus) + s_slack(2011,chic_L,plus) + s_slack(2011,chic_L,minus) + s_slack(2011,chic_S,plus) + s_slack(2011,chic_S,minus) + s_slack(2011,coff_H,plus) + s_slack(2011,coff_H,minus) + s_slack(2011,coff_L,plus)
     
      + s_slack(2011,coff_L,minus) + s_slack(2011,cott_L,plus) + s_slack(2011,cott_L,minus) + s_slack(2011,cowp_H,plus) + s_slack(2011,cowp_H,minus) + s_slack(2011,cowp_L,plus) + s_slack(2011,cowp_L,minus) + s_slack(2011,cowp_S,plus)
     
      + s_slack(2011,cowp_S,minus) + s_slack(2011,grou_H,plus) + s_slack(2011,grou_H,minus) + s_slack(2011,grou_L,plus) + s_slack(2011,grou_L,minus) + s_slack(2011,grou_S,plus) + s_slack(2011,grou_S,minus) + s_slack(2011,lent_H,plus)
     
      + s_slack(2011,lent_H,minus) + s_slack(2011,lent_L,plus) + s_slack(2011,lent_L,minus) + s_slack(2011,lent_S,plus) + s_slack(2011,lent_S,minus) + s_slack(2011,maiz_H,plus) + s_slack(2011,maiz_H,minus) + s_slack(2011,maiz_L,plus)
     
      + s_slack(2011,maiz_L,minus) + s_slack(2011,maiz_S,plus) + s_slack(2011,maiz_S,minus) + s_slack(2011,mill_H,plus) + s_slack(2011,mill_H,minus) + s_slack(2011,mill_L,plus) + s_slack(2011,mill_L,minus) + s_slack(2011,mill_S,plus)
     
      + s_slack(2011,mill_S,minus) + s_slack(2011,ofib_L,plus) + s_slack(2011,ofib_L,minus) + s_slack(2011,ooil_L,plus) + s_slack(2011,ooil_L,minus) + s_slack(2011,opul_H,plus) + s_slack(2011,opul_H,minus) + s_slack(2011,opul_L,plus)
     
      + s_slack(2011,opul_L,minus) + s_slack(2011,opul_S,plus) + s_slack(2011,opul_S,minus) + s_slack(2011,pige_H,plus) + s_slack(2011,pige_H,minus) + s_slack(2011,pige_L,plus) + s_slack(2011,pige_L,minus) + s_slack(2011,pige_S,plus)
     
      + s_slack(2011,pige_S,minus) + s_slack(2011,pota_H,plus) + s_slack(2011,pota_H,minus) + s_slack(2011,pota_L,plus) + s_slack(2011,pota_L,minus) + s_slack(2011,pota_S,plus) + s_slack(2011,pota_S,minus) + s_slack(2011,rest_H,plus)
     
      + s_slack(2011,rest_H,minus) + s_slack(2011,rest_L,plus) + s_slack(2011,rest_L,minus) + s_slack(2011,rest_S,plus) + s_slack(2011,rest_S,minus) + s_slack(2011,rice_H,plus) + s_slack(2011,rice_H,minus) + s_slack(2011,rice_L,plus)
     
      + s_slack(2011,rice_L,minus) + s_slack(2011,rice_S,plus) + s_slack(2011,rice_S,minus) + s_slack(2011,sorg_L,plus) + s_slack(2011,sorg_L,minus) + s_slack(2011,sorg_S,plus) + s_slack(2011,sorg_S,minus) + s_slack(2011,soyb_L,plus)
     
      + s_slack(2011,soyb_L,minus) + s_slack(2011,soyb_S,plus) + s_slack(2011,soyb_S,minus) + s_slack(2011,sunf_L,plus) + s_slack(2011,sunf_L,minus) + s_slack(2011,temf_H,plus) + s_slack(2011,temf_H,minus) + s_slack(2011,temf_L,plus)
     
      + s_slack(2011,temf_L,minus) + s_slack(2011,temf_S,plus) + s_slack(2011,temf_S,minus) + s_slack(2011,toba_H,plus) + s_slack(2011,toba_H,minus) + s_slack(2011,toba_L,plus) + s_slack(2011,toba_L,minus) + s_slack(2011,trof_L,plus)
     
      + s_slack(2011,trof_L,minus) + s_slack(2011,trof_S,plus) + s_slack(2011,trof_S,minus) + s_slack(2011,vege_H,plus) + s_slack(2011,vege_H,minus) + s_slack(2011,vege_L,plus) + s_slack(2011,vege_L,minus) + s_slack(2011,vege_S,plus)
     
      + s_slack(2011,vege_S,minus) + s_slack(2032,rice_I,plus) + s_slack(2032,rice_I,minus) + s_slack(2032,sugc_I,plus) + s_slack(2032,sugc_I,minus) + s_slack(2032,whea_I,plus) + s_slack(2032,whea_I,minus) + s_slack(2032,bean_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 181
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2032,bean_H,minus) + s_slack(2032,bean_L,plus) + s_slack(2032,bean_L,minus) + s_slack(2032,bean_S,plus) + s_slack(2032,bean_S,minus) + s_slack(2032,cass_L,plus) + s_slack(2032,cass_L,minus) + s_slack(2032,cass_S,plus)
     
      + s_slack(2032,cass_S,minus) + s_slack(2032,chic_H,plus) + s_slack(2032,chic_H,minus) + s_slack(2032,chic_L,plus) + s_slack(2032,chic_L,minus) + s_slack(2032,chic_S,plus) + s_slack(2032,chic_S,minus) + s_slack(2032,coff_H,plus)
     
      + s_slack(2032,coff_H,minus) + s_slack(2032,coff_L,plus) + s_slack(2032,coff_L,minus) + s_slack(2032,cott_L,plus) + s_slack(2032,cott_L,minus) + s_slack(2032,cowp_H,plus) + s_slack(2032,cowp_H,minus) + s_slack(2032,cowp_L,plus)
     
      + s_slack(2032,cowp_L,minus) + s_slack(2032,cowp_S,plus) + s_slack(2032,cowp_S,minus) + s_slack(2032,grou_H,plus) + s_slack(2032,grou_H,minus) + s_slack(2032,grou_L,plus) + s_slack(2032,grou_L,minus) + s_slack(2032,grou_S,plus)
     
      + s_slack(2032,grou_S,minus) + s_slack(2032,lent_H,plus) + s_slack(2032,lent_H,minus) + s_slack(2032,lent_L,plus) + s_slack(2032,lent_L,minus) + s_slack(2032,lent_S,plus) + s_slack(2032,lent_S,minus) + s_slack(2032,maiz_H,plus)
     
      + s_slack(2032,maiz_H,minus) + s_slack(2032,maiz_L,plus) + s_slack(2032,maiz_L,minus) + s_slack(2032,maiz_S,plus) + s_slack(2032,maiz_S,minus) + s_slack(2032,mill_H,plus) + s_slack(2032,mill_H,minus) + s_slack(2032,mill_L,plus)
     
      + s_slack(2032,mill_L,minus) + s_slack(2032,mill_S,plus) + s_slack(2032,mill_S,minus) + s_slack(2032,ofib_L,plus) + s_slack(2032,ofib_L,minus) + s_slack(2032,ooil_L,plus) + s_slack(2032,ooil_L,minus) + s_slack(2032,opul_H,plus)
     
      + s_slack(2032,opul_H,minus) + s_slack(2032,opul_L,plus) + s_slack(2032,opul_L,minus) + s_slack(2032,opul_S,plus) + s_slack(2032,opul_S,minus) + s_slack(2032,pige_H,plus) + s_slack(2032,pige_H,minus) + s_slack(2032,pige_L,plus)
     
      + s_slack(2032,pige_L,minus) + s_slack(2032,pige_S,plus) + s_slack(2032,pige_S,minus) + s_slack(2032,pota_H,plus) + s_slack(2032,pota_H,minus) + s_slack(2032,pota_L,plus) + s_slack(2032,pota_L,minus) + s_slack(2032,pota_S,plus)
     
      + s_slack(2032,pota_S,minus) + s_slack(2032,rest_H,plus) + s_slack(2032,rest_H,minus) + s_slack(2032,rest_L,plus) + s_slack(2032,rest_L,minus) + s_slack(2032,rest_S,plus) + s_slack(2032,rest_S,minus) + s_slack(2032,rice_H,plus)
     
      + s_slack(2032,rice_H,minus) + s_slack(2032,rice_L,plus) + s_slack(2032,rice_L,minus) + s_slack(2032,rice_S,plus) + s_slack(2032,rice_S,minus) + s_slack(2032,sorg_L,plus) + s_slack(2032,sorg_L,minus) + s_slack(2032,sorg_S,plus)
     
      + s_slack(2032,sorg_S,minus) + s_slack(2032,soyb_L,plus) + s_slack(2032,soyb_L,minus) + s_slack(2032,soyb_S,plus) + s_slack(2032,soyb_S,minus) + s_slack(2032,sunf_L,plus) + s_slack(2032,sunf_L,minus) + s_slack(2032,temf_H,plus)
     
      + s_slack(2032,temf_H,minus) + s_slack(2032,temf_L,plus) + s_slack(2032,temf_L,minus) + s_slack(2032,temf_S,plus) + s_slack(2032,temf_S,minus) + s_slack(2032,toba_H,plus) + s_slack(2032,toba_H,minus) + s_slack(2032,toba_L,plus)
     
      + s_slack(2032,toba_L,minus) + s_slack(2032,trof_L,plus) + s_slack(2032,trof_L,minus) + s_slack(2032,trof_S,plus) + s_slack(2032,trof_S,minus) + s_slack(2032,vege_H,plus) + s_slack(2032,vege_H,minus) + s_slack(2032,vege_L,plus)
     
      + s_slack(2032,vege_L,minus) + s_slack(2032,vege_S,plus) + s_slack(2032,vege_S,minus) + s_slack(2033,rice_I,plus) + s_slack(2033,rice_I,minus) + s_slack(2033,sugc_I,plus) + s_slack(2033,sugc_I,minus) + s_slack(2033,whea_I,plus)
     
      + s_slack(2033,whea_I,minus) + s_slack(2033,bean_H,plus) + s_slack(2033,bean_H,minus) + s_slack(2033,bean_L,plus) + s_slack(2033,bean_L,minus) + s_slack(2033,bean_S,plus) + s_slack(2033,bean_S,minus) + s_slack(2033,cass_L,plus)
     
      + s_slack(2033,cass_L,minus) + s_slack(2033,cass_S,plus) + s_slack(2033,cass_S,minus) + s_slack(2033,chic_H,plus) + s_slack(2033,chic_H,minus) + s_slack(2033,chic_L,plus) + s_slack(2033,chic_L,minus) + s_slack(2033,chic_S,plus)
     
      + s_slack(2033,chic_S,minus) + s_slack(2033,coff_H,plus) + s_slack(2033,coff_H,minus) + s_slack(2033,coff_L,plus) + s_slack(2033,coff_L,minus) + s_slack(2033,cott_L,plus) + s_slack(2033,cott_L,minus) + s_slack(2033,cowp_H,plus)
     
      + s_slack(2033,cowp_H,minus) + s_slack(2033,cowp_L,plus) + s_slack(2033,cowp_L,minus) + s_slack(2033,cowp_S,plus) + s_slack(2033,cowp_S,minus) + s_slack(2033,grou_H,plus) + s_slack(2033,grou_H,minus) + s_slack(2033,grou_L,plus)
     
      + s_slack(2033,grou_L,minus) + s_slack(2033,grou_S,plus) + s_slack(2033,grou_S,minus) + s_slack(2033,lent_H,plus) + s_slack(2033,lent_H,minus) + s_slack(2033,lent_L,plus) + s_slack(2033,lent_L,minus) + s_slack(2033,lent_S,plus)
     
      + s_slack(2033,lent_S,minus) + s_slack(2033,maiz_H,plus) + s_slack(2033,maiz_H,minus) + s_slack(2033,maiz_L,plus) + s_slack(2033,maiz_L,minus) + s_slack(2033,maiz_S,plus) + s_slack(2033,maiz_S,minus) + s_slack(2033,mill_H,plus)
     
      + s_slack(2033,mill_H,minus) + s_slack(2033,mill_L,plus) + s_slack(2033,mill_L,minus) + s_slack(2033,mill_S,plus) + s_slack(2033,mill_S,minus) + s_slack(2033,ofib_L,plus) + s_slack(2033,ofib_L,minus) + s_slack(2033,ooil_L,plus)
     
      + s_slack(2033,ooil_L,minus) + s_slack(2033,opul_H,plus) + s_slack(2033,opul_H,minus) + s_slack(2033,opul_L,plus) + s_slack(2033,opul_L,minus) + s_slack(2033,opul_S,plus) + s_slack(2033,opul_S,minus) + s_slack(2033,pige_H,plus)
     
      + s_slack(2033,pige_H,minus) + s_slack(2033,pige_L,plus) + s_slack(2033,pige_L,minus) + s_slack(2033,pige_S,plus) + s_slack(2033,pige_S,minus) + s_slack(2033,pota_H,plus) + s_slack(2033,pota_H,minus) + s_slack(2033,pota_L,plus)
     
      + s_slack(2033,pota_L,minus) + s_slack(2033,pota_S,plus) + s_slack(2033,pota_S,minus) + s_slack(2033,rest_H,plus) + s_slack(2033,rest_H,minus) + s_slack(2033,rest_L,plus) + s_slack(2033,rest_L,minus) + s_slack(2033,rest_S,plus)
     
      + s_slack(2033,rest_S,minus) + s_slack(2033,rice_H,plus) + s_slack(2033,rice_H,minus) + s_slack(2033,rice_L,plus) + s_slack(2033,rice_L,minus) + s_slack(2033,rice_S,plus) + s_slack(2033,rice_S,minus) + s_slack(2033,sorg_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 182
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2033,sorg_L,minus) + s_slack(2033,sorg_S,plus) + s_slack(2033,sorg_S,minus) + s_slack(2033,soyb_L,plus) + s_slack(2033,soyb_L,minus) + s_slack(2033,soyb_S,plus) + s_slack(2033,soyb_S,minus) + s_slack(2033,sunf_L,plus)
     
      + s_slack(2033,sunf_L,minus) + s_slack(2033,temf_H,plus) + s_slack(2033,temf_H,minus) + s_slack(2033,temf_L,plus) + s_slack(2033,temf_L,minus) + s_slack(2033,temf_S,plus) + s_slack(2033,temf_S,minus) + s_slack(2033,toba_H,plus)
     
      + s_slack(2033,toba_H,minus) + s_slack(2033,toba_L,plus) + s_slack(2033,toba_L,minus) + s_slack(2033,trof_L,plus) + s_slack(2033,trof_L,minus) + s_slack(2033,trof_S,plus) + s_slack(2033,trof_S,minus) + s_slack(2033,vege_H,plus)
     
      + s_slack(2033,vege_H,minus) + s_slack(2033,vege_L,plus) + s_slack(2033,vege_L,minus) + s_slack(2033,vege_S,plus) + s_slack(2033,vege_S,minus) + s_slack(2034,rice_I,plus) + s_slack(2034,rice_I,minus) + s_slack(2034,sugc_I,plus)
     
      + s_slack(2034,sugc_I,minus) + s_slack(2034,whea_I,plus) + s_slack(2034,whea_I,minus) + s_slack(2034,bean_H,plus) + s_slack(2034,bean_H,minus) + s_slack(2034,bean_L,plus) + s_slack(2034,bean_L,minus) + s_slack(2034,bean_S,plus)
     
      + s_slack(2034,bean_S,minus) + s_slack(2034,cass_L,plus) + s_slack(2034,cass_L,minus) + s_slack(2034,cass_S,plus) + s_slack(2034,cass_S,minus) + s_slack(2034,chic_H,plus) + s_slack(2034,chic_H,minus) + s_slack(2034,chic_L,plus)
     
      + s_slack(2034,chic_L,minus) + s_slack(2034,chic_S,plus) + s_slack(2034,chic_S,minus) + s_slack(2034,coff_H,plus) + s_slack(2034,coff_H,minus) + s_slack(2034,coff_L,plus) + s_slack(2034,coff_L,minus) + s_slack(2034,cott_L,plus)
     
      + s_slack(2034,cott_L,minus) + s_slack(2034,cowp_H,plus) + s_slack(2034,cowp_H,minus) + s_slack(2034,cowp_L,plus) + s_slack(2034,cowp_L,minus) + s_slack(2034,cowp_S,plus) + s_slack(2034,cowp_S,minus) + s_slack(2034,grou_H,plus)
     
      + s_slack(2034,grou_H,minus) + s_slack(2034,grou_L,plus) + s_slack(2034,grou_L,minus) + s_slack(2034,grou_S,plus) + s_slack(2034,grou_S,minus) + s_slack(2034,lent_H,plus) + s_slack(2034,lent_H,minus) + s_slack(2034,lent_L,plus)
     
      + s_slack(2034,lent_L,minus) + s_slack(2034,lent_S,plus) + s_slack(2034,lent_S,minus) + s_slack(2034,maiz_H,plus) + s_slack(2034,maiz_H,minus) + s_slack(2034,maiz_L,plus) + s_slack(2034,maiz_L,minus) + s_slack(2034,maiz_S,plus)
     
      + s_slack(2034,maiz_S,minus) + s_slack(2034,mill_H,plus) + s_slack(2034,mill_H,minus) + s_slack(2034,mill_L,plus) + s_slack(2034,mill_L,minus) + s_slack(2034,mill_S,plus) + s_slack(2034,mill_S,minus) + s_slack(2034,ofib_L,plus)
     
      + s_slack(2034,ofib_L,minus) + s_slack(2034,ooil_L,plus) + s_slack(2034,ooil_L,minus) + s_slack(2034,opul_H,plus) + s_slack(2034,opul_H,minus) + s_slack(2034,opul_L,plus) + s_slack(2034,opul_L,minus) + s_slack(2034,opul_S,plus)
     
      + s_slack(2034,opul_S,minus) + s_slack(2034,pige_H,plus) + s_slack(2034,pige_H,minus) + s_slack(2034,pige_L,plus) + s_slack(2034,pige_L,minus) + s_slack(2034,pige_S,plus) + s_slack(2034,pige_S,minus) + s_slack(2034,pota_H,plus)
     
      + s_slack(2034,pota_H,minus) + s_slack(2034,pota_L,plus) + s_slack(2034,pota_L,minus) + s_slack(2034,pota_S,plus) + s_slack(2034,pota_S,minus) + s_slack(2034,rest_H,plus) + s_slack(2034,rest_H,minus) + s_slack(2034,rest_L,plus)
     
      + s_slack(2034,rest_L,minus) + s_slack(2034,rest_S,plus) + s_slack(2034,rest_S,minus) + s_slack(2034,rice_H,plus) + s_slack(2034,rice_H,minus) + s_slack(2034,rice_L,plus) + s_slack(2034,rice_L,minus) + s_slack(2034,rice_S,plus)
     
      + s_slack(2034,rice_S,minus) + s_slack(2034,sorg_L,plus) + s_slack(2034,sorg_L,minus) + s_slack(2034,sorg_S,plus) + s_slack(2034,sorg_S,minus) + s_slack(2034,soyb_L,plus) + s_slack(2034,soyb_L,minus) + s_slack(2034,soyb_S,plus)
     
      + s_slack(2034,soyb_S,minus) + s_slack(2034,sunf_L,plus) + s_slack(2034,sunf_L,minus) + s_slack(2034,temf_H,plus) + s_slack(2034,temf_H,minus) + s_slack(2034,temf_L,plus) + s_slack(2034,temf_L,minus) + s_slack(2034,temf_S,plus)
     
      + s_slack(2034,temf_S,minus) + s_slack(2034,toba_H,plus) + s_slack(2034,toba_H,minus) + s_slack(2034,toba_L,plus) + s_slack(2034,toba_L,minus) + s_slack(2034,trof_L,plus) + s_slack(2034,trof_L,minus) + s_slack(2034,trof_S,plus)
     
      + s_slack(2034,trof_S,minus) + s_slack(2034,vege_H,plus) + s_slack(2034,vege_H,minus) + s_slack(2034,vege_L,plus) + s_slack(2034,vege_L,minus) + s_slack(2034,vege_S,plus) + s_slack(2034,vege_S,minus) + s_slack(2035,rice_I,plus)
     
      + s_slack(2035,rice_I,minus) + s_slack(2035,sugc_I,plus) + s_slack(2035,sugc_I,minus) + s_slack(2035,whea_I,plus) + s_slack(2035,whea_I,minus) + s_slack(2035,bean_H,plus) + s_slack(2035,bean_H,minus) + s_slack(2035,bean_L,plus)
     
      + s_slack(2035,bean_L,minus) + s_slack(2035,bean_S,plus) + s_slack(2035,bean_S,minus) + s_slack(2035,cass_L,plus) + s_slack(2035,cass_L,minus) + s_slack(2035,cass_S,plus) + s_slack(2035,cass_S,minus) + s_slack(2035,chic_H,plus)
     
      + s_slack(2035,chic_H,minus) + s_slack(2035,chic_L,plus) + s_slack(2035,chic_L,minus) + s_slack(2035,chic_S,plus) + s_slack(2035,chic_S,minus) + s_slack(2035,coff_H,plus) + s_slack(2035,coff_H,minus) + s_slack(2035,coff_L,plus)
     
      + s_slack(2035,coff_L,minus) + s_slack(2035,cott_L,plus) + s_slack(2035,cott_L,minus) + s_slack(2035,cowp_H,plus) + s_slack(2035,cowp_H,minus) + s_slack(2035,cowp_L,plus) + s_slack(2035,cowp_L,minus) + s_slack(2035,cowp_S,plus)
     
      + s_slack(2035,cowp_S,minus) + s_slack(2035,grou_H,plus) + s_slack(2035,grou_H,minus) + s_slack(2035,grou_L,plus) + s_slack(2035,grou_L,minus) + s_slack(2035,grou_S,plus) + s_slack(2035,grou_S,minus) + s_slack(2035,lent_H,plus)
     
      + s_slack(2035,lent_H,minus) + s_slack(2035,lent_L,plus) + s_slack(2035,lent_L,minus) + s_slack(2035,lent_S,plus) + s_slack(2035,lent_S,minus) + s_slack(2035,maiz_H,plus) + s_slack(2035,maiz_H,minus) + s_slack(2035,maiz_L,plus)
     
      + s_slack(2035,maiz_L,minus) + s_slack(2035,maiz_S,plus) + s_slack(2035,maiz_S,minus) + s_slack(2035,mill_H,plus) + s_slack(2035,mill_H,minus) + s_slack(2035,mill_L,plus) + s_slack(2035,mill_L,minus) + s_slack(2035,mill_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 183
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2035,mill_S,minus) + s_slack(2035,ofib_L,plus) + s_slack(2035,ofib_L,minus) + s_slack(2035,ooil_L,plus) + s_slack(2035,ooil_L,minus) + s_slack(2035,opul_H,plus) + s_slack(2035,opul_H,minus) + s_slack(2035,opul_L,plus)
     
      + s_slack(2035,opul_L,minus) + s_slack(2035,opul_S,plus) + s_slack(2035,opul_S,minus) + s_slack(2035,pige_H,plus) + s_slack(2035,pige_H,minus) + s_slack(2035,pige_L,plus) + s_slack(2035,pige_L,minus) + s_slack(2035,pige_S,plus)
     
      + s_slack(2035,pige_S,minus) + s_slack(2035,pota_H,plus) + s_slack(2035,pota_H,minus) + s_slack(2035,pota_L,plus) + s_slack(2035,pota_L,minus) + s_slack(2035,pota_S,plus) + s_slack(2035,pota_S,minus) + s_slack(2035,rest_H,plus)
     
      + s_slack(2035,rest_H,minus) + s_slack(2035,rest_L,plus) + s_slack(2035,rest_L,minus) + s_slack(2035,rest_S,plus) + s_slack(2035,rest_S,minus) + s_slack(2035,rice_H,plus) + s_slack(2035,rice_H,minus) + s_slack(2035,rice_L,plus)
     
      + s_slack(2035,rice_L,minus) + s_slack(2035,rice_S,plus) + s_slack(2035,rice_S,minus) + s_slack(2035,sorg_L,plus) + s_slack(2035,sorg_L,minus) + s_slack(2035,sorg_S,plus) + s_slack(2035,sorg_S,minus) + s_slack(2035,soyb_L,plus)
     
      + s_slack(2035,soyb_L,minus) + s_slack(2035,soyb_S,plus) + s_slack(2035,soyb_S,minus) + s_slack(2035,sunf_L,plus) + s_slack(2035,sunf_L,minus) + s_slack(2035,temf_H,plus) + s_slack(2035,temf_H,minus) + s_slack(2035,temf_L,plus)
     
      + s_slack(2035,temf_L,minus) + s_slack(2035,temf_S,plus) + s_slack(2035,temf_S,minus) + s_slack(2035,toba_H,plus) + s_slack(2035,toba_H,minus) + s_slack(2035,toba_L,plus) + s_slack(2035,toba_L,minus) + s_slack(2035,trof_L,plus)
     
      + s_slack(2035,trof_L,minus) + s_slack(2035,trof_S,plus) + s_slack(2035,trof_S,minus) + s_slack(2035,vege_H,plus) + s_slack(2035,vege_H,minus) + s_slack(2035,vege_L,plus) + s_slack(2035,vege_L,minus) + s_slack(2035,vege_S,plus)
     
      + s_slack(2035,vege_S,minus) + s_slack(2036,rice_I,plus) + s_slack(2036,rice_I,minus) + s_slack(2036,sugc_I,plus) + s_slack(2036,sugc_I,minus) + s_slack(2036,whea_I,plus) + s_slack(2036,whea_I,minus) + s_slack(2036,bean_H,plus)
     
      + s_slack(2036,bean_H,minus) + s_slack(2036,bean_L,plus) + s_slack(2036,bean_L,minus) + s_slack(2036,bean_S,plus) + s_slack(2036,bean_S,minus) + s_slack(2036,cass_L,plus) + s_slack(2036,cass_L,minus) + s_slack(2036,cass_S,plus)
     
      + s_slack(2036,cass_S,minus) + s_slack(2036,chic_H,plus) + s_slack(2036,chic_H,minus) + s_slack(2036,chic_L,plus) + s_slack(2036,chic_L,minus) + s_slack(2036,chic_S,plus) + s_slack(2036,chic_S,minus) + s_slack(2036,coff_H,plus)
     
      + s_slack(2036,coff_H,minus) + s_slack(2036,coff_L,plus) + s_slack(2036,coff_L,minus) + s_slack(2036,cott_L,plus) + s_slack(2036,cott_L,minus) + s_slack(2036,cowp_H,plus) + s_slack(2036,cowp_H,minus) + s_slack(2036,cowp_L,plus)
     
      + s_slack(2036,cowp_L,minus) + s_slack(2036,cowp_S,plus) + s_slack(2036,cowp_S,minus) + s_slack(2036,grou_H,plus) + s_slack(2036,grou_H,minus) + s_slack(2036,grou_L,plus) + s_slack(2036,grou_L,minus) + s_slack(2036,grou_S,plus)
     
      + s_slack(2036,grou_S,minus) + s_slack(2036,lent_H,plus) + s_slack(2036,lent_H,minus) + s_slack(2036,lent_L,plus) + s_slack(2036,lent_L,minus) + s_slack(2036,lent_S,plus) + s_slack(2036,lent_S,minus) + s_slack(2036,maiz_H,plus)
     
      + s_slack(2036,maiz_H,minus) + s_slack(2036,maiz_L,plus) + s_slack(2036,maiz_L,minus) + s_slack(2036,maiz_S,plus) + s_slack(2036,maiz_S,minus) + s_slack(2036,mill_H,plus) + s_slack(2036,mill_H,minus) + s_slack(2036,mill_L,plus)
     
      + s_slack(2036,mill_L,minus) + s_slack(2036,mill_S,plus) + s_slack(2036,mill_S,minus) + s_slack(2036,ofib_L,plus) + s_slack(2036,ofib_L,minus) + s_slack(2036,ooil_L,plus) + s_slack(2036,ooil_L,minus) + s_slack(2036,opul_H,plus)
     
      + s_slack(2036,opul_H,minus) + s_slack(2036,opul_L,plus) + s_slack(2036,opul_L,minus) + s_slack(2036,opul_S,plus) + s_slack(2036,opul_S,minus) + s_slack(2036,pige_H,plus) + s_slack(2036,pige_H,minus) + s_slack(2036,pige_L,plus)
     
      + s_slack(2036,pige_L,minus) + s_slack(2036,pige_S,plus) + s_slack(2036,pige_S,minus) + s_slack(2036,pota_H,plus) + s_slack(2036,pota_H,minus) + s_slack(2036,pota_L,plus) + s_slack(2036,pota_L,minus) + s_slack(2036,pota_S,plus)
     
      + s_slack(2036,pota_S,minus) + s_slack(2036,rest_H,plus) + s_slack(2036,rest_H,minus) + s_slack(2036,rest_L,plus) + s_slack(2036,rest_L,minus) + s_slack(2036,rest_S,plus) + s_slack(2036,rest_S,minus) + s_slack(2036,rice_H,plus)
     
      + s_slack(2036,rice_H,minus) + s_slack(2036,rice_L,plus) + s_slack(2036,rice_L,minus) + s_slack(2036,rice_S,plus) + s_slack(2036,rice_S,minus) + s_slack(2036,sorg_L,plus) + s_slack(2036,sorg_L,minus) + s_slack(2036,sorg_S,plus)
     
      + s_slack(2036,sorg_S,minus) + s_slack(2036,soyb_L,plus) + s_slack(2036,soyb_L,minus) + s_slack(2036,soyb_S,plus) + s_slack(2036,soyb_S,minus) + s_slack(2036,sunf_L,plus) + s_slack(2036,sunf_L,minus) + s_slack(2036,temf_H,plus)
     
      + s_slack(2036,temf_H,minus) + s_slack(2036,temf_L,plus) + s_slack(2036,temf_L,minus) + s_slack(2036,temf_S,plus) + s_slack(2036,temf_S,minus) + s_slack(2036,toba_H,plus) + s_slack(2036,toba_H,minus) + s_slack(2036,toba_L,plus)
     
      + s_slack(2036,toba_L,minus) + s_slack(2036,trof_L,plus) + s_slack(2036,trof_L,minus) + s_slack(2036,trof_S,plus) + s_slack(2036,trof_S,minus) + s_slack(2036,vege_H,plus) + s_slack(2036,vege_H,minus) + s_slack(2036,vege_L,plus)
     
      + s_slack(2036,vege_L,minus) + s_slack(2036,vege_S,plus) + s_slack(2036,vege_S,minus) + s_slack(2037,rice_I,plus) + s_slack(2037,rice_I,minus) + s_slack(2037,sugc_I,plus) + s_slack(2037,sugc_I,minus) + s_slack(2037,whea_I,plus)
     
      + s_slack(2037,whea_I,minus) + s_slack(2037,bean_H,plus) + s_slack(2037,bean_H,minus) + s_slack(2037,bean_L,plus) + s_slack(2037,bean_L,minus) + s_slack(2037,bean_S,plus) + s_slack(2037,bean_S,minus) + s_slack(2037,cass_L,plus)
     
      + s_slack(2037,cass_L,minus) + s_slack(2037,cass_S,plus) + s_slack(2037,cass_S,minus) + s_slack(2037,chic_H,plus) + s_slack(2037,chic_H,minus) + s_slack(2037,chic_L,plus) + s_slack(2037,chic_L,minus) + s_slack(2037,chic_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 184
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2037,chic_S,minus) + s_slack(2037,coff_H,plus) + s_slack(2037,coff_H,minus) + s_slack(2037,coff_L,plus) + s_slack(2037,coff_L,minus) + s_slack(2037,cott_L,plus) + s_slack(2037,cott_L,minus) + s_slack(2037,cowp_H,plus)
     
      + s_slack(2037,cowp_H,minus) + s_slack(2037,cowp_L,plus) + s_slack(2037,cowp_L,minus) + s_slack(2037,cowp_S,plus) + s_slack(2037,cowp_S,minus) + s_slack(2037,grou_H,plus) + s_slack(2037,grou_H,minus) + s_slack(2037,grou_L,plus)
     
      + s_slack(2037,grou_L,minus) + s_slack(2037,grou_S,plus) + s_slack(2037,grou_S,minus) + s_slack(2037,lent_H,plus) + s_slack(2037,lent_H,minus) + s_slack(2037,lent_L,plus) + s_slack(2037,lent_L,minus) + s_slack(2037,lent_S,plus)
     
      + s_slack(2037,lent_S,minus) + s_slack(2037,maiz_H,plus) + s_slack(2037,maiz_H,minus) + s_slack(2037,maiz_L,plus) + s_slack(2037,maiz_L,minus) + s_slack(2037,maiz_S,plus) + s_slack(2037,maiz_S,minus) + s_slack(2037,mill_H,plus)
     
      + s_slack(2037,mill_H,minus) + s_slack(2037,mill_L,plus) + s_slack(2037,mill_L,minus) + s_slack(2037,mill_S,plus) + s_slack(2037,mill_S,minus) + s_slack(2037,ofib_L,plus) + s_slack(2037,ofib_L,minus) + s_slack(2037,ooil_L,plus)
     
      + s_slack(2037,ooil_L,minus) + s_slack(2037,opul_H,plus) + s_slack(2037,opul_H,minus) + s_slack(2037,opul_L,plus) + s_slack(2037,opul_L,minus) + s_slack(2037,opul_S,plus) + s_slack(2037,opul_S,minus) + s_slack(2037,pige_H,plus)
     
      + s_slack(2037,pige_H,minus) + s_slack(2037,pige_L,plus) + s_slack(2037,pige_L,minus) + s_slack(2037,pige_S,plus) + s_slack(2037,pige_S,minus) + s_slack(2037,pota_H,plus) + s_slack(2037,pota_H,minus) + s_slack(2037,pota_L,plus)
     
      + s_slack(2037,pota_L,minus) + s_slack(2037,pota_S,plus) + s_slack(2037,pota_S,minus) + s_slack(2037,rest_H,plus) + s_slack(2037,rest_H,minus) + s_slack(2037,rest_L,plus) + s_slack(2037,rest_L,minus) + s_slack(2037,rest_S,plus)
     
      + s_slack(2037,rest_S,minus) + s_slack(2037,rice_H,plus) + s_slack(2037,rice_H,minus) + s_slack(2037,rice_L,plus) + s_slack(2037,rice_L,minus) + s_slack(2037,rice_S,plus) + s_slack(2037,rice_S,minus) + s_slack(2037,sorg_L,plus)
     
      + s_slack(2037,sorg_L,minus) + s_slack(2037,sorg_S,plus) + s_slack(2037,sorg_S,minus) + s_slack(2037,soyb_L,plus) + s_slack(2037,soyb_L,minus) + s_slack(2037,soyb_S,plus) + s_slack(2037,soyb_S,minus) + s_slack(2037,sunf_L,plus)
     
      + s_slack(2037,sunf_L,minus) + s_slack(2037,temf_H,plus) + s_slack(2037,temf_H,minus) + s_slack(2037,temf_L,plus) + s_slack(2037,temf_L,minus) + s_slack(2037,temf_S,plus) + s_slack(2037,temf_S,minus) + s_slack(2037,toba_H,plus)
     
      + s_slack(2037,toba_H,minus) + s_slack(2037,toba_L,plus) + s_slack(2037,toba_L,minus) + s_slack(2037,trof_L,plus) + s_slack(2037,trof_L,minus) + s_slack(2037,trof_S,plus) + s_slack(2037,trof_S,minus) + s_slack(2037,vege_H,plus)
     
      + s_slack(2037,vege_H,minus) + s_slack(2037,vege_L,plus) + s_slack(2037,vege_L,minus) + s_slack(2037,vege_S,plus) + s_slack(2037,vege_S,minus) + s_slack(2038,rice_I,plus) + s_slack(2038,rice_I,minus) + s_slack(2038,sugc_I,plus)
     
      + s_slack(2038,sugc_I,minus) + s_slack(2038,whea_I,plus) + s_slack(2038,whea_I,minus) + s_slack(2038,bean_H,plus) + s_slack(2038,bean_H,minus) + s_slack(2038,bean_L,plus) + s_slack(2038,bean_L,minus) + s_slack(2038,bean_S,plus)
     
      + s_slack(2038,bean_S,minus) + s_slack(2038,cass_L,plus) + s_slack(2038,cass_L,minus) + s_slack(2038,cass_S,plus) + s_slack(2038,cass_S,minus) + s_slack(2038,chic_H,plus) + s_slack(2038,chic_H,minus) + s_slack(2038,chic_L,plus)
     
      + s_slack(2038,chic_L,minus) + s_slack(2038,chic_S,plus) + s_slack(2038,chic_S,minus) + s_slack(2038,coff_H,plus) + s_slack(2038,coff_H,minus) + s_slack(2038,coff_L,plus) + s_slack(2038,coff_L,minus) + s_slack(2038,cott_L,plus)
     
      + s_slack(2038,cott_L,minus) + s_slack(2038,cowp_H,plus) + s_slack(2038,cowp_H,minus) + s_slack(2038,cowp_L,plus) + s_slack(2038,cowp_L,minus) + s_slack(2038,cowp_S,plus) + s_slack(2038,cowp_S,minus) + s_slack(2038,grou_H,plus)
     
      + s_slack(2038,grou_H,minus) + s_slack(2038,grou_L,plus) + s_slack(2038,grou_L,minus) + s_slack(2038,grou_S,plus) + s_slack(2038,grou_S,minus) + s_slack(2038,lent_H,plus) + s_slack(2038,lent_H,minus) + s_slack(2038,lent_L,plus)
     
      + s_slack(2038,lent_L,minus) + s_slack(2038,lent_S,plus) + s_slack(2038,lent_S,minus) + s_slack(2038,maiz_H,plus) + s_slack(2038,maiz_H,minus) + s_slack(2038,maiz_L,plus) + s_slack(2038,maiz_L,minus) + s_slack(2038,maiz_S,plus)
     
      + s_slack(2038,maiz_S,minus) + s_slack(2038,mill_H,plus) + s_slack(2038,mill_H,minus) + s_slack(2038,mill_L,plus) + s_slack(2038,mill_L,minus) + s_slack(2038,mill_S,plus) + s_slack(2038,mill_S,minus) + s_slack(2038,ofib_L,plus)
     
      + s_slack(2038,ofib_L,minus) + s_slack(2038,ooil_L,plus) + s_slack(2038,ooil_L,minus) + s_slack(2038,opul_H,plus) + s_slack(2038,opul_H,minus) + s_slack(2038,opul_L,plus) + s_slack(2038,opul_L,minus) + s_slack(2038,opul_S,plus)
     
      + s_slack(2038,opul_S,minus) + s_slack(2038,pige_H,plus) + s_slack(2038,pige_H,minus) + s_slack(2038,pige_L,plus) + s_slack(2038,pige_L,minus) + s_slack(2038,pige_S,plus) + s_slack(2038,pige_S,minus) + s_slack(2038,pota_H,plus)
     
      + s_slack(2038,pota_H,minus) + s_slack(2038,pota_L,plus) + s_slack(2038,pota_L,minus) + s_slack(2038,pota_S,plus) + s_slack(2038,pota_S,minus) + s_slack(2038,rest_H,plus) + s_slack(2038,rest_H,minus) + s_slack(2038,rest_L,plus)
     
      + s_slack(2038,rest_L,minus) + s_slack(2038,rest_S,plus) + s_slack(2038,rest_S,minus) + s_slack(2038,rice_H,plus) + s_slack(2038,rice_H,minus) + s_slack(2038,rice_L,plus) + s_slack(2038,rice_L,minus) + s_slack(2038,rice_S,plus)
     
      + s_slack(2038,rice_S,minus) + s_slack(2038,sorg_L,plus) + s_slack(2038,sorg_L,minus) + s_slack(2038,sorg_S,plus) + s_slack(2038,sorg_S,minus) + s_slack(2038,soyb_L,plus) + s_slack(2038,soyb_L,minus) + s_slack(2038,soyb_S,plus)
     
      + s_slack(2038,soyb_S,minus) + s_slack(2038,sunf_L,plus) + s_slack(2038,sunf_L,minus) + s_slack(2038,temf_H,plus) + s_slack(2038,temf_H,minus) + s_slack(2038,temf_L,plus) + s_slack(2038,temf_L,minus) + s_slack(2038,temf_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 185
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2038,temf_S,minus) + s_slack(2038,toba_H,plus) + s_slack(2038,toba_H,minus) + s_slack(2038,toba_L,plus) + s_slack(2038,toba_L,minus) + s_slack(2038,trof_L,plus) + s_slack(2038,trof_L,minus) + s_slack(2038,trof_S,plus)
     
      + s_slack(2038,trof_S,minus) + s_slack(2038,vege_H,plus) + s_slack(2038,vege_H,minus) + s_slack(2038,vege_L,plus) + s_slack(2038,vege_L,minus) + s_slack(2038,vege_S,plus) + s_slack(2038,vege_S,minus) + s_slack(2039,rice_I,plus)
     
      + s_slack(2039,rice_I,minus) + s_slack(2039,sugc_I,plus) + s_slack(2039,sugc_I,minus) + s_slack(2039,whea_I,plus) + s_slack(2039,whea_I,minus) + s_slack(2039,bean_H,plus) + s_slack(2039,bean_H,minus) + s_slack(2039,bean_L,plus)
     
      + s_slack(2039,bean_L,minus) + s_slack(2039,bean_S,plus) + s_slack(2039,bean_S,minus) + s_slack(2039,cass_L,plus) + s_slack(2039,cass_L,minus) + s_slack(2039,cass_S,plus) + s_slack(2039,cass_S,minus) + s_slack(2039,chic_H,plus)
     
      + s_slack(2039,chic_H,minus) + s_slack(2039,chic_L,plus) + s_slack(2039,chic_L,minus) + s_slack(2039,chic_S,plus) + s_slack(2039,chic_S,minus) + s_slack(2039,coff_H,plus) + s_slack(2039,coff_H,minus) + s_slack(2039,coff_L,plus)
     
      + s_slack(2039,coff_L,minus) + s_slack(2039,cott_L,plus) + s_slack(2039,cott_L,minus) + s_slack(2039,cowp_H,plus) + s_slack(2039,cowp_H,minus) + s_slack(2039,cowp_L,plus) + s_slack(2039,cowp_L,minus) + s_slack(2039,cowp_S,plus)
     
      + s_slack(2039,cowp_S,minus) + s_slack(2039,grou_H,plus) + s_slack(2039,grou_H,minus) + s_slack(2039,grou_L,plus) + s_slack(2039,grou_L,minus) + s_slack(2039,grou_S,plus) + s_slack(2039,grou_S,minus) + s_slack(2039,lent_H,plus)
     
      + s_slack(2039,lent_H,minus) + s_slack(2039,lent_L,plus) + s_slack(2039,lent_L,minus) + s_slack(2039,lent_S,plus) + s_slack(2039,lent_S,minus) + s_slack(2039,maiz_H,plus) + s_slack(2039,maiz_H,minus) + s_slack(2039,maiz_L,plus)
     
      + s_slack(2039,maiz_L,minus) + s_slack(2039,maiz_S,plus) + s_slack(2039,maiz_S,minus) + s_slack(2039,mill_H,plus) + s_slack(2039,mill_H,minus) + s_slack(2039,mill_L,plus) + s_slack(2039,mill_L,minus) + s_slack(2039,mill_S,plus)
     
      + s_slack(2039,mill_S,minus) + s_slack(2039,ofib_L,plus) + s_slack(2039,ofib_L,minus) + s_slack(2039,ooil_L,plus) + s_slack(2039,ooil_L,minus) + s_slack(2039,opul_H,plus) + s_slack(2039,opul_H,minus) + s_slack(2039,opul_L,plus)
     
      + s_slack(2039,opul_L,minus) + s_slack(2039,opul_S,plus) + s_slack(2039,opul_S,minus) + s_slack(2039,pige_H,plus) + s_slack(2039,pige_H,minus) + s_slack(2039,pige_L,plus) + s_slack(2039,pige_L,minus) + s_slack(2039,pige_S,plus)
     
      + s_slack(2039,pige_S,minus) + s_slack(2039,pota_H,plus) + s_slack(2039,pota_H,minus) + s_slack(2039,pota_L,plus) + s_slack(2039,pota_L,minus) + s_slack(2039,pota_S,plus) + s_slack(2039,pota_S,minus) + s_slack(2039,rest_H,plus)
     
      + s_slack(2039,rest_H,minus) + s_slack(2039,rest_L,plus) + s_slack(2039,rest_L,minus) + s_slack(2039,rest_S,plus) + s_slack(2039,rest_S,minus) + s_slack(2039,rice_H,plus) + s_slack(2039,rice_H,minus) + s_slack(2039,rice_L,plus)
     
      + s_slack(2039,rice_L,minus) + s_slack(2039,rice_S,plus) + s_slack(2039,rice_S,minus) + s_slack(2039,sorg_L,plus) + s_slack(2039,sorg_L,minus) + s_slack(2039,sorg_S,plus) + s_slack(2039,sorg_S,minus) + s_slack(2039,soyb_L,plus)
     
      + s_slack(2039,soyb_L,minus) + s_slack(2039,soyb_S,plus) + s_slack(2039,soyb_S,minus) + s_slack(2039,sunf_L,plus) + s_slack(2039,sunf_L,minus) + s_slack(2039,temf_H,plus) + s_slack(2039,temf_H,minus) + s_slack(2039,temf_L,plus)
     
      + s_slack(2039,temf_L,minus) + s_slack(2039,temf_S,plus) + s_slack(2039,temf_S,minus) + s_slack(2039,toba_H,plus) + s_slack(2039,toba_H,minus) + s_slack(2039,toba_L,plus) + s_slack(2039,toba_L,minus) + s_slack(2039,trof_L,plus)
     
      + s_slack(2039,trof_L,minus) + s_slack(2039,trof_S,plus) + s_slack(2039,trof_S,minus) + s_slack(2039,vege_H,plus) + s_slack(2039,vege_H,minus) + s_slack(2039,vege_L,plus) + s_slack(2039,vege_L,minus) + s_slack(2039,vege_S,plus)
     
      + s_slack(2039,vege_S,minus) + s_slack(2040,rice_I,plus) + s_slack(2040,rice_I,minus) + s_slack(2040,sugc_I,plus) + s_slack(2040,sugc_I,minus) + s_slack(2040,whea_I,plus) + s_slack(2040,whea_I,minus) + s_slack(2040,bean_H,plus)
     
      + s_slack(2040,bean_H,minus) + s_slack(2040,bean_L,plus) + s_slack(2040,bean_L,minus) + s_slack(2040,bean_S,plus) + s_slack(2040,bean_S,minus) + s_slack(2040,cass_L,plus) + s_slack(2040,cass_L,minus) + s_slack(2040,cass_S,plus)
     
      + s_slack(2040,cass_S,minus) + s_slack(2040,chic_H,plus) + s_slack(2040,chic_H,minus) + s_slack(2040,chic_L,plus) + s_slack(2040,chic_L,minus) + s_slack(2040,chic_S,plus) + s_slack(2040,chic_S,minus) + s_slack(2040,coff_H,plus)
     
      + s_slack(2040,coff_H,minus) + s_slack(2040,coff_L,plus) + s_slack(2040,coff_L,minus) + s_slack(2040,cott_L,plus) + s_slack(2040,cott_L,minus) + s_slack(2040,cowp_H,plus) + s_slack(2040,cowp_H,minus) + s_slack(2040,cowp_L,plus)
     
      + s_slack(2040,cowp_L,minus) + s_slack(2040,cowp_S,plus) + s_slack(2040,cowp_S,minus) + s_slack(2040,grou_H,plus) + s_slack(2040,grou_H,minus) + s_slack(2040,grou_L,plus) + s_slack(2040,grou_L,minus) + s_slack(2040,grou_S,plus)
     
      + s_slack(2040,grou_S,minus) + s_slack(2040,lent_H,plus) + s_slack(2040,lent_H,minus) + s_slack(2040,lent_L,plus) + s_slack(2040,lent_L,minus) + s_slack(2040,lent_S,plus) + s_slack(2040,lent_S,minus) + s_slack(2040,maiz_H,plus)
     
      + s_slack(2040,maiz_H,minus) + s_slack(2040,maiz_L,plus) + s_slack(2040,maiz_L,minus) + s_slack(2040,maiz_S,plus) + s_slack(2040,maiz_S,minus) + s_slack(2040,mill_H,plus) + s_slack(2040,mill_H,minus) + s_slack(2040,mill_L,plus)
     
      + s_slack(2040,mill_L,minus) + s_slack(2040,mill_S,plus) + s_slack(2040,mill_S,minus) + s_slack(2040,ofib_L,plus) + s_slack(2040,ofib_L,minus) + s_slack(2040,ooil_L,plus) + s_slack(2040,ooil_L,minus) + s_slack(2040,opul_H,plus)
     
      + s_slack(2040,opul_H,minus) + s_slack(2040,opul_L,plus) + s_slack(2040,opul_L,minus) + s_slack(2040,opul_S,plus) + s_slack(2040,opul_S,minus) + s_slack(2040,pige_H,plus) + s_slack(2040,pige_H,minus) + s_slack(2040,pige_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 186
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2040,pige_L,minus) + s_slack(2040,pige_S,plus) + s_slack(2040,pige_S,minus) + s_slack(2040,pota_H,plus) + s_slack(2040,pota_H,minus) + s_slack(2040,pota_L,plus) + s_slack(2040,pota_L,minus) + s_slack(2040,pota_S,plus)
     
      + s_slack(2040,pota_S,minus) + s_slack(2040,rest_H,plus) + s_slack(2040,rest_H,minus) + s_slack(2040,rest_L,plus) + s_slack(2040,rest_L,minus) + s_slack(2040,rest_S,plus) + s_slack(2040,rest_S,minus) + s_slack(2040,rice_H,plus)
     
      + s_slack(2040,rice_H,minus) + s_slack(2040,rice_L,plus) + s_slack(2040,rice_L,minus) + s_slack(2040,rice_S,plus) + s_slack(2040,rice_S,minus) + s_slack(2040,sorg_L,plus) + s_slack(2040,sorg_L,minus) + s_slack(2040,sorg_S,plus)
     
      + s_slack(2040,sorg_S,minus) + s_slack(2040,soyb_L,plus) + s_slack(2040,soyb_L,minus) + s_slack(2040,soyb_S,plus) + s_slack(2040,soyb_S,minus) + s_slack(2040,sunf_L,plus) + s_slack(2040,sunf_L,minus) + s_slack(2040,temf_H,plus)
     
      + s_slack(2040,temf_H,minus) + s_slack(2040,temf_L,plus) + s_slack(2040,temf_L,minus) + s_slack(2040,temf_S,plus) + s_slack(2040,temf_S,minus) + s_slack(2040,toba_H,plus) + s_slack(2040,toba_H,minus) + s_slack(2040,toba_L,plus)
     
      + s_slack(2040,toba_L,minus) + s_slack(2040,trof_L,plus) + s_slack(2040,trof_L,minus) + s_slack(2040,trof_S,plus) + s_slack(2040,trof_S,minus) + s_slack(2040,vege_H,plus) + s_slack(2040,vege_H,minus) + s_slack(2040,vege_L,plus)
     
      + s_slack(2040,vege_L,minus) + s_slack(2040,vege_S,plus) + s_slack(2040,vege_S,minus) + s_slack(2041,rice_I,plus) + s_slack(2041,rice_I,minus) + s_slack(2041,sugc_I,plus) + s_slack(2041,sugc_I,minus) + s_slack(2041,whea_I,plus)
     
      + s_slack(2041,whea_I,minus) + s_slack(2041,bean_H,plus) + s_slack(2041,bean_H,minus) + s_slack(2041,bean_L,plus) + s_slack(2041,bean_L,minus) + s_slack(2041,bean_S,plus) + s_slack(2041,bean_S,minus) + s_slack(2041,cass_L,plus)
     
      + s_slack(2041,cass_L,minus) + s_slack(2041,cass_S,plus) + s_slack(2041,cass_S,minus) + s_slack(2041,chic_H,plus) + s_slack(2041,chic_H,minus) + s_slack(2041,chic_L,plus) + s_slack(2041,chic_L,minus) + s_slack(2041,chic_S,plus)
     
      + s_slack(2041,chic_S,minus) + s_slack(2041,coff_H,plus) + s_slack(2041,coff_H,minus) + s_slack(2041,coff_L,plus) + s_slack(2041,coff_L,minus) + s_slack(2041,cott_L,plus) + s_slack(2041,cott_L,minus) + s_slack(2041,cowp_H,plus)
     
      + s_slack(2041,cowp_H,minus) + s_slack(2041,cowp_L,plus) + s_slack(2041,cowp_L,minus) + s_slack(2041,cowp_S,plus) + s_slack(2041,cowp_S,minus) + s_slack(2041,grou_H,plus) + s_slack(2041,grou_H,minus) + s_slack(2041,grou_L,plus)
     
      + s_slack(2041,grou_L,minus) + s_slack(2041,grou_S,plus) + s_slack(2041,grou_S,minus) + s_slack(2041,lent_H,plus) + s_slack(2041,lent_H,minus) + s_slack(2041,lent_L,plus) + s_slack(2041,lent_L,minus) + s_slack(2041,lent_S,plus)
     
      + s_slack(2041,lent_S,minus) + s_slack(2041,maiz_H,plus) + s_slack(2041,maiz_H,minus) + s_slack(2041,maiz_L,plus) + s_slack(2041,maiz_L,minus) + s_slack(2041,maiz_S,plus) + s_slack(2041,maiz_S,minus) + s_slack(2041,mill_H,plus)
     
      + s_slack(2041,mill_H,minus) + s_slack(2041,mill_L,plus) + s_slack(2041,mill_L,minus) + s_slack(2041,mill_S,plus) + s_slack(2041,mill_S,minus) + s_slack(2041,ofib_L,plus) + s_slack(2041,ofib_L,minus) + s_slack(2041,ooil_L,plus)
     
      + s_slack(2041,ooil_L,minus) + s_slack(2041,opul_H,plus) + s_slack(2041,opul_H,minus) + s_slack(2041,opul_L,plus) + s_slack(2041,opul_L,minus) + s_slack(2041,opul_S,plus) + s_slack(2041,opul_S,minus) + s_slack(2041,pige_H,plus)
     
      + s_slack(2041,pige_H,minus) + s_slack(2041,pige_L,plus) + s_slack(2041,pige_L,minus) + s_slack(2041,pige_S,plus) + s_slack(2041,pige_S,minus) + s_slack(2041,pota_H,plus) + s_slack(2041,pota_H,minus) + s_slack(2041,pota_L,plus)
     
      + s_slack(2041,pota_L,minus) + s_slack(2041,pota_S,plus) + s_slack(2041,pota_S,minus) + s_slack(2041,rest_H,plus) + s_slack(2041,rest_H,minus) + s_slack(2041,rest_L,plus) + s_slack(2041,rest_L,minus) + s_slack(2041,rest_S,plus)
     
      + s_slack(2041,rest_S,minus) + s_slack(2041,rice_H,plus) + s_slack(2041,rice_H,minus) + s_slack(2041,rice_L,plus) + s_slack(2041,rice_L,minus) + s_slack(2041,rice_S,plus) + s_slack(2041,rice_S,minus) + s_slack(2041,sorg_L,plus)
     
      + s_slack(2041,sorg_L,minus) + s_slack(2041,sorg_S,plus) + s_slack(2041,sorg_S,minus) + s_slack(2041,soyb_L,plus) + s_slack(2041,soyb_L,minus) + s_slack(2041,soyb_S,plus) + s_slack(2041,soyb_S,minus) + s_slack(2041,sunf_L,plus)
     
      + s_slack(2041,sunf_L,minus) + s_slack(2041,temf_H,plus) + s_slack(2041,temf_H,minus) + s_slack(2041,temf_L,plus) + s_slack(2041,temf_L,minus) + s_slack(2041,temf_S,plus) + s_slack(2041,temf_S,minus) + s_slack(2041,toba_H,plus)
     
      + s_slack(2041,toba_H,minus) + s_slack(2041,toba_L,plus) + s_slack(2041,toba_L,minus) + s_slack(2041,trof_L,plus) + s_slack(2041,trof_L,minus) + s_slack(2041,trof_S,plus) + s_slack(2041,trof_S,minus) + s_slack(2041,vege_H,plus)
     
      + s_slack(2041,vege_H,minus) + s_slack(2041,vege_L,plus) + s_slack(2041,vege_L,minus) + s_slack(2041,vege_S,plus) + s_slack(2041,vege_S,minus) + s_slack(2042,rice_I,plus) + s_slack(2042,rice_I,minus) + s_slack(2042,sugc_I,plus)
     
      + s_slack(2042,sugc_I,minus) + s_slack(2042,whea_I,plus) + s_slack(2042,whea_I,minus) + s_slack(2042,bean_H,plus) + s_slack(2042,bean_H,minus) + s_slack(2042,bean_L,plus) + s_slack(2042,bean_L,minus) + s_slack(2042,bean_S,plus)
     
      + s_slack(2042,bean_S,minus) + s_slack(2042,cass_L,plus) + s_slack(2042,cass_L,minus) + s_slack(2042,cass_S,plus) + s_slack(2042,cass_S,minus) + s_slack(2042,chic_H,plus) + s_slack(2042,chic_H,minus) + s_slack(2042,chic_L,plus)
     
      + s_slack(2042,chic_L,minus) + s_slack(2042,chic_S,plus) + s_slack(2042,chic_S,minus) + s_slack(2042,coff_H,plus) + s_slack(2042,coff_H,minus) + s_slack(2042,coff_L,plus) + s_slack(2042,coff_L,minus) + s_slack(2042,cott_L,plus)
     
      + s_slack(2042,cott_L,minus) + s_slack(2042,cowp_H,plus) + s_slack(2042,cowp_H,minus) + s_slack(2042,cowp_L,plus) + s_slack(2042,cowp_L,minus) + s_slack(2042,cowp_S,plus) + s_slack(2042,cowp_S,minus) + s_slack(2042,grou_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 187
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2042,grou_H,minus) + s_slack(2042,grou_L,plus) + s_slack(2042,grou_L,minus) + s_slack(2042,grou_S,plus) + s_slack(2042,grou_S,minus) + s_slack(2042,lent_H,plus) + s_slack(2042,lent_H,minus) + s_slack(2042,lent_L,plus)
     
      + s_slack(2042,lent_L,minus) + s_slack(2042,lent_S,plus) + s_slack(2042,lent_S,minus) + s_slack(2042,maiz_H,plus) + s_slack(2042,maiz_H,minus) + s_slack(2042,maiz_L,plus) + s_slack(2042,maiz_L,minus) + s_slack(2042,maiz_S,plus)
     
      + s_slack(2042,maiz_S,minus) + s_slack(2042,mill_H,plus) + s_slack(2042,mill_H,minus) + s_slack(2042,mill_L,plus) + s_slack(2042,mill_L,minus) + s_slack(2042,mill_S,plus) + s_slack(2042,mill_S,minus) + s_slack(2042,ofib_L,plus)
     
      + s_slack(2042,ofib_L,minus) + s_slack(2042,ooil_L,plus) + s_slack(2042,ooil_L,minus) + s_slack(2042,opul_H,plus) + s_slack(2042,opul_H,minus) + s_slack(2042,opul_L,plus) + s_slack(2042,opul_L,minus) + s_slack(2042,opul_S,plus)
     
      + s_slack(2042,opul_S,minus) + s_slack(2042,pige_H,plus) + s_slack(2042,pige_H,minus) + s_slack(2042,pige_L,plus) + s_slack(2042,pige_L,minus) + s_slack(2042,pige_S,plus) + s_slack(2042,pige_S,minus) + s_slack(2042,pota_H,plus)
     
      + s_slack(2042,pota_H,minus) + s_slack(2042,pota_L,plus) + s_slack(2042,pota_L,minus) + s_slack(2042,pota_S,plus) + s_slack(2042,pota_S,minus) + s_slack(2042,rest_H,plus) + s_slack(2042,rest_H,minus) + s_slack(2042,rest_L,plus)
     
      + s_slack(2042,rest_L,minus) + s_slack(2042,rest_S,plus) + s_slack(2042,rest_S,minus) + s_slack(2042,rice_H,plus) + s_slack(2042,rice_H,minus) + s_slack(2042,rice_L,plus) + s_slack(2042,rice_L,minus) + s_slack(2042,rice_S,plus)
     
      + s_slack(2042,rice_S,minus) + s_slack(2042,sorg_L,plus) + s_slack(2042,sorg_L,minus) + s_slack(2042,sorg_S,plus) + s_slack(2042,sorg_S,minus) + s_slack(2042,soyb_L,plus) + s_slack(2042,soyb_L,minus) + s_slack(2042,soyb_S,plus)
     
      + s_slack(2042,soyb_S,minus) + s_slack(2042,sunf_L,plus) + s_slack(2042,sunf_L,minus) + s_slack(2042,temf_H,plus) + s_slack(2042,temf_H,minus) + s_slack(2042,temf_L,plus) + s_slack(2042,temf_L,minus) + s_slack(2042,temf_S,plus)
     
      + s_slack(2042,temf_S,minus) + s_slack(2042,toba_H,plus) + s_slack(2042,toba_H,minus) + s_slack(2042,toba_L,plus) + s_slack(2042,toba_L,minus) + s_slack(2042,trof_L,plus) + s_slack(2042,trof_L,minus) + s_slack(2042,trof_S,plus)
     
      + s_slack(2042,trof_S,minus) + s_slack(2042,vege_H,plus) + s_slack(2042,vege_H,minus) + s_slack(2042,vege_L,plus) + s_slack(2042,vege_L,minus) + s_slack(2042,vege_S,plus) + s_slack(2042,vege_S,minus) + s_slack(2043,rice_I,plus)
     
      + s_slack(2043,rice_I,minus) + s_slack(2043,sugc_I,plus) + s_slack(2043,sugc_I,minus) + s_slack(2043,whea_I,plus) + s_slack(2043,whea_I,minus) + s_slack(2043,bean_H,plus) + s_slack(2043,bean_H,minus) + s_slack(2043,bean_L,plus)
     
      + s_slack(2043,bean_L,minus) + s_slack(2043,bean_S,plus) + s_slack(2043,bean_S,minus) + s_slack(2043,cass_L,plus) + s_slack(2043,cass_L,minus) + s_slack(2043,cass_S,plus) + s_slack(2043,cass_S,minus) + s_slack(2043,chic_H,plus)
     
      + s_slack(2043,chic_H,minus) + s_slack(2043,chic_L,plus) + s_slack(2043,chic_L,minus) + s_slack(2043,chic_S,plus) + s_slack(2043,chic_S,minus) + s_slack(2043,coff_H,plus) + s_slack(2043,coff_H,minus) + s_slack(2043,coff_L,plus)
     
      + s_slack(2043,coff_L,minus) + s_slack(2043,cott_L,plus) + s_slack(2043,cott_L,minus) + s_slack(2043,cowp_H,plus) + s_slack(2043,cowp_H,minus) + s_slack(2043,cowp_L,plus) + s_slack(2043,cowp_L,minus) + s_slack(2043,cowp_S,plus)
     
      + s_slack(2043,cowp_S,minus) + s_slack(2043,grou_H,plus) + s_slack(2043,grou_H,minus) + s_slack(2043,grou_L,plus) + s_slack(2043,grou_L,minus) + s_slack(2043,grou_S,plus) + s_slack(2043,grou_S,minus) + s_slack(2043,lent_H,plus)
     
      + s_slack(2043,lent_H,minus) + s_slack(2043,lent_L,plus) + s_slack(2043,lent_L,minus) + s_slack(2043,lent_S,plus) + s_slack(2043,lent_S,minus) + s_slack(2043,maiz_H,plus) + s_slack(2043,maiz_H,minus) + s_slack(2043,maiz_L,plus)
     
      + s_slack(2043,maiz_L,minus) + s_slack(2043,maiz_S,plus) + s_slack(2043,maiz_S,minus) + s_slack(2043,mill_H,plus) + s_slack(2043,mill_H,minus) + s_slack(2043,mill_L,plus) + s_slack(2043,mill_L,minus) + s_slack(2043,mill_S,plus)
     
      + s_slack(2043,mill_S,minus) + s_slack(2043,ofib_L,plus) + s_slack(2043,ofib_L,minus) + s_slack(2043,ooil_L,plus) + s_slack(2043,ooil_L,minus) + s_slack(2043,opul_H,plus) + s_slack(2043,opul_H,minus) + s_slack(2043,opul_L,plus)
     
      + s_slack(2043,opul_L,minus) + s_slack(2043,opul_S,plus) + s_slack(2043,opul_S,minus) + s_slack(2043,pige_H,plus) + s_slack(2043,pige_H,minus) + s_slack(2043,pige_L,plus) + s_slack(2043,pige_L,minus) + s_slack(2043,pige_S,plus)
     
      + s_slack(2043,pige_S,minus) + s_slack(2043,pota_H,plus) + s_slack(2043,pota_H,minus) + s_slack(2043,pota_L,plus) + s_slack(2043,pota_L,minus) + s_slack(2043,pota_S,plus) + s_slack(2043,pota_S,minus) + s_slack(2043,rest_H,plus)
     
      + s_slack(2043,rest_H,minus) + s_slack(2043,rest_L,plus) + s_slack(2043,rest_L,minus) + s_slack(2043,rest_S,plus) + s_slack(2043,rest_S,minus) + s_slack(2043,rice_H,plus) + s_slack(2043,rice_H,minus) + s_slack(2043,rice_L,plus)
     
      + s_slack(2043,rice_L,minus) + s_slack(2043,rice_S,plus) + s_slack(2043,rice_S,minus) + s_slack(2043,sorg_L,plus) + s_slack(2043,sorg_L,minus) + s_slack(2043,sorg_S,plus) + s_slack(2043,sorg_S,minus) + s_slack(2043,soyb_L,plus)
     
      + s_slack(2043,soyb_L,minus) + s_slack(2043,soyb_S,plus) + s_slack(2043,soyb_S,minus) + s_slack(2043,sunf_L,plus) + s_slack(2043,sunf_L,minus) + s_slack(2043,temf_H,plus) + s_slack(2043,temf_H,minus) + s_slack(2043,temf_L,plus)
     
      + s_slack(2043,temf_L,minus) + s_slack(2043,temf_S,plus) + s_slack(2043,temf_S,minus) + s_slack(2043,toba_H,plus) + s_slack(2043,toba_H,minus) + s_slack(2043,toba_L,plus) + s_slack(2043,toba_L,minus) + s_slack(2043,trof_L,plus)
     
      + s_slack(2043,trof_L,minus) + s_slack(2043,trof_S,plus) + s_slack(2043,trof_S,minus) + s_slack(2043,vege_H,plus) + s_slack(2043,vege_H,minus) + s_slack(2043,vege_L,plus) + s_slack(2043,vege_L,minus) + s_slack(2043,vege_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 188
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2043,vege_S,minus) + s_slack(2044,rice_I,plus) + s_slack(2044,rice_I,minus) + s_slack(2044,sugc_I,plus) + s_slack(2044,sugc_I,minus) + s_slack(2044,whea_I,plus) + s_slack(2044,whea_I,minus) + s_slack(2044,bean_H,plus)
     
      + s_slack(2044,bean_H,minus) + s_slack(2044,bean_L,plus) + s_slack(2044,bean_L,minus) + s_slack(2044,bean_S,plus) + s_slack(2044,bean_S,minus) + s_slack(2044,cass_L,plus) + s_slack(2044,cass_L,minus) + s_slack(2044,cass_S,plus)
     
      + s_slack(2044,cass_S,minus) + s_slack(2044,chic_H,plus) + s_slack(2044,chic_H,minus) + s_slack(2044,chic_L,plus) + s_slack(2044,chic_L,minus) + s_slack(2044,chic_S,plus) + s_slack(2044,chic_S,minus) + s_slack(2044,coff_H,plus)
     
      + s_slack(2044,coff_H,minus) + s_slack(2044,coff_L,plus) + s_slack(2044,coff_L,minus) + s_slack(2044,cott_L,plus) + s_slack(2044,cott_L,minus) + s_slack(2044,cowp_H,plus) + s_slack(2044,cowp_H,minus) + s_slack(2044,cowp_L,plus)
     
      + s_slack(2044,cowp_L,minus) + s_slack(2044,cowp_S,plus) + s_slack(2044,cowp_S,minus) + s_slack(2044,grou_H,plus) + s_slack(2044,grou_H,minus) + s_slack(2044,grou_L,plus) + s_slack(2044,grou_L,minus) + s_slack(2044,grou_S,plus)
     
      + s_slack(2044,grou_S,minus) + s_slack(2044,lent_H,plus) + s_slack(2044,lent_H,minus) + s_slack(2044,lent_L,plus) + s_slack(2044,lent_L,minus) + s_slack(2044,lent_S,plus) + s_slack(2044,lent_S,minus) + s_slack(2044,maiz_H,plus)
     
      + s_slack(2044,maiz_H,minus) + s_slack(2044,maiz_L,plus) + s_slack(2044,maiz_L,minus) + s_slack(2044,maiz_S,plus) + s_slack(2044,maiz_S,minus) + s_slack(2044,mill_H,plus) + s_slack(2044,mill_H,minus) + s_slack(2044,mill_L,plus)
     
      + s_slack(2044,mill_L,minus) + s_slack(2044,mill_S,plus) + s_slack(2044,mill_S,minus) + s_slack(2044,ofib_L,plus) + s_slack(2044,ofib_L,minus) + s_slack(2044,ooil_L,plus) + s_slack(2044,ooil_L,minus) + s_slack(2044,opul_H,plus)
     
      + s_slack(2044,opul_H,minus) + s_slack(2044,opul_L,plus) + s_slack(2044,opul_L,minus) + s_slack(2044,opul_S,plus) + s_slack(2044,opul_S,minus) + s_slack(2044,pige_H,plus) + s_slack(2044,pige_H,minus) + s_slack(2044,pige_L,plus)
     
      + s_slack(2044,pige_L,minus) + s_slack(2044,pige_S,plus) + s_slack(2044,pige_S,minus) + s_slack(2044,pota_H,plus) + s_slack(2044,pota_H,minus) + s_slack(2044,pota_L,plus) + s_slack(2044,pota_L,minus) + s_slack(2044,pota_S,plus)
     
      + s_slack(2044,pota_S,minus) + s_slack(2044,rest_H,plus) + s_slack(2044,rest_H,minus) + s_slack(2044,rest_L,plus) + s_slack(2044,rest_L,minus) + s_slack(2044,rest_S,plus) + s_slack(2044,rest_S,minus) + s_slack(2044,rice_H,plus)
     
      + s_slack(2044,rice_H,minus) + s_slack(2044,rice_L,plus) + s_slack(2044,rice_L,minus) + s_slack(2044,rice_S,plus) + s_slack(2044,rice_S,minus) + s_slack(2044,sorg_L,plus) + s_slack(2044,sorg_L,minus) + s_slack(2044,sorg_S,plus)
     
      + s_slack(2044,sorg_S,minus) + s_slack(2044,soyb_L,plus) + s_slack(2044,soyb_L,minus) + s_slack(2044,soyb_S,plus) + s_slack(2044,soyb_S,minus) + s_slack(2044,sunf_L,plus) + s_slack(2044,sunf_L,minus) + s_slack(2044,temf_H,plus)
     
      + s_slack(2044,temf_H,minus) + s_slack(2044,temf_L,plus) + s_slack(2044,temf_L,minus) + s_slack(2044,temf_S,plus) + s_slack(2044,temf_S,minus) + s_slack(2044,toba_H,plus) + s_slack(2044,toba_H,minus) + s_slack(2044,toba_L,plus)
     
      + s_slack(2044,toba_L,minus) + s_slack(2044,trof_L,plus) + s_slack(2044,trof_L,minus) + s_slack(2044,trof_S,plus) + s_slack(2044,trof_S,minus) + s_slack(2044,vege_H,plus) + s_slack(2044,vege_H,minus) + s_slack(2044,vege_L,plus)
     
      + s_slack(2044,vege_L,minus) + s_slack(2044,vege_S,plus) + s_slack(2044,vege_S,minus) + s_slack(2045,rice_I,plus) + s_slack(2045,rice_I,minus) + s_slack(2045,sugc_I,plus) + s_slack(2045,sugc_I,minus) + s_slack(2045,whea_I,plus)
     
      + s_slack(2045,whea_I,minus) + s_slack(2045,bean_H,plus) + s_slack(2045,bean_H,minus) + s_slack(2045,bean_L,plus) + s_slack(2045,bean_L,minus) + s_slack(2045,bean_S,plus) + s_slack(2045,bean_S,minus) + s_slack(2045,cass_L,plus)
     
      + s_slack(2045,cass_L,minus) + s_slack(2045,cass_S,plus) + s_slack(2045,cass_S,minus) + s_slack(2045,chic_H,plus) + s_slack(2045,chic_H,minus) + s_slack(2045,chic_L,plus) + s_slack(2045,chic_L,minus) + s_slack(2045,chic_S,plus)
     
      + s_slack(2045,chic_S,minus) + s_slack(2045,coff_H,plus) + s_slack(2045,coff_H,minus) + s_slack(2045,coff_L,plus) + s_slack(2045,coff_L,minus) + s_slack(2045,cott_L,plus) + s_slack(2045,cott_L,minus) + s_slack(2045,cowp_H,plus)
     
      + s_slack(2045,cowp_H,minus) + s_slack(2045,cowp_L,plus) + s_slack(2045,cowp_L,minus) + s_slack(2045,cowp_S,plus) + s_slack(2045,cowp_S,minus) + s_slack(2045,grou_H,plus) + s_slack(2045,grou_H,minus) + s_slack(2045,grou_L,plus)
     
      + s_slack(2045,grou_L,minus) + s_slack(2045,grou_S,plus) + s_slack(2045,grou_S,minus) + s_slack(2045,lent_H,plus) + s_slack(2045,lent_H,minus) + s_slack(2045,lent_L,plus) + s_slack(2045,lent_L,minus) + s_slack(2045,lent_S,plus)
     
      + s_slack(2045,lent_S,minus) + s_slack(2045,maiz_H,plus) + s_slack(2045,maiz_H,minus) + s_slack(2045,maiz_L,plus) + s_slack(2045,maiz_L,minus) + s_slack(2045,maiz_S,plus) + s_slack(2045,maiz_S,minus) + s_slack(2045,mill_H,plus)
     
      + s_slack(2045,mill_H,minus) + s_slack(2045,mill_L,plus) + s_slack(2045,mill_L,minus) + s_slack(2045,mill_S,plus) + s_slack(2045,mill_S,minus) + s_slack(2045,ofib_L,plus) + s_slack(2045,ofib_L,minus) + s_slack(2045,ooil_L,plus)
     
      + s_slack(2045,ooil_L,minus) + s_slack(2045,opul_H,plus) + s_slack(2045,opul_H,minus) + s_slack(2045,opul_L,plus) + s_slack(2045,opul_L,minus) + s_slack(2045,opul_S,plus) + s_slack(2045,opul_S,minus) + s_slack(2045,pige_H,plus)
     
      + s_slack(2045,pige_H,minus) + s_slack(2045,pige_L,plus) + s_slack(2045,pige_L,minus) + s_slack(2045,pige_S,plus) + s_slack(2045,pige_S,minus) + s_slack(2045,pota_H,plus) + s_slack(2045,pota_H,minus) + s_slack(2045,pota_L,plus)
     
      + s_slack(2045,pota_L,minus) + s_slack(2045,pota_S,plus) + s_slack(2045,pota_S,minus) + s_slack(2045,rest_H,plus) + s_slack(2045,rest_H,minus) + s_slack(2045,rest_L,plus) + s_slack(2045,rest_L,minus) + s_slack(2045,rest_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 189
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2045,rest_S,minus) + s_slack(2045,rice_H,plus) + s_slack(2045,rice_H,minus) + s_slack(2045,rice_L,plus) + s_slack(2045,rice_L,minus) + s_slack(2045,rice_S,plus) + s_slack(2045,rice_S,minus) + s_slack(2045,sorg_L,plus)
     
      + s_slack(2045,sorg_L,minus) + s_slack(2045,sorg_S,plus) + s_slack(2045,sorg_S,minus) + s_slack(2045,soyb_L,plus) + s_slack(2045,soyb_L,minus) + s_slack(2045,soyb_S,plus) + s_slack(2045,soyb_S,minus) + s_slack(2045,sunf_L,plus)
     
      + s_slack(2045,sunf_L,minus) + s_slack(2045,temf_H,plus) + s_slack(2045,temf_H,minus) + s_slack(2045,temf_L,plus) + s_slack(2045,temf_L,minus) + s_slack(2045,temf_S,plus) + s_slack(2045,temf_S,minus) + s_slack(2045,toba_H,plus)
     
      + s_slack(2045,toba_H,minus) + s_slack(2045,toba_L,plus) + s_slack(2045,toba_L,minus) + s_slack(2045,trof_L,plus) + s_slack(2045,trof_L,minus) + s_slack(2045,trof_S,plus) + s_slack(2045,trof_S,minus) + s_slack(2045,vege_H,plus)
     
      + s_slack(2045,vege_H,minus) + s_slack(2045,vege_L,plus) + s_slack(2045,vege_L,minus) + s_slack(2045,vege_S,plus) + s_slack(2045,vege_S,minus) + s_slack(2046,rice_I,plus) + s_slack(2046,rice_I,minus) + s_slack(2046,sugc_I,plus)
     
      + s_slack(2046,sugc_I,minus) + s_slack(2046,whea_I,plus) + s_slack(2046,whea_I,minus) + s_slack(2046,bean_H,plus) + s_slack(2046,bean_H,minus) + s_slack(2046,bean_L,plus) + s_slack(2046,bean_L,minus) + s_slack(2046,bean_S,plus)
     
      + s_slack(2046,bean_S,minus) + s_slack(2046,cass_L,plus) + s_slack(2046,cass_L,minus) + s_slack(2046,cass_S,plus) + s_slack(2046,cass_S,minus) + s_slack(2046,chic_H,plus) + s_slack(2046,chic_H,minus) + s_slack(2046,chic_L,plus)
     
      + s_slack(2046,chic_L,minus) + s_slack(2046,chic_S,plus) + s_slack(2046,chic_S,minus) + s_slack(2046,coff_H,plus) + s_slack(2046,coff_H,minus) + s_slack(2046,coff_L,plus) + s_slack(2046,coff_L,minus) + s_slack(2046,cott_L,plus)
     
      + s_slack(2046,cott_L,minus) + s_slack(2046,cowp_H,plus) + s_slack(2046,cowp_H,minus) + s_slack(2046,cowp_L,plus) + s_slack(2046,cowp_L,minus) + s_slack(2046,cowp_S,plus) + s_slack(2046,cowp_S,minus) + s_slack(2046,grou_H,plus)
     
      + s_slack(2046,grou_H,minus) + s_slack(2046,grou_L,plus) + s_slack(2046,grou_L,minus) + s_slack(2046,grou_S,plus) + s_slack(2046,grou_S,minus) + s_slack(2046,lent_H,plus) + s_slack(2046,lent_H,minus) + s_slack(2046,lent_L,plus)
     
      + s_slack(2046,lent_L,minus) + s_slack(2046,lent_S,plus) + s_slack(2046,lent_S,minus) + s_slack(2046,maiz_H,plus) + s_slack(2046,maiz_H,minus) + s_slack(2046,maiz_L,plus) + s_slack(2046,maiz_L,minus) + s_slack(2046,maiz_S,plus)
     
      + s_slack(2046,maiz_S,minus) + s_slack(2046,mill_H,plus) + s_slack(2046,mill_H,minus) + s_slack(2046,mill_L,plus) + s_slack(2046,mill_L,minus) + s_slack(2046,mill_S,plus) + s_slack(2046,mill_S,minus) + s_slack(2046,ofib_L,plus)
     
      + s_slack(2046,ofib_L,minus) + s_slack(2046,ooil_L,plus) + s_slack(2046,ooil_L,minus) + s_slack(2046,opul_H,plus) + s_slack(2046,opul_H,minus) + s_slack(2046,opul_L,plus) + s_slack(2046,opul_L,minus) + s_slack(2046,opul_S,plus)
     
      + s_slack(2046,opul_S,minus) + s_slack(2046,pige_H,plus) + s_slack(2046,pige_H,minus) + s_slack(2046,pige_L,plus) + s_slack(2046,pige_L,minus) + s_slack(2046,pige_S,plus) + s_slack(2046,pige_S,minus) + s_slack(2046,pota_H,plus)
     
      + s_slack(2046,pota_H,minus) + s_slack(2046,pota_L,plus) + s_slack(2046,pota_L,minus) + s_slack(2046,pota_S,plus) + s_slack(2046,pota_S,minus) + s_slack(2046,rest_H,plus) + s_slack(2046,rest_H,minus) + s_slack(2046,rest_L,plus)
     
      + s_slack(2046,rest_L,minus) + s_slack(2046,rest_S,plus) + s_slack(2046,rest_S,minus) + s_slack(2046,rice_H,plus) + s_slack(2046,rice_H,minus) + s_slack(2046,rice_L,plus) + s_slack(2046,rice_L,minus) + s_slack(2046,rice_S,plus)
     
      + s_slack(2046,rice_S,minus) + s_slack(2046,sorg_L,plus) + s_slack(2046,sorg_L,minus) + s_slack(2046,sorg_S,plus) + s_slack(2046,sorg_S,minus) + s_slack(2046,soyb_L,plus) + s_slack(2046,soyb_L,minus) + s_slack(2046,soyb_S,plus)
     
      + s_slack(2046,soyb_S,minus) + s_slack(2046,sunf_L,plus) + s_slack(2046,sunf_L,minus) + s_slack(2046,temf_H,plus) + s_slack(2046,temf_H,minus) + s_slack(2046,temf_L,plus) + s_slack(2046,temf_L,minus) + s_slack(2046,temf_S,plus)
     
      + s_slack(2046,temf_S,minus) + s_slack(2046,toba_H,plus) + s_slack(2046,toba_H,minus) + s_slack(2046,toba_L,plus) + s_slack(2046,toba_L,minus) + s_slack(2046,trof_L,plus) + s_slack(2046,trof_L,minus) + s_slack(2046,trof_S,plus)
     
      + s_slack(2046,trof_S,minus) + s_slack(2046,vege_H,plus) + s_slack(2046,vege_H,minus) + s_slack(2046,vege_L,plus) + s_slack(2046,vege_L,minus) + s_slack(2046,vege_S,plus) + s_slack(2046,vege_S,minus) + s_slack(2047,rice_I,plus)
     
      + s_slack(2047,rice_I,minus) + s_slack(2047,sugc_I,plus) + s_slack(2047,sugc_I,minus) + s_slack(2047,whea_I,plus) + s_slack(2047,whea_I,minus) + s_slack(2047,bean_H,plus) + s_slack(2047,bean_H,minus) + s_slack(2047,bean_L,plus)
     
      + s_slack(2047,bean_L,minus) + s_slack(2047,bean_S,plus) + s_slack(2047,bean_S,minus) + s_slack(2047,cass_L,plus) + s_slack(2047,cass_L,minus) + s_slack(2047,cass_S,plus) + s_slack(2047,cass_S,minus) + s_slack(2047,chic_H,plus)
     
      + s_slack(2047,chic_H,minus) + s_slack(2047,chic_L,plus) + s_slack(2047,chic_L,minus) + s_slack(2047,chic_S,plus) + s_slack(2047,chic_S,minus) + s_slack(2047,coff_H,plus) + s_slack(2047,coff_H,minus) + s_slack(2047,coff_L,plus)
     
      + s_slack(2047,coff_L,minus) + s_slack(2047,cott_L,plus) + s_slack(2047,cott_L,minus) + s_slack(2047,cowp_H,plus) + s_slack(2047,cowp_H,minus) + s_slack(2047,cowp_L,plus) + s_slack(2047,cowp_L,minus) + s_slack(2047,cowp_S,plus)
     
      + s_slack(2047,cowp_S,minus) + s_slack(2047,grou_H,plus) + s_slack(2047,grou_H,minus) + s_slack(2047,grou_L,plus) + s_slack(2047,grou_L,minus) + s_slack(2047,grou_S,plus) + s_slack(2047,grou_S,minus) + s_slack(2047,lent_H,plus)
     
      + s_slack(2047,lent_H,minus) + s_slack(2047,lent_L,plus) + s_slack(2047,lent_L,minus) + s_slack(2047,lent_S,plus) + s_slack(2047,lent_S,minus) + s_slack(2047,maiz_H,plus) + s_slack(2047,maiz_H,minus) + s_slack(2047,maiz_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 190
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2047,maiz_L,minus) + s_slack(2047,maiz_S,plus) + s_slack(2047,maiz_S,minus) + s_slack(2047,mill_H,plus) + s_slack(2047,mill_H,minus) + s_slack(2047,mill_L,plus) + s_slack(2047,mill_L,minus) + s_slack(2047,mill_S,plus)
     
      + s_slack(2047,mill_S,minus) + s_slack(2047,ofib_L,plus) + s_slack(2047,ofib_L,minus) + s_slack(2047,ooil_L,plus) + s_slack(2047,ooil_L,minus) + s_slack(2047,opul_H,plus) + s_slack(2047,opul_H,minus) + s_slack(2047,opul_L,plus)
     
      + s_slack(2047,opul_L,minus) + s_slack(2047,opul_S,plus) + s_slack(2047,opul_S,minus) + s_slack(2047,pige_H,plus) + s_slack(2047,pige_H,minus) + s_slack(2047,pige_L,plus) + s_slack(2047,pige_L,minus) + s_slack(2047,pige_S,plus)
     
      + s_slack(2047,pige_S,minus) + s_slack(2047,pota_H,plus) + s_slack(2047,pota_H,minus) + s_slack(2047,pota_L,plus) + s_slack(2047,pota_L,minus) + s_slack(2047,pota_S,plus) + s_slack(2047,pota_S,minus) + s_slack(2047,rest_H,plus)
     
      + s_slack(2047,rest_H,minus) + s_slack(2047,rest_L,plus) + s_slack(2047,rest_L,minus) + s_slack(2047,rest_S,plus) + s_slack(2047,rest_S,minus) + s_slack(2047,rice_H,plus) + s_slack(2047,rice_H,minus) + s_slack(2047,rice_L,plus)
     
      + s_slack(2047,rice_L,minus) + s_slack(2047,rice_S,plus) + s_slack(2047,rice_S,minus) + s_slack(2047,sorg_L,plus) + s_slack(2047,sorg_L,minus) + s_slack(2047,sorg_S,plus) + s_slack(2047,sorg_S,minus) + s_slack(2047,soyb_L,plus)
     
      + s_slack(2047,soyb_L,minus) + s_slack(2047,soyb_S,plus) + s_slack(2047,soyb_S,minus) + s_slack(2047,sunf_L,plus) + s_slack(2047,sunf_L,minus) + s_slack(2047,temf_H,plus) + s_slack(2047,temf_H,minus) + s_slack(2047,temf_L,plus)
     
      + s_slack(2047,temf_L,minus) + s_slack(2047,temf_S,plus) + s_slack(2047,temf_S,minus) + s_slack(2047,toba_H,plus) + s_slack(2047,toba_H,minus) + s_slack(2047,toba_L,plus) + s_slack(2047,toba_L,minus) + s_slack(2047,trof_L,plus)
     
      + s_slack(2047,trof_L,minus) + s_slack(2047,trof_S,plus) + s_slack(2047,trof_S,minus) + s_slack(2047,vege_H,plus) + s_slack(2047,vege_H,minus) + s_slack(2047,vege_L,plus) + s_slack(2047,vege_L,minus) + s_slack(2047,vege_S,plus)
     
      + s_slack(2047,vege_S,minus) + s_slack(2049,rice_I,plus) + s_slack(2049,rice_I,minus) + s_slack(2049,sugc_I,plus) + s_slack(2049,sugc_I,minus) + s_slack(2049,whea_I,plus) + s_slack(2049,whea_I,minus) + s_slack(2049,bean_H,plus)
     
      + s_slack(2049,bean_H,minus) + s_slack(2049,bean_L,plus) + s_slack(2049,bean_L,minus) + s_slack(2049,bean_S,plus) + s_slack(2049,bean_S,minus) + s_slack(2049,cass_L,plus) + s_slack(2049,cass_L,minus) + s_slack(2049,cass_S,plus)
     
      + s_slack(2049,cass_S,minus) + s_slack(2049,chic_H,plus) + s_slack(2049,chic_H,minus) + s_slack(2049,chic_L,plus) + s_slack(2049,chic_L,minus) + s_slack(2049,chic_S,plus) + s_slack(2049,chic_S,minus) + s_slack(2049,coff_H,plus)
     
      + s_slack(2049,coff_H,minus) + s_slack(2049,coff_L,plus) + s_slack(2049,coff_L,minus) + s_slack(2049,cott_L,plus) + s_slack(2049,cott_L,minus) + s_slack(2049,cowp_H,plus) + s_slack(2049,cowp_H,minus) + s_slack(2049,cowp_L,plus)
     
      + s_slack(2049,cowp_L,minus) + s_slack(2049,cowp_S,plus) + s_slack(2049,cowp_S,minus) + s_slack(2049,grou_H,plus) + s_slack(2049,grou_H,minus) + s_slack(2049,grou_L,plus) + s_slack(2049,grou_L,minus) + s_slack(2049,grou_S,plus)
     
      + s_slack(2049,grou_S,minus) + s_slack(2049,lent_H,plus) + s_slack(2049,lent_H,minus) + s_slack(2049,lent_L,plus) + s_slack(2049,lent_L,minus) + s_slack(2049,lent_S,plus) + s_slack(2049,lent_S,minus) + s_slack(2049,maiz_H,plus)
     
      + s_slack(2049,maiz_H,minus) + s_slack(2049,maiz_L,plus) + s_slack(2049,maiz_L,minus) + s_slack(2049,maiz_S,plus) + s_slack(2049,maiz_S,minus) + s_slack(2049,mill_H,plus) + s_slack(2049,mill_H,minus) + s_slack(2049,mill_L,plus)
     
      + s_slack(2049,mill_L,minus) + s_slack(2049,mill_S,plus) + s_slack(2049,mill_S,minus) + s_slack(2049,ofib_L,plus) + s_slack(2049,ofib_L,minus) + s_slack(2049,ooil_L,plus) + s_slack(2049,ooil_L,minus) + s_slack(2049,opul_H,plus)
     
      + s_slack(2049,opul_H,minus) + s_slack(2049,opul_L,plus) + s_slack(2049,opul_L,minus) + s_slack(2049,opul_S,plus) + s_slack(2049,opul_S,minus) + s_slack(2049,pige_H,plus) + s_slack(2049,pige_H,minus) + s_slack(2049,pige_L,plus)
     
      + s_slack(2049,pige_L,minus) + s_slack(2049,pige_S,plus) + s_slack(2049,pige_S,minus) + s_slack(2049,pota_H,plus) + s_slack(2049,pota_H,minus) + s_slack(2049,pota_L,plus) + s_slack(2049,pota_L,minus) + s_slack(2049,pota_S,plus)
     
      + s_slack(2049,pota_S,minus) + s_slack(2049,rest_H,plus) + s_slack(2049,rest_H,minus) + s_slack(2049,rest_L,plus) + s_slack(2049,rest_L,minus) + s_slack(2049,rest_S,plus) + s_slack(2049,rest_S,minus) + s_slack(2049,rice_H,plus)
     
      + s_slack(2049,rice_H,minus) + s_slack(2049,rice_L,plus) + s_slack(2049,rice_L,minus) + s_slack(2049,rice_S,plus) + s_slack(2049,rice_S,minus) + s_slack(2049,sorg_L,plus) + s_slack(2049,sorg_L,minus) + s_slack(2049,sorg_S,plus)
     
      + s_slack(2049,sorg_S,minus) + s_slack(2049,soyb_L,plus) + s_slack(2049,soyb_L,minus) + s_slack(2049,soyb_S,plus) + s_slack(2049,soyb_S,minus) + s_slack(2049,sunf_L,plus) + s_slack(2049,sunf_L,minus) + s_slack(2049,temf_H,plus)
     
      + s_slack(2049,temf_H,minus) + s_slack(2049,temf_L,plus) + s_slack(2049,temf_L,minus) + s_slack(2049,temf_S,plus) + s_slack(2049,temf_S,minus) + s_slack(2049,toba_H,plus) + s_slack(2049,toba_H,minus) + s_slack(2049,toba_L,plus)
     
      + s_slack(2049,toba_L,minus) + s_slack(2049,trof_L,plus) + s_slack(2049,trof_L,minus) + s_slack(2049,trof_S,plus) + s_slack(2049,trof_S,minus) + s_slack(2049,vege_H,plus) + s_slack(2049,vege_H,minus) + s_slack(2049,vege_L,plus)
     
      + s_slack(2049,vege_L,minus) + s_slack(2049,vege_S,plus) + s_slack(2049,vege_S,minus) + s_slack(2050,rice_I,plus) + s_slack(2050,rice_I,minus) + s_slack(2050,sugc_I,plus) + s_slack(2050,sugc_I,minus) + s_slack(2050,whea_I,plus)
     
      + s_slack(2050,whea_I,minus) + s_slack(2050,bean_H,plus) + s_slack(2050,bean_H,minus) + s_slack(2050,bean_L,plus) + s_slack(2050,bean_L,minus) + s_slack(2050,bean_S,plus) + s_slack(2050,bean_S,minus) + s_slack(2050,cass_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 191
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2050,cass_L,minus) + s_slack(2050,cass_S,plus) + s_slack(2050,cass_S,minus) + s_slack(2050,chic_H,plus) + s_slack(2050,chic_H,minus) + s_slack(2050,chic_L,plus) + s_slack(2050,chic_L,minus) + s_slack(2050,chic_S,plus)
     
      + s_slack(2050,chic_S,minus) + s_slack(2050,coff_H,plus) + s_slack(2050,coff_H,minus) + s_slack(2050,coff_L,plus) + s_slack(2050,coff_L,minus) + s_slack(2050,cott_L,plus) + s_slack(2050,cott_L,minus) + s_slack(2050,cowp_H,plus)
     
      + s_slack(2050,cowp_H,minus) + s_slack(2050,cowp_L,plus) + s_slack(2050,cowp_L,minus) + s_slack(2050,cowp_S,plus) + s_slack(2050,cowp_S,minus) + s_slack(2050,grou_H,plus) + s_slack(2050,grou_H,minus) + s_slack(2050,grou_L,plus)
     
      + s_slack(2050,grou_L,minus) + s_slack(2050,grou_S,plus) + s_slack(2050,grou_S,minus) + s_slack(2050,lent_H,plus) + s_slack(2050,lent_H,minus) + s_slack(2050,lent_L,plus) + s_slack(2050,lent_L,minus) + s_slack(2050,lent_S,plus)
     
      + s_slack(2050,lent_S,minus) + s_slack(2050,maiz_H,plus) + s_slack(2050,maiz_H,minus) + s_slack(2050,maiz_L,plus) + s_slack(2050,maiz_L,minus) + s_slack(2050,maiz_S,plus) + s_slack(2050,maiz_S,minus) + s_slack(2050,mill_H,plus)
     
      + s_slack(2050,mill_H,minus) + s_slack(2050,mill_L,plus) + s_slack(2050,mill_L,minus) + s_slack(2050,mill_S,plus) + s_slack(2050,mill_S,minus) + s_slack(2050,ofib_L,plus) + s_slack(2050,ofib_L,minus) + s_slack(2050,ooil_L,plus)
     
      + s_slack(2050,ooil_L,minus) + s_slack(2050,opul_H,plus) + s_slack(2050,opul_H,minus) + s_slack(2050,opul_L,plus) + s_slack(2050,opul_L,minus) + s_slack(2050,opul_S,plus) + s_slack(2050,opul_S,minus) + s_slack(2050,pige_H,plus)
     
      + s_slack(2050,pige_H,minus) + s_slack(2050,pige_L,plus) + s_slack(2050,pige_L,minus) + s_slack(2050,pige_S,plus) + s_slack(2050,pige_S,minus) + s_slack(2050,pota_H,plus) + s_slack(2050,pota_H,minus) + s_slack(2050,pota_L,plus)
     
      + s_slack(2050,pota_L,minus) + s_slack(2050,pota_S,plus) + s_slack(2050,pota_S,minus) + s_slack(2050,rest_H,plus) + s_slack(2050,rest_H,minus) + s_slack(2050,rest_L,plus) + s_slack(2050,rest_L,minus) + s_slack(2050,rest_S,plus)
     
      + s_slack(2050,rest_S,minus) + s_slack(2050,rice_H,plus) + s_slack(2050,rice_H,minus) + s_slack(2050,rice_L,plus) + s_slack(2050,rice_L,minus) + s_slack(2050,rice_S,plus) + s_slack(2050,rice_S,minus) + s_slack(2050,sorg_L,plus)
     
      + s_slack(2050,sorg_L,minus) + s_slack(2050,sorg_S,plus) + s_slack(2050,sorg_S,minus) + s_slack(2050,soyb_L,plus) + s_slack(2050,soyb_L,minus) + s_slack(2050,soyb_S,plus) + s_slack(2050,soyb_S,minus) + s_slack(2050,sunf_L,plus)
     
      + s_slack(2050,sunf_L,minus) + s_slack(2050,temf_H,plus) + s_slack(2050,temf_H,minus) + s_slack(2050,temf_L,plus) + s_slack(2050,temf_L,minus) + s_slack(2050,temf_S,plus) + s_slack(2050,temf_S,minus) + s_slack(2050,toba_H,plus)
     
      + s_slack(2050,toba_H,minus) + s_slack(2050,toba_L,plus) + s_slack(2050,toba_L,minus) + s_slack(2050,trof_L,plus) + s_slack(2050,trof_L,minus) + s_slack(2050,trof_S,plus) + s_slack(2050,trof_S,minus) + s_slack(2050,vege_H,plus)
     
      + s_slack(2050,vege_H,minus) + s_slack(2050,vege_L,plus) + s_slack(2050,vege_L,minus) + s_slack(2050,vege_S,plus) + s_slack(2050,vege_S,minus) + s_slack(2051,rice_I,plus) + s_slack(2051,rice_I,minus) + s_slack(2051,sugc_I,plus)
     
      + s_slack(2051,sugc_I,minus) + s_slack(2051,whea_I,plus) + s_slack(2051,whea_I,minus) + s_slack(2051,bean_H,plus) + s_slack(2051,bean_H,minus) + s_slack(2051,bean_L,plus) + s_slack(2051,bean_L,minus) + s_slack(2051,bean_S,plus)
     
      + s_slack(2051,bean_S,minus) + s_slack(2051,cass_L,plus) + s_slack(2051,cass_L,minus) + s_slack(2051,cass_S,plus) + s_slack(2051,cass_S,minus) + s_slack(2051,chic_H,plus) + s_slack(2051,chic_H,minus) + s_slack(2051,chic_L,plus)
     
      + s_slack(2051,chic_L,minus) + s_slack(2051,chic_S,plus) + s_slack(2051,chic_S,minus) + s_slack(2051,coff_H,plus) + s_slack(2051,coff_H,minus) + s_slack(2051,coff_L,plus) + s_slack(2051,coff_L,minus) + s_slack(2051,cott_L,plus)
     
      + s_slack(2051,cott_L,minus) + s_slack(2051,cowp_H,plus) + s_slack(2051,cowp_H,minus) + s_slack(2051,cowp_L,plus) + s_slack(2051,cowp_L,minus) + s_slack(2051,cowp_S,plus) + s_slack(2051,cowp_S,minus) + s_slack(2051,grou_H,plus)
     
      + s_slack(2051,grou_H,minus) + s_slack(2051,grou_L,plus) + s_slack(2051,grou_L,minus) + s_slack(2051,grou_S,plus) + s_slack(2051,grou_S,minus) + s_slack(2051,lent_H,plus) + s_slack(2051,lent_H,minus) + s_slack(2051,lent_L,plus)
     
      + s_slack(2051,lent_L,minus) + s_slack(2051,lent_S,plus) + s_slack(2051,lent_S,minus) + s_slack(2051,maiz_H,plus) + s_slack(2051,maiz_H,minus) + s_slack(2051,maiz_L,plus) + s_slack(2051,maiz_L,minus) + s_slack(2051,maiz_S,plus)
     
      + s_slack(2051,maiz_S,minus) + s_slack(2051,mill_H,plus) + s_slack(2051,mill_H,minus) + s_slack(2051,mill_L,plus) + s_slack(2051,mill_L,minus) + s_slack(2051,mill_S,plus) + s_slack(2051,mill_S,minus) + s_slack(2051,ofib_L,plus)
     
      + s_slack(2051,ofib_L,minus) + s_slack(2051,ooil_L,plus) + s_slack(2051,ooil_L,minus) + s_slack(2051,opul_H,plus) + s_slack(2051,opul_H,minus) + s_slack(2051,opul_L,plus) + s_slack(2051,opul_L,minus) + s_slack(2051,opul_S,plus)
     
      + s_slack(2051,opul_S,minus) + s_slack(2051,pige_H,plus) + s_slack(2051,pige_H,minus) + s_slack(2051,pige_L,plus) + s_slack(2051,pige_L,minus) + s_slack(2051,pige_S,plus) + s_slack(2051,pige_S,minus) + s_slack(2051,pota_H,plus)
     
      + s_slack(2051,pota_H,minus) + s_slack(2051,pota_L,plus) + s_slack(2051,pota_L,minus) + s_slack(2051,pota_S,plus) + s_slack(2051,pota_S,minus) + s_slack(2051,rest_H,plus) + s_slack(2051,rest_H,minus) + s_slack(2051,rest_L,plus)
     
      + s_slack(2051,rest_L,minus) + s_slack(2051,rest_S,plus) + s_slack(2051,rest_S,minus) + s_slack(2051,rice_H,plus) + s_slack(2051,rice_H,minus) + s_slack(2051,rice_L,plus) + s_slack(2051,rice_L,minus) + s_slack(2051,rice_S,plus)
     
      + s_slack(2051,rice_S,minus) + s_slack(2051,sorg_L,plus) + s_slack(2051,sorg_L,minus) + s_slack(2051,sorg_S,plus) + s_slack(2051,sorg_S,minus) + s_slack(2051,soyb_L,plus) + s_slack(2051,soyb_L,minus) + s_slack(2051,soyb_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 192
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2051,soyb_S,minus) + s_slack(2051,sunf_L,plus) + s_slack(2051,sunf_L,minus) + s_slack(2051,temf_H,plus) + s_slack(2051,temf_H,minus) + s_slack(2051,temf_L,plus) + s_slack(2051,temf_L,minus) + s_slack(2051,temf_S,plus)
     
      + s_slack(2051,temf_S,minus) + s_slack(2051,toba_H,plus) + s_slack(2051,toba_H,minus) + s_slack(2051,toba_L,plus) + s_slack(2051,toba_L,minus) + s_slack(2051,trof_L,plus) + s_slack(2051,trof_L,minus) + s_slack(2051,trof_S,plus)
     
      + s_slack(2051,trof_S,minus) + s_slack(2051,vege_H,plus) + s_slack(2051,vege_H,minus) + s_slack(2051,vege_L,plus) + s_slack(2051,vege_L,minus) + s_slack(2051,vege_S,plus) + s_slack(2051,vege_S,minus) + s_slack(2072,rice_I,plus)
     
      + s_slack(2072,rice_I,minus) + s_slack(2072,sugc_I,plus) + s_slack(2072,sugc_I,minus) + s_slack(2072,whea_I,plus) + s_slack(2072,whea_I,minus) + s_slack(2072,bean_H,plus) + s_slack(2072,bean_H,minus) + s_slack(2072,bean_L,plus)
     
      + s_slack(2072,bean_L,minus) + s_slack(2072,bean_S,plus) + s_slack(2072,bean_S,minus) + s_slack(2072,cass_L,plus) + s_slack(2072,cass_L,minus) + s_slack(2072,cass_S,plus) + s_slack(2072,cass_S,minus) + s_slack(2072,chic_H,plus)
     
      + s_slack(2072,chic_H,minus) + s_slack(2072,chic_L,plus) + s_slack(2072,chic_L,minus) + s_slack(2072,chic_S,plus) + s_slack(2072,chic_S,minus) + s_slack(2072,coff_H,plus) + s_slack(2072,coff_H,minus) + s_slack(2072,coff_L,plus)
     
      + s_slack(2072,coff_L,minus) + s_slack(2072,cott_L,plus) + s_slack(2072,cott_L,minus) + s_slack(2072,cowp_H,plus) + s_slack(2072,cowp_H,minus) + s_slack(2072,cowp_L,plus) + s_slack(2072,cowp_L,minus) + s_slack(2072,cowp_S,plus)
     
      + s_slack(2072,cowp_S,minus) + s_slack(2072,grou_H,plus) + s_slack(2072,grou_H,minus) + s_slack(2072,grou_L,plus) + s_slack(2072,grou_L,minus) + s_slack(2072,grou_S,plus) + s_slack(2072,grou_S,minus) + s_slack(2072,lent_H,plus)
     
      + s_slack(2072,lent_H,minus) + s_slack(2072,lent_L,plus) + s_slack(2072,lent_L,minus) + s_slack(2072,lent_S,plus) + s_slack(2072,lent_S,minus) + s_slack(2072,maiz_H,plus) + s_slack(2072,maiz_H,minus) + s_slack(2072,maiz_L,plus)
     
      + s_slack(2072,maiz_L,minus) + s_slack(2072,maiz_S,plus) + s_slack(2072,maiz_S,minus) + s_slack(2072,mill_H,plus) + s_slack(2072,mill_H,minus) + s_slack(2072,mill_L,plus) + s_slack(2072,mill_L,minus) + s_slack(2072,mill_S,plus)
     
      + s_slack(2072,mill_S,minus) + s_slack(2072,ofib_L,plus) + s_slack(2072,ofib_L,minus) + s_slack(2072,ooil_L,plus) + s_slack(2072,ooil_L,minus) + s_slack(2072,opul_H,plus) + s_slack(2072,opul_H,minus) + s_slack(2072,opul_L,plus)
     
      + s_slack(2072,opul_L,minus) + s_slack(2072,opul_S,plus) + s_slack(2072,opul_S,minus) + s_slack(2072,pige_H,plus) + s_slack(2072,pige_H,minus) + s_slack(2072,pige_L,plus) + s_slack(2072,pige_L,minus) + s_slack(2072,pige_S,plus)
     
      + s_slack(2072,pige_S,minus) + s_slack(2072,pota_H,plus) + s_slack(2072,pota_H,minus) + s_slack(2072,pota_L,plus) + s_slack(2072,pota_L,minus) + s_slack(2072,pota_S,plus) + s_slack(2072,pota_S,minus) + s_slack(2072,rest_H,plus)
     
      + s_slack(2072,rest_H,minus) + s_slack(2072,rest_L,plus) + s_slack(2072,rest_L,minus) + s_slack(2072,rest_S,plus) + s_slack(2072,rest_S,minus) + s_slack(2072,rice_H,plus) + s_slack(2072,rice_H,minus) + s_slack(2072,rice_L,plus)
     
      + s_slack(2072,rice_L,minus) + s_slack(2072,rice_S,plus) + s_slack(2072,rice_S,minus) + s_slack(2072,sorg_L,plus) + s_slack(2072,sorg_L,minus) + s_slack(2072,sorg_S,plus) + s_slack(2072,sorg_S,minus) + s_slack(2072,soyb_L,plus)
     
      + s_slack(2072,soyb_L,minus) + s_slack(2072,soyb_S,plus) + s_slack(2072,soyb_S,minus) + s_slack(2072,sunf_L,plus) + s_slack(2072,sunf_L,minus) + s_slack(2072,temf_H,plus) + s_slack(2072,temf_H,minus) + s_slack(2072,temf_L,plus)
     
      + s_slack(2072,temf_L,minus) + s_slack(2072,temf_S,plus) + s_slack(2072,temf_S,minus) + s_slack(2072,toba_H,plus) + s_slack(2072,toba_H,minus) + s_slack(2072,toba_L,plus) + s_slack(2072,toba_L,minus) + s_slack(2072,trof_L,plus)
     
      + s_slack(2072,trof_L,minus) + s_slack(2072,trof_S,plus) + s_slack(2072,trof_S,minus) + s_slack(2072,vege_H,plus) + s_slack(2072,vege_H,minus) + s_slack(2072,vege_L,plus) + s_slack(2072,vege_L,minus) + s_slack(2072,vege_S,plus)
     
      + s_slack(2072,vege_S,minus) + s_slack(2073,rice_I,plus) + s_slack(2073,rice_I,minus) + s_slack(2073,sugc_I,plus) + s_slack(2073,sugc_I,minus) + s_slack(2073,whea_I,plus) + s_slack(2073,whea_I,minus) + s_slack(2073,bean_H,plus)
     
      + s_slack(2073,bean_H,minus) + s_slack(2073,bean_L,plus) + s_slack(2073,bean_L,minus) + s_slack(2073,bean_S,plus) + s_slack(2073,bean_S,minus) + s_slack(2073,cass_L,plus) + s_slack(2073,cass_L,minus) + s_slack(2073,cass_S,plus)
     
      + s_slack(2073,cass_S,minus) + s_slack(2073,chic_H,plus) + s_slack(2073,chic_H,minus) + s_slack(2073,chic_L,plus) + s_slack(2073,chic_L,minus) + s_slack(2073,chic_S,plus) + s_slack(2073,chic_S,minus) + s_slack(2073,coff_H,plus)
     
      + s_slack(2073,coff_H,minus) + s_slack(2073,coff_L,plus) + s_slack(2073,coff_L,minus) + s_slack(2073,cott_L,plus) + s_slack(2073,cott_L,minus) + s_slack(2073,cowp_H,plus) + s_slack(2073,cowp_H,minus) + s_slack(2073,cowp_L,plus)
     
      + s_slack(2073,cowp_L,minus) + s_slack(2073,cowp_S,plus) + s_slack(2073,cowp_S,minus) + s_slack(2073,grou_H,plus) + s_slack(2073,grou_H,minus) + s_slack(2073,grou_L,plus) + s_slack(2073,grou_L,minus) + s_slack(2073,grou_S,plus)
     
      + s_slack(2073,grou_S,minus) + s_slack(2073,lent_H,plus) + s_slack(2073,lent_H,minus) + s_slack(2073,lent_L,plus) + s_slack(2073,lent_L,minus) + s_slack(2073,lent_S,plus) + s_slack(2073,lent_S,minus) + s_slack(2073,maiz_H,plus)
     
      + s_slack(2073,maiz_H,minus) + s_slack(2073,maiz_L,plus) + s_slack(2073,maiz_L,minus) + s_slack(2073,maiz_S,plus) + s_slack(2073,maiz_S,minus) + s_slack(2073,mill_H,plus) + s_slack(2073,mill_H,minus) + s_slack(2073,mill_L,plus)
     
      + s_slack(2073,mill_L,minus) + s_slack(2073,mill_S,plus) + s_slack(2073,mill_S,minus) + s_slack(2073,ofib_L,plus) + s_slack(2073,ofib_L,minus) + s_slack(2073,ooil_L,plus) + s_slack(2073,ooil_L,minus) + s_slack(2073,opul_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 193
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2073,opul_H,minus) + s_slack(2073,opul_L,plus) + s_slack(2073,opul_L,minus) + s_slack(2073,opul_S,plus) + s_slack(2073,opul_S,minus) + s_slack(2073,pige_H,plus) + s_slack(2073,pige_H,minus) + s_slack(2073,pige_L,plus)
     
      + s_slack(2073,pige_L,minus) + s_slack(2073,pige_S,plus) + s_slack(2073,pige_S,minus) + s_slack(2073,pota_H,plus) + s_slack(2073,pota_H,minus) + s_slack(2073,pota_L,plus) + s_slack(2073,pota_L,minus) + s_slack(2073,pota_S,plus)
     
      + s_slack(2073,pota_S,minus) + s_slack(2073,rest_H,plus) + s_slack(2073,rest_H,minus) + s_slack(2073,rest_L,plus) + s_slack(2073,rest_L,minus) + s_slack(2073,rest_S,plus) + s_slack(2073,rest_S,minus) + s_slack(2073,rice_H,plus)
     
      + s_slack(2073,rice_H,minus) + s_slack(2073,rice_L,plus) + s_slack(2073,rice_L,minus) + s_slack(2073,rice_S,plus) + s_slack(2073,rice_S,minus) + s_slack(2073,sorg_L,plus) + s_slack(2073,sorg_L,minus) + s_slack(2073,sorg_S,plus)
     
      + s_slack(2073,sorg_S,minus) + s_slack(2073,soyb_L,plus) + s_slack(2073,soyb_L,minus) + s_slack(2073,soyb_S,plus) + s_slack(2073,soyb_S,minus) + s_slack(2073,sunf_L,plus) + s_slack(2073,sunf_L,minus) + s_slack(2073,temf_H,plus)
     
      + s_slack(2073,temf_H,minus) + s_slack(2073,temf_L,plus) + s_slack(2073,temf_L,minus) + s_slack(2073,temf_S,plus) + s_slack(2073,temf_S,minus) + s_slack(2073,toba_H,plus) + s_slack(2073,toba_H,minus) + s_slack(2073,toba_L,plus)
     
      + s_slack(2073,toba_L,minus) + s_slack(2073,trof_L,plus) + s_slack(2073,trof_L,minus) + s_slack(2073,trof_S,plus) + s_slack(2073,trof_S,minus) + s_slack(2073,vege_H,plus) + s_slack(2073,vege_H,minus) + s_slack(2073,vege_L,plus)
     
      + s_slack(2073,vege_L,minus) + s_slack(2073,vege_S,plus) + s_slack(2073,vege_S,minus) + s_slack(2074,rice_I,plus) + s_slack(2074,rice_I,minus) + s_slack(2074,sugc_I,plus) + s_slack(2074,sugc_I,minus) + s_slack(2074,whea_I,plus)
     
      + s_slack(2074,whea_I,minus) + s_slack(2074,bean_H,plus) + s_slack(2074,bean_H,minus) + s_slack(2074,bean_L,plus) + s_slack(2074,bean_L,minus) + s_slack(2074,bean_S,plus) + s_slack(2074,bean_S,minus) + s_slack(2074,cass_L,plus)
     
      + s_slack(2074,cass_L,minus) + s_slack(2074,cass_S,plus) + s_slack(2074,cass_S,minus) + s_slack(2074,chic_H,plus) + s_slack(2074,chic_H,minus) + s_slack(2074,chic_L,plus) + s_slack(2074,chic_L,minus) + s_slack(2074,chic_S,plus)
     
      + s_slack(2074,chic_S,minus) + s_slack(2074,coff_H,plus) + s_slack(2074,coff_H,minus) + s_slack(2074,coff_L,plus) + s_slack(2074,coff_L,minus) + s_slack(2074,cott_L,plus) + s_slack(2074,cott_L,minus) + s_slack(2074,cowp_H,plus)
     
      + s_slack(2074,cowp_H,minus) + s_slack(2074,cowp_L,plus) + s_slack(2074,cowp_L,minus) + s_slack(2074,cowp_S,plus) + s_slack(2074,cowp_S,minus) + s_slack(2074,grou_H,plus) + s_slack(2074,grou_H,minus) + s_slack(2074,grou_L,plus)
     
      + s_slack(2074,grou_L,minus) + s_slack(2074,grou_S,plus) + s_slack(2074,grou_S,minus) + s_slack(2074,lent_H,plus) + s_slack(2074,lent_H,minus) + s_slack(2074,lent_L,plus) + s_slack(2074,lent_L,minus) + s_slack(2074,lent_S,plus)
     
      + s_slack(2074,lent_S,minus) + s_slack(2074,maiz_H,plus) + s_slack(2074,maiz_H,minus) + s_slack(2074,maiz_L,plus) + s_slack(2074,maiz_L,minus) + s_slack(2074,maiz_S,plus) + s_slack(2074,maiz_S,minus) + s_slack(2074,mill_H,plus)
     
      + s_slack(2074,mill_H,minus) + s_slack(2074,mill_L,plus) + s_slack(2074,mill_L,minus) + s_slack(2074,mill_S,plus) + s_slack(2074,mill_S,minus) + s_slack(2074,ofib_L,plus) + s_slack(2074,ofib_L,minus) + s_slack(2074,ooil_L,plus)
     
      + s_slack(2074,ooil_L,minus) + s_slack(2074,opul_H,plus) + s_slack(2074,opul_H,minus) + s_slack(2074,opul_L,plus) + s_slack(2074,opul_L,minus) + s_slack(2074,opul_S,plus) + s_slack(2074,opul_S,minus) + s_slack(2074,pige_H,plus)
     
      + s_slack(2074,pige_H,minus) + s_slack(2074,pige_L,plus) + s_slack(2074,pige_L,minus) + s_slack(2074,pige_S,plus) + s_slack(2074,pige_S,minus) + s_slack(2074,pota_H,plus) + s_slack(2074,pota_H,minus) + s_slack(2074,pota_L,plus)
     
      + s_slack(2074,pota_L,minus) + s_slack(2074,pota_S,plus) + s_slack(2074,pota_S,minus) + s_slack(2074,rest_H,plus) + s_slack(2074,rest_H,minus) + s_slack(2074,rest_L,plus) + s_slack(2074,rest_L,minus) + s_slack(2074,rest_S,plus)
     
      + s_slack(2074,rest_S,minus) + s_slack(2074,rice_H,plus) + s_slack(2074,rice_H,minus) + s_slack(2074,rice_L,plus) + s_slack(2074,rice_L,minus) + s_slack(2074,rice_S,plus) + s_slack(2074,rice_S,minus) + s_slack(2074,sorg_L,plus)
     
      + s_slack(2074,sorg_L,minus) + s_slack(2074,sorg_S,plus) + s_slack(2074,sorg_S,minus) + s_slack(2074,soyb_L,plus) + s_slack(2074,soyb_L,minus) + s_slack(2074,soyb_S,plus) + s_slack(2074,soyb_S,minus) + s_slack(2074,sunf_L,plus)
     
      + s_slack(2074,sunf_L,minus) + s_slack(2074,temf_H,plus) + s_slack(2074,temf_H,minus) + s_slack(2074,temf_L,plus) + s_slack(2074,temf_L,minus) + s_slack(2074,temf_S,plus) + s_slack(2074,temf_S,minus) + s_slack(2074,toba_H,plus)
     
      + s_slack(2074,toba_H,minus) + s_slack(2074,toba_L,plus) + s_slack(2074,toba_L,minus) + s_slack(2074,trof_L,plus) + s_slack(2074,trof_L,minus) + s_slack(2074,trof_S,plus) + s_slack(2074,trof_S,minus) + s_slack(2074,vege_H,plus)
     
      + s_slack(2074,vege_H,minus) + s_slack(2074,vege_L,plus) + s_slack(2074,vege_L,minus) + s_slack(2074,vege_S,plus) + s_slack(2074,vege_S,minus) + s_slack(2075,rice_I,plus) + s_slack(2075,rice_I,minus) + s_slack(2075,sugc_I,plus)
     
      + s_slack(2075,sugc_I,minus) + s_slack(2075,whea_I,plus) + s_slack(2075,whea_I,minus) + s_slack(2075,bean_H,plus) + s_slack(2075,bean_H,minus) + s_slack(2075,bean_L,plus) + s_slack(2075,bean_L,minus) + s_slack(2075,bean_S,plus)
     
      + s_slack(2075,bean_S,minus) + s_slack(2075,cass_L,plus) + s_slack(2075,cass_L,minus) + s_slack(2075,cass_S,plus) + s_slack(2075,cass_S,minus) + s_slack(2075,chic_H,plus) + s_slack(2075,chic_H,minus) + s_slack(2075,chic_L,plus)
     
      + s_slack(2075,chic_L,minus) + s_slack(2075,chic_S,plus) + s_slack(2075,chic_S,minus) + s_slack(2075,coff_H,plus) + s_slack(2075,coff_H,minus) + s_slack(2075,coff_L,plus) + s_slack(2075,coff_L,minus) + s_slack(2075,cott_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 194
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2075,cott_L,minus) + s_slack(2075,cowp_H,plus) + s_slack(2075,cowp_H,minus) + s_slack(2075,cowp_L,plus) + s_slack(2075,cowp_L,minus) + s_slack(2075,cowp_S,plus) + s_slack(2075,cowp_S,minus) + s_slack(2075,grou_H,plus)
     
      + s_slack(2075,grou_H,minus) + s_slack(2075,grou_L,plus) + s_slack(2075,grou_L,minus) + s_slack(2075,grou_S,plus) + s_slack(2075,grou_S,minus) + s_slack(2075,lent_H,plus) + s_slack(2075,lent_H,minus) + s_slack(2075,lent_L,plus)
     
      + s_slack(2075,lent_L,minus) + s_slack(2075,lent_S,plus) + s_slack(2075,lent_S,minus) + s_slack(2075,maiz_H,plus) + s_slack(2075,maiz_H,minus) + s_slack(2075,maiz_L,plus) + s_slack(2075,maiz_L,minus) + s_slack(2075,maiz_S,plus)
     
      + s_slack(2075,maiz_S,minus) + s_slack(2075,mill_H,plus) + s_slack(2075,mill_H,minus) + s_slack(2075,mill_L,plus) + s_slack(2075,mill_L,minus) + s_slack(2075,mill_S,plus) + s_slack(2075,mill_S,minus) + s_slack(2075,ofib_L,plus)
     
      + s_slack(2075,ofib_L,minus) + s_slack(2075,ooil_L,plus) + s_slack(2075,ooil_L,minus) + s_slack(2075,opul_H,plus) + s_slack(2075,opul_H,minus) + s_slack(2075,opul_L,plus) + s_slack(2075,opul_L,minus) + s_slack(2075,opul_S,plus)
     
      + s_slack(2075,opul_S,minus) + s_slack(2075,pige_H,plus) + s_slack(2075,pige_H,minus) + s_slack(2075,pige_L,plus) + s_slack(2075,pige_L,minus) + s_slack(2075,pige_S,plus) + s_slack(2075,pige_S,minus) + s_slack(2075,pota_H,plus)
     
      + s_slack(2075,pota_H,minus) + s_slack(2075,pota_L,plus) + s_slack(2075,pota_L,minus) + s_slack(2075,pota_S,plus) + s_slack(2075,pota_S,minus) + s_slack(2075,rest_H,plus) + s_slack(2075,rest_H,minus) + s_slack(2075,rest_L,plus)
     
      + s_slack(2075,rest_L,minus) + s_slack(2075,rest_S,plus) + s_slack(2075,rest_S,minus) + s_slack(2075,rice_H,plus) + s_slack(2075,rice_H,minus) + s_slack(2075,rice_L,plus) + s_slack(2075,rice_L,minus) + s_slack(2075,rice_S,plus)
     
      + s_slack(2075,rice_S,minus) + s_slack(2075,sorg_L,plus) + s_slack(2075,sorg_L,minus) + s_slack(2075,sorg_S,plus) + s_slack(2075,sorg_S,minus) + s_slack(2075,soyb_L,plus) + s_slack(2075,soyb_L,minus) + s_slack(2075,soyb_S,plus)
     
      + s_slack(2075,soyb_S,minus) + s_slack(2075,sunf_L,plus) + s_slack(2075,sunf_L,minus) + s_slack(2075,temf_H,plus) + s_slack(2075,temf_H,minus) + s_slack(2075,temf_L,plus) + s_slack(2075,temf_L,minus) + s_slack(2075,temf_S,plus)
     
      + s_slack(2075,temf_S,minus) + s_slack(2075,toba_H,plus) + s_slack(2075,toba_H,minus) + s_slack(2075,toba_L,plus) + s_slack(2075,toba_L,minus) + s_slack(2075,trof_L,plus) + s_slack(2075,trof_L,minus) + s_slack(2075,trof_S,plus)
     
      + s_slack(2075,trof_S,minus) + s_slack(2075,vege_H,plus) + s_slack(2075,vege_H,minus) + s_slack(2075,vege_L,plus) + s_slack(2075,vege_L,minus) + s_slack(2075,vege_S,plus) + s_slack(2075,vege_S,minus) + s_slack(2076,rice_I,plus)
     
      + s_slack(2076,rice_I,minus) + s_slack(2076,sugc_I,plus) + s_slack(2076,sugc_I,minus) + s_slack(2076,whea_I,plus) + s_slack(2076,whea_I,minus) + s_slack(2076,bean_H,plus) + s_slack(2076,bean_H,minus) + s_slack(2076,bean_L,plus)
     
      + s_slack(2076,bean_L,minus) + s_slack(2076,bean_S,plus) + s_slack(2076,bean_S,minus) + s_slack(2076,cass_L,plus) + s_slack(2076,cass_L,minus) + s_slack(2076,cass_S,plus) + s_slack(2076,cass_S,minus) + s_slack(2076,chic_H,plus)
     
      + s_slack(2076,chic_H,minus) + s_slack(2076,chic_L,plus) + s_slack(2076,chic_L,minus) + s_slack(2076,chic_S,plus) + s_slack(2076,chic_S,minus) + s_slack(2076,coff_H,plus) + s_slack(2076,coff_H,minus) + s_slack(2076,coff_L,plus)
     
      + s_slack(2076,coff_L,minus) + s_slack(2076,cott_L,plus) + s_slack(2076,cott_L,minus) + s_slack(2076,cowp_H,plus) + s_slack(2076,cowp_H,minus) + s_slack(2076,cowp_L,plus) + s_slack(2076,cowp_L,minus) + s_slack(2076,cowp_S,plus)
     
      + s_slack(2076,cowp_S,minus) + s_slack(2076,grou_H,plus) + s_slack(2076,grou_H,minus) + s_slack(2076,grou_L,plus) + s_slack(2076,grou_L,minus) + s_slack(2076,grou_S,plus) + s_slack(2076,grou_S,minus) + s_slack(2076,lent_H,plus)
     
      + s_slack(2076,lent_H,minus) + s_slack(2076,lent_L,plus) + s_slack(2076,lent_L,minus) + s_slack(2076,lent_S,plus) + s_slack(2076,lent_S,minus) + s_slack(2076,maiz_H,plus) + s_slack(2076,maiz_H,minus) + s_slack(2076,maiz_L,plus)
     
      + s_slack(2076,maiz_L,minus) + s_slack(2076,maiz_S,plus) + s_slack(2076,maiz_S,minus) + s_slack(2076,mill_H,plus) + s_slack(2076,mill_H,minus) + s_slack(2076,mill_L,plus) + s_slack(2076,mill_L,minus) + s_slack(2076,mill_S,plus)
     
      + s_slack(2076,mill_S,minus) + s_slack(2076,ofib_L,plus) + s_slack(2076,ofib_L,minus) + s_slack(2076,ooil_L,plus) + s_slack(2076,ooil_L,minus) + s_slack(2076,opul_H,plus) + s_slack(2076,opul_H,minus) + s_slack(2076,opul_L,plus)
     
      + s_slack(2076,opul_L,minus) + s_slack(2076,opul_S,plus) + s_slack(2076,opul_S,minus) + s_slack(2076,pige_H,plus) + s_slack(2076,pige_H,minus) + s_slack(2076,pige_L,plus) + s_slack(2076,pige_L,minus) + s_slack(2076,pige_S,plus)
     
      + s_slack(2076,pige_S,minus) + s_slack(2076,pota_H,plus) + s_slack(2076,pota_H,minus) + s_slack(2076,pota_L,plus) + s_slack(2076,pota_L,minus) + s_slack(2076,pota_S,plus) + s_slack(2076,pota_S,minus) + s_slack(2076,rest_H,plus)
     
      + s_slack(2076,rest_H,minus) + s_slack(2076,rest_L,plus) + s_slack(2076,rest_L,minus) + s_slack(2076,rest_S,plus) + s_slack(2076,rest_S,minus) + s_slack(2076,rice_H,plus) + s_slack(2076,rice_H,minus) + s_slack(2076,rice_L,plus)
     
      + s_slack(2076,rice_L,minus) + s_slack(2076,rice_S,plus) + s_slack(2076,rice_S,minus) + s_slack(2076,sorg_L,plus) + s_slack(2076,sorg_L,minus) + s_slack(2076,sorg_S,plus) + s_slack(2076,sorg_S,minus) + s_slack(2076,soyb_L,plus)
     
      + s_slack(2076,soyb_L,minus) + s_slack(2076,soyb_S,plus) + s_slack(2076,soyb_S,minus) + s_slack(2076,sunf_L,plus) + s_slack(2076,sunf_L,minus) + s_slack(2076,temf_H,plus) + s_slack(2076,temf_H,minus) + s_slack(2076,temf_L,plus)
     
      + s_slack(2076,temf_L,minus) + s_slack(2076,temf_S,plus) + s_slack(2076,temf_S,minus) + s_slack(2076,toba_H,plus) + s_slack(2076,toba_H,minus) + s_slack(2076,toba_L,plus) + s_slack(2076,toba_L,minus) + s_slack(2076,trof_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 195
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2076,trof_L,minus) + s_slack(2076,trof_S,plus) + s_slack(2076,trof_S,minus) + s_slack(2076,vege_H,plus) + s_slack(2076,vege_H,minus) + s_slack(2076,vege_L,plus) + s_slack(2076,vege_L,minus) + s_slack(2076,vege_S,plus)
     
      + s_slack(2076,vege_S,minus) + s_slack(2077,rice_I,plus) + s_slack(2077,rice_I,minus) + s_slack(2077,sugc_I,plus) + s_slack(2077,sugc_I,minus) + s_slack(2077,whea_I,plus) + s_slack(2077,whea_I,minus) + s_slack(2077,bean_H,plus)
     
      + s_slack(2077,bean_H,minus) + s_slack(2077,bean_L,plus) + s_slack(2077,bean_L,minus) + s_slack(2077,bean_S,plus) + s_slack(2077,bean_S,minus) + s_slack(2077,cass_L,plus) + s_slack(2077,cass_L,minus) + s_slack(2077,cass_S,plus)
     
      + s_slack(2077,cass_S,minus) + s_slack(2077,chic_H,plus) + s_slack(2077,chic_H,minus) + s_slack(2077,chic_L,plus) + s_slack(2077,chic_L,minus) + s_slack(2077,chic_S,plus) + s_slack(2077,chic_S,minus) + s_slack(2077,coff_H,plus)
     
      + s_slack(2077,coff_H,minus) + s_slack(2077,coff_L,plus) + s_slack(2077,coff_L,minus) + s_slack(2077,cott_L,plus) + s_slack(2077,cott_L,minus) + s_slack(2077,cowp_H,plus) + s_slack(2077,cowp_H,minus) + s_slack(2077,cowp_L,plus)
     
      + s_slack(2077,cowp_L,minus) + s_slack(2077,cowp_S,plus) + s_slack(2077,cowp_S,minus) + s_slack(2077,grou_H,plus) + s_slack(2077,grou_H,minus) + s_slack(2077,grou_L,plus) + s_slack(2077,grou_L,minus) + s_slack(2077,grou_S,plus)
     
      + s_slack(2077,grou_S,minus) + s_slack(2077,lent_H,plus) + s_slack(2077,lent_H,minus) + s_slack(2077,lent_L,plus) + s_slack(2077,lent_L,minus) + s_slack(2077,lent_S,plus) + s_slack(2077,lent_S,minus) + s_slack(2077,maiz_H,plus)
     
      + s_slack(2077,maiz_H,minus) + s_slack(2077,maiz_L,plus) + s_slack(2077,maiz_L,minus) + s_slack(2077,maiz_S,plus) + s_slack(2077,maiz_S,minus) + s_slack(2077,mill_H,plus) + s_slack(2077,mill_H,minus) + s_slack(2077,mill_L,plus)
     
      + s_slack(2077,mill_L,minus) + s_slack(2077,mill_S,plus) + s_slack(2077,mill_S,minus) + s_slack(2077,ofib_L,plus) + s_slack(2077,ofib_L,minus) + s_slack(2077,ooil_L,plus) + s_slack(2077,ooil_L,minus) + s_slack(2077,opul_H,plus)
     
      + s_slack(2077,opul_H,minus) + s_slack(2077,opul_L,plus) + s_slack(2077,opul_L,minus) + s_slack(2077,opul_S,plus) + s_slack(2077,opul_S,minus) + s_slack(2077,pige_H,plus) + s_slack(2077,pige_H,minus) + s_slack(2077,pige_L,plus)
     
      + s_slack(2077,pige_L,minus) + s_slack(2077,pige_S,plus) + s_slack(2077,pige_S,minus) + s_slack(2077,pota_H,plus) + s_slack(2077,pota_H,minus) + s_slack(2077,pota_L,plus) + s_slack(2077,pota_L,minus) + s_slack(2077,pota_S,plus)
     
      + s_slack(2077,pota_S,minus) + s_slack(2077,rest_H,plus) + s_slack(2077,rest_H,minus) + s_slack(2077,rest_L,plus) + s_slack(2077,rest_L,minus) + s_slack(2077,rest_S,plus) + s_slack(2077,rest_S,minus) + s_slack(2077,rice_H,plus)
     
      + s_slack(2077,rice_H,minus) + s_slack(2077,rice_L,plus) + s_slack(2077,rice_L,minus) + s_slack(2077,rice_S,plus) + s_slack(2077,rice_S,minus) + s_slack(2077,sorg_L,plus) + s_slack(2077,sorg_L,minus) + s_slack(2077,sorg_S,plus)
     
      + s_slack(2077,sorg_S,minus) + s_slack(2077,soyb_L,plus) + s_slack(2077,soyb_L,minus) + s_slack(2077,soyb_S,plus) + s_slack(2077,soyb_S,minus) + s_slack(2077,sunf_L,plus) + s_slack(2077,sunf_L,minus) + s_slack(2077,temf_H,plus)
     
      + s_slack(2077,temf_H,minus) + s_slack(2077,temf_L,plus) + s_slack(2077,temf_L,minus) + s_slack(2077,temf_S,plus) + s_slack(2077,temf_S,minus) + s_slack(2077,toba_H,plus) + s_slack(2077,toba_H,minus) + s_slack(2077,toba_L,plus)
     
      + s_slack(2077,toba_L,minus) + s_slack(2077,trof_L,plus) + s_slack(2077,trof_L,minus) + s_slack(2077,trof_S,plus) + s_slack(2077,trof_S,minus) + s_slack(2077,vege_H,plus) + s_slack(2077,vege_H,minus) + s_slack(2077,vege_L,plus)
     
      + s_slack(2077,vege_L,minus) + s_slack(2077,vege_S,plus) + s_slack(2077,vege_S,minus) + s_slack(2078,rice_I,plus) + s_slack(2078,rice_I,minus) + s_slack(2078,sugc_I,plus) + s_slack(2078,sugc_I,minus) + s_slack(2078,whea_I,plus)
     
      + s_slack(2078,whea_I,minus) + s_slack(2078,bean_H,plus) + s_slack(2078,bean_H,minus) + s_slack(2078,bean_L,plus) + s_slack(2078,bean_L,minus) + s_slack(2078,bean_S,plus) + s_slack(2078,bean_S,minus) + s_slack(2078,cass_L,plus)
     
      + s_slack(2078,cass_L,minus) + s_slack(2078,cass_S,plus) + s_slack(2078,cass_S,minus) + s_slack(2078,chic_H,plus) + s_slack(2078,chic_H,minus) + s_slack(2078,chic_L,plus) + s_slack(2078,chic_L,minus) + s_slack(2078,chic_S,plus)
     
      + s_slack(2078,chic_S,minus) + s_slack(2078,coff_H,plus) + s_slack(2078,coff_H,minus) + s_slack(2078,coff_L,plus) + s_slack(2078,coff_L,minus) + s_slack(2078,cott_L,plus) + s_slack(2078,cott_L,minus) + s_slack(2078,cowp_H,plus)
     
      + s_slack(2078,cowp_H,minus) + s_slack(2078,cowp_L,plus) + s_slack(2078,cowp_L,minus) + s_slack(2078,cowp_S,plus) + s_slack(2078,cowp_S,minus) + s_slack(2078,grou_H,plus) + s_slack(2078,grou_H,minus) + s_slack(2078,grou_L,plus)
     
      + s_slack(2078,grou_L,minus) + s_slack(2078,grou_S,plus) + s_slack(2078,grou_S,minus) + s_slack(2078,lent_H,plus) + s_slack(2078,lent_H,minus) + s_slack(2078,lent_L,plus) + s_slack(2078,lent_L,minus) + s_slack(2078,lent_S,plus)
     
      + s_slack(2078,lent_S,minus) + s_slack(2078,maiz_H,plus) + s_slack(2078,maiz_H,minus) + s_slack(2078,maiz_L,plus) + s_slack(2078,maiz_L,minus) + s_slack(2078,maiz_S,plus) + s_slack(2078,maiz_S,minus) + s_slack(2078,mill_H,plus)
     
      + s_slack(2078,mill_H,minus) + s_slack(2078,mill_L,plus) + s_slack(2078,mill_L,minus) + s_slack(2078,mill_S,plus) + s_slack(2078,mill_S,minus) + s_slack(2078,ofib_L,plus) + s_slack(2078,ofib_L,minus) + s_slack(2078,ooil_L,plus)
     
      + s_slack(2078,ooil_L,minus) + s_slack(2078,opul_H,plus) + s_slack(2078,opul_H,minus) + s_slack(2078,opul_L,plus) + s_slack(2078,opul_L,minus) + s_slack(2078,opul_S,plus) + s_slack(2078,opul_S,minus) + s_slack(2078,pige_H,plus)
     
      + s_slack(2078,pige_H,minus) + s_slack(2078,pige_L,plus) + s_slack(2078,pige_L,minus) + s_slack(2078,pige_S,plus) + s_slack(2078,pige_S,minus) + s_slack(2078,pota_H,plus) + s_slack(2078,pota_H,minus) + s_slack(2078,pota_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 196
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2078,pota_L,minus) + s_slack(2078,pota_S,plus) + s_slack(2078,pota_S,minus) + s_slack(2078,rest_H,plus) + s_slack(2078,rest_H,minus) + s_slack(2078,rest_L,plus) + s_slack(2078,rest_L,minus) + s_slack(2078,rest_S,plus)
     
      + s_slack(2078,rest_S,minus) + s_slack(2078,rice_H,plus) + s_slack(2078,rice_H,minus) + s_slack(2078,rice_L,plus) + s_slack(2078,rice_L,minus) + s_slack(2078,rice_S,plus) + s_slack(2078,rice_S,minus) + s_slack(2078,sorg_L,plus)
     
      + s_slack(2078,sorg_L,minus) + s_slack(2078,sorg_S,plus) + s_slack(2078,sorg_S,minus) + s_slack(2078,soyb_L,plus) + s_slack(2078,soyb_L,minus) + s_slack(2078,soyb_S,plus) + s_slack(2078,soyb_S,minus) + s_slack(2078,sunf_L,plus)
     
      + s_slack(2078,sunf_L,minus) + s_slack(2078,temf_H,plus) + s_slack(2078,temf_H,minus) + s_slack(2078,temf_L,plus) + s_slack(2078,temf_L,minus) + s_slack(2078,temf_S,plus) + s_slack(2078,temf_S,minus) + s_slack(2078,toba_H,plus)
     
      + s_slack(2078,toba_H,minus) + s_slack(2078,toba_L,plus) + s_slack(2078,toba_L,minus) + s_slack(2078,trof_L,plus) + s_slack(2078,trof_L,minus) + s_slack(2078,trof_S,plus) + s_slack(2078,trof_S,minus) + s_slack(2078,vege_H,plus)
     
      + s_slack(2078,vege_H,minus) + s_slack(2078,vege_L,plus) + s_slack(2078,vege_L,minus) + s_slack(2078,vege_S,plus) + s_slack(2078,vege_S,minus) + s_slack(2079,rice_I,plus) + s_slack(2079,rice_I,minus) + s_slack(2079,sugc_I,plus)
     
      + s_slack(2079,sugc_I,minus) + s_slack(2079,whea_I,plus) + s_slack(2079,whea_I,minus) + s_slack(2079,bean_H,plus) + s_slack(2079,bean_H,minus) + s_slack(2079,bean_L,plus) + s_slack(2079,bean_L,minus) + s_slack(2079,bean_S,plus)
     
      + s_slack(2079,bean_S,minus) + s_slack(2079,cass_L,plus) + s_slack(2079,cass_L,minus) + s_slack(2079,cass_S,plus) + s_slack(2079,cass_S,minus) + s_slack(2079,chic_H,plus) + s_slack(2079,chic_H,minus) + s_slack(2079,chic_L,plus)
     
      + s_slack(2079,chic_L,minus) + s_slack(2079,chic_S,plus) + s_slack(2079,chic_S,minus) + s_slack(2079,coff_H,plus) + s_slack(2079,coff_H,minus) + s_slack(2079,coff_L,plus) + s_slack(2079,coff_L,minus) + s_slack(2079,cott_L,plus)
     
      + s_slack(2079,cott_L,minus) + s_slack(2079,cowp_H,plus) + s_slack(2079,cowp_H,minus) + s_slack(2079,cowp_L,plus) + s_slack(2079,cowp_L,minus) + s_slack(2079,cowp_S,plus) + s_slack(2079,cowp_S,minus) + s_slack(2079,grou_H,plus)
     
      + s_slack(2079,grou_H,minus) + s_slack(2079,grou_L,plus) + s_slack(2079,grou_L,minus) + s_slack(2079,grou_S,plus) + s_slack(2079,grou_S,minus) + s_slack(2079,lent_H,plus) + s_slack(2079,lent_H,minus) + s_slack(2079,lent_L,plus)
     
      + s_slack(2079,lent_L,minus) + s_slack(2079,lent_S,plus) + s_slack(2079,lent_S,minus) + s_slack(2079,maiz_H,plus) + s_slack(2079,maiz_H,minus) + s_slack(2079,maiz_L,plus) + s_slack(2079,maiz_L,minus) + s_slack(2079,maiz_S,plus)
     
      + s_slack(2079,maiz_S,minus) + s_slack(2079,mill_H,plus) + s_slack(2079,mill_H,minus) + s_slack(2079,mill_L,plus) + s_slack(2079,mill_L,minus) + s_slack(2079,mill_S,plus) + s_slack(2079,mill_S,minus) + s_slack(2079,ofib_L,plus)
     
      + s_slack(2079,ofib_L,minus) + s_slack(2079,ooil_L,plus) + s_slack(2079,ooil_L,minus) + s_slack(2079,opul_H,plus) + s_slack(2079,opul_H,minus) + s_slack(2079,opul_L,plus) + s_slack(2079,opul_L,minus) + s_slack(2079,opul_S,plus)
     
      + s_slack(2079,opul_S,minus) + s_slack(2079,pige_H,plus) + s_slack(2079,pige_H,minus) + s_slack(2079,pige_L,plus) + s_slack(2079,pige_L,minus) + s_slack(2079,pige_S,plus) + s_slack(2079,pige_S,minus) + s_slack(2079,pota_H,plus)
     
      + s_slack(2079,pota_H,minus) + s_slack(2079,pota_L,plus) + s_slack(2079,pota_L,minus) + s_slack(2079,pota_S,plus) + s_slack(2079,pota_S,minus) + s_slack(2079,rest_H,plus) + s_slack(2079,rest_H,minus) + s_slack(2079,rest_L,plus)
     
      + s_slack(2079,rest_L,minus) + s_slack(2079,rest_S,plus) + s_slack(2079,rest_S,minus) + s_slack(2079,rice_H,plus) + s_slack(2079,rice_H,minus) + s_slack(2079,rice_L,plus) + s_slack(2079,rice_L,minus) + s_slack(2079,rice_S,plus)
     
      + s_slack(2079,rice_S,minus) + s_slack(2079,sorg_L,plus) + s_slack(2079,sorg_L,minus) + s_slack(2079,sorg_S,plus) + s_slack(2079,sorg_S,minus) + s_slack(2079,soyb_L,plus) + s_slack(2079,soyb_L,minus) + s_slack(2079,soyb_S,plus)
     
      + s_slack(2079,soyb_S,minus) + s_slack(2079,sunf_L,plus) + s_slack(2079,sunf_L,minus) + s_slack(2079,temf_H,plus) + s_slack(2079,temf_H,minus) + s_slack(2079,temf_L,plus) + s_slack(2079,temf_L,minus) + s_slack(2079,temf_S,plus)
     
      + s_slack(2079,temf_S,minus) + s_slack(2079,toba_H,plus) + s_slack(2079,toba_H,minus) + s_slack(2079,toba_L,plus) + s_slack(2079,toba_L,minus) + s_slack(2079,trof_L,plus) + s_slack(2079,trof_L,minus) + s_slack(2079,trof_S,plus)
     
      + s_slack(2079,trof_S,minus) + s_slack(2079,vege_H,plus) + s_slack(2079,vege_H,minus) + s_slack(2079,vege_L,plus) + s_slack(2079,vege_L,minus) + s_slack(2079,vege_S,plus) + s_slack(2079,vege_S,minus) + s_slack(2080,rice_I,plus)
     
      + s_slack(2080,rice_I,minus) + s_slack(2080,sugc_I,plus) + s_slack(2080,sugc_I,minus) + s_slack(2080,whea_I,plus) + s_slack(2080,whea_I,minus) + s_slack(2080,bean_H,plus) + s_slack(2080,bean_H,minus) + s_slack(2080,bean_L,plus)
     
      + s_slack(2080,bean_L,minus) + s_slack(2080,bean_S,plus) + s_slack(2080,bean_S,minus) + s_slack(2080,cass_L,plus) + s_slack(2080,cass_L,minus) + s_slack(2080,cass_S,plus) + s_slack(2080,cass_S,minus) + s_slack(2080,chic_H,plus)
     
      + s_slack(2080,chic_H,minus) + s_slack(2080,chic_L,plus) + s_slack(2080,chic_L,minus) + s_slack(2080,chic_S,plus) + s_slack(2080,chic_S,minus) + s_slack(2080,coff_H,plus) + s_slack(2080,coff_H,minus) + s_slack(2080,coff_L,plus)
     
      + s_slack(2080,coff_L,minus) + s_slack(2080,cott_L,plus) + s_slack(2080,cott_L,minus) + s_slack(2080,cowp_H,plus) + s_slack(2080,cowp_H,minus) + s_slack(2080,cowp_L,plus) + s_slack(2080,cowp_L,minus) + s_slack(2080,cowp_S,plus)
     
      + s_slack(2080,cowp_S,minus) + s_slack(2080,grou_H,plus) + s_slack(2080,grou_H,minus) + s_slack(2080,grou_L,plus) + s_slack(2080,grou_L,minus) + s_slack(2080,grou_S,plus) + s_slack(2080,grou_S,minus) + s_slack(2080,lent_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 197
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2080,lent_H,minus) + s_slack(2080,lent_L,plus) + s_slack(2080,lent_L,minus) + s_slack(2080,lent_S,plus) + s_slack(2080,lent_S,minus) + s_slack(2080,maiz_H,plus) + s_slack(2080,maiz_H,minus) + s_slack(2080,maiz_L,plus)
     
      + s_slack(2080,maiz_L,minus) + s_slack(2080,maiz_S,plus) + s_slack(2080,maiz_S,minus) + s_slack(2080,mill_H,plus) + s_slack(2080,mill_H,minus) + s_slack(2080,mill_L,plus) + s_slack(2080,mill_L,minus) + s_slack(2080,mill_S,plus)
     
      + s_slack(2080,mill_S,minus) + s_slack(2080,ofib_L,plus) + s_slack(2080,ofib_L,minus) + s_slack(2080,ooil_L,plus) + s_slack(2080,ooil_L,minus) + s_slack(2080,opul_H,plus) + s_slack(2080,opul_H,minus) + s_slack(2080,opul_L,plus)
     
      + s_slack(2080,opul_L,minus) + s_slack(2080,opul_S,plus) + s_slack(2080,opul_S,minus) + s_slack(2080,pige_H,plus) + s_slack(2080,pige_H,minus) + s_slack(2080,pige_L,plus) + s_slack(2080,pige_L,minus) + s_slack(2080,pige_S,plus)
     
      + s_slack(2080,pige_S,minus) + s_slack(2080,pota_H,plus) + s_slack(2080,pota_H,minus) + s_slack(2080,pota_L,plus) + s_slack(2080,pota_L,minus) + s_slack(2080,pota_S,plus) + s_slack(2080,pota_S,minus) + s_slack(2080,rest_H,plus)
     
      + s_slack(2080,rest_H,minus) + s_slack(2080,rest_L,plus) + s_slack(2080,rest_L,minus) + s_slack(2080,rest_S,plus) + s_slack(2080,rest_S,minus) + s_slack(2080,rice_H,plus) + s_slack(2080,rice_H,minus) + s_slack(2080,rice_L,plus)
     
      + s_slack(2080,rice_L,minus) + s_slack(2080,rice_S,plus) + s_slack(2080,rice_S,minus) + s_slack(2080,sorg_L,plus) + s_slack(2080,sorg_L,minus) + s_slack(2080,sorg_S,plus) + s_slack(2080,sorg_S,minus) + s_slack(2080,soyb_L,plus)
     
      + s_slack(2080,soyb_L,minus) + s_slack(2080,soyb_S,plus) + s_slack(2080,soyb_S,minus) + s_slack(2080,sunf_L,plus) + s_slack(2080,sunf_L,minus) + s_slack(2080,temf_H,plus) + s_slack(2080,temf_H,minus) + s_slack(2080,temf_L,plus)
     
      + s_slack(2080,temf_L,minus) + s_slack(2080,temf_S,plus) + s_slack(2080,temf_S,minus) + s_slack(2080,toba_H,plus) + s_slack(2080,toba_H,minus) + s_slack(2080,toba_L,plus) + s_slack(2080,toba_L,minus) + s_slack(2080,trof_L,plus)
     
      + s_slack(2080,trof_L,minus) + s_slack(2080,trof_S,plus) + s_slack(2080,trof_S,minus) + s_slack(2080,vege_H,plus) + s_slack(2080,vege_H,minus) + s_slack(2080,vege_L,plus) + s_slack(2080,vege_L,minus) + s_slack(2080,vege_S,plus)
     
      + s_slack(2080,vege_S,minus) + s_slack(2081,rice_I,plus) + s_slack(2081,rice_I,minus) + s_slack(2081,sugc_I,plus) + s_slack(2081,sugc_I,minus) + s_slack(2081,whea_I,plus) + s_slack(2081,whea_I,minus) + s_slack(2081,bean_H,plus)
     
      + s_slack(2081,bean_H,minus) + s_slack(2081,bean_L,plus) + s_slack(2081,bean_L,minus) + s_slack(2081,bean_S,plus) + s_slack(2081,bean_S,minus) + s_slack(2081,cass_L,plus) + s_slack(2081,cass_L,minus) + s_slack(2081,cass_S,plus)
     
      + s_slack(2081,cass_S,minus) + s_slack(2081,chic_H,plus) + s_slack(2081,chic_H,minus) + s_slack(2081,chic_L,plus) + s_slack(2081,chic_L,minus) + s_slack(2081,chic_S,plus) + s_slack(2081,chic_S,minus) + s_slack(2081,coff_H,plus)
     
      + s_slack(2081,coff_H,minus) + s_slack(2081,coff_L,plus) + s_slack(2081,coff_L,minus) + s_slack(2081,cott_L,plus) + s_slack(2081,cott_L,minus) + s_slack(2081,cowp_H,plus) + s_slack(2081,cowp_H,minus) + s_slack(2081,cowp_L,plus)
     
      + s_slack(2081,cowp_L,minus) + s_slack(2081,cowp_S,plus) + s_slack(2081,cowp_S,minus) + s_slack(2081,grou_H,plus) + s_slack(2081,grou_H,minus) + s_slack(2081,grou_L,plus) + s_slack(2081,grou_L,minus) + s_slack(2081,grou_S,plus)
     
      + s_slack(2081,grou_S,minus) + s_slack(2081,lent_H,plus) + s_slack(2081,lent_H,minus) + s_slack(2081,lent_L,plus) + s_slack(2081,lent_L,minus) + s_slack(2081,lent_S,plus) + s_slack(2081,lent_S,minus) + s_slack(2081,maiz_H,plus)
     
      + s_slack(2081,maiz_H,minus) + s_slack(2081,maiz_L,plus) + s_slack(2081,maiz_L,minus) + s_slack(2081,maiz_S,plus) + s_slack(2081,maiz_S,minus) + s_slack(2081,mill_H,plus) + s_slack(2081,mill_H,minus) + s_slack(2081,mill_L,plus)
     
      + s_slack(2081,mill_L,minus) + s_slack(2081,mill_S,plus) + s_slack(2081,mill_S,minus) + s_slack(2081,ofib_L,plus) + s_slack(2081,ofib_L,minus) + s_slack(2081,ooil_L,plus) + s_slack(2081,ooil_L,minus) + s_slack(2081,opul_H,plus)
     
      + s_slack(2081,opul_H,minus) + s_slack(2081,opul_L,plus) + s_slack(2081,opul_L,minus) + s_slack(2081,opul_S,plus) + s_slack(2081,opul_S,minus) + s_slack(2081,pige_H,plus) + s_slack(2081,pige_H,minus) + s_slack(2081,pige_L,plus)
     
      + s_slack(2081,pige_L,minus) + s_slack(2081,pige_S,plus) + s_slack(2081,pige_S,minus) + s_slack(2081,pota_H,plus) + s_slack(2081,pota_H,minus) + s_slack(2081,pota_L,plus) + s_slack(2081,pota_L,minus) + s_slack(2081,pota_S,plus)
     
      + s_slack(2081,pota_S,minus) + s_slack(2081,rest_H,plus) + s_slack(2081,rest_H,minus) + s_slack(2081,rest_L,plus) + s_slack(2081,rest_L,minus) + s_slack(2081,rest_S,plus) + s_slack(2081,rest_S,minus) + s_slack(2081,rice_H,plus)
     
      + s_slack(2081,rice_H,minus) + s_slack(2081,rice_L,plus) + s_slack(2081,rice_L,minus) + s_slack(2081,rice_S,plus) + s_slack(2081,rice_S,minus) + s_slack(2081,sorg_L,plus) + s_slack(2081,sorg_L,minus) + s_slack(2081,sorg_S,plus)
     
      + s_slack(2081,sorg_S,minus) + s_slack(2081,soyb_L,plus) + s_slack(2081,soyb_L,minus) + s_slack(2081,soyb_S,plus) + s_slack(2081,soyb_S,minus) + s_slack(2081,sunf_L,plus) + s_slack(2081,sunf_L,minus) + s_slack(2081,temf_H,plus)
     
      + s_slack(2081,temf_H,minus) + s_slack(2081,temf_L,plus) + s_slack(2081,temf_L,minus) + s_slack(2081,temf_S,plus) + s_slack(2081,temf_S,minus) + s_slack(2081,toba_H,plus) + s_slack(2081,toba_H,minus) + s_slack(2081,toba_L,plus)
     
      + s_slack(2081,toba_L,minus) + s_slack(2081,trof_L,plus) + s_slack(2081,trof_L,minus) + s_slack(2081,trof_S,plus) + s_slack(2081,trof_S,minus) + s_slack(2081,vege_H,plus) + s_slack(2081,vege_H,minus) + s_slack(2081,vege_L,plus)
     
      + s_slack(2081,vege_L,minus) + s_slack(2081,vege_S,plus) + s_slack(2081,vege_S,minus) + s_slack(2082,rice_I,plus) + s_slack(2082,rice_I,minus) + s_slack(2082,sugc_I,plus) + s_slack(2082,sugc_I,minus) + s_slack(2082,whea_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 198
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2082,whea_I,minus) + s_slack(2082,bean_H,plus) + s_slack(2082,bean_H,minus) + s_slack(2082,bean_L,plus) + s_slack(2082,bean_L,minus) + s_slack(2082,bean_S,plus) + s_slack(2082,bean_S,minus) + s_slack(2082,cass_L,plus)
     
      + s_slack(2082,cass_L,minus) + s_slack(2082,cass_S,plus) + s_slack(2082,cass_S,minus) + s_slack(2082,chic_H,plus) + s_slack(2082,chic_H,minus) + s_slack(2082,chic_L,plus) + s_slack(2082,chic_L,minus) + s_slack(2082,chic_S,plus)
     
      + s_slack(2082,chic_S,minus) + s_slack(2082,coff_H,plus) + s_slack(2082,coff_H,minus) + s_slack(2082,coff_L,plus) + s_slack(2082,coff_L,minus) + s_slack(2082,cott_L,plus) + s_slack(2082,cott_L,minus) + s_slack(2082,cowp_H,plus)
     
      + s_slack(2082,cowp_H,minus) + s_slack(2082,cowp_L,plus) + s_slack(2082,cowp_L,minus) + s_slack(2082,cowp_S,plus) + s_slack(2082,cowp_S,minus) + s_slack(2082,grou_H,plus) + s_slack(2082,grou_H,minus) + s_slack(2082,grou_L,plus)
     
      + s_slack(2082,grou_L,minus) + s_slack(2082,grou_S,plus) + s_slack(2082,grou_S,minus) + s_slack(2082,lent_H,plus) + s_slack(2082,lent_H,minus) + s_slack(2082,lent_L,plus) + s_slack(2082,lent_L,minus) + s_slack(2082,lent_S,plus)
     
      + s_slack(2082,lent_S,minus) + s_slack(2082,maiz_H,plus) + s_slack(2082,maiz_H,minus) + s_slack(2082,maiz_L,plus) + s_slack(2082,maiz_L,minus) + s_slack(2082,maiz_S,plus) + s_slack(2082,maiz_S,minus) + s_slack(2082,mill_H,plus)
     
      + s_slack(2082,mill_H,minus) + s_slack(2082,mill_L,plus) + s_slack(2082,mill_L,minus) + s_slack(2082,mill_S,plus) + s_slack(2082,mill_S,minus) + s_slack(2082,ofib_L,plus) + s_slack(2082,ofib_L,minus) + s_slack(2082,ooil_L,plus)
     
      + s_slack(2082,ooil_L,minus) + s_slack(2082,opul_H,plus) + s_slack(2082,opul_H,minus) + s_slack(2082,opul_L,plus) + s_slack(2082,opul_L,minus) + s_slack(2082,opul_S,plus) + s_slack(2082,opul_S,minus) + s_slack(2082,pige_H,plus)
     
      + s_slack(2082,pige_H,minus) + s_slack(2082,pige_L,plus) + s_slack(2082,pige_L,minus) + s_slack(2082,pige_S,plus) + s_slack(2082,pige_S,minus) + s_slack(2082,pota_H,plus) + s_slack(2082,pota_H,minus) + s_slack(2082,pota_L,plus)
     
      + s_slack(2082,pota_L,minus) + s_slack(2082,pota_S,plus) + s_slack(2082,pota_S,minus) + s_slack(2082,rest_H,plus) + s_slack(2082,rest_H,minus) + s_slack(2082,rest_L,plus) + s_slack(2082,rest_L,minus) + s_slack(2082,rest_S,plus)
     
      + s_slack(2082,rest_S,minus) + s_slack(2082,rice_H,plus) + s_slack(2082,rice_H,minus) + s_slack(2082,rice_L,plus) + s_slack(2082,rice_L,minus) + s_slack(2082,rice_S,plus) + s_slack(2082,rice_S,minus) + s_slack(2082,sorg_L,plus)
     
      + s_slack(2082,sorg_L,minus) + s_slack(2082,sorg_S,plus) + s_slack(2082,sorg_S,minus) + s_slack(2082,soyb_L,plus) + s_slack(2082,soyb_L,minus) + s_slack(2082,soyb_S,plus) + s_slack(2082,soyb_S,minus) + s_slack(2082,sunf_L,plus)
     
      + s_slack(2082,sunf_L,minus) + s_slack(2082,temf_H,plus) + s_slack(2082,temf_H,minus) + s_slack(2082,temf_L,plus) + s_slack(2082,temf_L,minus) + s_slack(2082,temf_S,plus) + s_slack(2082,temf_S,minus) + s_slack(2082,toba_H,plus)
     
      + s_slack(2082,toba_H,minus) + s_slack(2082,toba_L,plus) + s_slack(2082,toba_L,minus) + s_slack(2082,trof_L,plus) + s_slack(2082,trof_L,minus) + s_slack(2082,trof_S,plus) + s_slack(2082,trof_S,minus) + s_slack(2082,vege_H,plus)
     
      + s_slack(2082,vege_H,minus) + s_slack(2082,vege_L,plus) + s_slack(2082,vege_L,minus) + s_slack(2082,vege_S,plus) + s_slack(2082,vege_S,minus) + s_slack(2083,rice_I,plus) + s_slack(2083,rice_I,minus) + s_slack(2083,sugc_I,plus)
     
      + s_slack(2083,sugc_I,minus) + s_slack(2083,whea_I,plus) + s_slack(2083,whea_I,minus) + s_slack(2083,bean_H,plus) + s_slack(2083,bean_H,minus) + s_slack(2083,bean_L,plus) + s_slack(2083,bean_L,minus) + s_slack(2083,bean_S,plus)
     
      + s_slack(2083,bean_S,minus) + s_slack(2083,cass_L,plus) + s_slack(2083,cass_L,minus) + s_slack(2083,cass_S,plus) + s_slack(2083,cass_S,minus) + s_slack(2083,chic_H,plus) + s_slack(2083,chic_H,minus) + s_slack(2083,chic_L,plus)
     
      + s_slack(2083,chic_L,minus) + s_slack(2083,chic_S,plus) + s_slack(2083,chic_S,minus) + s_slack(2083,coff_H,plus) + s_slack(2083,coff_H,minus) + s_slack(2083,coff_L,plus) + s_slack(2083,coff_L,minus) + s_slack(2083,cott_L,plus)
     
      + s_slack(2083,cott_L,minus) + s_slack(2083,cowp_H,plus) + s_slack(2083,cowp_H,minus) + s_slack(2083,cowp_L,plus) + s_slack(2083,cowp_L,minus) + s_slack(2083,cowp_S,plus) + s_slack(2083,cowp_S,minus) + s_slack(2083,grou_H,plus)
     
      + s_slack(2083,grou_H,minus) + s_slack(2083,grou_L,plus) + s_slack(2083,grou_L,minus) + s_slack(2083,grou_S,plus) + s_slack(2083,grou_S,minus) + s_slack(2083,lent_H,plus) + s_slack(2083,lent_H,minus) + s_slack(2083,lent_L,plus)
     
      + s_slack(2083,lent_L,minus) + s_slack(2083,lent_S,plus) + s_slack(2083,lent_S,minus) + s_slack(2083,maiz_H,plus) + s_slack(2083,maiz_H,minus) + s_slack(2083,maiz_L,plus) + s_slack(2083,maiz_L,minus) + s_slack(2083,maiz_S,plus)
     
      + s_slack(2083,maiz_S,minus) + s_slack(2083,mill_H,plus) + s_slack(2083,mill_H,minus) + s_slack(2083,mill_L,plus) + s_slack(2083,mill_L,minus) + s_slack(2083,mill_S,plus) + s_slack(2083,mill_S,minus) + s_slack(2083,ofib_L,plus)
     
      + s_slack(2083,ofib_L,minus) + s_slack(2083,ooil_L,plus) + s_slack(2083,ooil_L,minus) + s_slack(2083,opul_H,plus) + s_slack(2083,opul_H,minus) + s_slack(2083,opul_L,plus) + s_slack(2083,opul_L,minus) + s_slack(2083,opul_S,plus)
     
      + s_slack(2083,opul_S,minus) + s_slack(2083,pige_H,plus) + s_slack(2083,pige_H,minus) + s_slack(2083,pige_L,plus) + s_slack(2083,pige_L,minus) + s_slack(2083,pige_S,plus) + s_slack(2083,pige_S,minus) + s_slack(2083,pota_H,plus)
     
      + s_slack(2083,pota_H,minus) + s_slack(2083,pota_L,plus) + s_slack(2083,pota_L,minus) + s_slack(2083,pota_S,plus) + s_slack(2083,pota_S,minus) + s_slack(2083,rest_H,plus) + s_slack(2083,rest_H,minus) + s_slack(2083,rest_L,plus)
     
      + s_slack(2083,rest_L,minus) + s_slack(2083,rest_S,plus) + s_slack(2083,rest_S,minus) + s_slack(2083,rice_H,plus) + s_slack(2083,rice_H,minus) + s_slack(2083,rice_L,plus) + s_slack(2083,rice_L,minus) + s_slack(2083,rice_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 199
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2083,rice_S,minus) + s_slack(2083,sorg_L,plus) + s_slack(2083,sorg_L,minus) + s_slack(2083,sorg_S,plus) + s_slack(2083,sorg_S,minus) + s_slack(2083,soyb_L,plus) + s_slack(2083,soyb_L,minus) + s_slack(2083,soyb_S,plus)
     
      + s_slack(2083,soyb_S,minus) + s_slack(2083,sunf_L,plus) + s_slack(2083,sunf_L,minus) + s_slack(2083,temf_H,plus) + s_slack(2083,temf_H,minus) + s_slack(2083,temf_L,plus) + s_slack(2083,temf_L,minus) + s_slack(2083,temf_S,plus)
     
      + s_slack(2083,temf_S,minus) + s_slack(2083,toba_H,plus) + s_slack(2083,toba_H,minus) + s_slack(2083,toba_L,plus) + s_slack(2083,toba_L,minus) + s_slack(2083,trof_L,plus) + s_slack(2083,trof_L,minus) + s_slack(2083,trof_S,plus)
     
      + s_slack(2083,trof_S,minus) + s_slack(2083,vege_H,plus) + s_slack(2083,vege_H,minus) + s_slack(2083,vege_L,plus) + s_slack(2083,vege_L,minus) + s_slack(2083,vege_S,plus) + s_slack(2083,vege_S,minus) + s_slack(2084,rice_I,plus)
     
      + s_slack(2084,rice_I,minus) + s_slack(2084,sugc_I,plus) + s_slack(2084,sugc_I,minus) + s_slack(2084,whea_I,plus) + s_slack(2084,whea_I,minus) + s_slack(2084,bean_H,plus) + s_slack(2084,bean_H,minus) + s_slack(2084,bean_L,plus)
     
      + s_slack(2084,bean_L,minus) + s_slack(2084,bean_S,plus) + s_slack(2084,bean_S,minus) + s_slack(2084,cass_L,plus) + s_slack(2084,cass_L,minus) + s_slack(2084,cass_S,plus) + s_slack(2084,cass_S,minus) + s_slack(2084,chic_H,plus)
     
      + s_slack(2084,chic_H,minus) + s_slack(2084,chic_L,plus) + s_slack(2084,chic_L,minus) + s_slack(2084,chic_S,plus) + s_slack(2084,chic_S,minus) + s_slack(2084,coff_H,plus) + s_slack(2084,coff_H,minus) + s_slack(2084,coff_L,plus)
     
      + s_slack(2084,coff_L,minus) + s_slack(2084,cott_L,plus) + s_slack(2084,cott_L,minus) + s_slack(2084,cowp_H,plus) + s_slack(2084,cowp_H,minus) + s_slack(2084,cowp_L,plus) + s_slack(2084,cowp_L,minus) + s_slack(2084,cowp_S,plus)
     
      + s_slack(2084,cowp_S,minus) + s_slack(2084,grou_H,plus) + s_slack(2084,grou_H,minus) + s_slack(2084,grou_L,plus) + s_slack(2084,grou_L,minus) + s_slack(2084,grou_S,plus) + s_slack(2084,grou_S,minus) + s_slack(2084,lent_H,plus)
     
      + s_slack(2084,lent_H,minus) + s_slack(2084,lent_L,plus) + s_slack(2084,lent_L,minus) + s_slack(2084,lent_S,plus) + s_slack(2084,lent_S,minus) + s_slack(2084,maiz_H,plus) + s_slack(2084,maiz_H,minus) + s_slack(2084,maiz_L,plus)
     
      + s_slack(2084,maiz_L,minus) + s_slack(2084,maiz_S,plus) + s_slack(2084,maiz_S,minus) + s_slack(2084,mill_H,plus) + s_slack(2084,mill_H,minus) + s_slack(2084,mill_L,plus) + s_slack(2084,mill_L,minus) + s_slack(2084,mill_S,plus)
     
      + s_slack(2084,mill_S,minus) + s_slack(2084,ofib_L,plus) + s_slack(2084,ofib_L,minus) + s_slack(2084,ooil_L,plus) + s_slack(2084,ooil_L,minus) + s_slack(2084,opul_H,plus) + s_slack(2084,opul_H,minus) + s_slack(2084,opul_L,plus)
     
      + s_slack(2084,opul_L,minus) + s_slack(2084,opul_S,plus) + s_slack(2084,opul_S,minus) + s_slack(2084,pige_H,plus) + s_slack(2084,pige_H,minus) + s_slack(2084,pige_L,plus) + s_slack(2084,pige_L,minus) + s_slack(2084,pige_S,plus)
     
      + s_slack(2084,pige_S,minus) + s_slack(2084,pota_H,plus) + s_slack(2084,pota_H,minus) + s_slack(2084,pota_L,plus) + s_slack(2084,pota_L,minus) + s_slack(2084,pota_S,plus) + s_slack(2084,pota_S,minus) + s_slack(2084,rest_H,plus)
     
      + s_slack(2084,rest_H,minus) + s_slack(2084,rest_L,plus) + s_slack(2084,rest_L,minus) + s_slack(2084,rest_S,plus) + s_slack(2084,rest_S,minus) + s_slack(2084,rice_H,plus) + s_slack(2084,rice_H,minus) + s_slack(2084,rice_L,plus)
     
      + s_slack(2084,rice_L,minus) + s_slack(2084,rice_S,plus) + s_slack(2084,rice_S,minus) + s_slack(2084,sorg_L,plus) + s_slack(2084,sorg_L,minus) + s_slack(2084,sorg_S,plus) + s_slack(2084,sorg_S,minus) + s_slack(2084,soyb_L,plus)
     
      + s_slack(2084,soyb_L,minus) + s_slack(2084,soyb_S,plus) + s_slack(2084,soyb_S,minus) + s_slack(2084,sunf_L,plus) + s_slack(2084,sunf_L,minus) + s_slack(2084,temf_H,plus) + s_slack(2084,temf_H,minus) + s_slack(2084,temf_L,plus)
     
      + s_slack(2084,temf_L,minus) + s_slack(2084,temf_S,plus) + s_slack(2084,temf_S,minus) + s_slack(2084,toba_H,plus) + s_slack(2084,toba_H,minus) + s_slack(2084,toba_L,plus) + s_slack(2084,toba_L,minus) + s_slack(2084,trof_L,plus)
     
      + s_slack(2084,trof_L,minus) + s_slack(2084,trof_S,plus) + s_slack(2084,trof_S,minus) + s_slack(2084,vege_H,plus) + s_slack(2084,vege_H,minus) + s_slack(2084,vege_L,plus) + s_slack(2084,vege_L,minus) + s_slack(2084,vege_S,plus)
     
      + s_slack(2084,vege_S,minus) + s_slack(2085,rice_I,plus) + s_slack(2085,rice_I,minus) + s_slack(2085,sugc_I,plus) + s_slack(2085,sugc_I,minus) + s_slack(2085,whea_I,plus) + s_slack(2085,whea_I,minus) + s_slack(2085,bean_H,plus)
     
      + s_slack(2085,bean_H,minus) + s_slack(2085,bean_L,plus) + s_slack(2085,bean_L,minus) + s_slack(2085,bean_S,plus) + s_slack(2085,bean_S,minus) + s_slack(2085,cass_L,plus) + s_slack(2085,cass_L,minus) + s_slack(2085,cass_S,plus)
     
      + s_slack(2085,cass_S,minus) + s_slack(2085,chic_H,plus) + s_slack(2085,chic_H,minus) + s_slack(2085,chic_L,plus) + s_slack(2085,chic_L,minus) + s_slack(2085,chic_S,plus) + s_slack(2085,chic_S,minus) + s_slack(2085,coff_H,plus)
     
      + s_slack(2085,coff_H,minus) + s_slack(2085,coff_L,plus) + s_slack(2085,coff_L,minus) + s_slack(2085,cott_L,plus) + s_slack(2085,cott_L,minus) + s_slack(2085,cowp_H,plus) + s_slack(2085,cowp_H,minus) + s_slack(2085,cowp_L,plus)
     
      + s_slack(2085,cowp_L,minus) + s_slack(2085,cowp_S,plus) + s_slack(2085,cowp_S,minus) + s_slack(2085,grou_H,plus) + s_slack(2085,grou_H,minus) + s_slack(2085,grou_L,plus) + s_slack(2085,grou_L,minus) + s_slack(2085,grou_S,plus)
     
      + s_slack(2085,grou_S,minus) + s_slack(2085,lent_H,plus) + s_slack(2085,lent_H,minus) + s_slack(2085,lent_L,plus) + s_slack(2085,lent_L,minus) + s_slack(2085,lent_S,plus) + s_slack(2085,lent_S,minus) + s_slack(2085,maiz_H,plus)
     
      + s_slack(2085,maiz_H,minus) + s_slack(2085,maiz_L,plus) + s_slack(2085,maiz_L,minus) + s_slack(2085,maiz_S,plus) + s_slack(2085,maiz_S,minus) + s_slack(2085,mill_H,plus) + s_slack(2085,mill_H,minus) + s_slack(2085,mill_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 200
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2085,mill_L,minus) + s_slack(2085,mill_S,plus) + s_slack(2085,mill_S,minus) + s_slack(2085,ofib_L,plus) + s_slack(2085,ofib_L,minus) + s_slack(2085,ooil_L,plus) + s_slack(2085,ooil_L,minus) + s_slack(2085,opul_H,plus)
     
      + s_slack(2085,opul_H,minus) + s_slack(2085,opul_L,plus) + s_slack(2085,opul_L,minus) + s_slack(2085,opul_S,plus) + s_slack(2085,opul_S,minus) + s_slack(2085,pige_H,plus) + s_slack(2085,pige_H,minus) + s_slack(2085,pige_L,plus)
     
      + s_slack(2085,pige_L,minus) + s_slack(2085,pige_S,plus) + s_slack(2085,pige_S,minus) + s_slack(2085,pota_H,plus) + s_slack(2085,pota_H,minus) + s_slack(2085,pota_L,plus) + s_slack(2085,pota_L,minus) + s_slack(2085,pota_S,plus)
     
      + s_slack(2085,pota_S,minus) + s_slack(2085,rest_H,plus) + s_slack(2085,rest_H,minus) + s_slack(2085,rest_L,plus) + s_slack(2085,rest_L,minus) + s_slack(2085,rest_S,plus) + s_slack(2085,rest_S,minus) + s_slack(2085,rice_H,plus)
     
      + s_slack(2085,rice_H,minus) + s_slack(2085,rice_L,plus) + s_slack(2085,rice_L,minus) + s_slack(2085,rice_S,plus) + s_slack(2085,rice_S,minus) + s_slack(2085,sorg_L,plus) + s_slack(2085,sorg_L,minus) + s_slack(2085,sorg_S,plus)
     
      + s_slack(2085,sorg_S,minus) + s_slack(2085,soyb_L,plus) + s_slack(2085,soyb_L,minus) + s_slack(2085,soyb_S,plus) + s_slack(2085,soyb_S,minus) + s_slack(2085,sunf_L,plus) + s_slack(2085,sunf_L,minus) + s_slack(2085,temf_H,plus)
     
      + s_slack(2085,temf_H,minus) + s_slack(2085,temf_L,plus) + s_slack(2085,temf_L,minus) + s_slack(2085,temf_S,plus) + s_slack(2085,temf_S,minus) + s_slack(2085,toba_H,plus) + s_slack(2085,toba_H,minus) + s_slack(2085,toba_L,plus)
     
      + s_slack(2085,toba_L,minus) + s_slack(2085,trof_L,plus) + s_slack(2085,trof_L,minus) + s_slack(2085,trof_S,plus) + s_slack(2085,trof_S,minus) + s_slack(2085,vege_H,plus) + s_slack(2085,vege_H,minus) + s_slack(2085,vege_L,plus)
     
      + s_slack(2085,vege_L,minus) + s_slack(2085,vege_S,plus) + s_slack(2085,vege_S,minus) + s_slack(2086,rice_I,plus) + s_slack(2086,rice_I,minus) + s_slack(2086,sugc_I,plus) + s_slack(2086,sugc_I,minus) + s_slack(2086,whea_I,plus)
     
      + s_slack(2086,whea_I,minus) + s_slack(2086,bean_H,plus) + s_slack(2086,bean_H,minus) + s_slack(2086,bean_L,plus) + s_slack(2086,bean_L,minus) + s_slack(2086,bean_S,plus) + s_slack(2086,bean_S,minus) + s_slack(2086,cass_L,plus)
     
      + s_slack(2086,cass_L,minus) + s_slack(2086,cass_S,plus) + s_slack(2086,cass_S,minus) + s_slack(2086,chic_H,plus) + s_slack(2086,chic_H,minus) + s_slack(2086,chic_L,plus) + s_slack(2086,chic_L,minus) + s_slack(2086,chic_S,plus)
     
      + s_slack(2086,chic_S,minus) + s_slack(2086,coff_H,plus) + s_slack(2086,coff_H,minus) + s_slack(2086,coff_L,plus) + s_slack(2086,coff_L,minus) + s_slack(2086,cott_L,plus) + s_slack(2086,cott_L,minus) + s_slack(2086,cowp_H,plus)
     
      + s_slack(2086,cowp_H,minus) + s_slack(2086,cowp_L,plus) + s_slack(2086,cowp_L,minus) + s_slack(2086,cowp_S,plus) + s_slack(2086,cowp_S,minus) + s_slack(2086,grou_H,plus) + s_slack(2086,grou_H,minus) + s_slack(2086,grou_L,plus)
     
      + s_slack(2086,grou_L,minus) + s_slack(2086,grou_S,plus) + s_slack(2086,grou_S,minus) + s_slack(2086,lent_H,plus) + s_slack(2086,lent_H,minus) + s_slack(2086,lent_L,plus) + s_slack(2086,lent_L,minus) + s_slack(2086,lent_S,plus)
     
      + s_slack(2086,lent_S,minus) + s_slack(2086,maiz_H,plus) + s_slack(2086,maiz_H,minus) + s_slack(2086,maiz_L,plus) + s_slack(2086,maiz_L,minus) + s_slack(2086,maiz_S,plus) + s_slack(2086,maiz_S,minus) + s_slack(2086,mill_H,plus)
     
      + s_slack(2086,mill_H,minus) + s_slack(2086,mill_L,plus) + s_slack(2086,mill_L,minus) + s_slack(2086,mill_S,plus) + s_slack(2086,mill_S,minus) + s_slack(2086,ofib_L,plus) + s_slack(2086,ofib_L,minus) + s_slack(2086,ooil_L,plus)
     
      + s_slack(2086,ooil_L,minus) + s_slack(2086,opul_H,plus) + s_slack(2086,opul_H,minus) + s_slack(2086,opul_L,plus) + s_slack(2086,opul_L,minus) + s_slack(2086,opul_S,plus) + s_slack(2086,opul_S,minus) + s_slack(2086,pige_H,plus)
     
      + s_slack(2086,pige_H,minus) + s_slack(2086,pige_L,plus) + s_slack(2086,pige_L,minus) + s_slack(2086,pige_S,plus) + s_slack(2086,pige_S,minus) + s_slack(2086,pota_H,plus) + s_slack(2086,pota_H,minus) + s_slack(2086,pota_L,plus)
     
      + s_slack(2086,pota_L,minus) + s_slack(2086,pota_S,plus) + s_slack(2086,pota_S,minus) + s_slack(2086,rest_H,plus) + s_slack(2086,rest_H,minus) + s_slack(2086,rest_L,plus) + s_slack(2086,rest_L,minus) + s_slack(2086,rest_S,plus)
     
      + s_slack(2086,rest_S,minus) + s_slack(2086,rice_H,plus) + s_slack(2086,rice_H,minus) + s_slack(2086,rice_L,plus) + s_slack(2086,rice_L,minus) + s_slack(2086,rice_S,plus) + s_slack(2086,rice_S,minus) + s_slack(2086,sorg_L,plus)
     
      + s_slack(2086,sorg_L,minus) + s_slack(2086,sorg_S,plus) + s_slack(2086,sorg_S,minus) + s_slack(2086,soyb_L,plus) + s_slack(2086,soyb_L,minus) + s_slack(2086,soyb_S,plus) + s_slack(2086,soyb_S,minus) + s_slack(2086,sunf_L,plus)
     
      + s_slack(2086,sunf_L,minus) + s_slack(2086,temf_H,plus) + s_slack(2086,temf_H,minus) + s_slack(2086,temf_L,plus) + s_slack(2086,temf_L,minus) + s_slack(2086,temf_S,plus) + s_slack(2086,temf_S,minus) + s_slack(2086,toba_H,plus)
     
      + s_slack(2086,toba_H,minus) + s_slack(2086,toba_L,plus) + s_slack(2086,toba_L,minus) + s_slack(2086,trof_L,plus) + s_slack(2086,trof_L,minus) + s_slack(2086,trof_S,plus) + s_slack(2086,trof_S,minus) + s_slack(2086,vege_H,plus)
     
      + s_slack(2086,vege_H,minus) + s_slack(2086,vege_L,plus) + s_slack(2086,vege_L,minus) + s_slack(2086,vege_S,plus) + s_slack(2086,vege_S,minus) + s_slack(2088,rice_I,plus) + s_slack(2088,rice_I,minus) + s_slack(2088,sugc_I,plus)
     
      + s_slack(2088,sugc_I,minus) + s_slack(2088,whea_I,plus) + s_slack(2088,whea_I,minus) + s_slack(2088,bean_H,plus) + s_slack(2088,bean_H,minus) + s_slack(2088,bean_L,plus) + s_slack(2088,bean_L,minus) + s_slack(2088,bean_S,plus)
     
      + s_slack(2088,bean_S,minus) + s_slack(2088,cass_L,plus) + s_slack(2088,cass_L,minus) + s_slack(2088,cass_S,plus) + s_slack(2088,cass_S,minus) + s_slack(2088,chic_H,plus) + s_slack(2088,chic_H,minus) + s_slack(2088,chic_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 201
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2088,chic_L,minus) + s_slack(2088,chic_S,plus) + s_slack(2088,chic_S,minus) + s_slack(2088,coff_H,plus) + s_slack(2088,coff_H,minus) + s_slack(2088,coff_L,plus) + s_slack(2088,coff_L,minus) + s_slack(2088,cott_L,plus)
     
      + s_slack(2088,cott_L,minus) + s_slack(2088,cowp_H,plus) + s_slack(2088,cowp_H,minus) + s_slack(2088,cowp_L,plus) + s_slack(2088,cowp_L,minus) + s_slack(2088,cowp_S,plus) + s_slack(2088,cowp_S,minus) + s_slack(2088,grou_H,plus)
     
      + s_slack(2088,grou_H,minus) + s_slack(2088,grou_L,plus) + s_slack(2088,grou_L,minus) + s_slack(2088,grou_S,plus) + s_slack(2088,grou_S,minus) + s_slack(2088,lent_H,plus) + s_slack(2088,lent_H,minus) + s_slack(2088,lent_L,plus)
     
      + s_slack(2088,lent_L,minus) + s_slack(2088,lent_S,plus) + s_slack(2088,lent_S,minus) + s_slack(2088,maiz_H,plus) + s_slack(2088,maiz_H,minus) + s_slack(2088,maiz_L,plus) + s_slack(2088,maiz_L,minus) + s_slack(2088,maiz_S,plus)
     
      + s_slack(2088,maiz_S,minus) + s_slack(2088,mill_H,plus) + s_slack(2088,mill_H,minus) + s_slack(2088,mill_L,plus) + s_slack(2088,mill_L,minus) + s_slack(2088,mill_S,plus) + s_slack(2088,mill_S,minus) + s_slack(2088,ofib_L,plus)
     
      + s_slack(2088,ofib_L,minus) + s_slack(2088,ooil_L,plus) + s_slack(2088,ooil_L,minus) + s_slack(2088,opul_H,plus) + s_slack(2088,opul_H,minus) + s_slack(2088,opul_L,plus) + s_slack(2088,opul_L,minus) + s_slack(2088,opul_S,plus)
     
      + s_slack(2088,opul_S,minus) + s_slack(2088,pige_H,plus) + s_slack(2088,pige_H,minus) + s_slack(2088,pige_L,plus) + s_slack(2088,pige_L,minus) + s_slack(2088,pige_S,plus) + s_slack(2088,pige_S,minus) + s_slack(2088,pota_H,plus)
     
      + s_slack(2088,pota_H,minus) + s_slack(2088,pota_L,plus) + s_slack(2088,pota_L,minus) + s_slack(2088,pota_S,plus) + s_slack(2088,pota_S,minus) + s_slack(2088,rest_H,plus) + s_slack(2088,rest_H,minus) + s_slack(2088,rest_L,plus)
     
      + s_slack(2088,rest_L,minus) + s_slack(2088,rest_S,plus) + s_slack(2088,rest_S,minus) + s_slack(2088,rice_H,plus) + s_slack(2088,rice_H,minus) + s_slack(2088,rice_L,plus) + s_slack(2088,rice_L,minus) + s_slack(2088,rice_S,plus)
     
      + s_slack(2088,rice_S,minus) + s_slack(2088,sorg_L,plus) + s_slack(2088,sorg_L,minus) + s_slack(2088,sorg_S,plus) + s_slack(2088,sorg_S,minus) + s_slack(2088,soyb_L,plus) + s_slack(2088,soyb_L,minus) + s_slack(2088,soyb_S,plus)
     
      + s_slack(2088,soyb_S,minus) + s_slack(2088,sunf_L,plus) + s_slack(2088,sunf_L,minus) + s_slack(2088,temf_H,plus) + s_slack(2088,temf_H,minus) + s_slack(2088,temf_L,plus) + s_slack(2088,temf_L,minus) + s_slack(2088,temf_S,plus)
     
      + s_slack(2088,temf_S,minus) + s_slack(2088,toba_H,plus) + s_slack(2088,toba_H,minus) + s_slack(2088,toba_L,plus) + s_slack(2088,toba_L,minus) + s_slack(2088,trof_L,plus) + s_slack(2088,trof_L,minus) + s_slack(2088,trof_S,plus)
     
      + s_slack(2088,trof_S,minus) + s_slack(2088,vege_H,plus) + s_slack(2088,vege_H,minus) + s_slack(2088,vege_L,plus) + s_slack(2088,vege_L,minus) + s_slack(2088,vege_S,plus) + s_slack(2088,vege_S,minus) + s_slack(2089,rice_I,plus)
     
      + s_slack(2089,rice_I,minus) + s_slack(2089,sugc_I,plus) + s_slack(2089,sugc_I,minus) + s_slack(2089,whea_I,plus) + s_slack(2089,whea_I,minus) + s_slack(2089,bean_H,plus) + s_slack(2089,bean_H,minus) + s_slack(2089,bean_L,plus)
     
      + s_slack(2089,bean_L,minus) + s_slack(2089,bean_S,plus) + s_slack(2089,bean_S,minus) + s_slack(2089,cass_L,plus) + s_slack(2089,cass_L,minus) + s_slack(2089,cass_S,plus) + s_slack(2089,cass_S,minus) + s_slack(2089,chic_H,plus)
     
      + s_slack(2089,chic_H,minus) + s_slack(2089,chic_L,plus) + s_slack(2089,chic_L,minus) + s_slack(2089,chic_S,plus) + s_slack(2089,chic_S,minus) + s_slack(2089,coff_H,plus) + s_slack(2089,coff_H,minus) + s_slack(2089,coff_L,plus)
     
      + s_slack(2089,coff_L,minus) + s_slack(2089,cott_L,plus) + s_slack(2089,cott_L,minus) + s_slack(2089,cowp_H,plus) + s_slack(2089,cowp_H,minus) + s_slack(2089,cowp_L,plus) + s_slack(2089,cowp_L,minus) + s_slack(2089,cowp_S,plus)
     
      + s_slack(2089,cowp_S,minus) + s_slack(2089,grou_H,plus) + s_slack(2089,grou_H,minus) + s_slack(2089,grou_L,plus) + s_slack(2089,grou_L,minus) + s_slack(2089,grou_S,plus) + s_slack(2089,grou_S,minus) + s_slack(2089,lent_H,plus)
     
      + s_slack(2089,lent_H,minus) + s_slack(2089,lent_L,plus) + s_slack(2089,lent_L,minus) + s_slack(2089,lent_S,plus) + s_slack(2089,lent_S,minus) + s_slack(2089,maiz_H,plus) + s_slack(2089,maiz_H,minus) + s_slack(2089,maiz_L,plus)
     
      + s_slack(2089,maiz_L,minus) + s_slack(2089,maiz_S,plus) + s_slack(2089,maiz_S,minus) + s_slack(2089,mill_H,plus) + s_slack(2089,mill_H,minus) + s_slack(2089,mill_L,plus) + s_slack(2089,mill_L,minus) + s_slack(2089,mill_S,plus)
     
      + s_slack(2089,mill_S,minus) + s_slack(2089,ofib_L,plus) + s_slack(2089,ofib_L,minus) + s_slack(2089,ooil_L,plus) + s_slack(2089,ooil_L,minus) + s_slack(2089,opul_H,plus) + s_slack(2089,opul_H,minus) + s_slack(2089,opul_L,plus)
     
      + s_slack(2089,opul_L,minus) + s_slack(2089,opul_S,plus) + s_slack(2089,opul_S,minus) + s_slack(2089,pige_H,plus) + s_slack(2089,pige_H,minus) + s_slack(2089,pige_L,plus) + s_slack(2089,pige_L,minus) + s_slack(2089,pige_S,plus)
     
      + s_slack(2089,pige_S,minus) + s_slack(2089,pota_H,plus) + s_slack(2089,pota_H,minus) + s_slack(2089,pota_L,plus) + s_slack(2089,pota_L,minus) + s_slack(2089,pota_S,plus) + s_slack(2089,pota_S,minus) + s_slack(2089,rest_H,plus)
     
      + s_slack(2089,rest_H,minus) + s_slack(2089,rest_L,plus) + s_slack(2089,rest_L,minus) + s_slack(2089,rest_S,plus) + s_slack(2089,rest_S,minus) + s_slack(2089,rice_H,plus) + s_slack(2089,rice_H,minus) + s_slack(2089,rice_L,plus)
     
      + s_slack(2089,rice_L,minus) + s_slack(2089,rice_S,plus) + s_slack(2089,rice_S,minus) + s_slack(2089,sorg_L,plus) + s_slack(2089,sorg_L,minus) + s_slack(2089,sorg_S,plus) + s_slack(2089,sorg_S,minus) + s_slack(2089,soyb_L,plus)
     
      + s_slack(2089,soyb_L,minus) + s_slack(2089,soyb_S,plus) + s_slack(2089,soyb_S,minus) + s_slack(2089,sunf_L,plus) + s_slack(2089,sunf_L,minus) + s_slack(2089,temf_H,plus) + s_slack(2089,temf_H,minus) + s_slack(2089,temf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 202
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2089,temf_L,minus) + s_slack(2089,temf_S,plus) + s_slack(2089,temf_S,minus) + s_slack(2089,toba_H,plus) + s_slack(2089,toba_H,minus) + s_slack(2089,toba_L,plus) + s_slack(2089,toba_L,minus) + s_slack(2089,trof_L,plus)
     
      + s_slack(2089,trof_L,minus) + s_slack(2089,trof_S,plus) + s_slack(2089,trof_S,minus) + s_slack(2089,vege_H,plus) + s_slack(2089,vege_H,minus) + s_slack(2089,vege_L,plus) + s_slack(2089,vege_L,minus) + s_slack(2089,vege_S,plus)
     
      + s_slack(2089,vege_S,minus) + s_slack(2090,rice_I,plus) + s_slack(2090,rice_I,minus) + s_slack(2090,sugc_I,plus) + s_slack(2090,sugc_I,minus) + s_slack(2090,whea_I,plus) + s_slack(2090,whea_I,minus) + s_slack(2090,bean_H,plus)
     
      + s_slack(2090,bean_H,minus) + s_slack(2090,bean_L,plus) + s_slack(2090,bean_L,minus) + s_slack(2090,bean_S,plus) + s_slack(2090,bean_S,minus) + s_slack(2090,cass_L,plus) + s_slack(2090,cass_L,minus) + s_slack(2090,cass_S,plus)
     
      + s_slack(2090,cass_S,minus) + s_slack(2090,chic_H,plus) + s_slack(2090,chic_H,minus) + s_slack(2090,chic_L,plus) + s_slack(2090,chic_L,minus) + s_slack(2090,chic_S,plus) + s_slack(2090,chic_S,minus) + s_slack(2090,coff_H,plus)
     
      + s_slack(2090,coff_H,minus) + s_slack(2090,coff_L,plus) + s_slack(2090,coff_L,minus) + s_slack(2090,cott_L,plus) + s_slack(2090,cott_L,minus) + s_slack(2090,cowp_H,plus) + s_slack(2090,cowp_H,minus) + s_slack(2090,cowp_L,plus)
     
      + s_slack(2090,cowp_L,minus) + s_slack(2090,cowp_S,plus) + s_slack(2090,cowp_S,minus) + s_slack(2090,grou_H,plus) + s_slack(2090,grou_H,minus) + s_slack(2090,grou_L,plus) + s_slack(2090,grou_L,minus) + s_slack(2090,grou_S,plus)
     
      + s_slack(2090,grou_S,minus) + s_slack(2090,lent_H,plus) + s_slack(2090,lent_H,minus) + s_slack(2090,lent_L,plus) + s_slack(2090,lent_L,minus) + s_slack(2090,lent_S,plus) + s_slack(2090,lent_S,minus) + s_slack(2090,maiz_H,plus)
     
      + s_slack(2090,maiz_H,minus) + s_slack(2090,maiz_L,plus) + s_slack(2090,maiz_L,minus) + s_slack(2090,maiz_S,plus) + s_slack(2090,maiz_S,minus) + s_slack(2090,mill_H,plus) + s_slack(2090,mill_H,minus) + s_slack(2090,mill_L,plus)
     
      + s_slack(2090,mill_L,minus) + s_slack(2090,mill_S,plus) + s_slack(2090,mill_S,minus) + s_slack(2090,ofib_L,plus) + s_slack(2090,ofib_L,minus) + s_slack(2090,ooil_L,plus) + s_slack(2090,ooil_L,minus) + s_slack(2090,opul_H,plus)
     
      + s_slack(2090,opul_H,minus) + s_slack(2090,opul_L,plus) + s_slack(2090,opul_L,minus) + s_slack(2090,opul_S,plus) + s_slack(2090,opul_S,minus) + s_slack(2090,pige_H,plus) + s_slack(2090,pige_H,minus) + s_slack(2090,pige_L,plus)
     
      + s_slack(2090,pige_L,minus) + s_slack(2090,pige_S,plus) + s_slack(2090,pige_S,minus) + s_slack(2090,pota_H,plus) + s_slack(2090,pota_H,minus) + s_slack(2090,pota_L,plus) + s_slack(2090,pota_L,minus) + s_slack(2090,pota_S,plus)
     
      + s_slack(2090,pota_S,minus) + s_slack(2090,rest_H,plus) + s_slack(2090,rest_H,minus) + s_slack(2090,rest_L,plus) + s_slack(2090,rest_L,minus) + s_slack(2090,rest_S,plus) + s_slack(2090,rest_S,minus) + s_slack(2090,rice_H,plus)
     
      + s_slack(2090,rice_H,minus) + s_slack(2090,rice_L,plus) + s_slack(2090,rice_L,minus) + s_slack(2090,rice_S,plus) + s_slack(2090,rice_S,minus) + s_slack(2090,sorg_L,plus) + s_slack(2090,sorg_L,minus) + s_slack(2090,sorg_S,plus)
     
      + s_slack(2090,sorg_S,minus) + s_slack(2090,soyb_L,plus) + s_slack(2090,soyb_L,minus) + s_slack(2090,soyb_S,plus) + s_slack(2090,soyb_S,minus) + s_slack(2090,sunf_L,plus) + s_slack(2090,sunf_L,minus) + s_slack(2090,temf_H,plus)
     
      + s_slack(2090,temf_H,minus) + s_slack(2090,temf_L,plus) + s_slack(2090,temf_L,minus) + s_slack(2090,temf_S,plus) + s_slack(2090,temf_S,minus) + s_slack(2090,toba_H,plus) + s_slack(2090,toba_H,minus) + s_slack(2090,toba_L,plus)
     
      + s_slack(2090,toba_L,minus) + s_slack(2090,trof_L,plus) + s_slack(2090,trof_L,minus) + s_slack(2090,trof_S,plus) + s_slack(2090,trof_S,minus) + s_slack(2090,vege_H,plus) + s_slack(2090,vege_H,minus) + s_slack(2090,vege_L,plus)
     
      + s_slack(2090,vege_L,minus) + s_slack(2090,vege_S,plus) + s_slack(2090,vege_S,minus) + s_slack(2110,rice_I,plus) + s_slack(2110,rice_I,minus) + s_slack(2110,sugc_I,plus) + s_slack(2110,sugc_I,minus) + s_slack(2110,whea_I,plus)
     
      + s_slack(2110,whea_I,minus) + s_slack(2110,bean_H,plus) + s_slack(2110,bean_H,minus) + s_slack(2110,bean_L,plus) + s_slack(2110,bean_L,minus) + s_slack(2110,bean_S,plus) + s_slack(2110,bean_S,minus) + s_slack(2110,cass_L,plus)
     
      + s_slack(2110,cass_L,minus) + s_slack(2110,cass_S,plus) + s_slack(2110,cass_S,minus) + s_slack(2110,chic_H,plus) + s_slack(2110,chic_H,minus) + s_slack(2110,chic_L,plus) + s_slack(2110,chic_L,minus) + s_slack(2110,chic_S,plus)
     
      + s_slack(2110,chic_S,minus) + s_slack(2110,coff_H,plus) + s_slack(2110,coff_H,minus) + s_slack(2110,coff_L,plus) + s_slack(2110,coff_L,minus) + s_slack(2110,cott_L,plus) + s_slack(2110,cott_L,minus) + s_slack(2110,cowp_H,plus)
     
      + s_slack(2110,cowp_H,minus) + s_slack(2110,cowp_L,plus) + s_slack(2110,cowp_L,minus) + s_slack(2110,cowp_S,plus) + s_slack(2110,cowp_S,minus) + s_slack(2110,grou_H,plus) + s_slack(2110,grou_H,minus) + s_slack(2110,grou_L,plus)
     
      + s_slack(2110,grou_L,minus) + s_slack(2110,grou_S,plus) + s_slack(2110,grou_S,minus) + s_slack(2110,lent_H,plus) + s_slack(2110,lent_H,minus) + s_slack(2110,lent_L,plus) + s_slack(2110,lent_L,minus) + s_slack(2110,lent_S,plus)
     
      + s_slack(2110,lent_S,minus) + s_slack(2110,maiz_H,plus) + s_slack(2110,maiz_H,minus) + s_slack(2110,maiz_L,plus) + s_slack(2110,maiz_L,minus) + s_slack(2110,maiz_S,plus) + s_slack(2110,maiz_S,minus) + s_slack(2110,mill_H,plus)
     
      + s_slack(2110,mill_H,minus) + s_slack(2110,mill_L,plus) + s_slack(2110,mill_L,minus) + s_slack(2110,mill_S,plus) + s_slack(2110,mill_S,minus) + s_slack(2110,ofib_L,plus) + s_slack(2110,ofib_L,minus) + s_slack(2110,ooil_L,plus)
     
      + s_slack(2110,ooil_L,minus) + s_slack(2110,opul_H,plus) + s_slack(2110,opul_H,minus) + s_slack(2110,opul_L,plus) + s_slack(2110,opul_L,minus) + s_slack(2110,opul_S,plus) + s_slack(2110,opul_S,minus) + s_slack(2110,pige_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 203
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2110,pige_H,minus) + s_slack(2110,pige_L,plus) + s_slack(2110,pige_L,minus) + s_slack(2110,pige_S,plus) + s_slack(2110,pige_S,minus) + s_slack(2110,pota_H,plus) + s_slack(2110,pota_H,minus) + s_slack(2110,pota_L,plus)
     
      + s_slack(2110,pota_L,minus) + s_slack(2110,pota_S,plus) + s_slack(2110,pota_S,minus) + s_slack(2110,rest_H,plus) + s_slack(2110,rest_H,minus) + s_slack(2110,rest_L,plus) + s_slack(2110,rest_L,minus) + s_slack(2110,rest_S,plus)
     
      + s_slack(2110,rest_S,minus) + s_slack(2110,rice_H,plus) + s_slack(2110,rice_H,minus) + s_slack(2110,rice_L,plus) + s_slack(2110,rice_L,minus) + s_slack(2110,rice_S,plus) + s_slack(2110,rice_S,minus) + s_slack(2110,sorg_L,plus)
     
      + s_slack(2110,sorg_L,minus) + s_slack(2110,sorg_S,plus) + s_slack(2110,sorg_S,minus) + s_slack(2110,soyb_L,plus) + s_slack(2110,soyb_L,minus) + s_slack(2110,soyb_S,plus) + s_slack(2110,soyb_S,minus) + s_slack(2110,sunf_L,plus)
     
      + s_slack(2110,sunf_L,minus) + s_slack(2110,temf_H,plus) + s_slack(2110,temf_H,minus) + s_slack(2110,temf_L,plus) + s_slack(2110,temf_L,minus) + s_slack(2110,temf_S,plus) + s_slack(2110,temf_S,minus) + s_slack(2110,toba_H,plus)
     
      + s_slack(2110,toba_H,minus) + s_slack(2110,toba_L,plus) + s_slack(2110,toba_L,minus) + s_slack(2110,trof_L,plus) + s_slack(2110,trof_L,minus) + s_slack(2110,trof_S,plus) + s_slack(2110,trof_S,minus) + s_slack(2110,vege_H,plus)
     
      + s_slack(2110,vege_H,minus) + s_slack(2110,vege_L,plus) + s_slack(2110,vege_L,minus) + s_slack(2110,vege_S,plus) + s_slack(2110,vege_S,minus) + s_slack(2111,rice_I,plus) + s_slack(2111,rice_I,minus) + s_slack(2111,sugc_I,plus)
     
      + s_slack(2111,sugc_I,minus) + s_slack(2111,whea_I,plus) + s_slack(2111,whea_I,minus) + s_slack(2111,bean_H,plus) + s_slack(2111,bean_H,minus) + s_slack(2111,bean_L,plus) + s_slack(2111,bean_L,minus) + s_slack(2111,bean_S,plus)
     
      + s_slack(2111,bean_S,minus) + s_slack(2111,cass_L,plus) + s_slack(2111,cass_L,minus) + s_slack(2111,cass_S,plus) + s_slack(2111,cass_S,minus) + s_slack(2111,chic_H,plus) + s_slack(2111,chic_H,minus) + s_slack(2111,chic_L,plus)
     
      + s_slack(2111,chic_L,minus) + s_slack(2111,chic_S,plus) + s_slack(2111,chic_S,minus) + s_slack(2111,coff_H,plus) + s_slack(2111,coff_H,minus) + s_slack(2111,coff_L,plus) + s_slack(2111,coff_L,minus) + s_slack(2111,cott_L,plus)
     
      + s_slack(2111,cott_L,minus) + s_slack(2111,cowp_H,plus) + s_slack(2111,cowp_H,minus) + s_slack(2111,cowp_L,plus) + s_slack(2111,cowp_L,minus) + s_slack(2111,cowp_S,plus) + s_slack(2111,cowp_S,minus) + s_slack(2111,grou_H,plus)
     
      + s_slack(2111,grou_H,minus) + s_slack(2111,grou_L,plus) + s_slack(2111,grou_L,minus) + s_slack(2111,grou_S,plus) + s_slack(2111,grou_S,minus) + s_slack(2111,lent_H,plus) + s_slack(2111,lent_H,minus) + s_slack(2111,lent_L,plus)
     
      + s_slack(2111,lent_L,minus) + s_slack(2111,lent_S,plus) + s_slack(2111,lent_S,minus) + s_slack(2111,maiz_H,plus) + s_slack(2111,maiz_H,minus) + s_slack(2111,maiz_L,plus) + s_slack(2111,maiz_L,minus) + s_slack(2111,maiz_S,plus)
     
      + s_slack(2111,maiz_S,minus) + s_slack(2111,mill_H,plus) + s_slack(2111,mill_H,minus) + s_slack(2111,mill_L,plus) + s_slack(2111,mill_L,minus) + s_slack(2111,mill_S,plus) + s_slack(2111,mill_S,minus) + s_slack(2111,ofib_L,plus)
     
      + s_slack(2111,ofib_L,minus) + s_slack(2111,ooil_L,plus) + s_slack(2111,ooil_L,minus) + s_slack(2111,opul_H,plus) + s_slack(2111,opul_H,minus) + s_slack(2111,opul_L,plus) + s_slack(2111,opul_L,minus) + s_slack(2111,opul_S,plus)
     
      + s_slack(2111,opul_S,minus) + s_slack(2111,pige_H,plus) + s_slack(2111,pige_H,minus) + s_slack(2111,pige_L,plus) + s_slack(2111,pige_L,minus) + s_slack(2111,pige_S,plus) + s_slack(2111,pige_S,minus) + s_slack(2111,pota_H,plus)
     
      + s_slack(2111,pota_H,minus) + s_slack(2111,pota_L,plus) + s_slack(2111,pota_L,minus) + s_slack(2111,pota_S,plus) + s_slack(2111,pota_S,minus) + s_slack(2111,rest_H,plus) + s_slack(2111,rest_H,minus) + s_slack(2111,rest_L,plus)
     
      + s_slack(2111,rest_L,minus) + s_slack(2111,rest_S,plus) + s_slack(2111,rest_S,minus) + s_slack(2111,rice_H,plus) + s_slack(2111,rice_H,minus) + s_slack(2111,rice_L,plus) + s_slack(2111,rice_L,minus) + s_slack(2111,rice_S,plus)
     
      + s_slack(2111,rice_S,minus) + s_slack(2111,sorg_L,plus) + s_slack(2111,sorg_L,minus) + s_slack(2111,sorg_S,plus) + s_slack(2111,sorg_S,minus) + s_slack(2111,soyb_L,plus) + s_slack(2111,soyb_L,minus) + s_slack(2111,soyb_S,plus)
     
      + s_slack(2111,soyb_S,minus) + s_slack(2111,sunf_L,plus) + s_slack(2111,sunf_L,minus) + s_slack(2111,temf_H,plus) + s_slack(2111,temf_H,minus) + s_slack(2111,temf_L,plus) + s_slack(2111,temf_L,minus) + s_slack(2111,temf_S,plus)
     
      + s_slack(2111,temf_S,minus) + s_slack(2111,toba_H,plus) + s_slack(2111,toba_H,minus) + s_slack(2111,toba_L,plus) + s_slack(2111,toba_L,minus) + s_slack(2111,trof_L,plus) + s_slack(2111,trof_L,minus) + s_slack(2111,trof_S,plus)
     
      + s_slack(2111,trof_S,minus) + s_slack(2111,vege_H,plus) + s_slack(2111,vege_H,minus) + s_slack(2111,vege_L,plus) + s_slack(2111,vege_L,minus) + s_slack(2111,vege_S,plus) + s_slack(2111,vege_S,minus) + s_slack(2112,rice_I,plus)
     
      + s_slack(2112,rice_I,minus) + s_slack(2112,sugc_I,plus) + s_slack(2112,sugc_I,minus) + s_slack(2112,whea_I,plus) + s_slack(2112,whea_I,minus) + s_slack(2112,bean_H,plus) + s_slack(2112,bean_H,minus) + s_slack(2112,bean_L,plus)
     
      + s_slack(2112,bean_L,minus) + s_slack(2112,bean_S,plus) + s_slack(2112,bean_S,minus) + s_slack(2112,cass_L,plus) + s_slack(2112,cass_L,minus) + s_slack(2112,cass_S,plus) + s_slack(2112,cass_S,minus) + s_slack(2112,chic_H,plus)
     
      + s_slack(2112,chic_H,minus) + s_slack(2112,chic_L,plus) + s_slack(2112,chic_L,minus) + s_slack(2112,chic_S,plus) + s_slack(2112,chic_S,minus) + s_slack(2112,coff_H,plus) + s_slack(2112,coff_H,minus) + s_slack(2112,coff_L,plus)
     
      + s_slack(2112,coff_L,minus) + s_slack(2112,cott_L,plus) + s_slack(2112,cott_L,minus) + s_slack(2112,cowp_H,plus) + s_slack(2112,cowp_H,minus) + s_slack(2112,cowp_L,plus) + s_slack(2112,cowp_L,minus) + s_slack(2112,cowp_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 204
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2112,cowp_S,minus) + s_slack(2112,grou_H,plus) + s_slack(2112,grou_H,minus) + s_slack(2112,grou_L,plus) + s_slack(2112,grou_L,minus) + s_slack(2112,grou_S,plus) + s_slack(2112,grou_S,minus) + s_slack(2112,lent_H,plus)
     
      + s_slack(2112,lent_H,minus) + s_slack(2112,lent_L,plus) + s_slack(2112,lent_L,minus) + s_slack(2112,lent_S,plus) + s_slack(2112,lent_S,minus) + s_slack(2112,maiz_H,plus) + s_slack(2112,maiz_H,minus) + s_slack(2112,maiz_L,plus)
     
      + s_slack(2112,maiz_L,minus) + s_slack(2112,maiz_S,plus) + s_slack(2112,maiz_S,minus) + s_slack(2112,mill_H,plus) + s_slack(2112,mill_H,minus) + s_slack(2112,mill_L,plus) + s_slack(2112,mill_L,minus) + s_slack(2112,mill_S,plus)
     
      + s_slack(2112,mill_S,minus) + s_slack(2112,ofib_L,plus) + s_slack(2112,ofib_L,minus) + s_slack(2112,ooil_L,plus) + s_slack(2112,ooil_L,minus) + s_slack(2112,opul_H,plus) + s_slack(2112,opul_H,minus) + s_slack(2112,opul_L,plus)
     
      + s_slack(2112,opul_L,minus) + s_slack(2112,opul_S,plus) + s_slack(2112,opul_S,minus) + s_slack(2112,pige_H,plus) + s_slack(2112,pige_H,minus) + s_slack(2112,pige_L,plus) + s_slack(2112,pige_L,minus) + s_slack(2112,pige_S,plus)
     
      + s_slack(2112,pige_S,minus) + s_slack(2112,pota_H,plus) + s_slack(2112,pota_H,minus) + s_slack(2112,pota_L,plus) + s_slack(2112,pota_L,minus) + s_slack(2112,pota_S,plus) + s_slack(2112,pota_S,minus) + s_slack(2112,rest_H,plus)
     
      + s_slack(2112,rest_H,minus) + s_slack(2112,rest_L,plus) + s_slack(2112,rest_L,minus) + s_slack(2112,rest_S,plus) + s_slack(2112,rest_S,minus) + s_slack(2112,rice_H,plus) + s_slack(2112,rice_H,minus) + s_slack(2112,rice_L,plus)
     
      + s_slack(2112,rice_L,minus) + s_slack(2112,rice_S,plus) + s_slack(2112,rice_S,minus) + s_slack(2112,sorg_L,plus) + s_slack(2112,sorg_L,minus) + s_slack(2112,sorg_S,plus) + s_slack(2112,sorg_S,minus) + s_slack(2112,soyb_L,plus)
     
      + s_slack(2112,soyb_L,minus) + s_slack(2112,soyb_S,plus) + s_slack(2112,soyb_S,minus) + s_slack(2112,sunf_L,plus) + s_slack(2112,sunf_L,minus) + s_slack(2112,temf_H,plus) + s_slack(2112,temf_H,minus) + s_slack(2112,temf_L,plus)
     
      + s_slack(2112,temf_L,minus) + s_slack(2112,temf_S,plus) + s_slack(2112,temf_S,minus) + s_slack(2112,toba_H,plus) + s_slack(2112,toba_H,minus) + s_slack(2112,toba_L,plus) + s_slack(2112,toba_L,minus) + s_slack(2112,trof_L,plus)
     
      + s_slack(2112,trof_L,minus) + s_slack(2112,trof_S,plus) + s_slack(2112,trof_S,minus) + s_slack(2112,vege_H,plus) + s_slack(2112,vege_H,minus) + s_slack(2112,vege_L,plus) + s_slack(2112,vege_L,minus) + s_slack(2112,vege_S,plus)
     
      + s_slack(2112,vege_S,minus) + s_slack(2114,rice_I,plus) + s_slack(2114,rice_I,minus) + s_slack(2114,sugc_I,plus) + s_slack(2114,sugc_I,minus) + s_slack(2114,whea_I,plus) + s_slack(2114,whea_I,minus) + s_slack(2114,bean_H,plus)
     
      + s_slack(2114,bean_H,minus) + s_slack(2114,bean_L,plus) + s_slack(2114,bean_L,minus) + s_slack(2114,bean_S,plus) + s_slack(2114,bean_S,minus) + s_slack(2114,cass_L,plus) + s_slack(2114,cass_L,minus) + s_slack(2114,cass_S,plus)
     
      + s_slack(2114,cass_S,minus) + s_slack(2114,chic_H,plus) + s_slack(2114,chic_H,minus) + s_slack(2114,chic_L,plus) + s_slack(2114,chic_L,minus) + s_slack(2114,chic_S,plus) + s_slack(2114,chic_S,minus) + s_slack(2114,coff_H,plus)
     
      + s_slack(2114,coff_H,minus) + s_slack(2114,coff_L,plus) + s_slack(2114,coff_L,minus) + s_slack(2114,cott_L,plus) + s_slack(2114,cott_L,minus) + s_slack(2114,cowp_H,plus) + s_slack(2114,cowp_H,minus) + s_slack(2114,cowp_L,plus)
     
      + s_slack(2114,cowp_L,minus) + s_slack(2114,cowp_S,plus) + s_slack(2114,cowp_S,minus) + s_slack(2114,grou_H,plus) + s_slack(2114,grou_H,minus) + s_slack(2114,grou_L,plus) + s_slack(2114,grou_L,minus) + s_slack(2114,grou_S,plus)
     
      + s_slack(2114,grou_S,minus) + s_slack(2114,lent_H,plus) + s_slack(2114,lent_H,minus) + s_slack(2114,lent_L,plus) + s_slack(2114,lent_L,minus) + s_slack(2114,lent_S,plus) + s_slack(2114,lent_S,minus) + s_slack(2114,maiz_H,plus)
     
      + s_slack(2114,maiz_H,minus) + s_slack(2114,maiz_L,plus) + s_slack(2114,maiz_L,minus) + s_slack(2114,maiz_S,plus) + s_slack(2114,maiz_S,minus) + s_slack(2114,mill_H,plus) + s_slack(2114,mill_H,minus) + s_slack(2114,mill_L,plus)
     
      + s_slack(2114,mill_L,minus) + s_slack(2114,mill_S,plus) + s_slack(2114,mill_S,minus) + s_slack(2114,ofib_L,plus) + s_slack(2114,ofib_L,minus) + s_slack(2114,ooil_L,plus) + s_slack(2114,ooil_L,minus) + s_slack(2114,opul_H,plus)
     
      + s_slack(2114,opul_H,minus) + s_slack(2114,opul_L,plus) + s_slack(2114,opul_L,minus) + s_slack(2114,opul_S,plus) + s_slack(2114,opul_S,minus) + s_slack(2114,pige_H,plus) + s_slack(2114,pige_H,minus) + s_slack(2114,pige_L,plus)
     
      + s_slack(2114,pige_L,minus) + s_slack(2114,pige_S,plus) + s_slack(2114,pige_S,minus) + s_slack(2114,pota_H,plus) + s_slack(2114,pota_H,minus) + s_slack(2114,pota_L,plus) + s_slack(2114,pota_L,minus) + s_slack(2114,pota_S,plus)
     
      + s_slack(2114,pota_S,minus) + s_slack(2114,rest_H,plus) + s_slack(2114,rest_H,minus) + s_slack(2114,rest_L,plus) + s_slack(2114,rest_L,minus) + s_slack(2114,rest_S,plus) + s_slack(2114,rest_S,minus) + s_slack(2114,rice_H,plus)
     
      + s_slack(2114,rice_H,minus) + s_slack(2114,rice_L,plus) + s_slack(2114,rice_L,minus) + s_slack(2114,rice_S,plus) + s_slack(2114,rice_S,minus) + s_slack(2114,sorg_L,plus) + s_slack(2114,sorg_L,minus) + s_slack(2114,sorg_S,plus)
     
      + s_slack(2114,sorg_S,minus) + s_slack(2114,soyb_L,plus) + s_slack(2114,soyb_L,minus) + s_slack(2114,soyb_S,plus) + s_slack(2114,soyb_S,minus) + s_slack(2114,sunf_L,plus) + s_slack(2114,sunf_L,minus) + s_slack(2114,temf_H,plus)
     
      + s_slack(2114,temf_H,minus) + s_slack(2114,temf_L,plus) + s_slack(2114,temf_L,minus) + s_slack(2114,temf_S,plus) + s_slack(2114,temf_S,minus) + s_slack(2114,toba_H,plus) + s_slack(2114,toba_H,minus) + s_slack(2114,toba_L,plus)
     
      + s_slack(2114,toba_L,minus) + s_slack(2114,trof_L,plus) + s_slack(2114,trof_L,minus) + s_slack(2114,trof_S,plus) + s_slack(2114,trof_S,minus) + s_slack(2114,vege_H,plus) + s_slack(2114,vege_H,minus) + s_slack(2114,vege_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 205
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2114,vege_L,minus) + s_slack(2114,vege_S,plus) + s_slack(2114,vege_S,minus) + s_slack(2115,rice_I,plus) + s_slack(2115,rice_I,minus) + s_slack(2115,sugc_I,plus) + s_slack(2115,sugc_I,minus) + s_slack(2115,whea_I,plus)
     
      + s_slack(2115,whea_I,minus) + s_slack(2115,bean_H,plus) + s_slack(2115,bean_H,minus) + s_slack(2115,bean_L,plus) + s_slack(2115,bean_L,minus) + s_slack(2115,bean_S,plus) + s_slack(2115,bean_S,minus) + s_slack(2115,cass_L,plus)
     
      + s_slack(2115,cass_L,minus) + s_slack(2115,cass_S,plus) + s_slack(2115,cass_S,minus) + s_slack(2115,chic_H,plus) + s_slack(2115,chic_H,minus) + s_slack(2115,chic_L,plus) + s_slack(2115,chic_L,minus) + s_slack(2115,chic_S,plus)
     
      + s_slack(2115,chic_S,minus) + s_slack(2115,coff_H,plus) + s_slack(2115,coff_H,minus) + s_slack(2115,coff_L,plus) + s_slack(2115,coff_L,minus) + s_slack(2115,cott_L,plus) + s_slack(2115,cott_L,minus) + s_slack(2115,cowp_H,plus)
     
      + s_slack(2115,cowp_H,minus) + s_slack(2115,cowp_L,plus) + s_slack(2115,cowp_L,minus) + s_slack(2115,cowp_S,plus) + s_slack(2115,cowp_S,minus) + s_slack(2115,grou_H,plus) + s_slack(2115,grou_H,minus) + s_slack(2115,grou_L,plus)
     
      + s_slack(2115,grou_L,minus) + s_slack(2115,grou_S,plus) + s_slack(2115,grou_S,minus) + s_slack(2115,lent_H,plus) + s_slack(2115,lent_H,minus) + s_slack(2115,lent_L,plus) + s_slack(2115,lent_L,minus) + s_slack(2115,lent_S,plus)
     
      + s_slack(2115,lent_S,minus) + s_slack(2115,maiz_H,plus) + s_slack(2115,maiz_H,minus) + s_slack(2115,maiz_L,plus) + s_slack(2115,maiz_L,minus) + s_slack(2115,maiz_S,plus) + s_slack(2115,maiz_S,minus) + s_slack(2115,mill_H,plus)
     
      + s_slack(2115,mill_H,minus) + s_slack(2115,mill_L,plus) + s_slack(2115,mill_L,minus) + s_slack(2115,mill_S,plus) + s_slack(2115,mill_S,minus) + s_slack(2115,ofib_L,plus) + s_slack(2115,ofib_L,minus) + s_slack(2115,ooil_L,plus)
     
      + s_slack(2115,ooil_L,minus) + s_slack(2115,opul_H,plus) + s_slack(2115,opul_H,minus) + s_slack(2115,opul_L,plus) + s_slack(2115,opul_L,minus) + s_slack(2115,opul_S,plus) + s_slack(2115,opul_S,minus) + s_slack(2115,pige_H,plus)
     
      + s_slack(2115,pige_H,minus) + s_slack(2115,pige_L,plus) + s_slack(2115,pige_L,minus) + s_slack(2115,pige_S,plus) + s_slack(2115,pige_S,minus) + s_slack(2115,pota_H,plus) + s_slack(2115,pota_H,minus) + s_slack(2115,pota_L,plus)
     
      + s_slack(2115,pota_L,minus) + s_slack(2115,pota_S,plus) + s_slack(2115,pota_S,minus) + s_slack(2115,rest_H,plus) + s_slack(2115,rest_H,minus) + s_slack(2115,rest_L,plus) + s_slack(2115,rest_L,minus) + s_slack(2115,rest_S,plus)
     
      + s_slack(2115,rest_S,minus) + s_slack(2115,rice_H,plus) + s_slack(2115,rice_H,minus) + s_slack(2115,rice_L,plus) + s_slack(2115,rice_L,minus) + s_slack(2115,rice_S,plus) + s_slack(2115,rice_S,minus) + s_slack(2115,sorg_L,plus)
     
      + s_slack(2115,sorg_L,minus) + s_slack(2115,sorg_S,plus) + s_slack(2115,sorg_S,minus) + s_slack(2115,soyb_L,plus) + s_slack(2115,soyb_L,minus) + s_slack(2115,soyb_S,plus) + s_slack(2115,soyb_S,minus) + s_slack(2115,sunf_L,plus)
     
      + s_slack(2115,sunf_L,minus) + s_slack(2115,temf_H,plus) + s_slack(2115,temf_H,minus) + s_slack(2115,temf_L,plus) + s_slack(2115,temf_L,minus) + s_slack(2115,temf_S,plus) + s_slack(2115,temf_S,minus) + s_slack(2115,toba_H,plus)
     
      + s_slack(2115,toba_H,minus) + s_slack(2115,toba_L,plus) + s_slack(2115,toba_L,minus) + s_slack(2115,trof_L,plus) + s_slack(2115,trof_L,minus) + s_slack(2115,trof_S,plus) + s_slack(2115,trof_S,minus) + s_slack(2115,vege_H,plus)
     
      + s_slack(2115,vege_H,minus) + s_slack(2115,vege_L,plus) + s_slack(2115,vege_L,minus) + s_slack(2115,vege_S,plus) + s_slack(2115,vege_S,minus) + s_slack(2116,rice_I,plus) + s_slack(2116,rice_I,minus) + s_slack(2116,sugc_I,plus)
     
      + s_slack(2116,sugc_I,minus) + s_slack(2116,whea_I,plus) + s_slack(2116,whea_I,minus) + s_slack(2116,bean_H,plus) + s_slack(2116,bean_H,minus) + s_slack(2116,bean_L,plus) + s_slack(2116,bean_L,minus) + s_slack(2116,bean_S,plus)
     
      + s_slack(2116,bean_S,minus) + s_slack(2116,cass_L,plus) + s_slack(2116,cass_L,minus) + s_slack(2116,cass_S,plus) + s_slack(2116,cass_S,minus) + s_slack(2116,chic_H,plus) + s_slack(2116,chic_H,minus) + s_slack(2116,chic_L,plus)
     
      + s_slack(2116,chic_L,minus) + s_slack(2116,chic_S,plus) + s_slack(2116,chic_S,minus) + s_slack(2116,coff_H,plus) + s_slack(2116,coff_H,minus) + s_slack(2116,coff_L,plus) + s_slack(2116,coff_L,minus) + s_slack(2116,cott_L,plus)
     
      + s_slack(2116,cott_L,minus) + s_slack(2116,cowp_H,plus) + s_slack(2116,cowp_H,minus) + s_slack(2116,cowp_L,plus) + s_slack(2116,cowp_L,minus) + s_slack(2116,cowp_S,plus) + s_slack(2116,cowp_S,minus) + s_slack(2116,grou_H,plus)
     
      + s_slack(2116,grou_H,minus) + s_slack(2116,grou_L,plus) + s_slack(2116,grou_L,minus) + s_slack(2116,grou_S,plus) + s_slack(2116,grou_S,minus) + s_slack(2116,lent_H,plus) + s_slack(2116,lent_H,minus) + s_slack(2116,lent_L,plus)
     
      + s_slack(2116,lent_L,minus) + s_slack(2116,lent_S,plus) + s_slack(2116,lent_S,minus) + s_slack(2116,maiz_H,plus) + s_slack(2116,maiz_H,minus) + s_slack(2116,maiz_L,plus) + s_slack(2116,maiz_L,minus) + s_slack(2116,maiz_S,plus)
     
      + s_slack(2116,maiz_S,minus) + s_slack(2116,mill_H,plus) + s_slack(2116,mill_H,minus) + s_slack(2116,mill_L,plus) + s_slack(2116,mill_L,minus) + s_slack(2116,mill_S,plus) + s_slack(2116,mill_S,minus) + s_slack(2116,ofib_L,plus)
     
      + s_slack(2116,ofib_L,minus) + s_slack(2116,ooil_L,plus) + s_slack(2116,ooil_L,minus) + s_slack(2116,opul_H,plus) + s_slack(2116,opul_H,minus) + s_slack(2116,opul_L,plus) + s_slack(2116,opul_L,minus) + s_slack(2116,opul_S,plus)
     
      + s_slack(2116,opul_S,minus) + s_slack(2116,pige_H,plus) + s_slack(2116,pige_H,minus) + s_slack(2116,pige_L,plus) + s_slack(2116,pige_L,minus) + s_slack(2116,pige_S,plus) + s_slack(2116,pige_S,minus) + s_slack(2116,pota_H,plus)
     
      + s_slack(2116,pota_H,minus) + s_slack(2116,pota_L,plus) + s_slack(2116,pota_L,minus) + s_slack(2116,pota_S,plus) + s_slack(2116,pota_S,minus) + s_slack(2116,rest_H,plus) + s_slack(2116,rest_H,minus) + s_slack(2116,rest_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 206
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2116,rest_L,minus) + s_slack(2116,rest_S,plus) + s_slack(2116,rest_S,minus) + s_slack(2116,rice_H,plus) + s_slack(2116,rice_H,minus) + s_slack(2116,rice_L,plus) + s_slack(2116,rice_L,minus) + s_slack(2116,rice_S,plus)
     
      + s_slack(2116,rice_S,minus) + s_slack(2116,sorg_L,plus) + s_slack(2116,sorg_L,minus) + s_slack(2116,sorg_S,plus) + s_slack(2116,sorg_S,minus) + s_slack(2116,soyb_L,plus) + s_slack(2116,soyb_L,minus) + s_slack(2116,soyb_S,plus)
     
      + s_slack(2116,soyb_S,minus) + s_slack(2116,sunf_L,plus) + s_slack(2116,sunf_L,minus) + s_slack(2116,temf_H,plus) + s_slack(2116,temf_H,minus) + s_slack(2116,temf_L,plus) + s_slack(2116,temf_L,minus) + s_slack(2116,temf_S,plus)
     
      + s_slack(2116,temf_S,minus) + s_slack(2116,toba_H,plus) + s_slack(2116,toba_H,minus) + s_slack(2116,toba_L,plus) + s_slack(2116,toba_L,minus) + s_slack(2116,trof_L,plus) + s_slack(2116,trof_L,minus) + s_slack(2116,trof_S,plus)
     
      + s_slack(2116,trof_S,minus) + s_slack(2116,vege_H,plus) + s_slack(2116,vege_H,minus) + s_slack(2116,vege_L,plus) + s_slack(2116,vege_L,minus) + s_slack(2116,vege_S,plus) + s_slack(2116,vege_S,minus) + s_slack(2117,rice_I,plus)
     
      + s_slack(2117,rice_I,minus) + s_slack(2117,sugc_I,plus) + s_slack(2117,sugc_I,minus) + s_slack(2117,whea_I,plus) + s_slack(2117,whea_I,minus) + s_slack(2117,bean_H,plus) + s_slack(2117,bean_H,minus) + s_slack(2117,bean_L,plus)
     
      + s_slack(2117,bean_L,minus) + s_slack(2117,bean_S,plus) + s_slack(2117,bean_S,minus) + s_slack(2117,cass_L,plus) + s_slack(2117,cass_L,minus) + s_slack(2117,cass_S,plus) + s_slack(2117,cass_S,minus) + s_slack(2117,chic_H,plus)
     
      + s_slack(2117,chic_H,minus) + s_slack(2117,chic_L,plus) + s_slack(2117,chic_L,minus) + s_slack(2117,chic_S,plus) + s_slack(2117,chic_S,minus) + s_slack(2117,coff_H,plus) + s_slack(2117,coff_H,minus) + s_slack(2117,coff_L,plus)
     
      + s_slack(2117,coff_L,minus) + s_slack(2117,cott_L,plus) + s_slack(2117,cott_L,minus) + s_slack(2117,cowp_H,plus) + s_slack(2117,cowp_H,minus) + s_slack(2117,cowp_L,plus) + s_slack(2117,cowp_L,minus) + s_slack(2117,cowp_S,plus)
     
      + s_slack(2117,cowp_S,minus) + s_slack(2117,grou_H,plus) + s_slack(2117,grou_H,minus) + s_slack(2117,grou_L,plus) + s_slack(2117,grou_L,minus) + s_slack(2117,grou_S,plus) + s_slack(2117,grou_S,minus) + s_slack(2117,lent_H,plus)
     
      + s_slack(2117,lent_H,minus) + s_slack(2117,lent_L,plus) + s_slack(2117,lent_L,minus) + s_slack(2117,lent_S,plus) + s_slack(2117,lent_S,minus) + s_slack(2117,maiz_H,plus) + s_slack(2117,maiz_H,minus) + s_slack(2117,maiz_L,plus)
     
      + s_slack(2117,maiz_L,minus) + s_slack(2117,maiz_S,plus) + s_slack(2117,maiz_S,minus) + s_slack(2117,mill_H,plus) + s_slack(2117,mill_H,minus) + s_slack(2117,mill_L,plus) + s_slack(2117,mill_L,minus) + s_slack(2117,mill_S,plus)
     
      + s_slack(2117,mill_S,minus) + s_slack(2117,ofib_L,plus) + s_slack(2117,ofib_L,minus) + s_slack(2117,ooil_L,plus) + s_slack(2117,ooil_L,minus) + s_slack(2117,opul_H,plus) + s_slack(2117,opul_H,minus) + s_slack(2117,opul_L,plus)
     
      + s_slack(2117,opul_L,minus) + s_slack(2117,opul_S,plus) + s_slack(2117,opul_S,minus) + s_slack(2117,pige_H,plus) + s_slack(2117,pige_H,minus) + s_slack(2117,pige_L,plus) + s_slack(2117,pige_L,minus) + s_slack(2117,pige_S,plus)
     
      + s_slack(2117,pige_S,minus) + s_slack(2117,pota_H,plus) + s_slack(2117,pota_H,minus) + s_slack(2117,pota_L,plus) + s_slack(2117,pota_L,minus) + s_slack(2117,pota_S,plus) + s_slack(2117,pota_S,minus) + s_slack(2117,rest_H,plus)
     
      + s_slack(2117,rest_H,minus) + s_slack(2117,rest_L,plus) + s_slack(2117,rest_L,minus) + s_slack(2117,rest_S,plus) + s_slack(2117,rest_S,minus) + s_slack(2117,rice_H,plus) + s_slack(2117,rice_H,minus) + s_slack(2117,rice_L,plus)
     
      + s_slack(2117,rice_L,minus) + s_slack(2117,rice_S,plus) + s_slack(2117,rice_S,minus) + s_slack(2117,sorg_L,plus) + s_slack(2117,sorg_L,minus) + s_slack(2117,sorg_S,plus) + s_slack(2117,sorg_S,minus) + s_slack(2117,soyb_L,plus)
     
      + s_slack(2117,soyb_L,minus) + s_slack(2117,soyb_S,plus) + s_slack(2117,soyb_S,minus) + s_slack(2117,sunf_L,plus) + s_slack(2117,sunf_L,minus) + s_slack(2117,temf_H,plus) + s_slack(2117,temf_H,minus) + s_slack(2117,temf_L,plus)
     
      + s_slack(2117,temf_L,minus) + s_slack(2117,temf_S,plus) + s_slack(2117,temf_S,minus) + s_slack(2117,toba_H,plus) + s_slack(2117,toba_H,minus) + s_slack(2117,toba_L,plus) + s_slack(2117,toba_L,minus) + s_slack(2117,trof_L,plus)
     
      + s_slack(2117,trof_L,minus) + s_slack(2117,trof_S,plus) + s_slack(2117,trof_S,minus) + s_slack(2117,vege_H,plus) + s_slack(2117,vege_H,minus) + s_slack(2117,vege_L,plus) + s_slack(2117,vege_L,minus) + s_slack(2117,vege_S,plus)
     
      + s_slack(2117,vege_S,minus) + s_slack(2118,rice_I,plus) + s_slack(2118,rice_I,minus) + s_slack(2118,sugc_I,plus) + s_slack(2118,sugc_I,minus) + s_slack(2118,whea_I,plus) + s_slack(2118,whea_I,minus) + s_slack(2118,bean_H,plus)
     
      + s_slack(2118,bean_H,minus) + s_slack(2118,bean_L,plus) + s_slack(2118,bean_L,minus) + s_slack(2118,bean_S,plus) + s_slack(2118,bean_S,minus) + s_slack(2118,cass_L,plus) + s_slack(2118,cass_L,minus) + s_slack(2118,cass_S,plus)
     
      + s_slack(2118,cass_S,minus) + s_slack(2118,chic_H,plus) + s_slack(2118,chic_H,minus) + s_slack(2118,chic_L,plus) + s_slack(2118,chic_L,minus) + s_slack(2118,chic_S,plus) + s_slack(2118,chic_S,minus) + s_slack(2118,coff_H,plus)
     
      + s_slack(2118,coff_H,minus) + s_slack(2118,coff_L,plus) + s_slack(2118,coff_L,minus) + s_slack(2118,cott_L,plus) + s_slack(2118,cott_L,minus) + s_slack(2118,cowp_H,plus) + s_slack(2118,cowp_H,minus) + s_slack(2118,cowp_L,plus)
     
      + s_slack(2118,cowp_L,minus) + s_slack(2118,cowp_S,plus) + s_slack(2118,cowp_S,minus) + s_slack(2118,grou_H,plus) + s_slack(2118,grou_H,minus) + s_slack(2118,grou_L,plus) + s_slack(2118,grou_L,minus) + s_slack(2118,grou_S,plus)
     
      + s_slack(2118,grou_S,minus) + s_slack(2118,lent_H,plus) + s_slack(2118,lent_H,minus) + s_slack(2118,lent_L,plus) + s_slack(2118,lent_L,minus) + s_slack(2118,lent_S,plus) + s_slack(2118,lent_S,minus) + s_slack(2118,maiz_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 207
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2118,maiz_H,minus) + s_slack(2118,maiz_L,plus) + s_slack(2118,maiz_L,minus) + s_slack(2118,maiz_S,plus) + s_slack(2118,maiz_S,minus) + s_slack(2118,mill_H,plus) + s_slack(2118,mill_H,minus) + s_slack(2118,mill_L,plus)
     
      + s_slack(2118,mill_L,minus) + s_slack(2118,mill_S,plus) + s_slack(2118,mill_S,minus) + s_slack(2118,ofib_L,plus) + s_slack(2118,ofib_L,minus) + s_slack(2118,ooil_L,plus) + s_slack(2118,ooil_L,minus) + s_slack(2118,opul_H,plus)
     
      + s_slack(2118,opul_H,minus) + s_slack(2118,opul_L,plus) + s_slack(2118,opul_L,minus) + s_slack(2118,opul_S,plus) + s_slack(2118,opul_S,minus) + s_slack(2118,pige_H,plus) + s_slack(2118,pige_H,minus) + s_slack(2118,pige_L,plus)
     
      + s_slack(2118,pige_L,minus) + s_slack(2118,pige_S,plus) + s_slack(2118,pige_S,minus) + s_slack(2118,pota_H,plus) + s_slack(2118,pota_H,minus) + s_slack(2118,pota_L,plus) + s_slack(2118,pota_L,minus) + s_slack(2118,pota_S,plus)
     
      + s_slack(2118,pota_S,minus) + s_slack(2118,rest_H,plus) + s_slack(2118,rest_H,minus) + s_slack(2118,rest_L,plus) + s_slack(2118,rest_L,minus) + s_slack(2118,rest_S,plus) + s_slack(2118,rest_S,minus) + s_slack(2118,rice_H,plus)
     
      + s_slack(2118,rice_H,minus) + s_slack(2118,rice_L,plus) + s_slack(2118,rice_L,minus) + s_slack(2118,rice_S,plus) + s_slack(2118,rice_S,minus) + s_slack(2118,sorg_L,plus) + s_slack(2118,sorg_L,minus) + s_slack(2118,sorg_S,plus)
     
      + s_slack(2118,sorg_S,minus) + s_slack(2118,soyb_L,plus) + s_slack(2118,soyb_L,minus) + s_slack(2118,soyb_S,plus) + s_slack(2118,soyb_S,minus) + s_slack(2118,sunf_L,plus) + s_slack(2118,sunf_L,minus) + s_slack(2118,temf_H,plus)
     
      + s_slack(2118,temf_H,minus) + s_slack(2118,temf_L,plus) + s_slack(2118,temf_L,minus) + s_slack(2118,temf_S,plus) + s_slack(2118,temf_S,minus) + s_slack(2118,toba_H,plus) + s_slack(2118,toba_H,minus) + s_slack(2118,toba_L,plus)
     
      + s_slack(2118,toba_L,minus) + s_slack(2118,trof_L,plus) + s_slack(2118,trof_L,minus) + s_slack(2118,trof_S,plus) + s_slack(2118,trof_S,minus) + s_slack(2118,vege_H,plus) + s_slack(2118,vege_H,minus) + s_slack(2118,vege_L,plus)
     
      + s_slack(2118,vege_L,minus) + s_slack(2118,vege_S,plus) + s_slack(2118,vege_S,minus) + s_slack(2119,rice_I,plus) + s_slack(2119,rice_I,minus) + s_slack(2119,sugc_I,plus) + s_slack(2119,sugc_I,minus) + s_slack(2119,whea_I,plus)
     
      + s_slack(2119,whea_I,minus) + s_slack(2119,bean_H,plus) + s_slack(2119,bean_H,minus) + s_slack(2119,bean_L,plus) + s_slack(2119,bean_L,minus) + s_slack(2119,bean_S,plus) + s_slack(2119,bean_S,minus) + s_slack(2119,cass_L,plus)
     
      + s_slack(2119,cass_L,minus) + s_slack(2119,cass_S,plus) + s_slack(2119,cass_S,minus) + s_slack(2119,chic_H,plus) + s_slack(2119,chic_H,minus) + s_slack(2119,chic_L,plus) + s_slack(2119,chic_L,minus) + s_slack(2119,chic_S,plus)
     
      + s_slack(2119,chic_S,minus) + s_slack(2119,coff_H,plus) + s_slack(2119,coff_H,minus) + s_slack(2119,coff_L,plus) + s_slack(2119,coff_L,minus) + s_slack(2119,cott_L,plus) + s_slack(2119,cott_L,minus) + s_slack(2119,cowp_H,plus)
     
      + s_slack(2119,cowp_H,minus) + s_slack(2119,cowp_L,plus) + s_slack(2119,cowp_L,minus) + s_slack(2119,cowp_S,plus) + s_slack(2119,cowp_S,minus) + s_slack(2119,grou_H,plus) + s_slack(2119,grou_H,minus) + s_slack(2119,grou_L,plus)
     
      + s_slack(2119,grou_L,minus) + s_slack(2119,grou_S,plus) + s_slack(2119,grou_S,minus) + s_slack(2119,lent_H,plus) + s_slack(2119,lent_H,minus) + s_slack(2119,lent_L,plus) + s_slack(2119,lent_L,minus) + s_slack(2119,lent_S,plus)
     
      + s_slack(2119,lent_S,minus) + s_slack(2119,maiz_H,plus) + s_slack(2119,maiz_H,minus) + s_slack(2119,maiz_L,plus) + s_slack(2119,maiz_L,minus) + s_slack(2119,maiz_S,plus) + s_slack(2119,maiz_S,minus) + s_slack(2119,mill_H,plus)
     
      + s_slack(2119,mill_H,minus) + s_slack(2119,mill_L,plus) + s_slack(2119,mill_L,minus) + s_slack(2119,mill_S,plus) + s_slack(2119,mill_S,minus) + s_slack(2119,ofib_L,plus) + s_slack(2119,ofib_L,minus) + s_slack(2119,ooil_L,plus)
     
      + s_slack(2119,ooil_L,minus) + s_slack(2119,opul_H,plus) + s_slack(2119,opul_H,minus) + s_slack(2119,opul_L,plus) + s_slack(2119,opul_L,minus) + s_slack(2119,opul_S,plus) + s_slack(2119,opul_S,minus) + s_slack(2119,pige_H,plus)
     
      + s_slack(2119,pige_H,minus) + s_slack(2119,pige_L,plus) + s_slack(2119,pige_L,minus) + s_slack(2119,pige_S,plus) + s_slack(2119,pige_S,minus) + s_slack(2119,pota_H,plus) + s_slack(2119,pota_H,minus) + s_slack(2119,pota_L,plus)
     
      + s_slack(2119,pota_L,minus) + s_slack(2119,pota_S,plus) + s_slack(2119,pota_S,minus) + s_slack(2119,rest_H,plus) + s_slack(2119,rest_H,minus) + s_slack(2119,rest_L,plus) + s_slack(2119,rest_L,minus) + s_slack(2119,rest_S,plus)
     
      + s_slack(2119,rest_S,minus) + s_slack(2119,rice_H,plus) + s_slack(2119,rice_H,minus) + s_slack(2119,rice_L,plus) + s_slack(2119,rice_L,minus) + s_slack(2119,rice_S,plus) + s_slack(2119,rice_S,minus) + s_slack(2119,sorg_L,plus)
     
      + s_slack(2119,sorg_L,minus) + s_slack(2119,sorg_S,plus) + s_slack(2119,sorg_S,minus) + s_slack(2119,soyb_L,plus) + s_slack(2119,soyb_L,minus) + s_slack(2119,soyb_S,plus) + s_slack(2119,soyb_S,minus) + s_slack(2119,sunf_L,plus)
     
      + s_slack(2119,sunf_L,minus) + s_slack(2119,temf_H,plus) + s_slack(2119,temf_H,minus) + s_slack(2119,temf_L,plus) + s_slack(2119,temf_L,minus) + s_slack(2119,temf_S,plus) + s_slack(2119,temf_S,minus) + s_slack(2119,toba_H,plus)
     
      + s_slack(2119,toba_H,minus) + s_slack(2119,toba_L,plus) + s_slack(2119,toba_L,minus) + s_slack(2119,trof_L,plus) + s_slack(2119,trof_L,minus) + s_slack(2119,trof_S,plus) + s_slack(2119,trof_S,minus) + s_slack(2119,vege_H,plus)
     
      + s_slack(2119,vege_H,minus) + s_slack(2119,vege_L,plus) + s_slack(2119,vege_L,minus) + s_slack(2119,vege_S,plus) + s_slack(2119,vege_S,minus) + s_slack(2120,rice_I,plus) + s_slack(2120,rice_I,minus) + s_slack(2120,sugc_I,plus)
     
      + s_slack(2120,sugc_I,minus) + s_slack(2120,whea_I,plus) + s_slack(2120,whea_I,minus) + s_slack(2120,bean_H,plus) + s_slack(2120,bean_H,minus) + s_slack(2120,bean_L,plus) + s_slack(2120,bean_L,minus) + s_slack(2120,bean_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 208
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2120,bean_S,minus) + s_slack(2120,cass_L,plus) + s_slack(2120,cass_L,minus) + s_slack(2120,cass_S,plus) + s_slack(2120,cass_S,minus) + s_slack(2120,chic_H,plus) + s_slack(2120,chic_H,minus) + s_slack(2120,chic_L,plus)
     
      + s_slack(2120,chic_L,minus) + s_slack(2120,chic_S,plus) + s_slack(2120,chic_S,minus) + s_slack(2120,coff_H,plus) + s_slack(2120,coff_H,minus) + s_slack(2120,coff_L,plus) + s_slack(2120,coff_L,minus) + s_slack(2120,cott_L,plus)
     
      + s_slack(2120,cott_L,minus) + s_slack(2120,cowp_H,plus) + s_slack(2120,cowp_H,minus) + s_slack(2120,cowp_L,plus) + s_slack(2120,cowp_L,minus) + s_slack(2120,cowp_S,plus) + s_slack(2120,cowp_S,minus) + s_slack(2120,grou_H,plus)
     
      + s_slack(2120,grou_H,minus) + s_slack(2120,grou_L,plus) + s_slack(2120,grou_L,minus) + s_slack(2120,grou_S,plus) + s_slack(2120,grou_S,minus) + s_slack(2120,lent_H,plus) + s_slack(2120,lent_H,minus) + s_slack(2120,lent_L,plus)
     
      + s_slack(2120,lent_L,minus) + s_slack(2120,lent_S,plus) + s_slack(2120,lent_S,minus) + s_slack(2120,maiz_H,plus) + s_slack(2120,maiz_H,minus) + s_slack(2120,maiz_L,plus) + s_slack(2120,maiz_L,minus) + s_slack(2120,maiz_S,plus)
     
      + s_slack(2120,maiz_S,minus) + s_slack(2120,mill_H,plus) + s_slack(2120,mill_H,minus) + s_slack(2120,mill_L,plus) + s_slack(2120,mill_L,minus) + s_slack(2120,mill_S,plus) + s_slack(2120,mill_S,minus) + s_slack(2120,ofib_L,plus)
     
      + s_slack(2120,ofib_L,minus) + s_slack(2120,ooil_L,plus) + s_slack(2120,ooil_L,minus) + s_slack(2120,opul_H,plus) + s_slack(2120,opul_H,minus) + s_slack(2120,opul_L,plus) + s_slack(2120,opul_L,minus) + s_slack(2120,opul_S,plus)
     
      + s_slack(2120,opul_S,minus) + s_slack(2120,pige_H,plus) + s_slack(2120,pige_H,minus) + s_slack(2120,pige_L,plus) + s_slack(2120,pige_L,minus) + s_slack(2120,pige_S,plus) + s_slack(2120,pige_S,minus) + s_slack(2120,pota_H,plus)
     
      + s_slack(2120,pota_H,minus) + s_slack(2120,pota_L,plus) + s_slack(2120,pota_L,minus) + s_slack(2120,pota_S,plus) + s_slack(2120,pota_S,minus) + s_slack(2120,rest_H,plus) + s_slack(2120,rest_H,minus) + s_slack(2120,rest_L,plus)
     
      + s_slack(2120,rest_L,minus) + s_slack(2120,rest_S,plus) + s_slack(2120,rest_S,minus) + s_slack(2120,rice_H,plus) + s_slack(2120,rice_H,minus) + s_slack(2120,rice_L,plus) + s_slack(2120,rice_L,minus) + s_slack(2120,rice_S,plus)
     
      + s_slack(2120,rice_S,minus) + s_slack(2120,sorg_L,plus) + s_slack(2120,sorg_L,minus) + s_slack(2120,sorg_S,plus) + s_slack(2120,sorg_S,minus) + s_slack(2120,soyb_L,plus) + s_slack(2120,soyb_L,minus) + s_slack(2120,soyb_S,plus)
     
      + s_slack(2120,soyb_S,minus) + s_slack(2120,sunf_L,plus) + s_slack(2120,sunf_L,minus) + s_slack(2120,temf_H,plus) + s_slack(2120,temf_H,minus) + s_slack(2120,temf_L,plus) + s_slack(2120,temf_L,minus) + s_slack(2120,temf_S,plus)
     
      + s_slack(2120,temf_S,minus) + s_slack(2120,toba_H,plus) + s_slack(2120,toba_H,minus) + s_slack(2120,toba_L,plus) + s_slack(2120,toba_L,minus) + s_slack(2120,trof_L,plus) + s_slack(2120,trof_L,minus) + s_slack(2120,trof_S,plus)
     
      + s_slack(2120,trof_S,minus) + s_slack(2120,vege_H,plus) + s_slack(2120,vege_H,minus) + s_slack(2120,vege_L,plus) + s_slack(2120,vege_L,minus) + s_slack(2120,vege_S,plus) + s_slack(2120,vege_S,minus) + s_slack(2121,rice_I,plus)
     
      + s_slack(2121,rice_I,minus) + s_slack(2121,sugc_I,plus) + s_slack(2121,sugc_I,minus) + s_slack(2121,whea_I,plus) + s_slack(2121,whea_I,minus) + s_slack(2121,bean_H,plus) + s_slack(2121,bean_H,minus) + s_slack(2121,bean_L,plus)
     
      + s_slack(2121,bean_L,minus) + s_slack(2121,bean_S,plus) + s_slack(2121,bean_S,minus) + s_slack(2121,cass_L,plus) + s_slack(2121,cass_L,minus) + s_slack(2121,cass_S,plus) + s_slack(2121,cass_S,minus) + s_slack(2121,chic_H,plus)
     
      + s_slack(2121,chic_H,minus) + s_slack(2121,chic_L,plus) + s_slack(2121,chic_L,minus) + s_slack(2121,chic_S,plus) + s_slack(2121,chic_S,minus) + s_slack(2121,coff_H,plus) + s_slack(2121,coff_H,minus) + s_slack(2121,coff_L,plus)
     
      + s_slack(2121,coff_L,minus) + s_slack(2121,cott_L,plus) + s_slack(2121,cott_L,minus) + s_slack(2121,cowp_H,plus) + s_slack(2121,cowp_H,minus) + s_slack(2121,cowp_L,plus) + s_slack(2121,cowp_L,minus) + s_slack(2121,cowp_S,plus)
     
      + s_slack(2121,cowp_S,minus) + s_slack(2121,grou_H,plus) + s_slack(2121,grou_H,minus) + s_slack(2121,grou_L,plus) + s_slack(2121,grou_L,minus) + s_slack(2121,grou_S,plus) + s_slack(2121,grou_S,minus) + s_slack(2121,lent_H,plus)
     
      + s_slack(2121,lent_H,minus) + s_slack(2121,lent_L,plus) + s_slack(2121,lent_L,minus) + s_slack(2121,lent_S,plus) + s_slack(2121,lent_S,minus) + s_slack(2121,maiz_H,plus) + s_slack(2121,maiz_H,minus) + s_slack(2121,maiz_L,plus)
     
      + s_slack(2121,maiz_L,minus) + s_slack(2121,maiz_S,plus) + s_slack(2121,maiz_S,minus) + s_slack(2121,mill_H,plus) + s_slack(2121,mill_H,minus) + s_slack(2121,mill_L,plus) + s_slack(2121,mill_L,minus) + s_slack(2121,mill_S,plus)
     
      + s_slack(2121,mill_S,minus) + s_slack(2121,ofib_L,plus) + s_slack(2121,ofib_L,minus) + s_slack(2121,ooil_L,plus) + s_slack(2121,ooil_L,minus) + s_slack(2121,opul_H,plus) + s_slack(2121,opul_H,minus) + s_slack(2121,opul_L,plus)
     
      + s_slack(2121,opul_L,minus) + s_slack(2121,opul_S,plus) + s_slack(2121,opul_S,minus) + s_slack(2121,pige_H,plus) + s_slack(2121,pige_H,minus) + s_slack(2121,pige_L,plus) + s_slack(2121,pige_L,minus) + s_slack(2121,pige_S,plus)
     
      + s_slack(2121,pige_S,minus) + s_slack(2121,pota_H,plus) + s_slack(2121,pota_H,minus) + s_slack(2121,pota_L,plus) + s_slack(2121,pota_L,minus) + s_slack(2121,pota_S,plus) + s_slack(2121,pota_S,minus) + s_slack(2121,rest_H,plus)
     
      + s_slack(2121,rest_H,minus) + s_slack(2121,rest_L,plus) + s_slack(2121,rest_L,minus) + s_slack(2121,rest_S,plus) + s_slack(2121,rest_S,minus) + s_slack(2121,rice_H,plus) + s_slack(2121,rice_H,minus) + s_slack(2121,rice_L,plus)
     
      + s_slack(2121,rice_L,minus) + s_slack(2121,rice_S,plus) + s_slack(2121,rice_S,minus) + s_slack(2121,sorg_L,plus) + s_slack(2121,sorg_L,minus) + s_slack(2121,sorg_S,plus) + s_slack(2121,sorg_S,minus) + s_slack(2121,soyb_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 209
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2121,soyb_L,minus) + s_slack(2121,soyb_S,plus) + s_slack(2121,soyb_S,minus) + s_slack(2121,sunf_L,plus) + s_slack(2121,sunf_L,minus) + s_slack(2121,temf_H,plus) + s_slack(2121,temf_H,minus) + s_slack(2121,temf_L,plus)
     
      + s_slack(2121,temf_L,minus) + s_slack(2121,temf_S,plus) + s_slack(2121,temf_S,minus) + s_slack(2121,toba_H,plus) + s_slack(2121,toba_H,minus) + s_slack(2121,toba_L,plus) + s_slack(2121,toba_L,minus) + s_slack(2121,trof_L,plus)
     
      + s_slack(2121,trof_L,minus) + s_slack(2121,trof_S,plus) + s_slack(2121,trof_S,minus) + s_slack(2121,vege_H,plus) + s_slack(2121,vege_H,minus) + s_slack(2121,vege_L,plus) + s_slack(2121,vege_L,minus) + s_slack(2121,vege_S,plus)
     
      + s_slack(2121,vege_S,minus) + s_slack(2122,rice_I,plus) + s_slack(2122,rice_I,minus) + s_slack(2122,sugc_I,plus) + s_slack(2122,sugc_I,minus) + s_slack(2122,whea_I,plus) + s_slack(2122,whea_I,minus) + s_slack(2122,bean_H,plus)
     
      + s_slack(2122,bean_H,minus) + s_slack(2122,bean_L,plus) + s_slack(2122,bean_L,minus) + s_slack(2122,bean_S,plus) + s_slack(2122,bean_S,minus) + s_slack(2122,cass_L,plus) + s_slack(2122,cass_L,minus) + s_slack(2122,cass_S,plus)
     
      + s_slack(2122,cass_S,minus) + s_slack(2122,chic_H,plus) + s_slack(2122,chic_H,minus) + s_slack(2122,chic_L,plus) + s_slack(2122,chic_L,minus) + s_slack(2122,chic_S,plus) + s_slack(2122,chic_S,minus) + s_slack(2122,coff_H,plus)
     
      + s_slack(2122,coff_H,minus) + s_slack(2122,coff_L,plus) + s_slack(2122,coff_L,minus) + s_slack(2122,cott_L,plus) + s_slack(2122,cott_L,minus) + s_slack(2122,cowp_H,plus) + s_slack(2122,cowp_H,minus) + s_slack(2122,cowp_L,plus)
     
      + s_slack(2122,cowp_L,minus) + s_slack(2122,cowp_S,plus) + s_slack(2122,cowp_S,minus) + s_slack(2122,grou_H,plus) + s_slack(2122,grou_H,minus) + s_slack(2122,grou_L,plus) + s_slack(2122,grou_L,minus) + s_slack(2122,grou_S,plus)
     
      + s_slack(2122,grou_S,minus) + s_slack(2122,lent_H,plus) + s_slack(2122,lent_H,minus) + s_slack(2122,lent_L,plus) + s_slack(2122,lent_L,minus) + s_slack(2122,lent_S,plus) + s_slack(2122,lent_S,minus) + s_slack(2122,maiz_H,plus)
     
      + s_slack(2122,maiz_H,minus) + s_slack(2122,maiz_L,plus) + s_slack(2122,maiz_L,minus) + s_slack(2122,maiz_S,plus) + s_slack(2122,maiz_S,minus) + s_slack(2122,mill_H,plus) + s_slack(2122,mill_H,minus) + s_slack(2122,mill_L,plus)
     
      + s_slack(2122,mill_L,minus) + s_slack(2122,mill_S,plus) + s_slack(2122,mill_S,minus) + s_slack(2122,ofib_L,plus) + s_slack(2122,ofib_L,minus) + s_slack(2122,ooil_L,plus) + s_slack(2122,ooil_L,minus) + s_slack(2122,opul_H,plus)
     
      + s_slack(2122,opul_H,minus) + s_slack(2122,opul_L,plus) + s_slack(2122,opul_L,minus) + s_slack(2122,opul_S,plus) + s_slack(2122,opul_S,minus) + s_slack(2122,pige_H,plus) + s_slack(2122,pige_H,minus) + s_slack(2122,pige_L,plus)
     
      + s_slack(2122,pige_L,minus) + s_slack(2122,pige_S,plus) + s_slack(2122,pige_S,minus) + s_slack(2122,pota_H,plus) + s_slack(2122,pota_H,minus) + s_slack(2122,pota_L,plus) + s_slack(2122,pota_L,minus) + s_slack(2122,pota_S,plus)
     
      + s_slack(2122,pota_S,minus) + s_slack(2122,rest_H,plus) + s_slack(2122,rest_H,minus) + s_slack(2122,rest_L,plus) + s_slack(2122,rest_L,minus) + s_slack(2122,rest_S,plus) + s_slack(2122,rest_S,minus) + s_slack(2122,rice_H,plus)
     
      + s_slack(2122,rice_H,minus) + s_slack(2122,rice_L,plus) + s_slack(2122,rice_L,minus) + s_slack(2122,rice_S,plus) + s_slack(2122,rice_S,minus) + s_slack(2122,sorg_L,plus) + s_slack(2122,sorg_L,minus) + s_slack(2122,sorg_S,plus)
     
      + s_slack(2122,sorg_S,minus) + s_slack(2122,soyb_L,plus) + s_slack(2122,soyb_L,minus) + s_slack(2122,soyb_S,plus) + s_slack(2122,soyb_S,minus) + s_slack(2122,sunf_L,plus) + s_slack(2122,sunf_L,minus) + s_slack(2122,temf_H,plus)
     
      + s_slack(2122,temf_H,minus) + s_slack(2122,temf_L,plus) + s_slack(2122,temf_L,minus) + s_slack(2122,temf_S,plus) + s_slack(2122,temf_S,minus) + s_slack(2122,toba_H,plus) + s_slack(2122,toba_H,minus) + s_slack(2122,toba_L,plus)
     
      + s_slack(2122,toba_L,minus) + s_slack(2122,trof_L,plus) + s_slack(2122,trof_L,minus) + s_slack(2122,trof_S,plus) + s_slack(2122,trof_S,minus) + s_slack(2122,vege_H,plus) + s_slack(2122,vege_H,minus) + s_slack(2122,vege_L,plus)
     
      + s_slack(2122,vege_L,minus) + s_slack(2122,vege_S,plus) + s_slack(2122,vege_S,minus) + s_slack(2123,rice_I,plus) + s_slack(2123,rice_I,minus) + s_slack(2123,sugc_I,plus) + s_slack(2123,sugc_I,minus) + s_slack(2123,whea_I,plus)
     
      + s_slack(2123,whea_I,minus) + s_slack(2123,bean_H,plus) + s_slack(2123,bean_H,minus) + s_slack(2123,bean_L,plus) + s_slack(2123,bean_L,minus) + s_slack(2123,bean_S,plus) + s_slack(2123,bean_S,minus) + s_slack(2123,cass_L,plus)
     
      + s_slack(2123,cass_L,minus) + s_slack(2123,cass_S,plus) + s_slack(2123,cass_S,minus) + s_slack(2123,chic_H,plus) + s_slack(2123,chic_H,minus) + s_slack(2123,chic_L,plus) + s_slack(2123,chic_L,minus) + s_slack(2123,chic_S,plus)
     
      + s_slack(2123,chic_S,minus) + s_slack(2123,coff_H,plus) + s_slack(2123,coff_H,minus) + s_slack(2123,coff_L,plus) + s_slack(2123,coff_L,minus) + s_slack(2123,cott_L,plus) + s_slack(2123,cott_L,minus) + s_slack(2123,cowp_H,plus)
     
      + s_slack(2123,cowp_H,minus) + s_slack(2123,cowp_L,plus) + s_slack(2123,cowp_L,minus) + s_slack(2123,cowp_S,plus) + s_slack(2123,cowp_S,minus) + s_slack(2123,grou_H,plus) + s_slack(2123,grou_H,minus) + s_slack(2123,grou_L,plus)
     
      + s_slack(2123,grou_L,minus) + s_slack(2123,grou_S,plus) + s_slack(2123,grou_S,minus) + s_slack(2123,lent_H,plus) + s_slack(2123,lent_H,minus) + s_slack(2123,lent_L,plus) + s_slack(2123,lent_L,minus) + s_slack(2123,lent_S,plus)
     
      + s_slack(2123,lent_S,minus) + s_slack(2123,maiz_H,plus) + s_slack(2123,maiz_H,minus) + s_slack(2123,maiz_L,plus) + s_slack(2123,maiz_L,minus) + s_slack(2123,maiz_S,plus) + s_slack(2123,maiz_S,minus) + s_slack(2123,mill_H,plus)
     
      + s_slack(2123,mill_H,minus) + s_slack(2123,mill_L,plus) + s_slack(2123,mill_L,minus) + s_slack(2123,mill_S,plus) + s_slack(2123,mill_S,minus) + s_slack(2123,ofib_L,plus) + s_slack(2123,ofib_L,minus) + s_slack(2123,ooil_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 210
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2123,ooil_L,minus) + s_slack(2123,opul_H,plus) + s_slack(2123,opul_H,minus) + s_slack(2123,opul_L,plus) + s_slack(2123,opul_L,minus) + s_slack(2123,opul_S,plus) + s_slack(2123,opul_S,minus) + s_slack(2123,pige_H,plus)
     
      + s_slack(2123,pige_H,minus) + s_slack(2123,pige_L,plus) + s_slack(2123,pige_L,minus) + s_slack(2123,pige_S,plus) + s_slack(2123,pige_S,minus) + s_slack(2123,pota_H,plus) + s_slack(2123,pota_H,minus) + s_slack(2123,pota_L,plus)
     
      + s_slack(2123,pota_L,minus) + s_slack(2123,pota_S,plus) + s_slack(2123,pota_S,minus) + s_slack(2123,rest_H,plus) + s_slack(2123,rest_H,minus) + s_slack(2123,rest_L,plus) + s_slack(2123,rest_L,minus) + s_slack(2123,rest_S,plus)
     
      + s_slack(2123,rest_S,minus) + s_slack(2123,rice_H,plus) + s_slack(2123,rice_H,minus) + s_slack(2123,rice_L,plus) + s_slack(2123,rice_L,minus) + s_slack(2123,rice_S,plus) + s_slack(2123,rice_S,minus) + s_slack(2123,sorg_L,plus)
     
      + s_slack(2123,sorg_L,minus) + s_slack(2123,sorg_S,plus) + s_slack(2123,sorg_S,minus) + s_slack(2123,soyb_L,plus) + s_slack(2123,soyb_L,minus) + s_slack(2123,soyb_S,plus) + s_slack(2123,soyb_S,minus) + s_slack(2123,sunf_L,plus)
     
      + s_slack(2123,sunf_L,minus) + s_slack(2123,temf_H,plus) + s_slack(2123,temf_H,minus) + s_slack(2123,temf_L,plus) + s_slack(2123,temf_L,minus) + s_slack(2123,temf_S,plus) + s_slack(2123,temf_S,minus) + s_slack(2123,toba_H,plus)
     
      + s_slack(2123,toba_H,minus) + s_slack(2123,toba_L,plus) + s_slack(2123,toba_L,minus) + s_slack(2123,trof_L,plus) + s_slack(2123,trof_L,minus) + s_slack(2123,trof_S,plus) + s_slack(2123,trof_S,minus) + s_slack(2123,vege_H,plus)
     
      + s_slack(2123,vege_H,minus) + s_slack(2123,vege_L,plus) + s_slack(2123,vege_L,minus) + s_slack(2123,vege_S,plus) + s_slack(2123,vege_S,minus) + s_slack(2124,rice_I,plus) + s_slack(2124,rice_I,minus) + s_slack(2124,sugc_I,plus)
     
      + s_slack(2124,sugc_I,minus) + s_slack(2124,whea_I,plus) + s_slack(2124,whea_I,minus) + s_slack(2124,bean_H,plus) + s_slack(2124,bean_H,minus) + s_slack(2124,bean_L,plus) + s_slack(2124,bean_L,minus) + s_slack(2124,bean_S,plus)
     
      + s_slack(2124,bean_S,minus) + s_slack(2124,cass_L,plus) + s_slack(2124,cass_L,minus) + s_slack(2124,cass_S,plus) + s_slack(2124,cass_S,minus) + s_slack(2124,chic_H,plus) + s_slack(2124,chic_H,minus) + s_slack(2124,chic_L,plus)
     
      + s_slack(2124,chic_L,minus) + s_slack(2124,chic_S,plus) + s_slack(2124,chic_S,minus) + s_slack(2124,coff_H,plus) + s_slack(2124,coff_H,minus) + s_slack(2124,coff_L,plus) + s_slack(2124,coff_L,minus) + s_slack(2124,cott_L,plus)
     
      + s_slack(2124,cott_L,minus) + s_slack(2124,cowp_H,plus) + s_slack(2124,cowp_H,minus) + s_slack(2124,cowp_L,plus) + s_slack(2124,cowp_L,minus) + s_slack(2124,cowp_S,plus) + s_slack(2124,cowp_S,minus) + s_slack(2124,grou_H,plus)
     
      + s_slack(2124,grou_H,minus) + s_slack(2124,grou_L,plus) + s_slack(2124,grou_L,minus) + s_slack(2124,grou_S,plus) + s_slack(2124,grou_S,minus) + s_slack(2124,lent_H,plus) + s_slack(2124,lent_H,minus) + s_slack(2124,lent_L,plus)
     
      + s_slack(2124,lent_L,minus) + s_slack(2124,lent_S,plus) + s_slack(2124,lent_S,minus) + s_slack(2124,maiz_H,plus) + s_slack(2124,maiz_H,minus) + s_slack(2124,maiz_L,plus) + s_slack(2124,maiz_L,minus) + s_slack(2124,maiz_S,plus)
     
      + s_slack(2124,maiz_S,minus) + s_slack(2124,mill_H,plus) + s_slack(2124,mill_H,minus) + s_slack(2124,mill_L,plus) + s_slack(2124,mill_L,minus) + s_slack(2124,mill_S,plus) + s_slack(2124,mill_S,minus) + s_slack(2124,ofib_L,plus)
     
      + s_slack(2124,ofib_L,minus) + s_slack(2124,ooil_L,plus) + s_slack(2124,ooil_L,minus) + s_slack(2124,opul_H,plus) + s_slack(2124,opul_H,minus) + s_slack(2124,opul_L,plus) + s_slack(2124,opul_L,minus) + s_slack(2124,opul_S,plus)
     
      + s_slack(2124,opul_S,minus) + s_slack(2124,pige_H,plus) + s_slack(2124,pige_H,minus) + s_slack(2124,pige_L,plus) + s_slack(2124,pige_L,minus) + s_slack(2124,pige_S,plus) + s_slack(2124,pige_S,minus) + s_slack(2124,pota_H,plus)
     
      + s_slack(2124,pota_H,minus) + s_slack(2124,pota_L,plus) + s_slack(2124,pota_L,minus) + s_slack(2124,pota_S,plus) + s_slack(2124,pota_S,minus) + s_slack(2124,rest_H,plus) + s_slack(2124,rest_H,minus) + s_slack(2124,rest_L,plus)
     
      + s_slack(2124,rest_L,minus) + s_slack(2124,rest_S,plus) + s_slack(2124,rest_S,minus) + s_slack(2124,rice_H,plus) + s_slack(2124,rice_H,minus) + s_slack(2124,rice_L,plus) + s_slack(2124,rice_L,minus) + s_slack(2124,rice_S,plus)
     
      + s_slack(2124,rice_S,minus) + s_slack(2124,sorg_L,plus) + s_slack(2124,sorg_L,minus) + s_slack(2124,sorg_S,plus) + s_slack(2124,sorg_S,minus) + s_slack(2124,soyb_L,plus) + s_slack(2124,soyb_L,minus) + s_slack(2124,soyb_S,plus)
     
      + s_slack(2124,soyb_S,minus) + s_slack(2124,sunf_L,plus) + s_slack(2124,sunf_L,minus) + s_slack(2124,temf_H,plus) + s_slack(2124,temf_H,minus) + s_slack(2124,temf_L,plus) + s_slack(2124,temf_L,minus) + s_slack(2124,temf_S,plus)
     
      + s_slack(2124,temf_S,minus) + s_slack(2124,toba_H,plus) + s_slack(2124,toba_H,minus) + s_slack(2124,toba_L,plus) + s_slack(2124,toba_L,minus) + s_slack(2124,trof_L,plus) + s_slack(2124,trof_L,minus) + s_slack(2124,trof_S,plus)
     
      + s_slack(2124,trof_S,minus) + s_slack(2124,vege_H,plus) + s_slack(2124,vege_H,minus) + s_slack(2124,vege_L,plus) + s_slack(2124,vege_L,minus) + s_slack(2124,vege_S,plus) + s_slack(2124,vege_S,minus) + s_slack(2127,rice_I,plus)
     
      + s_slack(2127,rice_I,minus) + s_slack(2127,sugc_I,plus) + s_slack(2127,sugc_I,minus) + s_slack(2127,whea_I,plus) + s_slack(2127,whea_I,minus) + s_slack(2127,bean_H,plus) + s_slack(2127,bean_H,minus) + s_slack(2127,bean_L,plus)
     
      + s_slack(2127,bean_L,minus) + s_slack(2127,bean_S,plus) + s_slack(2127,bean_S,minus) + s_slack(2127,cass_L,plus) + s_slack(2127,cass_L,minus) + s_slack(2127,cass_S,plus) + s_slack(2127,cass_S,minus) + s_slack(2127,chic_H,plus)
     
      + s_slack(2127,chic_H,minus) + s_slack(2127,chic_L,plus) + s_slack(2127,chic_L,minus) + s_slack(2127,chic_S,plus) + s_slack(2127,chic_S,minus) + s_slack(2127,coff_H,plus) + s_slack(2127,coff_H,minus) + s_slack(2127,coff_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 211
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2127,coff_L,minus) + s_slack(2127,cott_L,plus) + s_slack(2127,cott_L,minus) + s_slack(2127,cowp_H,plus) + s_slack(2127,cowp_H,minus) + s_slack(2127,cowp_L,plus) + s_slack(2127,cowp_L,minus) + s_slack(2127,cowp_S,plus)
     
      + s_slack(2127,cowp_S,minus) + s_slack(2127,grou_H,plus) + s_slack(2127,grou_H,minus) + s_slack(2127,grou_L,plus) + s_slack(2127,grou_L,minus) + s_slack(2127,grou_S,plus) + s_slack(2127,grou_S,minus) + s_slack(2127,lent_H,plus)
     
      + s_slack(2127,lent_H,minus) + s_slack(2127,lent_L,plus) + s_slack(2127,lent_L,minus) + s_slack(2127,lent_S,plus) + s_slack(2127,lent_S,minus) + s_slack(2127,maiz_H,plus) + s_slack(2127,maiz_H,minus) + s_slack(2127,maiz_L,plus)
     
      + s_slack(2127,maiz_L,minus) + s_slack(2127,maiz_S,plus) + s_slack(2127,maiz_S,minus) + s_slack(2127,mill_H,plus) + s_slack(2127,mill_H,minus) + s_slack(2127,mill_L,plus) + s_slack(2127,mill_L,minus) + s_slack(2127,mill_S,plus)
     
      + s_slack(2127,mill_S,minus) + s_slack(2127,ofib_L,plus) + s_slack(2127,ofib_L,minus) + s_slack(2127,ooil_L,plus) + s_slack(2127,ooil_L,minus) + s_slack(2127,opul_H,plus) + s_slack(2127,opul_H,minus) + s_slack(2127,opul_L,plus)
     
      + s_slack(2127,opul_L,minus) + s_slack(2127,opul_S,plus) + s_slack(2127,opul_S,minus) + s_slack(2127,pige_H,plus) + s_slack(2127,pige_H,minus) + s_slack(2127,pige_L,plus) + s_slack(2127,pige_L,minus) + s_slack(2127,pige_S,plus)
     
      + s_slack(2127,pige_S,minus) + s_slack(2127,pota_H,plus) + s_slack(2127,pota_H,minus) + s_slack(2127,pota_L,plus) + s_slack(2127,pota_L,minus) + s_slack(2127,pota_S,plus) + s_slack(2127,pota_S,minus) + s_slack(2127,rest_H,plus)
     
      + s_slack(2127,rest_H,minus) + s_slack(2127,rest_L,plus) + s_slack(2127,rest_L,minus) + s_slack(2127,rest_S,plus) + s_slack(2127,rest_S,minus) + s_slack(2127,rice_H,plus) + s_slack(2127,rice_H,minus) + s_slack(2127,rice_L,plus)
     
      + s_slack(2127,rice_L,minus) + s_slack(2127,rice_S,plus) + s_slack(2127,rice_S,minus) + s_slack(2127,sorg_L,plus) + s_slack(2127,sorg_L,minus) + s_slack(2127,sorg_S,plus) + s_slack(2127,sorg_S,minus) + s_slack(2127,soyb_L,plus)
     
      + s_slack(2127,soyb_L,minus) + s_slack(2127,soyb_S,plus) + s_slack(2127,soyb_S,minus) + s_slack(2127,sunf_L,plus) + s_slack(2127,sunf_L,minus) + s_slack(2127,temf_H,plus) + s_slack(2127,temf_H,minus) + s_slack(2127,temf_L,plus)
     
      + s_slack(2127,temf_L,minus) + s_slack(2127,temf_S,plus) + s_slack(2127,temf_S,minus) + s_slack(2127,toba_H,plus) + s_slack(2127,toba_H,minus) + s_slack(2127,toba_L,plus) + s_slack(2127,toba_L,minus) + s_slack(2127,trof_L,plus)
     
      + s_slack(2127,trof_L,minus) + s_slack(2127,trof_S,plus) + s_slack(2127,trof_S,minus) + s_slack(2127,vege_H,plus) + s_slack(2127,vege_H,minus) + s_slack(2127,vege_L,plus) + s_slack(2127,vege_L,minus) + s_slack(2127,vege_S,plus)
     
      + s_slack(2127,vege_S,minus) + s_slack(2150,rice_I,plus) + s_slack(2150,rice_I,minus) + s_slack(2150,sugc_I,plus) + s_slack(2150,sugc_I,minus) + s_slack(2150,whea_I,plus) + s_slack(2150,whea_I,minus) + s_slack(2150,bean_H,plus)
     
      + s_slack(2150,bean_H,minus) + s_slack(2150,bean_L,plus) + s_slack(2150,bean_L,minus) + s_slack(2150,bean_S,plus) + s_slack(2150,bean_S,minus) + s_slack(2150,cass_L,plus) + s_slack(2150,cass_L,minus) + s_slack(2150,cass_S,plus)
     
      + s_slack(2150,cass_S,minus) + s_slack(2150,chic_H,plus) + s_slack(2150,chic_H,minus) + s_slack(2150,chic_L,plus) + s_slack(2150,chic_L,minus) + s_slack(2150,chic_S,plus) + s_slack(2150,chic_S,minus) + s_slack(2150,coff_H,plus)
     
      + s_slack(2150,coff_H,minus) + s_slack(2150,coff_L,plus) + s_slack(2150,coff_L,minus) + s_slack(2150,cott_L,plus) + s_slack(2150,cott_L,minus) + s_slack(2150,cowp_H,plus) + s_slack(2150,cowp_H,minus) + s_slack(2150,cowp_L,plus)
     
      + s_slack(2150,cowp_L,minus) + s_slack(2150,cowp_S,plus) + s_slack(2150,cowp_S,minus) + s_slack(2150,grou_H,plus) + s_slack(2150,grou_H,minus) + s_slack(2150,grou_L,plus) + s_slack(2150,grou_L,minus) + s_slack(2150,grou_S,plus)
     
      + s_slack(2150,grou_S,minus) + s_slack(2150,lent_H,plus) + s_slack(2150,lent_H,minus) + s_slack(2150,lent_L,plus) + s_slack(2150,lent_L,minus) + s_slack(2150,lent_S,plus) + s_slack(2150,lent_S,minus) + s_slack(2150,maiz_H,plus)
     
      + s_slack(2150,maiz_H,minus) + s_slack(2150,maiz_L,plus) + s_slack(2150,maiz_L,minus) + s_slack(2150,maiz_S,plus) + s_slack(2150,maiz_S,minus) + s_slack(2150,mill_H,plus) + s_slack(2150,mill_H,minus) + s_slack(2150,mill_L,plus)
     
      + s_slack(2150,mill_L,minus) + s_slack(2150,mill_S,plus) + s_slack(2150,mill_S,minus) + s_slack(2150,ofib_L,plus) + s_slack(2150,ofib_L,minus) + s_slack(2150,ooil_L,plus) + s_slack(2150,ooil_L,minus) + s_slack(2150,opul_H,plus)
     
      + s_slack(2150,opul_H,minus) + s_slack(2150,opul_L,plus) + s_slack(2150,opul_L,minus) + s_slack(2150,opul_S,plus) + s_slack(2150,opul_S,minus) + s_slack(2150,pige_H,plus) + s_slack(2150,pige_H,minus) + s_slack(2150,pige_L,plus)
     
      + s_slack(2150,pige_L,minus) + s_slack(2150,pige_S,plus) + s_slack(2150,pige_S,minus) + s_slack(2150,pota_H,plus) + s_slack(2150,pota_H,minus) + s_slack(2150,pota_L,plus) + s_slack(2150,pota_L,minus) + s_slack(2150,pota_S,plus)
     
      + s_slack(2150,pota_S,minus) + s_slack(2150,rest_H,plus) + s_slack(2150,rest_H,minus) + s_slack(2150,rest_L,plus) + s_slack(2150,rest_L,minus) + s_slack(2150,rest_S,plus) + s_slack(2150,rest_S,minus) + s_slack(2150,rice_H,plus)
     
      + s_slack(2150,rice_H,minus) + s_slack(2150,rice_L,plus) + s_slack(2150,rice_L,minus) + s_slack(2150,rice_S,plus) + s_slack(2150,rice_S,minus) + s_slack(2150,sorg_L,plus) + s_slack(2150,sorg_L,minus) + s_slack(2150,sorg_S,plus)
     
      + s_slack(2150,sorg_S,minus) + s_slack(2150,soyb_L,plus) + s_slack(2150,soyb_L,minus) + s_slack(2150,soyb_S,plus) + s_slack(2150,soyb_S,minus) + s_slack(2150,sunf_L,plus) + s_slack(2150,sunf_L,minus) + s_slack(2150,temf_H,plus)
     
      + s_slack(2150,temf_H,minus) + s_slack(2150,temf_L,plus) + s_slack(2150,temf_L,minus) + s_slack(2150,temf_S,plus) + s_slack(2150,temf_S,minus) + s_slack(2150,toba_H,plus) + s_slack(2150,toba_H,minus) + s_slack(2150,toba_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 212
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2150,toba_L,minus) + s_slack(2150,trof_L,plus) + s_slack(2150,trof_L,minus) + s_slack(2150,trof_S,plus) + s_slack(2150,trof_S,minus) + s_slack(2150,vege_H,plus) + s_slack(2150,vege_H,minus) + s_slack(2150,vege_L,plus)
     
      + s_slack(2150,vege_L,minus) + s_slack(2150,vege_S,plus) + s_slack(2150,vege_S,minus) + s_slack(2151,rice_I,plus) + s_slack(2151,rice_I,minus) + s_slack(2151,sugc_I,plus) + s_slack(2151,sugc_I,minus) + s_slack(2151,whea_I,plus)
     
      + s_slack(2151,whea_I,minus) + s_slack(2151,bean_H,plus) + s_slack(2151,bean_H,minus) + s_slack(2151,bean_L,plus) + s_slack(2151,bean_L,minus) + s_slack(2151,bean_S,plus) + s_slack(2151,bean_S,minus) + s_slack(2151,cass_L,plus)
     
      + s_slack(2151,cass_L,minus) + s_slack(2151,cass_S,plus) + s_slack(2151,cass_S,minus) + s_slack(2151,chic_H,plus) + s_slack(2151,chic_H,minus) + s_slack(2151,chic_L,plus) + s_slack(2151,chic_L,minus) + s_slack(2151,chic_S,plus)
     
      + s_slack(2151,chic_S,minus) + s_slack(2151,coff_H,plus) + s_slack(2151,coff_H,minus) + s_slack(2151,coff_L,plus) + s_slack(2151,coff_L,minus) + s_slack(2151,cott_L,plus) + s_slack(2151,cott_L,minus) + s_slack(2151,cowp_H,plus)
     
      + s_slack(2151,cowp_H,minus) + s_slack(2151,cowp_L,plus) + s_slack(2151,cowp_L,minus) + s_slack(2151,cowp_S,plus) + s_slack(2151,cowp_S,minus) + s_slack(2151,grou_H,plus) + s_slack(2151,grou_H,minus) + s_slack(2151,grou_L,plus)
     
      + s_slack(2151,grou_L,minus) + s_slack(2151,grou_S,plus) + s_slack(2151,grou_S,minus) + s_slack(2151,lent_H,plus) + s_slack(2151,lent_H,minus) + s_slack(2151,lent_L,plus) + s_slack(2151,lent_L,minus) + s_slack(2151,lent_S,plus)
     
      + s_slack(2151,lent_S,minus) + s_slack(2151,maiz_H,plus) + s_slack(2151,maiz_H,minus) + s_slack(2151,maiz_L,plus) + s_slack(2151,maiz_L,minus) + s_slack(2151,maiz_S,plus) + s_slack(2151,maiz_S,minus) + s_slack(2151,mill_H,plus)
     
      + s_slack(2151,mill_H,minus) + s_slack(2151,mill_L,plus) + s_slack(2151,mill_L,minus) + s_slack(2151,mill_S,plus) + s_slack(2151,mill_S,minus) + s_slack(2151,ofib_L,plus) + s_slack(2151,ofib_L,minus) + s_slack(2151,ooil_L,plus)
     
      + s_slack(2151,ooil_L,minus) + s_slack(2151,opul_H,plus) + s_slack(2151,opul_H,minus) + s_slack(2151,opul_L,plus) + s_slack(2151,opul_L,minus) + s_slack(2151,opul_S,plus) + s_slack(2151,opul_S,minus) + s_slack(2151,pige_H,plus)
     
      + s_slack(2151,pige_H,minus) + s_slack(2151,pige_L,plus) + s_slack(2151,pige_L,minus) + s_slack(2151,pige_S,plus) + s_slack(2151,pige_S,minus) + s_slack(2151,pota_H,plus) + s_slack(2151,pota_H,minus) + s_slack(2151,pota_L,plus)
     
      + s_slack(2151,pota_L,minus) + s_slack(2151,pota_S,plus) + s_slack(2151,pota_S,minus) + s_slack(2151,rest_H,plus) + s_slack(2151,rest_H,minus) + s_slack(2151,rest_L,plus) + s_slack(2151,rest_L,minus) + s_slack(2151,rest_S,plus)
     
      + s_slack(2151,rest_S,minus) + s_slack(2151,rice_H,plus) + s_slack(2151,rice_H,minus) + s_slack(2151,rice_L,plus) + s_slack(2151,rice_L,minus) + s_slack(2151,rice_S,plus) + s_slack(2151,rice_S,minus) + s_slack(2151,sorg_L,plus)
     
      + s_slack(2151,sorg_L,minus) + s_slack(2151,sorg_S,plus) + s_slack(2151,sorg_S,minus) + s_slack(2151,soyb_L,plus) + s_slack(2151,soyb_L,minus) + s_slack(2151,soyb_S,plus) + s_slack(2151,soyb_S,minus) + s_slack(2151,sunf_L,plus)
     
      + s_slack(2151,sunf_L,minus) + s_slack(2151,temf_H,plus) + s_slack(2151,temf_H,minus) + s_slack(2151,temf_L,plus) + s_slack(2151,temf_L,minus) + s_slack(2151,temf_S,plus) + s_slack(2151,temf_S,minus) + s_slack(2151,toba_H,plus)
     
      + s_slack(2151,toba_H,minus) + s_slack(2151,toba_L,plus) + s_slack(2151,toba_L,minus) + s_slack(2151,trof_L,plus) + s_slack(2151,trof_L,minus) + s_slack(2151,trof_S,plus) + s_slack(2151,trof_S,minus) + s_slack(2151,vege_H,plus)
     
      + s_slack(2151,vege_H,minus) + s_slack(2151,vege_L,plus) + s_slack(2151,vege_L,minus) + s_slack(2151,vege_S,plus) + s_slack(2151,vege_S,minus) + s_slack(2152,rice_I,plus) + s_slack(2152,rice_I,minus) + s_slack(2152,sugc_I,plus)
     
      + s_slack(2152,sugc_I,minus) + s_slack(2152,whea_I,plus) + s_slack(2152,whea_I,minus) + s_slack(2152,bean_H,plus) + s_slack(2152,bean_H,minus) + s_slack(2152,bean_L,plus) + s_slack(2152,bean_L,minus) + s_slack(2152,bean_S,plus)
     
      + s_slack(2152,bean_S,minus) + s_slack(2152,cass_L,plus) + s_slack(2152,cass_L,minus) + s_slack(2152,cass_S,plus) + s_slack(2152,cass_S,minus) + s_slack(2152,chic_H,plus) + s_slack(2152,chic_H,minus) + s_slack(2152,chic_L,plus)
     
      + s_slack(2152,chic_L,minus) + s_slack(2152,chic_S,plus) + s_slack(2152,chic_S,minus) + s_slack(2152,coff_H,plus) + s_slack(2152,coff_H,minus) + s_slack(2152,coff_L,plus) + s_slack(2152,coff_L,minus) + s_slack(2152,cott_L,plus)
     
      + s_slack(2152,cott_L,minus) + s_slack(2152,cowp_H,plus) + s_slack(2152,cowp_H,minus) + s_slack(2152,cowp_L,plus) + s_slack(2152,cowp_L,minus) + s_slack(2152,cowp_S,plus) + s_slack(2152,cowp_S,minus) + s_slack(2152,grou_H,plus)
     
      + s_slack(2152,grou_H,minus) + s_slack(2152,grou_L,plus) + s_slack(2152,grou_L,minus) + s_slack(2152,grou_S,plus) + s_slack(2152,grou_S,minus) + s_slack(2152,lent_H,plus) + s_slack(2152,lent_H,minus) + s_slack(2152,lent_L,plus)
     
      + s_slack(2152,lent_L,minus) + s_slack(2152,lent_S,plus) + s_slack(2152,lent_S,minus) + s_slack(2152,maiz_H,plus) + s_slack(2152,maiz_H,minus) + s_slack(2152,maiz_L,plus) + s_slack(2152,maiz_L,minus) + s_slack(2152,maiz_S,plus)
     
      + s_slack(2152,maiz_S,minus) + s_slack(2152,mill_H,plus) + s_slack(2152,mill_H,minus) + s_slack(2152,mill_L,plus) + s_slack(2152,mill_L,minus) + s_slack(2152,mill_S,plus) + s_slack(2152,mill_S,minus) + s_slack(2152,ofib_L,plus)
     
      + s_slack(2152,ofib_L,minus) + s_slack(2152,ooil_L,plus) + s_slack(2152,ooil_L,minus) + s_slack(2152,opul_H,plus) + s_slack(2152,opul_H,minus) + s_slack(2152,opul_L,plus) + s_slack(2152,opul_L,minus) + s_slack(2152,opul_S,plus)
     
      + s_slack(2152,opul_S,minus) + s_slack(2152,pige_H,plus) + s_slack(2152,pige_H,minus) + s_slack(2152,pige_L,plus) + s_slack(2152,pige_L,minus) + s_slack(2152,pige_S,plus) + s_slack(2152,pige_S,minus) + s_slack(2152,pota_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 213
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2152,pota_H,minus) + s_slack(2152,pota_L,plus) + s_slack(2152,pota_L,minus) + s_slack(2152,pota_S,plus) + s_slack(2152,pota_S,minus) + s_slack(2152,rest_H,plus) + s_slack(2152,rest_H,minus) + s_slack(2152,rest_L,plus)
     
      + s_slack(2152,rest_L,minus) + s_slack(2152,rest_S,plus) + s_slack(2152,rest_S,minus) + s_slack(2152,rice_H,plus) + s_slack(2152,rice_H,minus) + s_slack(2152,rice_L,plus) + s_slack(2152,rice_L,minus) + s_slack(2152,rice_S,plus)
     
      + s_slack(2152,rice_S,minus) + s_slack(2152,sorg_L,plus) + s_slack(2152,sorg_L,minus) + s_slack(2152,sorg_S,plus) + s_slack(2152,sorg_S,minus) + s_slack(2152,soyb_L,plus) + s_slack(2152,soyb_L,minus) + s_slack(2152,soyb_S,plus)
     
      + s_slack(2152,soyb_S,minus) + s_slack(2152,sunf_L,plus) + s_slack(2152,sunf_L,minus) + s_slack(2152,temf_H,plus) + s_slack(2152,temf_H,minus) + s_slack(2152,temf_L,plus) + s_slack(2152,temf_L,minus) + s_slack(2152,temf_S,plus)
     
      + s_slack(2152,temf_S,minus) + s_slack(2152,toba_H,plus) + s_slack(2152,toba_H,minus) + s_slack(2152,toba_L,plus) + s_slack(2152,toba_L,minus) + s_slack(2152,trof_L,plus) + s_slack(2152,trof_L,minus) + s_slack(2152,trof_S,plus)
     
      + s_slack(2152,trof_S,minus) + s_slack(2152,vege_H,plus) + s_slack(2152,vege_H,minus) + s_slack(2152,vege_L,plus) + s_slack(2152,vege_L,minus) + s_slack(2152,vege_S,plus) + s_slack(2152,vege_S,minus) + s_slack(2153,rice_I,plus)
     
      + s_slack(2153,rice_I,minus) + s_slack(2153,sugc_I,plus) + s_slack(2153,sugc_I,minus) + s_slack(2153,whea_I,plus) + s_slack(2153,whea_I,minus) + s_slack(2153,bean_H,plus) + s_slack(2153,bean_H,minus) + s_slack(2153,bean_L,plus)
     
      + s_slack(2153,bean_L,minus) + s_slack(2153,bean_S,plus) + s_slack(2153,bean_S,minus) + s_slack(2153,cass_L,plus) + s_slack(2153,cass_L,minus) + s_slack(2153,cass_S,plus) + s_slack(2153,cass_S,minus) + s_slack(2153,chic_H,plus)
     
      + s_slack(2153,chic_H,minus) + s_slack(2153,chic_L,plus) + s_slack(2153,chic_L,minus) + s_slack(2153,chic_S,plus) + s_slack(2153,chic_S,minus) + s_slack(2153,coff_H,plus) + s_slack(2153,coff_H,minus) + s_slack(2153,coff_L,plus)
     
      + s_slack(2153,coff_L,minus) + s_slack(2153,cott_L,plus) + s_slack(2153,cott_L,minus) + s_slack(2153,cowp_H,plus) + s_slack(2153,cowp_H,minus) + s_slack(2153,cowp_L,plus) + s_slack(2153,cowp_L,minus) + s_slack(2153,cowp_S,plus)
     
      + s_slack(2153,cowp_S,minus) + s_slack(2153,grou_H,plus) + s_slack(2153,grou_H,minus) + s_slack(2153,grou_L,plus) + s_slack(2153,grou_L,minus) + s_slack(2153,grou_S,plus) + s_slack(2153,grou_S,minus) + s_slack(2153,lent_H,plus)
     
      + s_slack(2153,lent_H,minus) + s_slack(2153,lent_L,plus) + s_slack(2153,lent_L,minus) + s_slack(2153,lent_S,plus) + s_slack(2153,lent_S,minus) + s_slack(2153,maiz_H,plus) + s_slack(2153,maiz_H,minus) + s_slack(2153,maiz_L,plus)
     
      + s_slack(2153,maiz_L,minus) + s_slack(2153,maiz_S,plus) + s_slack(2153,maiz_S,minus) + s_slack(2153,mill_H,plus) + s_slack(2153,mill_H,minus) + s_slack(2153,mill_L,plus) + s_slack(2153,mill_L,minus) + s_slack(2153,mill_S,plus)
     
      + s_slack(2153,mill_S,minus) + s_slack(2153,ofib_L,plus) + s_slack(2153,ofib_L,minus) + s_slack(2153,ooil_L,plus) + s_slack(2153,ooil_L,minus) + s_slack(2153,opul_H,plus) + s_slack(2153,opul_H,minus) + s_slack(2153,opul_L,plus)
     
      + s_slack(2153,opul_L,minus) + s_slack(2153,opul_S,plus) + s_slack(2153,opul_S,minus) + s_slack(2153,pige_H,plus) + s_slack(2153,pige_H,minus) + s_slack(2153,pige_L,plus) + s_slack(2153,pige_L,minus) + s_slack(2153,pige_S,plus)
     
      + s_slack(2153,pige_S,minus) + s_slack(2153,pota_H,plus) + s_slack(2153,pota_H,minus) + s_slack(2153,pota_L,plus) + s_slack(2153,pota_L,minus) + s_slack(2153,pota_S,plus) + s_slack(2153,pota_S,minus) + s_slack(2153,rest_H,plus)
     
      + s_slack(2153,rest_H,minus) + s_slack(2153,rest_L,plus) + s_slack(2153,rest_L,minus) + s_slack(2153,rest_S,plus) + s_slack(2153,rest_S,minus) + s_slack(2153,rice_H,plus) + s_slack(2153,rice_H,minus) + s_slack(2153,rice_L,plus)
     
      + s_slack(2153,rice_L,minus) + s_slack(2153,rice_S,plus) + s_slack(2153,rice_S,minus) + s_slack(2153,sorg_L,plus) + s_slack(2153,sorg_L,minus) + s_slack(2153,sorg_S,plus) + s_slack(2153,sorg_S,minus) + s_slack(2153,soyb_L,plus)
     
      + s_slack(2153,soyb_L,minus) + s_slack(2153,soyb_S,plus) + s_slack(2153,soyb_S,minus) + s_slack(2153,sunf_L,plus) + s_slack(2153,sunf_L,minus) + s_slack(2153,temf_H,plus) + s_slack(2153,temf_H,minus) + s_slack(2153,temf_L,plus)
     
      + s_slack(2153,temf_L,minus) + s_slack(2153,temf_S,plus) + s_slack(2153,temf_S,minus) + s_slack(2153,toba_H,plus) + s_slack(2153,toba_H,minus) + s_slack(2153,toba_L,plus) + s_slack(2153,toba_L,minus) + s_slack(2153,trof_L,plus)
     
      + s_slack(2153,trof_L,minus) + s_slack(2153,trof_S,plus) + s_slack(2153,trof_S,minus) + s_slack(2153,vege_H,plus) + s_slack(2153,vege_H,minus) + s_slack(2153,vege_L,plus) + s_slack(2153,vege_L,minus) + s_slack(2153,vege_S,plus)
     
      + s_slack(2153,vege_S,minus) + s_slack(2154,rice_I,plus) + s_slack(2154,rice_I,minus) + s_slack(2154,sugc_I,plus) + s_slack(2154,sugc_I,minus) + s_slack(2154,whea_I,plus) + s_slack(2154,whea_I,minus) + s_slack(2154,bean_H,plus)
     
      + s_slack(2154,bean_H,minus) + s_slack(2154,bean_L,plus) + s_slack(2154,bean_L,minus) + s_slack(2154,bean_S,plus) + s_slack(2154,bean_S,minus) + s_slack(2154,cass_L,plus) + s_slack(2154,cass_L,minus) + s_slack(2154,cass_S,plus)
     
      + s_slack(2154,cass_S,minus) + s_slack(2154,chic_H,plus) + s_slack(2154,chic_H,minus) + s_slack(2154,chic_L,plus) + s_slack(2154,chic_L,minus) + s_slack(2154,chic_S,plus) + s_slack(2154,chic_S,minus) + s_slack(2154,coff_H,plus)
     
      + s_slack(2154,coff_H,minus) + s_slack(2154,coff_L,plus) + s_slack(2154,coff_L,minus) + s_slack(2154,cott_L,plus) + s_slack(2154,cott_L,minus) + s_slack(2154,cowp_H,plus) + s_slack(2154,cowp_H,minus) + s_slack(2154,cowp_L,plus)
     
      + s_slack(2154,cowp_L,minus) + s_slack(2154,cowp_S,plus) + s_slack(2154,cowp_S,minus) + s_slack(2154,grou_H,plus) + s_slack(2154,grou_H,minus) + s_slack(2154,grou_L,plus) + s_slack(2154,grou_L,minus) + s_slack(2154,grou_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 214
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2154,grou_S,minus) + s_slack(2154,lent_H,plus) + s_slack(2154,lent_H,minus) + s_slack(2154,lent_L,plus) + s_slack(2154,lent_L,minus) + s_slack(2154,lent_S,plus) + s_slack(2154,lent_S,minus) + s_slack(2154,maiz_H,plus)
     
      + s_slack(2154,maiz_H,minus) + s_slack(2154,maiz_L,plus) + s_slack(2154,maiz_L,minus) + s_slack(2154,maiz_S,plus) + s_slack(2154,maiz_S,minus) + s_slack(2154,mill_H,plus) + s_slack(2154,mill_H,minus) + s_slack(2154,mill_L,plus)
     
      + s_slack(2154,mill_L,minus) + s_slack(2154,mill_S,plus) + s_slack(2154,mill_S,minus) + s_slack(2154,ofib_L,plus) + s_slack(2154,ofib_L,minus) + s_slack(2154,ooil_L,plus) + s_slack(2154,ooil_L,minus) + s_slack(2154,opul_H,plus)
     
      + s_slack(2154,opul_H,minus) + s_slack(2154,opul_L,plus) + s_slack(2154,opul_L,minus) + s_slack(2154,opul_S,plus) + s_slack(2154,opul_S,minus) + s_slack(2154,pige_H,plus) + s_slack(2154,pige_H,minus) + s_slack(2154,pige_L,plus)
     
      + s_slack(2154,pige_L,minus) + s_slack(2154,pige_S,plus) + s_slack(2154,pige_S,minus) + s_slack(2154,pota_H,plus) + s_slack(2154,pota_H,minus) + s_slack(2154,pota_L,plus) + s_slack(2154,pota_L,minus) + s_slack(2154,pota_S,plus)
     
      + s_slack(2154,pota_S,minus) + s_slack(2154,rest_H,plus) + s_slack(2154,rest_H,minus) + s_slack(2154,rest_L,plus) + s_slack(2154,rest_L,minus) + s_slack(2154,rest_S,plus) + s_slack(2154,rest_S,minus) + s_slack(2154,rice_H,plus)
     
      + s_slack(2154,rice_H,minus) + s_slack(2154,rice_L,plus) + s_slack(2154,rice_L,minus) + s_slack(2154,rice_S,plus) + s_slack(2154,rice_S,minus) + s_slack(2154,sorg_L,plus) + s_slack(2154,sorg_L,minus) + s_slack(2154,sorg_S,plus)
     
      + s_slack(2154,sorg_S,minus) + s_slack(2154,soyb_L,plus) + s_slack(2154,soyb_L,minus) + s_slack(2154,soyb_S,plus) + s_slack(2154,soyb_S,minus) + s_slack(2154,sunf_L,plus) + s_slack(2154,sunf_L,minus) + s_slack(2154,temf_H,plus)
     
      + s_slack(2154,temf_H,minus) + s_slack(2154,temf_L,plus) + s_slack(2154,temf_L,minus) + s_slack(2154,temf_S,plus) + s_slack(2154,temf_S,minus) + s_slack(2154,toba_H,plus) + s_slack(2154,toba_H,minus) + s_slack(2154,toba_L,plus)
     
      + s_slack(2154,toba_L,minus) + s_slack(2154,trof_L,plus) + s_slack(2154,trof_L,minus) + s_slack(2154,trof_S,plus) + s_slack(2154,trof_S,minus) + s_slack(2154,vege_H,plus) + s_slack(2154,vege_H,minus) + s_slack(2154,vege_L,plus)
     
      + s_slack(2154,vege_L,minus) + s_slack(2154,vege_S,plus) + s_slack(2154,vege_S,minus) + s_slack(2155,rice_I,plus) + s_slack(2155,rice_I,minus) + s_slack(2155,sugc_I,plus) + s_slack(2155,sugc_I,minus) + s_slack(2155,whea_I,plus)
     
      + s_slack(2155,whea_I,minus) + s_slack(2155,bean_H,plus) + s_slack(2155,bean_H,minus) + s_slack(2155,bean_L,plus) + s_slack(2155,bean_L,minus) + s_slack(2155,bean_S,plus) + s_slack(2155,bean_S,minus) + s_slack(2155,cass_L,plus)
     
      + s_slack(2155,cass_L,minus) + s_slack(2155,cass_S,plus) + s_slack(2155,cass_S,minus) + s_slack(2155,chic_H,plus) + s_slack(2155,chic_H,minus) + s_slack(2155,chic_L,plus) + s_slack(2155,chic_L,minus) + s_slack(2155,chic_S,plus)
     
      + s_slack(2155,chic_S,minus) + s_slack(2155,coff_H,plus) + s_slack(2155,coff_H,minus) + s_slack(2155,coff_L,plus) + s_slack(2155,coff_L,minus) + s_slack(2155,cott_L,plus) + s_slack(2155,cott_L,minus) + s_slack(2155,cowp_H,plus)
     
      + s_slack(2155,cowp_H,minus) + s_slack(2155,cowp_L,plus) + s_slack(2155,cowp_L,minus) + s_slack(2155,cowp_S,plus) + s_slack(2155,cowp_S,minus) + s_slack(2155,grou_H,plus) + s_slack(2155,grou_H,minus) + s_slack(2155,grou_L,plus)
     
      + s_slack(2155,grou_L,minus) + s_slack(2155,grou_S,plus) + s_slack(2155,grou_S,minus) + s_slack(2155,lent_H,plus) + s_slack(2155,lent_H,minus) + s_slack(2155,lent_L,plus) + s_slack(2155,lent_L,minus) + s_slack(2155,lent_S,plus)
     
      + s_slack(2155,lent_S,minus) + s_slack(2155,maiz_H,plus) + s_slack(2155,maiz_H,minus) + s_slack(2155,maiz_L,plus) + s_slack(2155,maiz_L,minus) + s_slack(2155,maiz_S,plus) + s_slack(2155,maiz_S,minus) + s_slack(2155,mill_H,plus)
     
      + s_slack(2155,mill_H,minus) + s_slack(2155,mill_L,plus) + s_slack(2155,mill_L,minus) + s_slack(2155,mill_S,plus) + s_slack(2155,mill_S,minus) + s_slack(2155,ofib_L,plus) + s_slack(2155,ofib_L,minus) + s_slack(2155,ooil_L,plus)
     
      + s_slack(2155,ooil_L,minus) + s_slack(2155,opul_H,plus) + s_slack(2155,opul_H,minus) + s_slack(2155,opul_L,plus) + s_slack(2155,opul_L,minus) + s_slack(2155,opul_S,plus) + s_slack(2155,opul_S,minus) + s_slack(2155,pige_H,plus)
     
      + s_slack(2155,pige_H,minus) + s_slack(2155,pige_L,plus) + s_slack(2155,pige_L,minus) + s_slack(2155,pige_S,plus) + s_slack(2155,pige_S,minus) + s_slack(2155,pota_H,plus) + s_slack(2155,pota_H,minus) + s_slack(2155,pota_L,plus)
     
      + s_slack(2155,pota_L,minus) + s_slack(2155,pota_S,plus) + s_slack(2155,pota_S,minus) + s_slack(2155,rest_H,plus) + s_slack(2155,rest_H,minus) + s_slack(2155,rest_L,plus) + s_slack(2155,rest_L,minus) + s_slack(2155,rest_S,plus)
     
      + s_slack(2155,rest_S,minus) + s_slack(2155,rice_H,plus) + s_slack(2155,rice_H,minus) + s_slack(2155,rice_L,plus) + s_slack(2155,rice_L,minus) + s_slack(2155,rice_S,plus) + s_slack(2155,rice_S,minus) + s_slack(2155,sorg_L,plus)
     
      + s_slack(2155,sorg_L,minus) + s_slack(2155,sorg_S,plus) + s_slack(2155,sorg_S,minus) + s_slack(2155,soyb_L,plus) + s_slack(2155,soyb_L,minus) + s_slack(2155,soyb_S,plus) + s_slack(2155,soyb_S,minus) + s_slack(2155,sunf_L,plus)
     
      + s_slack(2155,sunf_L,minus) + s_slack(2155,temf_H,plus) + s_slack(2155,temf_H,minus) + s_slack(2155,temf_L,plus) + s_slack(2155,temf_L,minus) + s_slack(2155,temf_S,plus) + s_slack(2155,temf_S,minus) + s_slack(2155,toba_H,plus)
     
      + s_slack(2155,toba_H,minus) + s_slack(2155,toba_L,plus) + s_slack(2155,toba_L,minus) + s_slack(2155,trof_L,plus) + s_slack(2155,trof_L,minus) + s_slack(2155,trof_S,plus) + s_slack(2155,trof_S,minus) + s_slack(2155,vege_H,plus)
     
      + s_slack(2155,vege_H,minus) + s_slack(2155,vege_L,plus) + s_slack(2155,vege_L,minus) + s_slack(2155,vege_S,plus) + s_slack(2155,vege_S,minus) + s_slack(2156,rice_I,plus) + s_slack(2156,rice_I,minus) + s_slack(2156,sugc_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 215
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2156,sugc_I,minus) + s_slack(2156,whea_I,plus) + s_slack(2156,whea_I,minus) + s_slack(2156,bean_H,plus) + s_slack(2156,bean_H,minus) + s_slack(2156,bean_L,plus) + s_slack(2156,bean_L,minus) + s_slack(2156,bean_S,plus)
     
      + s_slack(2156,bean_S,minus) + s_slack(2156,cass_L,plus) + s_slack(2156,cass_L,minus) + s_slack(2156,cass_S,plus) + s_slack(2156,cass_S,minus) + s_slack(2156,chic_H,plus) + s_slack(2156,chic_H,minus) + s_slack(2156,chic_L,plus)
     
      + s_slack(2156,chic_L,minus) + s_slack(2156,chic_S,plus) + s_slack(2156,chic_S,minus) + s_slack(2156,coff_H,plus) + s_slack(2156,coff_H,minus) + s_slack(2156,coff_L,plus) + s_slack(2156,coff_L,minus) + s_slack(2156,cott_L,plus)
     
      + s_slack(2156,cott_L,minus) + s_slack(2156,cowp_H,plus) + s_slack(2156,cowp_H,minus) + s_slack(2156,cowp_L,plus) + s_slack(2156,cowp_L,minus) + s_slack(2156,cowp_S,plus) + s_slack(2156,cowp_S,minus) + s_slack(2156,grou_H,plus)
     
      + s_slack(2156,grou_H,minus) + s_slack(2156,grou_L,plus) + s_slack(2156,grou_L,minus) + s_slack(2156,grou_S,plus) + s_slack(2156,grou_S,minus) + s_slack(2156,lent_H,plus) + s_slack(2156,lent_H,minus) + s_slack(2156,lent_L,plus)
     
      + s_slack(2156,lent_L,minus) + s_slack(2156,lent_S,plus) + s_slack(2156,lent_S,minus) + s_slack(2156,maiz_H,plus) + s_slack(2156,maiz_H,minus) + s_slack(2156,maiz_L,plus) + s_slack(2156,maiz_L,minus) + s_slack(2156,maiz_S,plus)
     
      + s_slack(2156,maiz_S,minus) + s_slack(2156,mill_H,plus) + s_slack(2156,mill_H,minus) + s_slack(2156,mill_L,plus) + s_slack(2156,mill_L,minus) + s_slack(2156,mill_S,plus) + s_slack(2156,mill_S,minus) + s_slack(2156,ofib_L,plus)
     
      + s_slack(2156,ofib_L,minus) + s_slack(2156,ooil_L,plus) + s_slack(2156,ooil_L,minus) + s_slack(2156,opul_H,plus) + s_slack(2156,opul_H,minus) + s_slack(2156,opul_L,plus) + s_slack(2156,opul_L,minus) + s_slack(2156,opul_S,plus)
     
      + s_slack(2156,opul_S,minus) + s_slack(2156,pige_H,plus) + s_slack(2156,pige_H,minus) + s_slack(2156,pige_L,plus) + s_slack(2156,pige_L,minus) + s_slack(2156,pige_S,plus) + s_slack(2156,pige_S,minus) + s_slack(2156,pota_H,plus)
     
      + s_slack(2156,pota_H,minus) + s_slack(2156,pota_L,plus) + s_slack(2156,pota_L,minus) + s_slack(2156,pota_S,plus) + s_slack(2156,pota_S,minus) + s_slack(2156,rest_H,plus) + s_slack(2156,rest_H,minus) + s_slack(2156,rest_L,plus)
     
      + s_slack(2156,rest_L,minus) + s_slack(2156,rest_S,plus) + s_slack(2156,rest_S,minus) + s_slack(2156,rice_H,plus) + s_slack(2156,rice_H,minus) + s_slack(2156,rice_L,plus) + s_slack(2156,rice_L,minus) + s_slack(2156,rice_S,plus)
     
      + s_slack(2156,rice_S,minus) + s_slack(2156,sorg_L,plus) + s_slack(2156,sorg_L,minus) + s_slack(2156,sorg_S,plus) + s_slack(2156,sorg_S,minus) + s_slack(2156,soyb_L,plus) + s_slack(2156,soyb_L,minus) + s_slack(2156,soyb_S,plus)
     
      + s_slack(2156,soyb_S,minus) + s_slack(2156,sunf_L,plus) + s_slack(2156,sunf_L,minus) + s_slack(2156,temf_H,plus) + s_slack(2156,temf_H,minus) + s_slack(2156,temf_L,plus) + s_slack(2156,temf_L,minus) + s_slack(2156,temf_S,plus)
     
      + s_slack(2156,temf_S,minus) + s_slack(2156,toba_H,plus) + s_slack(2156,toba_H,minus) + s_slack(2156,toba_L,plus) + s_slack(2156,toba_L,minus) + s_slack(2156,trof_L,plus) + s_slack(2156,trof_L,minus) + s_slack(2156,trof_S,plus)
     
      + s_slack(2156,trof_S,minus) + s_slack(2156,vege_H,plus) + s_slack(2156,vege_H,minus) + s_slack(2156,vege_L,plus) + s_slack(2156,vege_L,minus) + s_slack(2156,vege_S,plus) + s_slack(2156,vege_S,minus) + s_slack(2157,rice_I,plus)
     
      + s_slack(2157,rice_I,minus) + s_slack(2157,sugc_I,plus) + s_slack(2157,sugc_I,minus) + s_slack(2157,whea_I,plus) + s_slack(2157,whea_I,minus) + s_slack(2157,bean_H,plus) + s_slack(2157,bean_H,minus) + s_slack(2157,bean_L,plus)
     
      + s_slack(2157,bean_L,minus) + s_slack(2157,bean_S,plus) + s_slack(2157,bean_S,minus) + s_slack(2157,cass_L,plus) + s_slack(2157,cass_L,minus) + s_slack(2157,cass_S,plus) + s_slack(2157,cass_S,minus) + s_slack(2157,chic_H,plus)
     
      + s_slack(2157,chic_H,minus) + s_slack(2157,chic_L,plus) + s_slack(2157,chic_L,minus) + s_slack(2157,chic_S,plus) + s_slack(2157,chic_S,minus) + s_slack(2157,coff_H,plus) + s_slack(2157,coff_H,minus) + s_slack(2157,coff_L,plus)
     
      + s_slack(2157,coff_L,minus) + s_slack(2157,cott_L,plus) + s_slack(2157,cott_L,minus) + s_slack(2157,cowp_H,plus) + s_slack(2157,cowp_H,minus) + s_slack(2157,cowp_L,plus) + s_slack(2157,cowp_L,minus) + s_slack(2157,cowp_S,plus)
     
      + s_slack(2157,cowp_S,minus) + s_slack(2157,grou_H,plus) + s_slack(2157,grou_H,minus) + s_slack(2157,grou_L,plus) + s_slack(2157,grou_L,minus) + s_slack(2157,grou_S,plus) + s_slack(2157,grou_S,minus) + s_slack(2157,lent_H,plus)
     
      + s_slack(2157,lent_H,minus) + s_slack(2157,lent_L,plus) + s_slack(2157,lent_L,minus) + s_slack(2157,lent_S,plus) + s_slack(2157,lent_S,minus) + s_slack(2157,maiz_H,plus) + s_slack(2157,maiz_H,minus) + s_slack(2157,maiz_L,plus)
     
      + s_slack(2157,maiz_L,minus) + s_slack(2157,maiz_S,plus) + s_slack(2157,maiz_S,minus) + s_slack(2157,mill_H,plus) + s_slack(2157,mill_H,minus) + s_slack(2157,mill_L,plus) + s_slack(2157,mill_L,minus) + s_slack(2157,mill_S,plus)
     
      + s_slack(2157,mill_S,minus) + s_slack(2157,ofib_L,plus) + s_slack(2157,ofib_L,minus) + s_slack(2157,ooil_L,plus) + s_slack(2157,ooil_L,minus) + s_slack(2157,opul_H,plus) + s_slack(2157,opul_H,minus) + s_slack(2157,opul_L,plus)
     
      + s_slack(2157,opul_L,minus) + s_slack(2157,opul_S,plus) + s_slack(2157,opul_S,minus) + s_slack(2157,pige_H,plus) + s_slack(2157,pige_H,minus) + s_slack(2157,pige_L,plus) + s_slack(2157,pige_L,minus) + s_slack(2157,pige_S,plus)
     
      + s_slack(2157,pige_S,minus) + s_slack(2157,pota_H,plus) + s_slack(2157,pota_H,minus) + s_slack(2157,pota_L,plus) + s_slack(2157,pota_L,minus) + s_slack(2157,pota_S,plus) + s_slack(2157,pota_S,minus) + s_slack(2157,rest_H,plus)
     
      + s_slack(2157,rest_H,minus) + s_slack(2157,rest_L,plus) + s_slack(2157,rest_L,minus) + s_slack(2157,rest_S,plus) + s_slack(2157,rest_S,minus) + s_slack(2157,rice_H,plus) + s_slack(2157,rice_H,minus) + s_slack(2157,rice_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 216
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2157,rice_L,minus) + s_slack(2157,rice_S,plus) + s_slack(2157,rice_S,minus) + s_slack(2157,sorg_L,plus) + s_slack(2157,sorg_L,minus) + s_slack(2157,sorg_S,plus) + s_slack(2157,sorg_S,minus) + s_slack(2157,soyb_L,plus)
     
      + s_slack(2157,soyb_L,minus) + s_slack(2157,soyb_S,plus) + s_slack(2157,soyb_S,minus) + s_slack(2157,sunf_L,plus) + s_slack(2157,sunf_L,minus) + s_slack(2157,temf_H,plus) + s_slack(2157,temf_H,minus) + s_slack(2157,temf_L,plus)
     
      + s_slack(2157,temf_L,minus) + s_slack(2157,temf_S,plus) + s_slack(2157,temf_S,minus) + s_slack(2157,toba_H,plus) + s_slack(2157,toba_H,minus) + s_slack(2157,toba_L,plus) + s_slack(2157,toba_L,minus) + s_slack(2157,trof_L,plus)
     
      + s_slack(2157,trof_L,minus) + s_slack(2157,trof_S,plus) + s_slack(2157,trof_S,minus) + s_slack(2157,vege_H,plus) + s_slack(2157,vege_H,minus) + s_slack(2157,vege_L,plus) + s_slack(2157,vege_L,minus) + s_slack(2157,vege_S,plus)
     
      + s_slack(2157,vege_S,minus) + s_slack(2158,rice_I,plus) + s_slack(2158,rice_I,minus) + s_slack(2158,sugc_I,plus) + s_slack(2158,sugc_I,minus) + s_slack(2158,whea_I,plus) + s_slack(2158,whea_I,minus) + s_slack(2158,bean_H,plus)
     
      + s_slack(2158,bean_H,minus) + s_slack(2158,bean_L,plus) + s_slack(2158,bean_L,minus) + s_slack(2158,bean_S,plus) + s_slack(2158,bean_S,minus) + s_slack(2158,cass_L,plus) + s_slack(2158,cass_L,minus) + s_slack(2158,cass_S,plus)
     
      + s_slack(2158,cass_S,minus) + s_slack(2158,chic_H,plus) + s_slack(2158,chic_H,minus) + s_slack(2158,chic_L,plus) + s_slack(2158,chic_L,minus) + s_slack(2158,chic_S,plus) + s_slack(2158,chic_S,minus) + s_slack(2158,coff_H,plus)
     
      + s_slack(2158,coff_H,minus) + s_slack(2158,coff_L,plus) + s_slack(2158,coff_L,minus) + s_slack(2158,cott_L,plus) + s_slack(2158,cott_L,minus) + s_slack(2158,cowp_H,plus) + s_slack(2158,cowp_H,minus) + s_slack(2158,cowp_L,plus)
     
      + s_slack(2158,cowp_L,minus) + s_slack(2158,cowp_S,plus) + s_slack(2158,cowp_S,minus) + s_slack(2158,grou_H,plus) + s_slack(2158,grou_H,minus) + s_slack(2158,grou_L,plus) + s_slack(2158,grou_L,minus) + s_slack(2158,grou_S,plus)
     
      + s_slack(2158,grou_S,minus) + s_slack(2158,lent_H,plus) + s_slack(2158,lent_H,minus) + s_slack(2158,lent_L,plus) + s_slack(2158,lent_L,minus) + s_slack(2158,lent_S,plus) + s_slack(2158,lent_S,minus) + s_slack(2158,maiz_H,plus)
     
      + s_slack(2158,maiz_H,minus) + s_slack(2158,maiz_L,plus) + s_slack(2158,maiz_L,minus) + s_slack(2158,maiz_S,plus) + s_slack(2158,maiz_S,minus) + s_slack(2158,mill_H,plus) + s_slack(2158,mill_H,minus) + s_slack(2158,mill_L,plus)
     
      + s_slack(2158,mill_L,minus) + s_slack(2158,mill_S,plus) + s_slack(2158,mill_S,minus) + s_slack(2158,ofib_L,plus) + s_slack(2158,ofib_L,minus) + s_slack(2158,ooil_L,plus) + s_slack(2158,ooil_L,minus) + s_slack(2158,opul_H,plus)
     
      + s_slack(2158,opul_H,minus) + s_slack(2158,opul_L,plus) + s_slack(2158,opul_L,minus) + s_slack(2158,opul_S,plus) + s_slack(2158,opul_S,minus) + s_slack(2158,pige_H,plus) + s_slack(2158,pige_H,minus) + s_slack(2158,pige_L,plus)
     
      + s_slack(2158,pige_L,minus) + s_slack(2158,pige_S,plus) + s_slack(2158,pige_S,minus) + s_slack(2158,pota_H,plus) + s_slack(2158,pota_H,minus) + s_slack(2158,pota_L,plus) + s_slack(2158,pota_L,minus) + s_slack(2158,pota_S,plus)
     
      + s_slack(2158,pota_S,minus) + s_slack(2158,rest_H,plus) + s_slack(2158,rest_H,minus) + s_slack(2158,rest_L,plus) + s_slack(2158,rest_L,minus) + s_slack(2158,rest_S,plus) + s_slack(2158,rest_S,minus) + s_slack(2158,rice_H,plus)
     
      + s_slack(2158,rice_H,minus) + s_slack(2158,rice_L,plus) + s_slack(2158,rice_L,minus) + s_slack(2158,rice_S,plus) + s_slack(2158,rice_S,minus) + s_slack(2158,sorg_L,plus) + s_slack(2158,sorg_L,minus) + s_slack(2158,sorg_S,plus)
     
      + s_slack(2158,sorg_S,minus) + s_slack(2158,soyb_L,plus) + s_slack(2158,soyb_L,minus) + s_slack(2158,soyb_S,plus) + s_slack(2158,soyb_S,minus) + s_slack(2158,sunf_L,plus) + s_slack(2158,sunf_L,minus) + s_slack(2158,temf_H,plus)
     
      + s_slack(2158,temf_H,minus) + s_slack(2158,temf_L,plus) + s_slack(2158,temf_L,minus) + s_slack(2158,temf_S,plus) + s_slack(2158,temf_S,minus) + s_slack(2158,toba_H,plus) + s_slack(2158,toba_H,minus) + s_slack(2158,toba_L,plus)
     
      + s_slack(2158,toba_L,minus) + s_slack(2158,trof_L,plus) + s_slack(2158,trof_L,minus) + s_slack(2158,trof_S,plus) + s_slack(2158,trof_S,minus) + s_slack(2158,vege_H,plus) + s_slack(2158,vege_H,minus) + s_slack(2158,vege_L,plus)
     
      + s_slack(2158,vege_L,minus) + s_slack(2158,vege_S,plus) + s_slack(2158,vege_S,minus) + s_slack(2159,rice_I,plus) + s_slack(2159,rice_I,minus) + s_slack(2159,sugc_I,plus) + s_slack(2159,sugc_I,minus) + s_slack(2159,whea_I,plus)
     
      + s_slack(2159,whea_I,minus) + s_slack(2159,bean_H,plus) + s_slack(2159,bean_H,minus) + s_slack(2159,bean_L,plus) + s_slack(2159,bean_L,minus) + s_slack(2159,bean_S,plus) + s_slack(2159,bean_S,minus) + s_slack(2159,cass_L,plus)
     
      + s_slack(2159,cass_L,minus) + s_slack(2159,cass_S,plus) + s_slack(2159,cass_S,minus) + s_slack(2159,chic_H,plus) + s_slack(2159,chic_H,minus) + s_slack(2159,chic_L,plus) + s_slack(2159,chic_L,minus) + s_slack(2159,chic_S,plus)
     
      + s_slack(2159,chic_S,minus) + s_slack(2159,coff_H,plus) + s_slack(2159,coff_H,minus) + s_slack(2159,coff_L,plus) + s_slack(2159,coff_L,minus) + s_slack(2159,cott_L,plus) + s_slack(2159,cott_L,minus) + s_slack(2159,cowp_H,plus)
     
      + s_slack(2159,cowp_H,minus) + s_slack(2159,cowp_L,plus) + s_slack(2159,cowp_L,minus) + s_slack(2159,cowp_S,plus) + s_slack(2159,cowp_S,minus) + s_slack(2159,grou_H,plus) + s_slack(2159,grou_H,minus) + s_slack(2159,grou_L,plus)
     
      + s_slack(2159,grou_L,minus) + s_slack(2159,grou_S,plus) + s_slack(2159,grou_S,minus) + s_slack(2159,lent_H,plus) + s_slack(2159,lent_H,minus) + s_slack(2159,lent_L,plus) + s_slack(2159,lent_L,minus) + s_slack(2159,lent_S,plus)
     
      + s_slack(2159,lent_S,minus) + s_slack(2159,maiz_H,plus) + s_slack(2159,maiz_H,minus) + s_slack(2159,maiz_L,plus) + s_slack(2159,maiz_L,minus) + s_slack(2159,maiz_S,plus) + s_slack(2159,maiz_S,minus) + s_slack(2159,mill_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 217
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2159,mill_H,minus) + s_slack(2159,mill_L,plus) + s_slack(2159,mill_L,minus) + s_slack(2159,mill_S,plus) + s_slack(2159,mill_S,minus) + s_slack(2159,ofib_L,plus) + s_slack(2159,ofib_L,minus) + s_slack(2159,ooil_L,plus)
     
      + s_slack(2159,ooil_L,minus) + s_slack(2159,opul_H,plus) + s_slack(2159,opul_H,minus) + s_slack(2159,opul_L,plus) + s_slack(2159,opul_L,minus) + s_slack(2159,opul_S,plus) + s_slack(2159,opul_S,minus) + s_slack(2159,pige_H,plus)
     
      + s_slack(2159,pige_H,minus) + s_slack(2159,pige_L,plus) + s_slack(2159,pige_L,minus) + s_slack(2159,pige_S,plus) + s_slack(2159,pige_S,minus) + s_slack(2159,pota_H,plus) + s_slack(2159,pota_H,minus) + s_slack(2159,pota_L,plus)
     
      + s_slack(2159,pota_L,minus) + s_slack(2159,pota_S,plus) + s_slack(2159,pota_S,minus) + s_slack(2159,rest_H,plus) + s_slack(2159,rest_H,minus) + s_slack(2159,rest_L,plus) + s_slack(2159,rest_L,minus) + s_slack(2159,rest_S,plus)
     
      + s_slack(2159,rest_S,minus) + s_slack(2159,rice_H,plus) + s_slack(2159,rice_H,minus) + s_slack(2159,rice_L,plus) + s_slack(2159,rice_L,minus) + s_slack(2159,rice_S,plus) + s_slack(2159,rice_S,minus) + s_slack(2159,sorg_L,plus)
     
      + s_slack(2159,sorg_L,minus) + s_slack(2159,sorg_S,plus) + s_slack(2159,sorg_S,minus) + s_slack(2159,soyb_L,plus) + s_slack(2159,soyb_L,minus) + s_slack(2159,soyb_S,plus) + s_slack(2159,soyb_S,minus) + s_slack(2159,sunf_L,plus)
     
      + s_slack(2159,sunf_L,minus) + s_slack(2159,temf_H,plus) + s_slack(2159,temf_H,minus) + s_slack(2159,temf_L,plus) + s_slack(2159,temf_L,minus) + s_slack(2159,temf_S,plus) + s_slack(2159,temf_S,minus) + s_slack(2159,toba_H,plus)
     
      + s_slack(2159,toba_H,minus) + s_slack(2159,toba_L,plus) + s_slack(2159,toba_L,minus) + s_slack(2159,trof_L,plus) + s_slack(2159,trof_L,minus) + s_slack(2159,trof_S,plus) + s_slack(2159,trof_S,minus) + s_slack(2159,vege_H,plus)
     
      + s_slack(2159,vege_H,minus) + s_slack(2159,vege_L,plus) + s_slack(2159,vege_L,minus) + s_slack(2159,vege_S,plus) + s_slack(2159,vege_S,minus) + s_slack(2160,rice_I,plus) + s_slack(2160,rice_I,minus) + s_slack(2160,sugc_I,plus)
     
      + s_slack(2160,sugc_I,minus) + s_slack(2160,whea_I,plus) + s_slack(2160,whea_I,minus) + s_slack(2160,bean_H,plus) + s_slack(2160,bean_H,minus) + s_slack(2160,bean_L,plus) + s_slack(2160,bean_L,minus) + s_slack(2160,bean_S,plus)
     
      + s_slack(2160,bean_S,minus) + s_slack(2160,cass_L,plus) + s_slack(2160,cass_L,minus) + s_slack(2160,cass_S,plus) + s_slack(2160,cass_S,minus) + s_slack(2160,chic_H,plus) + s_slack(2160,chic_H,minus) + s_slack(2160,chic_L,plus)
     
      + s_slack(2160,chic_L,minus) + s_slack(2160,chic_S,plus) + s_slack(2160,chic_S,minus) + s_slack(2160,coff_H,plus) + s_slack(2160,coff_H,minus) + s_slack(2160,coff_L,plus) + s_slack(2160,coff_L,minus) + s_slack(2160,cott_L,plus)
     
      + s_slack(2160,cott_L,minus) + s_slack(2160,cowp_H,plus) + s_slack(2160,cowp_H,minus) + s_slack(2160,cowp_L,plus) + s_slack(2160,cowp_L,minus) + s_slack(2160,cowp_S,plus) + s_slack(2160,cowp_S,minus) + s_slack(2160,grou_H,plus)
     
      + s_slack(2160,grou_H,minus) + s_slack(2160,grou_L,plus) + s_slack(2160,grou_L,minus) + s_slack(2160,grou_S,plus) + s_slack(2160,grou_S,minus) + s_slack(2160,lent_H,plus) + s_slack(2160,lent_H,minus) + s_slack(2160,lent_L,plus)
     
      + s_slack(2160,lent_L,minus) + s_slack(2160,lent_S,plus) + s_slack(2160,lent_S,minus) + s_slack(2160,maiz_H,plus) + s_slack(2160,maiz_H,minus) + s_slack(2160,maiz_L,plus) + s_slack(2160,maiz_L,minus) + s_slack(2160,maiz_S,plus)
     
      + s_slack(2160,maiz_S,minus) + s_slack(2160,mill_H,plus) + s_slack(2160,mill_H,minus) + s_slack(2160,mill_L,plus) + s_slack(2160,mill_L,minus) + s_slack(2160,mill_S,plus) + s_slack(2160,mill_S,minus) + s_slack(2160,ofib_L,plus)
     
      + s_slack(2160,ofib_L,minus) + s_slack(2160,ooil_L,plus) + s_slack(2160,ooil_L,minus) + s_slack(2160,opul_H,plus) + s_slack(2160,opul_H,minus) + s_slack(2160,opul_L,plus) + s_slack(2160,opul_L,minus) + s_slack(2160,opul_S,plus)
     
      + s_slack(2160,opul_S,minus) + s_slack(2160,pige_H,plus) + s_slack(2160,pige_H,minus) + s_slack(2160,pige_L,plus) + s_slack(2160,pige_L,minus) + s_slack(2160,pige_S,plus) + s_slack(2160,pige_S,minus) + s_slack(2160,pota_H,plus)
     
      + s_slack(2160,pota_H,minus) + s_slack(2160,pota_L,plus) + s_slack(2160,pota_L,minus) + s_slack(2160,pota_S,plus) + s_slack(2160,pota_S,minus) + s_slack(2160,rest_H,plus) + s_slack(2160,rest_H,minus) + s_slack(2160,rest_L,plus)
     
      + s_slack(2160,rest_L,minus) + s_slack(2160,rest_S,plus) + s_slack(2160,rest_S,minus) + s_slack(2160,rice_H,plus) + s_slack(2160,rice_H,minus) + s_slack(2160,rice_L,plus) + s_slack(2160,rice_L,minus) + s_slack(2160,rice_S,plus)
     
      + s_slack(2160,rice_S,minus) + s_slack(2160,sorg_L,plus) + s_slack(2160,sorg_L,minus) + s_slack(2160,sorg_S,plus) + s_slack(2160,sorg_S,minus) + s_slack(2160,soyb_L,plus) + s_slack(2160,soyb_L,minus) + s_slack(2160,soyb_S,plus)
     
      + s_slack(2160,soyb_S,minus) + s_slack(2160,sunf_L,plus) + s_slack(2160,sunf_L,minus) + s_slack(2160,temf_H,plus) + s_slack(2160,temf_H,minus) + s_slack(2160,temf_L,plus) + s_slack(2160,temf_L,minus) + s_slack(2160,temf_S,plus)
     
      + s_slack(2160,temf_S,minus) + s_slack(2160,toba_H,plus) + s_slack(2160,toba_H,minus) + s_slack(2160,toba_L,plus) + s_slack(2160,toba_L,minus) + s_slack(2160,trof_L,plus) + s_slack(2160,trof_L,minus) + s_slack(2160,trof_S,plus)
     
      + s_slack(2160,trof_S,minus) + s_slack(2160,vege_H,plus) + s_slack(2160,vege_H,minus) + s_slack(2160,vege_L,plus) + s_slack(2160,vege_L,minus) + s_slack(2160,vege_S,plus) + s_slack(2160,vege_S,minus) + s_slack(2161,rice_I,plus)
     
      + s_slack(2161,rice_I,minus) + s_slack(2161,sugc_I,plus) + s_slack(2161,sugc_I,minus) + s_slack(2161,whea_I,plus) + s_slack(2161,whea_I,minus) + s_slack(2161,bean_H,plus) + s_slack(2161,bean_H,minus) + s_slack(2161,bean_L,plus)
     
      + s_slack(2161,bean_L,minus) + s_slack(2161,bean_S,plus) + s_slack(2161,bean_S,minus) + s_slack(2161,cass_L,plus) + s_slack(2161,cass_L,minus) + s_slack(2161,cass_S,plus) + s_slack(2161,cass_S,minus) + s_slack(2161,chic_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 218
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2161,chic_H,minus) + s_slack(2161,chic_L,plus) + s_slack(2161,chic_L,minus) + s_slack(2161,chic_S,plus) + s_slack(2161,chic_S,minus) + s_slack(2161,coff_H,plus) + s_slack(2161,coff_H,minus) + s_slack(2161,coff_L,plus)
     
      + s_slack(2161,coff_L,minus) + s_slack(2161,cott_L,plus) + s_slack(2161,cott_L,minus) + s_slack(2161,cowp_H,plus) + s_slack(2161,cowp_H,minus) + s_slack(2161,cowp_L,plus) + s_slack(2161,cowp_L,minus) + s_slack(2161,cowp_S,plus)
     
      + s_slack(2161,cowp_S,minus) + s_slack(2161,grou_H,plus) + s_slack(2161,grou_H,minus) + s_slack(2161,grou_L,plus) + s_slack(2161,grou_L,minus) + s_slack(2161,grou_S,plus) + s_slack(2161,grou_S,minus) + s_slack(2161,lent_H,plus)
     
      + s_slack(2161,lent_H,minus) + s_slack(2161,lent_L,plus) + s_slack(2161,lent_L,minus) + s_slack(2161,lent_S,plus) + s_slack(2161,lent_S,minus) + s_slack(2161,maiz_H,plus) + s_slack(2161,maiz_H,minus) + s_slack(2161,maiz_L,plus)
     
      + s_slack(2161,maiz_L,minus) + s_slack(2161,maiz_S,plus) + s_slack(2161,maiz_S,minus) + s_slack(2161,mill_H,plus) + s_slack(2161,mill_H,minus) + s_slack(2161,mill_L,plus) + s_slack(2161,mill_L,minus) + s_slack(2161,mill_S,plus)
     
      + s_slack(2161,mill_S,minus) + s_slack(2161,ofib_L,plus) + s_slack(2161,ofib_L,minus) + s_slack(2161,ooil_L,plus) + s_slack(2161,ooil_L,minus) + s_slack(2161,opul_H,plus) + s_slack(2161,opul_H,minus) + s_slack(2161,opul_L,plus)
     
      + s_slack(2161,opul_L,minus) + s_slack(2161,opul_S,plus) + s_slack(2161,opul_S,minus) + s_slack(2161,pige_H,plus) + s_slack(2161,pige_H,minus) + s_slack(2161,pige_L,plus) + s_slack(2161,pige_L,minus) + s_slack(2161,pige_S,plus)
     
      + s_slack(2161,pige_S,minus) + s_slack(2161,pota_H,plus) + s_slack(2161,pota_H,minus) + s_slack(2161,pota_L,plus) + s_slack(2161,pota_L,minus) + s_slack(2161,pota_S,plus) + s_slack(2161,pota_S,minus) + s_slack(2161,rest_H,plus)
     
      + s_slack(2161,rest_H,minus) + s_slack(2161,rest_L,plus) + s_slack(2161,rest_L,minus) + s_slack(2161,rest_S,plus) + s_slack(2161,rest_S,minus) + s_slack(2161,rice_H,plus) + s_slack(2161,rice_H,minus) + s_slack(2161,rice_L,plus)
     
      + s_slack(2161,rice_L,minus) + s_slack(2161,rice_S,plus) + s_slack(2161,rice_S,minus) + s_slack(2161,sorg_L,plus) + s_slack(2161,sorg_L,minus) + s_slack(2161,sorg_S,plus) + s_slack(2161,sorg_S,minus) + s_slack(2161,soyb_L,plus)
     
      + s_slack(2161,soyb_L,minus) + s_slack(2161,soyb_S,plus) + s_slack(2161,soyb_S,minus) + s_slack(2161,sunf_L,plus) + s_slack(2161,sunf_L,minus) + s_slack(2161,temf_H,plus) + s_slack(2161,temf_H,minus) + s_slack(2161,temf_L,plus)
     
      + s_slack(2161,temf_L,minus) + s_slack(2161,temf_S,plus) + s_slack(2161,temf_S,minus) + s_slack(2161,toba_H,plus) + s_slack(2161,toba_H,minus) + s_slack(2161,toba_L,plus) + s_slack(2161,toba_L,minus) + s_slack(2161,trof_L,plus)
     
      + s_slack(2161,trof_L,minus) + s_slack(2161,trof_S,plus) + s_slack(2161,trof_S,minus) + s_slack(2161,vege_H,plus) + s_slack(2161,vege_H,minus) + s_slack(2161,vege_L,plus) + s_slack(2161,vege_L,minus) + s_slack(2161,vege_S,plus)
     
      + s_slack(2161,vege_S,minus) + s_slack(2162,rice_I,plus) + s_slack(2162,rice_I,minus) + s_slack(2162,sugc_I,plus) + s_slack(2162,sugc_I,minus) + s_slack(2162,whea_I,plus) + s_slack(2162,whea_I,minus) + s_slack(2162,bean_H,plus)
     
      + s_slack(2162,bean_H,minus) + s_slack(2162,bean_L,plus) + s_slack(2162,bean_L,minus) + s_slack(2162,bean_S,plus) + s_slack(2162,bean_S,minus) + s_slack(2162,cass_L,plus) + s_slack(2162,cass_L,minus) + s_slack(2162,cass_S,plus)
     
      + s_slack(2162,cass_S,minus) + s_slack(2162,chic_H,plus) + s_slack(2162,chic_H,minus) + s_slack(2162,chic_L,plus) + s_slack(2162,chic_L,minus) + s_slack(2162,chic_S,plus) + s_slack(2162,chic_S,minus) + s_slack(2162,coff_H,plus)
     
      + s_slack(2162,coff_H,minus) + s_slack(2162,coff_L,plus) + s_slack(2162,coff_L,minus) + s_slack(2162,cott_L,plus) + s_slack(2162,cott_L,minus) + s_slack(2162,cowp_H,plus) + s_slack(2162,cowp_H,minus) + s_slack(2162,cowp_L,plus)
     
      + s_slack(2162,cowp_L,minus) + s_slack(2162,cowp_S,plus) + s_slack(2162,cowp_S,minus) + s_slack(2162,grou_H,plus) + s_slack(2162,grou_H,minus) + s_slack(2162,grou_L,plus) + s_slack(2162,grou_L,minus) + s_slack(2162,grou_S,plus)
     
      + s_slack(2162,grou_S,minus) + s_slack(2162,lent_H,plus) + s_slack(2162,lent_H,minus) + s_slack(2162,lent_L,plus) + s_slack(2162,lent_L,minus) + s_slack(2162,lent_S,plus) + s_slack(2162,lent_S,minus) + s_slack(2162,maiz_H,plus)
     
      + s_slack(2162,maiz_H,minus) + s_slack(2162,maiz_L,plus) + s_slack(2162,maiz_L,minus) + s_slack(2162,maiz_S,plus) + s_slack(2162,maiz_S,minus) + s_slack(2162,mill_H,plus) + s_slack(2162,mill_H,minus) + s_slack(2162,mill_L,plus)
     
      + s_slack(2162,mill_L,minus) + s_slack(2162,mill_S,plus) + s_slack(2162,mill_S,minus) + s_slack(2162,ofib_L,plus) + s_slack(2162,ofib_L,minus) + s_slack(2162,ooil_L,plus) + s_slack(2162,ooil_L,minus) + s_slack(2162,opul_H,plus)
     
      + s_slack(2162,opul_H,minus) + s_slack(2162,opul_L,plus) + s_slack(2162,opul_L,minus) + s_slack(2162,opul_S,plus) + s_slack(2162,opul_S,minus) + s_slack(2162,pige_H,plus) + s_slack(2162,pige_H,minus) + s_slack(2162,pige_L,plus)
     
      + s_slack(2162,pige_L,minus) + s_slack(2162,pige_S,plus) + s_slack(2162,pige_S,minus) + s_slack(2162,pota_H,plus) + s_slack(2162,pota_H,minus) + s_slack(2162,pota_L,plus) + s_slack(2162,pota_L,minus) + s_slack(2162,pota_S,plus)
     
      + s_slack(2162,pota_S,minus) + s_slack(2162,rest_H,plus) + s_slack(2162,rest_H,minus) + s_slack(2162,rest_L,plus) + s_slack(2162,rest_L,minus) + s_slack(2162,rest_S,plus) + s_slack(2162,rest_S,minus) + s_slack(2162,rice_H,plus)
     
      + s_slack(2162,rice_H,minus) + s_slack(2162,rice_L,plus) + s_slack(2162,rice_L,minus) + s_slack(2162,rice_S,plus) + s_slack(2162,rice_S,minus) + s_slack(2162,sorg_L,plus) + s_slack(2162,sorg_L,minus) + s_slack(2162,sorg_S,plus)
     
      + s_slack(2162,sorg_S,minus) + s_slack(2162,soyb_L,plus) + s_slack(2162,soyb_L,minus) + s_slack(2162,soyb_S,plus) + s_slack(2162,soyb_S,minus) + s_slack(2162,sunf_L,plus) + s_slack(2162,sunf_L,minus) + s_slack(2162,temf_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 219
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2162,temf_H,minus) + s_slack(2162,temf_L,plus) + s_slack(2162,temf_L,minus) + s_slack(2162,temf_S,plus) + s_slack(2162,temf_S,minus) + s_slack(2162,toba_H,plus) + s_slack(2162,toba_H,minus) + s_slack(2162,toba_L,plus)
     
      + s_slack(2162,toba_L,minus) + s_slack(2162,trof_L,plus) + s_slack(2162,trof_L,minus) + s_slack(2162,trof_S,plus) + s_slack(2162,trof_S,minus) + s_slack(2162,vege_H,plus) + s_slack(2162,vege_H,minus) + s_slack(2162,vege_L,plus)
     
      + s_slack(2162,vege_L,minus) + s_slack(2162,vege_S,plus) + s_slack(2162,vege_S,minus) + s_slack(2163,rice_I,plus) + s_slack(2163,rice_I,minus) + s_slack(2163,sugc_I,plus) + s_slack(2163,sugc_I,minus) + s_slack(2163,whea_I,plus)
     
      + s_slack(2163,whea_I,minus) + s_slack(2163,bean_H,plus) + s_slack(2163,bean_H,minus) + s_slack(2163,bean_L,plus) + s_slack(2163,bean_L,minus) + s_slack(2163,bean_S,plus) + s_slack(2163,bean_S,minus) + s_slack(2163,cass_L,plus)
     
      + s_slack(2163,cass_L,minus) + s_slack(2163,cass_S,plus) + s_slack(2163,cass_S,minus) + s_slack(2163,chic_H,plus) + s_slack(2163,chic_H,minus) + s_slack(2163,chic_L,plus) + s_slack(2163,chic_L,minus) + s_slack(2163,chic_S,plus)
     
      + s_slack(2163,chic_S,minus) + s_slack(2163,coff_H,plus) + s_slack(2163,coff_H,minus) + s_slack(2163,coff_L,plus) + s_slack(2163,coff_L,minus) + s_slack(2163,cott_L,plus) + s_slack(2163,cott_L,minus) + s_slack(2163,cowp_H,plus)
     
      + s_slack(2163,cowp_H,minus) + s_slack(2163,cowp_L,plus) + s_slack(2163,cowp_L,minus) + s_slack(2163,cowp_S,plus) + s_slack(2163,cowp_S,minus) + s_slack(2163,grou_H,plus) + s_slack(2163,grou_H,minus) + s_slack(2163,grou_L,plus)
     
      + s_slack(2163,grou_L,minus) + s_slack(2163,grou_S,plus) + s_slack(2163,grou_S,minus) + s_slack(2163,lent_H,plus) + s_slack(2163,lent_H,minus) + s_slack(2163,lent_L,plus) + s_slack(2163,lent_L,minus) + s_slack(2163,lent_S,plus)
     
      + s_slack(2163,lent_S,minus) + s_slack(2163,maiz_H,plus) + s_slack(2163,maiz_H,minus) + s_slack(2163,maiz_L,plus) + s_slack(2163,maiz_L,minus) + s_slack(2163,maiz_S,plus) + s_slack(2163,maiz_S,minus) + s_slack(2163,mill_H,plus)
     
      + s_slack(2163,mill_H,minus) + s_slack(2163,mill_L,plus) + s_slack(2163,mill_L,minus) + s_slack(2163,mill_S,plus) + s_slack(2163,mill_S,minus) + s_slack(2163,ofib_L,plus) + s_slack(2163,ofib_L,minus) + s_slack(2163,ooil_L,plus)
     
      + s_slack(2163,ooil_L,minus) + s_slack(2163,opul_H,plus) + s_slack(2163,opul_H,minus) + s_slack(2163,opul_L,plus) + s_slack(2163,opul_L,minus) + s_slack(2163,opul_S,plus) + s_slack(2163,opul_S,minus) + s_slack(2163,pige_H,plus)
     
      + s_slack(2163,pige_H,minus) + s_slack(2163,pige_L,plus) + s_slack(2163,pige_L,minus) + s_slack(2163,pige_S,plus) + s_slack(2163,pige_S,minus) + s_slack(2163,pota_H,plus) + s_slack(2163,pota_H,minus) + s_slack(2163,pota_L,plus)
     
      + s_slack(2163,pota_L,minus) + s_slack(2163,pota_S,plus) + s_slack(2163,pota_S,minus) + s_slack(2163,rest_H,plus) + s_slack(2163,rest_H,minus) + s_slack(2163,rest_L,plus) + s_slack(2163,rest_L,minus) + s_slack(2163,rest_S,plus)
     
      + s_slack(2163,rest_S,minus) + s_slack(2163,rice_H,plus) + s_slack(2163,rice_H,minus) + s_slack(2163,rice_L,plus) + s_slack(2163,rice_L,minus) + s_slack(2163,rice_S,plus) + s_slack(2163,rice_S,minus) + s_slack(2163,sorg_L,plus)
     
      + s_slack(2163,sorg_L,minus) + s_slack(2163,sorg_S,plus) + s_slack(2163,sorg_S,minus) + s_slack(2163,soyb_L,plus) + s_slack(2163,soyb_L,minus) + s_slack(2163,soyb_S,plus) + s_slack(2163,soyb_S,minus) + s_slack(2163,sunf_L,plus)
     
      + s_slack(2163,sunf_L,minus) + s_slack(2163,temf_H,plus) + s_slack(2163,temf_H,minus) + s_slack(2163,temf_L,plus) + s_slack(2163,temf_L,minus) + s_slack(2163,temf_S,plus) + s_slack(2163,temf_S,minus) + s_slack(2163,toba_H,plus)
     
      + s_slack(2163,toba_H,minus) + s_slack(2163,toba_L,plus) + s_slack(2163,toba_L,minus) + s_slack(2163,trof_L,plus) + s_slack(2163,trof_L,minus) + s_slack(2163,trof_S,plus) + s_slack(2163,trof_S,minus) + s_slack(2163,vege_H,plus)
     
      + s_slack(2163,vege_H,minus) + s_slack(2163,vege_L,plus) + s_slack(2163,vege_L,minus) + s_slack(2163,vege_S,plus) + s_slack(2163,vege_S,minus) + s_slack(2164,rice_I,plus) + s_slack(2164,rice_I,minus) + s_slack(2164,sugc_I,plus)
     
      + s_slack(2164,sugc_I,minus) + s_slack(2164,whea_I,plus) + s_slack(2164,whea_I,minus) + s_slack(2164,bean_H,plus) + s_slack(2164,bean_H,minus) + s_slack(2164,bean_L,plus) + s_slack(2164,bean_L,minus) + s_slack(2164,bean_S,plus)
     
      + s_slack(2164,bean_S,minus) + s_slack(2164,cass_L,plus) + s_slack(2164,cass_L,minus) + s_slack(2164,cass_S,plus) + s_slack(2164,cass_S,minus) + s_slack(2164,chic_H,plus) + s_slack(2164,chic_H,minus) + s_slack(2164,chic_L,plus)
     
      + s_slack(2164,chic_L,minus) + s_slack(2164,chic_S,plus) + s_slack(2164,chic_S,minus) + s_slack(2164,coff_H,plus) + s_slack(2164,coff_H,minus) + s_slack(2164,coff_L,plus) + s_slack(2164,coff_L,minus) + s_slack(2164,cott_L,plus)
     
      + s_slack(2164,cott_L,minus) + s_slack(2164,cowp_H,plus) + s_slack(2164,cowp_H,minus) + s_slack(2164,cowp_L,plus) + s_slack(2164,cowp_L,minus) + s_slack(2164,cowp_S,plus) + s_slack(2164,cowp_S,minus) + s_slack(2164,grou_H,plus)
     
      + s_slack(2164,grou_H,minus) + s_slack(2164,grou_L,plus) + s_slack(2164,grou_L,minus) + s_slack(2164,grou_S,plus) + s_slack(2164,grou_S,minus) + s_slack(2164,lent_H,plus) + s_slack(2164,lent_H,minus) + s_slack(2164,lent_L,plus)
     
      + s_slack(2164,lent_L,minus) + s_slack(2164,lent_S,plus) + s_slack(2164,lent_S,minus) + s_slack(2164,maiz_H,plus) + s_slack(2164,maiz_H,minus) + s_slack(2164,maiz_L,plus) + s_slack(2164,maiz_L,minus) + s_slack(2164,maiz_S,plus)
     
      + s_slack(2164,maiz_S,minus) + s_slack(2164,mill_H,plus) + s_slack(2164,mill_H,minus) + s_slack(2164,mill_L,plus) + s_slack(2164,mill_L,minus) + s_slack(2164,mill_S,plus) + s_slack(2164,mill_S,minus) + s_slack(2164,ofib_L,plus)
     
      + s_slack(2164,ofib_L,minus) + s_slack(2164,ooil_L,plus) + s_slack(2164,ooil_L,minus) + s_slack(2164,opul_H,plus) + s_slack(2164,opul_H,minus) + s_slack(2164,opul_L,plus) + s_slack(2164,opul_L,minus) + s_slack(2164,opul_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 220
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2164,opul_S,minus) + s_slack(2164,pige_H,plus) + s_slack(2164,pige_H,minus) + s_slack(2164,pige_L,plus) + s_slack(2164,pige_L,minus) + s_slack(2164,pige_S,plus) + s_slack(2164,pige_S,minus) + s_slack(2164,pota_H,plus)
     
      + s_slack(2164,pota_H,minus) + s_slack(2164,pota_L,plus) + s_slack(2164,pota_L,minus) + s_slack(2164,pota_S,plus) + s_slack(2164,pota_S,minus) + s_slack(2164,rest_H,plus) + s_slack(2164,rest_H,minus) + s_slack(2164,rest_L,plus)
     
      + s_slack(2164,rest_L,minus) + s_slack(2164,rest_S,plus) + s_slack(2164,rest_S,minus) + s_slack(2164,rice_H,plus) + s_slack(2164,rice_H,minus) + s_slack(2164,rice_L,plus) + s_slack(2164,rice_L,minus) + s_slack(2164,rice_S,plus)
     
      + s_slack(2164,rice_S,minus) + s_slack(2164,sorg_L,plus) + s_slack(2164,sorg_L,minus) + s_slack(2164,sorg_S,plus) + s_slack(2164,sorg_S,minus) + s_slack(2164,soyb_L,plus) + s_slack(2164,soyb_L,minus) + s_slack(2164,soyb_S,plus)
     
      + s_slack(2164,soyb_S,minus) + s_slack(2164,sunf_L,plus) + s_slack(2164,sunf_L,minus) + s_slack(2164,temf_H,plus) + s_slack(2164,temf_H,minus) + s_slack(2164,temf_L,plus) + s_slack(2164,temf_L,minus) + s_slack(2164,temf_S,plus)
     
      + s_slack(2164,temf_S,minus) + s_slack(2164,toba_H,plus) + s_slack(2164,toba_H,minus) + s_slack(2164,toba_L,plus) + s_slack(2164,toba_L,minus) + s_slack(2164,trof_L,plus) + s_slack(2164,trof_L,minus) + s_slack(2164,trof_S,plus)
     
      + s_slack(2164,trof_S,minus) + s_slack(2164,vege_H,plus) + s_slack(2164,vege_H,minus) + s_slack(2164,vege_L,plus) + s_slack(2164,vege_L,minus) + s_slack(2164,vege_S,plus) + s_slack(2164,vege_S,minus) + s_slack(2165,rice_I,plus)
     
      + s_slack(2165,rice_I,minus) + s_slack(2165,sugc_I,plus) + s_slack(2165,sugc_I,minus) + s_slack(2165,whea_I,plus) + s_slack(2165,whea_I,minus) + s_slack(2165,bean_H,plus) + s_slack(2165,bean_H,minus) + s_slack(2165,bean_L,plus)
     
      + s_slack(2165,bean_L,minus) + s_slack(2165,bean_S,plus) + s_slack(2165,bean_S,minus) + s_slack(2165,cass_L,plus) + s_slack(2165,cass_L,minus) + s_slack(2165,cass_S,plus) + s_slack(2165,cass_S,minus) + s_slack(2165,chic_H,plus)
     
      + s_slack(2165,chic_H,minus) + s_slack(2165,chic_L,plus) + s_slack(2165,chic_L,minus) + s_slack(2165,chic_S,plus) + s_slack(2165,chic_S,minus) + s_slack(2165,coff_H,plus) + s_slack(2165,coff_H,minus) + s_slack(2165,coff_L,plus)
     
      + s_slack(2165,coff_L,minus) + s_slack(2165,cott_L,plus) + s_slack(2165,cott_L,minus) + s_slack(2165,cowp_H,plus) + s_slack(2165,cowp_H,minus) + s_slack(2165,cowp_L,plus) + s_slack(2165,cowp_L,minus) + s_slack(2165,cowp_S,plus)
     
      + s_slack(2165,cowp_S,minus) + s_slack(2165,grou_H,plus) + s_slack(2165,grou_H,minus) + s_slack(2165,grou_L,plus) + s_slack(2165,grou_L,minus) + s_slack(2165,grou_S,plus) + s_slack(2165,grou_S,minus) + s_slack(2165,lent_H,plus)
     
      + s_slack(2165,lent_H,minus) + s_slack(2165,lent_L,plus) + s_slack(2165,lent_L,minus) + s_slack(2165,lent_S,plus) + s_slack(2165,lent_S,minus) + s_slack(2165,maiz_H,plus) + s_slack(2165,maiz_H,minus) + s_slack(2165,maiz_L,plus)
     
      + s_slack(2165,maiz_L,minus) + s_slack(2165,maiz_S,plus) + s_slack(2165,maiz_S,minus) + s_slack(2165,mill_H,plus) + s_slack(2165,mill_H,minus) + s_slack(2165,mill_L,plus) + s_slack(2165,mill_L,minus) + s_slack(2165,mill_S,plus)
     
      + s_slack(2165,mill_S,minus) + s_slack(2165,ofib_L,plus) + s_slack(2165,ofib_L,minus) + s_slack(2165,ooil_L,plus) + s_slack(2165,ooil_L,minus) + s_slack(2165,opul_H,plus) + s_slack(2165,opul_H,minus) + s_slack(2165,opul_L,plus)
     
      + s_slack(2165,opul_L,minus) + s_slack(2165,opul_S,plus) + s_slack(2165,opul_S,minus) + s_slack(2165,pige_H,plus) + s_slack(2165,pige_H,minus) + s_slack(2165,pige_L,plus) + s_slack(2165,pige_L,minus) + s_slack(2165,pige_S,plus)
     
      + s_slack(2165,pige_S,minus) + s_slack(2165,pota_H,plus) + s_slack(2165,pota_H,minus) + s_slack(2165,pota_L,plus) + s_slack(2165,pota_L,minus) + s_slack(2165,pota_S,plus) + s_slack(2165,pota_S,minus) + s_slack(2165,rest_H,plus)
     
      + s_slack(2165,rest_H,minus) + s_slack(2165,rest_L,plus) + s_slack(2165,rest_L,minus) + s_slack(2165,rest_S,plus) + s_slack(2165,rest_S,minus) + s_slack(2165,rice_H,plus) + s_slack(2165,rice_H,minus) + s_slack(2165,rice_L,plus)
     
      + s_slack(2165,rice_L,minus) + s_slack(2165,rice_S,plus) + s_slack(2165,rice_S,minus) + s_slack(2165,sorg_L,plus) + s_slack(2165,sorg_L,minus) + s_slack(2165,sorg_S,plus) + s_slack(2165,sorg_S,minus) + s_slack(2165,soyb_L,plus)
     
      + s_slack(2165,soyb_L,minus) + s_slack(2165,soyb_S,plus) + s_slack(2165,soyb_S,minus) + s_slack(2165,sunf_L,plus) + s_slack(2165,sunf_L,minus) + s_slack(2165,temf_H,plus) + s_slack(2165,temf_H,minus) + s_slack(2165,temf_L,plus)
     
      + s_slack(2165,temf_L,minus) + s_slack(2165,temf_S,plus) + s_slack(2165,temf_S,minus) + s_slack(2165,toba_H,plus) + s_slack(2165,toba_H,minus) + s_slack(2165,toba_L,plus) + s_slack(2165,toba_L,minus) + s_slack(2165,trof_L,plus)
     
      + s_slack(2165,trof_L,minus) + s_slack(2165,trof_S,plus) + s_slack(2165,trof_S,minus) + s_slack(2165,vege_H,plus) + s_slack(2165,vege_H,minus) + s_slack(2165,vege_L,plus) + s_slack(2165,vege_L,minus) + s_slack(2165,vege_S,plus)
     
      + s_slack(2165,vege_S,minus) + s_slack(2166,rice_I,plus) + s_slack(2166,rice_I,minus) + s_slack(2166,sugc_I,plus) + s_slack(2166,sugc_I,minus) + s_slack(2166,whea_I,plus) + s_slack(2166,whea_I,minus) + s_slack(2166,bean_H,plus)
     
      + s_slack(2166,bean_H,minus) + s_slack(2166,bean_L,plus) + s_slack(2166,bean_L,minus) + s_slack(2166,bean_S,plus) + s_slack(2166,bean_S,minus) + s_slack(2166,cass_L,plus) + s_slack(2166,cass_L,minus) + s_slack(2166,cass_S,plus)
     
      + s_slack(2166,cass_S,minus) + s_slack(2166,chic_H,plus) + s_slack(2166,chic_H,minus) + s_slack(2166,chic_L,plus) + s_slack(2166,chic_L,minus) + s_slack(2166,chic_S,plus) + s_slack(2166,chic_S,minus) + s_slack(2166,coff_H,plus)
     
      + s_slack(2166,coff_H,minus) + s_slack(2166,coff_L,plus) + s_slack(2166,coff_L,minus) + s_slack(2166,cott_L,plus) + s_slack(2166,cott_L,minus) + s_slack(2166,cowp_H,plus) + s_slack(2166,cowp_H,minus) + s_slack(2166,cowp_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 221
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2166,cowp_L,minus) + s_slack(2166,cowp_S,plus) + s_slack(2166,cowp_S,minus) + s_slack(2166,grou_H,plus) + s_slack(2166,grou_H,minus) + s_slack(2166,grou_L,plus) + s_slack(2166,grou_L,minus) + s_slack(2166,grou_S,plus)
     
      + s_slack(2166,grou_S,minus) + s_slack(2166,lent_H,plus) + s_slack(2166,lent_H,minus) + s_slack(2166,lent_L,plus) + s_slack(2166,lent_L,minus) + s_slack(2166,lent_S,plus) + s_slack(2166,lent_S,minus) + s_slack(2166,maiz_H,plus)
     
      + s_slack(2166,maiz_H,minus) + s_slack(2166,maiz_L,plus) + s_slack(2166,maiz_L,minus) + s_slack(2166,maiz_S,plus) + s_slack(2166,maiz_S,minus) + s_slack(2166,mill_H,plus) + s_slack(2166,mill_H,minus) + s_slack(2166,mill_L,plus)
     
      + s_slack(2166,mill_L,minus) + s_slack(2166,mill_S,plus) + s_slack(2166,mill_S,minus) + s_slack(2166,ofib_L,plus) + s_slack(2166,ofib_L,minus) + s_slack(2166,ooil_L,plus) + s_slack(2166,ooil_L,minus) + s_slack(2166,opul_H,plus)
     
      + s_slack(2166,opul_H,minus) + s_slack(2166,opul_L,plus) + s_slack(2166,opul_L,minus) + s_slack(2166,opul_S,plus) + s_slack(2166,opul_S,minus) + s_slack(2166,pige_H,plus) + s_slack(2166,pige_H,minus) + s_slack(2166,pige_L,plus)
     
      + s_slack(2166,pige_L,minus) + s_slack(2166,pige_S,plus) + s_slack(2166,pige_S,minus) + s_slack(2166,pota_H,plus) + s_slack(2166,pota_H,minus) + s_slack(2166,pota_L,plus) + s_slack(2166,pota_L,minus) + s_slack(2166,pota_S,plus)
     
      + s_slack(2166,pota_S,minus) + s_slack(2166,rest_H,plus) + s_slack(2166,rest_H,minus) + s_slack(2166,rest_L,plus) + s_slack(2166,rest_L,minus) + s_slack(2166,rest_S,plus) + s_slack(2166,rest_S,minus) + s_slack(2166,rice_H,plus)
     
      + s_slack(2166,rice_H,minus) + s_slack(2166,rice_L,plus) + s_slack(2166,rice_L,minus) + s_slack(2166,rice_S,plus) + s_slack(2166,rice_S,minus) + s_slack(2166,sorg_L,plus) + s_slack(2166,sorg_L,minus) + s_slack(2166,sorg_S,plus)
     
      + s_slack(2166,sorg_S,minus) + s_slack(2166,soyb_L,plus) + s_slack(2166,soyb_L,minus) + s_slack(2166,soyb_S,plus) + s_slack(2166,soyb_S,minus) + s_slack(2166,sunf_L,plus) + s_slack(2166,sunf_L,minus) + s_slack(2166,temf_H,plus)
     
      + s_slack(2166,temf_H,minus) + s_slack(2166,temf_L,plus) + s_slack(2166,temf_L,minus) + s_slack(2166,temf_S,plus) + s_slack(2166,temf_S,minus) + s_slack(2166,toba_H,plus) + s_slack(2166,toba_H,minus) + s_slack(2166,toba_L,plus)
     
      + s_slack(2166,toba_L,minus) + s_slack(2166,trof_L,plus) + s_slack(2166,trof_L,minus) + s_slack(2166,trof_S,plus) + s_slack(2166,trof_S,minus) + s_slack(2166,vege_H,plus) + s_slack(2166,vege_H,minus) + s_slack(2166,vege_L,plus)
     
      + s_slack(2166,vege_L,minus) + s_slack(2166,vege_S,plus) + s_slack(2166,vege_S,minus) + s_slack(2167,rice_I,plus) + s_slack(2167,rice_I,minus) + s_slack(2167,sugc_I,plus) + s_slack(2167,sugc_I,minus) + s_slack(2167,whea_I,plus)
     
      + s_slack(2167,whea_I,minus) + s_slack(2167,bean_H,plus) + s_slack(2167,bean_H,minus) + s_slack(2167,bean_L,plus) + s_slack(2167,bean_L,minus) + s_slack(2167,bean_S,plus) + s_slack(2167,bean_S,minus) + s_slack(2167,cass_L,plus)
     
      + s_slack(2167,cass_L,minus) + s_slack(2167,cass_S,plus) + s_slack(2167,cass_S,minus) + s_slack(2167,chic_H,plus) + s_slack(2167,chic_H,minus) + s_slack(2167,chic_L,plus) + s_slack(2167,chic_L,minus) + s_slack(2167,chic_S,plus)
     
      + s_slack(2167,chic_S,minus) + s_slack(2167,coff_H,plus) + s_slack(2167,coff_H,minus) + s_slack(2167,coff_L,plus) + s_slack(2167,coff_L,minus) + s_slack(2167,cott_L,plus) + s_slack(2167,cott_L,minus) + s_slack(2167,cowp_H,plus)
     
      + s_slack(2167,cowp_H,minus) + s_slack(2167,cowp_L,plus) + s_slack(2167,cowp_L,minus) + s_slack(2167,cowp_S,plus) + s_slack(2167,cowp_S,minus) + s_slack(2167,grou_H,plus) + s_slack(2167,grou_H,minus) + s_slack(2167,grou_L,plus)
     
      + s_slack(2167,grou_L,minus) + s_slack(2167,grou_S,plus) + s_slack(2167,grou_S,minus) + s_slack(2167,lent_H,plus) + s_slack(2167,lent_H,minus) + s_slack(2167,lent_L,plus) + s_slack(2167,lent_L,minus) + s_slack(2167,lent_S,plus)
     
      + s_slack(2167,lent_S,minus) + s_slack(2167,maiz_H,plus) + s_slack(2167,maiz_H,minus) + s_slack(2167,maiz_L,plus) + s_slack(2167,maiz_L,minus) + s_slack(2167,maiz_S,plus) + s_slack(2167,maiz_S,minus) + s_slack(2167,mill_H,plus)
     
      + s_slack(2167,mill_H,minus) + s_slack(2167,mill_L,plus) + s_slack(2167,mill_L,minus) + s_slack(2167,mill_S,plus) + s_slack(2167,mill_S,minus) + s_slack(2167,ofib_L,plus) + s_slack(2167,ofib_L,minus) + s_slack(2167,ooil_L,plus)
     
      + s_slack(2167,ooil_L,minus) + s_slack(2167,opul_H,plus) + s_slack(2167,opul_H,minus) + s_slack(2167,opul_L,plus) + s_slack(2167,opul_L,minus) + s_slack(2167,opul_S,plus) + s_slack(2167,opul_S,minus) + s_slack(2167,pige_H,plus)
     
      + s_slack(2167,pige_H,minus) + s_slack(2167,pige_L,plus) + s_slack(2167,pige_L,minus) + s_slack(2167,pige_S,plus) + s_slack(2167,pige_S,minus) + s_slack(2167,pota_H,plus) + s_slack(2167,pota_H,minus) + s_slack(2167,pota_L,plus)
     
      + s_slack(2167,pota_L,minus) + s_slack(2167,pota_S,plus) + s_slack(2167,pota_S,minus) + s_slack(2167,rest_H,plus) + s_slack(2167,rest_H,minus) + s_slack(2167,rest_L,plus) + s_slack(2167,rest_L,minus) + s_slack(2167,rest_S,plus)
     
      + s_slack(2167,rest_S,minus) + s_slack(2167,rice_H,plus) + s_slack(2167,rice_H,minus) + s_slack(2167,rice_L,plus) + s_slack(2167,rice_L,minus) + s_slack(2167,rice_S,plus) + s_slack(2167,rice_S,minus) + s_slack(2167,sorg_L,plus)
     
      + s_slack(2167,sorg_L,minus) + s_slack(2167,sorg_S,plus) + s_slack(2167,sorg_S,minus) + s_slack(2167,soyb_L,plus) + s_slack(2167,soyb_L,minus) + s_slack(2167,soyb_S,plus) + s_slack(2167,soyb_S,minus) + s_slack(2167,sunf_L,plus)
     
      + s_slack(2167,sunf_L,minus) + s_slack(2167,temf_H,plus) + s_slack(2167,temf_H,minus) + s_slack(2167,temf_L,plus) + s_slack(2167,temf_L,minus) + s_slack(2167,temf_S,plus) + s_slack(2167,temf_S,minus) + s_slack(2167,toba_H,plus)
     
      + s_slack(2167,toba_H,minus) + s_slack(2167,toba_L,plus) + s_slack(2167,toba_L,minus) + s_slack(2167,trof_L,plus) + s_slack(2167,trof_L,minus) + s_slack(2167,trof_S,plus) + s_slack(2167,trof_S,minus) + s_slack(2167,vege_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 222
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2167,vege_H,minus) + s_slack(2167,vege_L,plus) + s_slack(2167,vege_L,minus) + s_slack(2167,vege_S,plus) + s_slack(2167,vege_S,minus) + s_slack(2189,rice_I,plus) + s_slack(2189,rice_I,minus) + s_slack(2189,sugc_I,plus)
     
      + s_slack(2189,sugc_I,minus) + s_slack(2189,whea_I,plus) + s_slack(2189,whea_I,minus) + s_slack(2189,bean_H,plus) + s_slack(2189,bean_H,minus) + s_slack(2189,bean_L,plus) + s_slack(2189,bean_L,minus) + s_slack(2189,bean_S,plus)
     
      + s_slack(2189,bean_S,minus) + s_slack(2189,cass_L,plus) + s_slack(2189,cass_L,minus) + s_slack(2189,cass_S,plus) + s_slack(2189,cass_S,minus) + s_slack(2189,chic_H,plus) + s_slack(2189,chic_H,minus) + s_slack(2189,chic_L,plus)
     
      + s_slack(2189,chic_L,minus) + s_slack(2189,chic_S,plus) + s_slack(2189,chic_S,minus) + s_slack(2189,coff_H,plus) + s_slack(2189,coff_H,minus) + s_slack(2189,coff_L,plus) + s_slack(2189,coff_L,minus) + s_slack(2189,cott_L,plus)
     
      + s_slack(2189,cott_L,minus) + s_slack(2189,cowp_H,plus) + s_slack(2189,cowp_H,minus) + s_slack(2189,cowp_L,plus) + s_slack(2189,cowp_L,minus) + s_slack(2189,cowp_S,plus) + s_slack(2189,cowp_S,minus) + s_slack(2189,grou_H,plus)
     
      + s_slack(2189,grou_H,minus) + s_slack(2189,grou_L,plus) + s_slack(2189,grou_L,minus) + s_slack(2189,grou_S,plus) + s_slack(2189,grou_S,minus) + s_slack(2189,lent_H,plus) + s_slack(2189,lent_H,minus) + s_slack(2189,lent_L,plus)
     
      + s_slack(2189,lent_L,minus) + s_slack(2189,lent_S,plus) + s_slack(2189,lent_S,minus) + s_slack(2189,maiz_H,plus) + s_slack(2189,maiz_H,minus) + s_slack(2189,maiz_L,plus) + s_slack(2189,maiz_L,minus) + s_slack(2189,maiz_S,plus)
     
      + s_slack(2189,maiz_S,minus) + s_slack(2189,mill_H,plus) + s_slack(2189,mill_H,minus) + s_slack(2189,mill_L,plus) + s_slack(2189,mill_L,minus) + s_slack(2189,mill_S,plus) + s_slack(2189,mill_S,minus) + s_slack(2189,ofib_L,plus)
     
      + s_slack(2189,ofib_L,minus) + s_slack(2189,ooil_L,plus) + s_slack(2189,ooil_L,minus) + s_slack(2189,opul_H,plus) + s_slack(2189,opul_H,minus) + s_slack(2189,opul_L,plus) + s_slack(2189,opul_L,minus) + s_slack(2189,opul_S,plus)
     
      + s_slack(2189,opul_S,minus) + s_slack(2189,pige_H,plus) + s_slack(2189,pige_H,minus) + s_slack(2189,pige_L,plus) + s_slack(2189,pige_L,minus) + s_slack(2189,pige_S,plus) + s_slack(2189,pige_S,minus) + s_slack(2189,pota_H,plus)
     
      + s_slack(2189,pota_H,minus) + s_slack(2189,pota_L,plus) + s_slack(2189,pota_L,minus) + s_slack(2189,pota_S,plus) + s_slack(2189,pota_S,minus) + s_slack(2189,rest_H,plus) + s_slack(2189,rest_H,minus) + s_slack(2189,rest_L,plus)
     
      + s_slack(2189,rest_L,minus) + s_slack(2189,rest_S,plus) + s_slack(2189,rest_S,minus) + s_slack(2189,rice_H,plus) + s_slack(2189,rice_H,minus) + s_slack(2189,rice_L,plus) + s_slack(2189,rice_L,minus) + s_slack(2189,rice_S,plus)
     
      + s_slack(2189,rice_S,minus) + s_slack(2189,sorg_L,plus) + s_slack(2189,sorg_L,minus) + s_slack(2189,sorg_S,plus) + s_slack(2189,sorg_S,minus) + s_slack(2189,soyb_L,plus) + s_slack(2189,soyb_L,minus) + s_slack(2189,soyb_S,plus)
     
      + s_slack(2189,soyb_S,minus) + s_slack(2189,sunf_L,plus) + s_slack(2189,sunf_L,minus) + s_slack(2189,temf_H,plus) + s_slack(2189,temf_H,minus) + s_slack(2189,temf_L,plus) + s_slack(2189,temf_L,minus) + s_slack(2189,temf_S,plus)
     
      + s_slack(2189,temf_S,minus) + s_slack(2189,toba_H,plus) + s_slack(2189,toba_H,minus) + s_slack(2189,toba_L,plus) + s_slack(2189,toba_L,minus) + s_slack(2189,trof_L,plus) + s_slack(2189,trof_L,minus) + s_slack(2189,trof_S,plus)
     
      + s_slack(2189,trof_S,minus) + s_slack(2189,vege_H,plus) + s_slack(2189,vege_H,minus) + s_slack(2189,vege_L,plus) + s_slack(2189,vege_L,minus) + s_slack(2189,vege_S,plus) + s_slack(2189,vege_S,minus) + s_slack(2193,rice_I,plus)
     
      + s_slack(2193,rice_I,minus) + s_slack(2193,sugc_I,plus) + s_slack(2193,sugc_I,minus) + s_slack(2193,whea_I,plus) + s_slack(2193,whea_I,minus) + s_slack(2193,bean_H,plus) + s_slack(2193,bean_H,minus) + s_slack(2193,bean_L,plus)
     
      + s_slack(2193,bean_L,minus) + s_slack(2193,bean_S,plus) + s_slack(2193,bean_S,minus) + s_slack(2193,cass_L,plus) + s_slack(2193,cass_L,minus) + s_slack(2193,cass_S,plus) + s_slack(2193,cass_S,minus) + s_slack(2193,chic_H,plus)
     
      + s_slack(2193,chic_H,minus) + s_slack(2193,chic_L,plus) + s_slack(2193,chic_L,minus) + s_slack(2193,chic_S,plus) + s_slack(2193,chic_S,minus) + s_slack(2193,coff_H,plus) + s_slack(2193,coff_H,minus) + s_slack(2193,coff_L,plus)
     
      + s_slack(2193,coff_L,minus) + s_slack(2193,cott_L,plus) + s_slack(2193,cott_L,minus) + s_slack(2193,cowp_H,plus) + s_slack(2193,cowp_H,minus) + s_slack(2193,cowp_L,plus) + s_slack(2193,cowp_L,minus) + s_slack(2193,cowp_S,plus)
     
      + s_slack(2193,cowp_S,minus) + s_slack(2193,grou_H,plus) + s_slack(2193,grou_H,minus) + s_slack(2193,grou_L,plus) + s_slack(2193,grou_L,minus) + s_slack(2193,grou_S,plus) + s_slack(2193,grou_S,minus) + s_slack(2193,lent_H,plus)
     
      + s_slack(2193,lent_H,minus) + s_slack(2193,lent_L,plus) + s_slack(2193,lent_L,minus) + s_slack(2193,lent_S,plus) + s_slack(2193,lent_S,minus) + s_slack(2193,maiz_H,plus) + s_slack(2193,maiz_H,minus) + s_slack(2193,maiz_L,plus)
     
      + s_slack(2193,maiz_L,minus) + s_slack(2193,maiz_S,plus) + s_slack(2193,maiz_S,minus) + s_slack(2193,mill_H,plus) + s_slack(2193,mill_H,minus) + s_slack(2193,mill_L,plus) + s_slack(2193,mill_L,minus) + s_slack(2193,mill_S,plus)
     
      + s_slack(2193,mill_S,minus) + s_slack(2193,ofib_L,plus) + s_slack(2193,ofib_L,minus) + s_slack(2193,ooil_L,plus) + s_slack(2193,ooil_L,minus) + s_slack(2193,opul_H,plus) + s_slack(2193,opul_H,minus) + s_slack(2193,opul_L,plus)
     
      + s_slack(2193,opul_L,minus) + s_slack(2193,opul_S,plus) + s_slack(2193,opul_S,minus) + s_slack(2193,pige_H,plus) + s_slack(2193,pige_H,minus) + s_slack(2193,pige_L,plus) + s_slack(2193,pige_L,minus) + s_slack(2193,pige_S,plus)
     
      + s_slack(2193,pige_S,minus) + s_slack(2193,pota_H,plus) + s_slack(2193,pota_H,minus) + s_slack(2193,pota_L,plus) + s_slack(2193,pota_L,minus) + s_slack(2193,pota_S,plus) + s_slack(2193,pota_S,minus) + s_slack(2193,rest_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 223
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2193,rest_H,minus) + s_slack(2193,rest_L,plus) + s_slack(2193,rest_L,minus) + s_slack(2193,rest_S,plus) + s_slack(2193,rest_S,minus) + s_slack(2193,rice_H,plus) + s_slack(2193,rice_H,minus) + s_slack(2193,rice_L,plus)
     
      + s_slack(2193,rice_L,minus) + s_slack(2193,rice_S,plus) + s_slack(2193,rice_S,minus) + s_slack(2193,sorg_L,plus) + s_slack(2193,sorg_L,minus) + s_slack(2193,sorg_S,plus) + s_slack(2193,sorg_S,minus) + s_slack(2193,soyb_L,plus)
     
      + s_slack(2193,soyb_L,minus) + s_slack(2193,soyb_S,plus) + s_slack(2193,soyb_S,minus) + s_slack(2193,sunf_L,plus) + s_slack(2193,sunf_L,minus) + s_slack(2193,temf_H,plus) + s_slack(2193,temf_H,minus) + s_slack(2193,temf_L,plus)
     
      + s_slack(2193,temf_L,minus) + s_slack(2193,temf_S,plus) + s_slack(2193,temf_S,minus) + s_slack(2193,toba_H,plus) + s_slack(2193,toba_H,minus) + s_slack(2193,toba_L,plus) + s_slack(2193,toba_L,minus) + s_slack(2193,trof_L,plus)
     
      + s_slack(2193,trof_L,minus) + s_slack(2193,trof_S,plus) + s_slack(2193,trof_S,minus) + s_slack(2193,vege_H,plus) + s_slack(2193,vege_H,minus) + s_slack(2193,vege_L,plus) + s_slack(2193,vege_L,minus) + s_slack(2193,vege_S,plus)
     
      + s_slack(2193,vege_S,minus) + s_slack(2194,rice_I,plus) + s_slack(2194,rice_I,minus) + s_slack(2194,sugc_I,plus) + s_slack(2194,sugc_I,minus) + s_slack(2194,whea_I,plus) + s_slack(2194,whea_I,minus) + s_slack(2194,bean_H,plus)
     
      + s_slack(2194,bean_H,minus) + s_slack(2194,bean_L,plus) + s_slack(2194,bean_L,minus) + s_slack(2194,bean_S,plus) + s_slack(2194,bean_S,minus) + s_slack(2194,cass_L,plus) + s_slack(2194,cass_L,minus) + s_slack(2194,cass_S,plus)
     
      + s_slack(2194,cass_S,minus) + s_slack(2194,chic_H,plus) + s_slack(2194,chic_H,minus) + s_slack(2194,chic_L,plus) + s_slack(2194,chic_L,minus) + s_slack(2194,chic_S,plus) + s_slack(2194,chic_S,minus) + s_slack(2194,coff_H,plus)
     
      + s_slack(2194,coff_H,minus) + s_slack(2194,coff_L,plus) + s_slack(2194,coff_L,minus) + s_slack(2194,cott_L,plus) + s_slack(2194,cott_L,minus) + s_slack(2194,cowp_H,plus) + s_slack(2194,cowp_H,minus) + s_slack(2194,cowp_L,plus)
     
      + s_slack(2194,cowp_L,minus) + s_slack(2194,cowp_S,plus) + s_slack(2194,cowp_S,minus) + s_slack(2194,grou_H,plus) + s_slack(2194,grou_H,minus) + s_slack(2194,grou_L,plus) + s_slack(2194,grou_L,minus) + s_slack(2194,grou_S,plus)
     
      + s_slack(2194,grou_S,minus) + s_slack(2194,lent_H,plus) + s_slack(2194,lent_H,minus) + s_slack(2194,lent_L,plus) + s_slack(2194,lent_L,minus) + s_slack(2194,lent_S,plus) + s_slack(2194,lent_S,minus) + s_slack(2194,maiz_H,plus)
     
      + s_slack(2194,maiz_H,minus) + s_slack(2194,maiz_L,plus) + s_slack(2194,maiz_L,minus) + s_slack(2194,maiz_S,plus) + s_slack(2194,maiz_S,minus) + s_slack(2194,mill_H,plus) + s_slack(2194,mill_H,minus) + s_slack(2194,mill_L,plus)
     
      + s_slack(2194,mill_L,minus) + s_slack(2194,mill_S,plus) + s_slack(2194,mill_S,minus) + s_slack(2194,ofib_L,plus) + s_slack(2194,ofib_L,minus) + s_slack(2194,ooil_L,plus) + s_slack(2194,ooil_L,minus) + s_slack(2194,opul_H,plus)
     
      + s_slack(2194,opul_H,minus) + s_slack(2194,opul_L,plus) + s_slack(2194,opul_L,minus) + s_slack(2194,opul_S,plus) + s_slack(2194,opul_S,minus) + s_slack(2194,pige_H,plus) + s_slack(2194,pige_H,minus) + s_slack(2194,pige_L,plus)
     
      + s_slack(2194,pige_L,minus) + s_slack(2194,pige_S,plus) + s_slack(2194,pige_S,minus) + s_slack(2194,pota_H,plus) + s_slack(2194,pota_H,minus) + s_slack(2194,pota_L,plus) + s_slack(2194,pota_L,minus) + s_slack(2194,pota_S,plus)
     
      + s_slack(2194,pota_S,minus) + s_slack(2194,rest_H,plus) + s_slack(2194,rest_H,minus) + s_slack(2194,rest_L,plus) + s_slack(2194,rest_L,minus) + s_slack(2194,rest_S,plus) + s_slack(2194,rest_S,minus) + s_slack(2194,rice_H,plus)
     
      + s_slack(2194,rice_H,minus) + s_slack(2194,rice_L,plus) + s_slack(2194,rice_L,minus) + s_slack(2194,rice_S,plus) + s_slack(2194,rice_S,minus) + s_slack(2194,sorg_L,plus) + s_slack(2194,sorg_L,minus) + s_slack(2194,sorg_S,plus)
     
      + s_slack(2194,sorg_S,minus) + s_slack(2194,soyb_L,plus) + s_slack(2194,soyb_L,minus) + s_slack(2194,soyb_S,plus) + s_slack(2194,soyb_S,minus) + s_slack(2194,sunf_L,plus) + s_slack(2194,sunf_L,minus) + s_slack(2194,temf_H,plus)
     
      + s_slack(2194,temf_H,minus) + s_slack(2194,temf_L,plus) + s_slack(2194,temf_L,minus) + s_slack(2194,temf_S,plus) + s_slack(2194,temf_S,minus) + s_slack(2194,toba_H,plus) + s_slack(2194,toba_H,minus) + s_slack(2194,toba_L,plus)
     
      + s_slack(2194,toba_L,minus) + s_slack(2194,trof_L,plus) + s_slack(2194,trof_L,minus) + s_slack(2194,trof_S,plus) + s_slack(2194,trof_S,minus) + s_slack(2194,vege_H,plus) + s_slack(2194,vege_H,minus) + s_slack(2194,vege_L,plus)
     
      + s_slack(2194,vege_L,minus) + s_slack(2194,vege_S,plus) + s_slack(2194,vege_S,minus) + s_slack(2195,rice_I,plus) + s_slack(2195,rice_I,minus) + s_slack(2195,sugc_I,plus) + s_slack(2195,sugc_I,minus) + s_slack(2195,whea_I,plus)
     
      + s_slack(2195,whea_I,minus) + s_slack(2195,bean_H,plus) + s_slack(2195,bean_H,minus) + s_slack(2195,bean_L,plus) + s_slack(2195,bean_L,minus) + s_slack(2195,bean_S,plus) + s_slack(2195,bean_S,minus) + s_slack(2195,cass_L,plus)
     
      + s_slack(2195,cass_L,minus) + s_slack(2195,cass_S,plus) + s_slack(2195,cass_S,minus) + s_slack(2195,chic_H,plus) + s_slack(2195,chic_H,minus) + s_slack(2195,chic_L,plus) + s_slack(2195,chic_L,minus) + s_slack(2195,chic_S,plus)
     
      + s_slack(2195,chic_S,minus) + s_slack(2195,coff_H,plus) + s_slack(2195,coff_H,minus) + s_slack(2195,coff_L,plus) + s_slack(2195,coff_L,minus) + s_slack(2195,cott_L,plus) + s_slack(2195,cott_L,minus) + s_slack(2195,cowp_H,plus)
     
      + s_slack(2195,cowp_H,minus) + s_slack(2195,cowp_L,plus) + s_slack(2195,cowp_L,minus) + s_slack(2195,cowp_S,plus) + s_slack(2195,cowp_S,minus) + s_slack(2195,grou_H,plus) + s_slack(2195,grou_H,minus) + s_slack(2195,grou_L,plus)
     
      + s_slack(2195,grou_L,minus) + s_slack(2195,grou_S,plus) + s_slack(2195,grou_S,minus) + s_slack(2195,lent_H,plus) + s_slack(2195,lent_H,minus) + s_slack(2195,lent_L,plus) + s_slack(2195,lent_L,minus) + s_slack(2195,lent_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 224
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2195,lent_S,minus) + s_slack(2195,maiz_H,plus) + s_slack(2195,maiz_H,minus) + s_slack(2195,maiz_L,plus) + s_slack(2195,maiz_L,minus) + s_slack(2195,maiz_S,plus) + s_slack(2195,maiz_S,minus) + s_slack(2195,mill_H,plus)
     
      + s_slack(2195,mill_H,minus) + s_slack(2195,mill_L,plus) + s_slack(2195,mill_L,minus) + s_slack(2195,mill_S,plus) + s_slack(2195,mill_S,minus) + s_slack(2195,ofib_L,plus) + s_slack(2195,ofib_L,minus) + s_slack(2195,ooil_L,plus)
     
      + s_slack(2195,ooil_L,minus) + s_slack(2195,opul_H,plus) + s_slack(2195,opul_H,minus) + s_slack(2195,opul_L,plus) + s_slack(2195,opul_L,minus) + s_slack(2195,opul_S,plus) + s_slack(2195,opul_S,minus) + s_slack(2195,pige_H,plus)
     
      + s_slack(2195,pige_H,minus) + s_slack(2195,pige_L,plus) + s_slack(2195,pige_L,minus) + s_slack(2195,pige_S,plus) + s_slack(2195,pige_S,minus) + s_slack(2195,pota_H,plus) + s_slack(2195,pota_H,minus) + s_slack(2195,pota_L,plus)
     
      + s_slack(2195,pota_L,minus) + s_slack(2195,pota_S,plus) + s_slack(2195,pota_S,minus) + s_slack(2195,rest_H,plus) + s_slack(2195,rest_H,minus) + s_slack(2195,rest_L,plus) + s_slack(2195,rest_L,minus) + s_slack(2195,rest_S,plus)
     
      + s_slack(2195,rest_S,minus) + s_slack(2195,rice_H,plus) + s_slack(2195,rice_H,minus) + s_slack(2195,rice_L,plus) + s_slack(2195,rice_L,minus) + s_slack(2195,rice_S,plus) + s_slack(2195,rice_S,minus) + s_slack(2195,sorg_L,plus)
     
      + s_slack(2195,sorg_L,minus) + s_slack(2195,sorg_S,plus) + s_slack(2195,sorg_S,minus) + s_slack(2195,soyb_L,plus) + s_slack(2195,soyb_L,minus) + s_slack(2195,soyb_S,plus) + s_slack(2195,soyb_S,minus) + s_slack(2195,sunf_L,plus)
     
      + s_slack(2195,sunf_L,minus) + s_slack(2195,temf_H,plus) + s_slack(2195,temf_H,minus) + s_slack(2195,temf_L,plus) + s_slack(2195,temf_L,minus) + s_slack(2195,temf_S,plus) + s_slack(2195,temf_S,minus) + s_slack(2195,toba_H,plus)
     
      + s_slack(2195,toba_H,minus) + s_slack(2195,toba_L,plus) + s_slack(2195,toba_L,minus) + s_slack(2195,trof_L,plus) + s_slack(2195,trof_L,minus) + s_slack(2195,trof_S,plus) + s_slack(2195,trof_S,minus) + s_slack(2195,vege_H,plus)
     
      + s_slack(2195,vege_H,minus) + s_slack(2195,vege_L,plus) + s_slack(2195,vege_L,minus) + s_slack(2195,vege_S,plus) + s_slack(2195,vege_S,minus) + s_slack(2196,rice_I,plus) + s_slack(2196,rice_I,minus) + s_slack(2196,sugc_I,plus)
     
      + s_slack(2196,sugc_I,minus) + s_slack(2196,whea_I,plus) + s_slack(2196,whea_I,minus) + s_slack(2196,bean_H,plus) + s_slack(2196,bean_H,minus) + s_slack(2196,bean_L,plus) + s_slack(2196,bean_L,minus) + s_slack(2196,bean_S,plus)
     
      + s_slack(2196,bean_S,minus) + s_slack(2196,cass_L,plus) + s_slack(2196,cass_L,minus) + s_slack(2196,cass_S,plus) + s_slack(2196,cass_S,minus) + s_slack(2196,chic_H,plus) + s_slack(2196,chic_H,minus) + s_slack(2196,chic_L,plus)
     
      + s_slack(2196,chic_L,minus) + s_slack(2196,chic_S,plus) + s_slack(2196,chic_S,minus) + s_slack(2196,coff_H,plus) + s_slack(2196,coff_H,minus) + s_slack(2196,coff_L,plus) + s_slack(2196,coff_L,minus) + s_slack(2196,cott_L,plus)
     
      + s_slack(2196,cott_L,minus) + s_slack(2196,cowp_H,plus) + s_slack(2196,cowp_H,minus) + s_slack(2196,cowp_L,plus) + s_slack(2196,cowp_L,minus) + s_slack(2196,cowp_S,plus) + s_slack(2196,cowp_S,minus) + s_slack(2196,grou_H,plus)
     
      + s_slack(2196,grou_H,minus) + s_slack(2196,grou_L,plus) + s_slack(2196,grou_L,minus) + s_slack(2196,grou_S,plus) + s_slack(2196,grou_S,minus) + s_slack(2196,lent_H,plus) + s_slack(2196,lent_H,minus) + s_slack(2196,lent_L,plus)
     
      + s_slack(2196,lent_L,minus) + s_slack(2196,lent_S,plus) + s_slack(2196,lent_S,minus) + s_slack(2196,maiz_H,plus) + s_slack(2196,maiz_H,minus) + s_slack(2196,maiz_L,plus) + s_slack(2196,maiz_L,minus) + s_slack(2196,maiz_S,plus)
     
      + s_slack(2196,maiz_S,minus) + s_slack(2196,mill_H,plus) + s_slack(2196,mill_H,minus) + s_slack(2196,mill_L,plus) + s_slack(2196,mill_L,minus) + s_slack(2196,mill_S,plus) + s_slack(2196,mill_S,minus) + s_slack(2196,ofib_L,plus)
     
      + s_slack(2196,ofib_L,minus) + s_slack(2196,ooil_L,plus) + s_slack(2196,ooil_L,minus) + s_slack(2196,opul_H,plus) + s_slack(2196,opul_H,minus) + s_slack(2196,opul_L,plus) + s_slack(2196,opul_L,minus) + s_slack(2196,opul_S,plus)
     
      + s_slack(2196,opul_S,minus) + s_slack(2196,pige_H,plus) + s_slack(2196,pige_H,minus) + s_slack(2196,pige_L,plus) + s_slack(2196,pige_L,minus) + s_slack(2196,pige_S,plus) + s_slack(2196,pige_S,minus) + s_slack(2196,pota_H,plus)
     
      + s_slack(2196,pota_H,minus) + s_slack(2196,pota_L,plus) + s_slack(2196,pota_L,minus) + s_slack(2196,pota_S,plus) + s_slack(2196,pota_S,minus) + s_slack(2196,rest_H,plus) + s_slack(2196,rest_H,minus) + s_slack(2196,rest_L,plus)
     
      + s_slack(2196,rest_L,minus) + s_slack(2196,rest_S,plus) + s_slack(2196,rest_S,minus) + s_slack(2196,rice_H,plus) + s_slack(2196,rice_H,minus) + s_slack(2196,rice_L,plus) + s_slack(2196,rice_L,minus) + s_slack(2196,rice_S,plus)
     
      + s_slack(2196,rice_S,minus) + s_slack(2196,sorg_L,plus) + s_slack(2196,sorg_L,minus) + s_slack(2196,sorg_S,plus) + s_slack(2196,sorg_S,minus) + s_slack(2196,soyb_L,plus) + s_slack(2196,soyb_L,minus) + s_slack(2196,soyb_S,plus)
     
      + s_slack(2196,soyb_S,minus) + s_slack(2196,sunf_L,plus) + s_slack(2196,sunf_L,minus) + s_slack(2196,temf_H,plus) + s_slack(2196,temf_H,minus) + s_slack(2196,temf_L,plus) + s_slack(2196,temf_L,minus) + s_slack(2196,temf_S,plus)
     
      + s_slack(2196,temf_S,minus) + s_slack(2196,toba_H,plus) + s_slack(2196,toba_H,minus) + s_slack(2196,toba_L,plus) + s_slack(2196,toba_L,minus) + s_slack(2196,trof_L,plus) + s_slack(2196,trof_L,minus) + s_slack(2196,trof_S,plus)
     
      + s_slack(2196,trof_S,minus) + s_slack(2196,vege_H,plus) + s_slack(2196,vege_H,minus) + s_slack(2196,vege_L,plus) + s_slack(2196,vege_L,minus) + s_slack(2196,vege_S,plus) + s_slack(2196,vege_S,minus) + s_slack(2197,rice_I,plus)
     
      + s_slack(2197,rice_I,minus) + s_slack(2197,sugc_I,plus) + s_slack(2197,sugc_I,minus) + s_slack(2197,whea_I,plus) + s_slack(2197,whea_I,minus) + s_slack(2197,bean_H,plus) + s_slack(2197,bean_H,minus) + s_slack(2197,bean_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 225
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2197,bean_L,minus) + s_slack(2197,bean_S,plus) + s_slack(2197,bean_S,minus) + s_slack(2197,cass_L,plus) + s_slack(2197,cass_L,minus) + s_slack(2197,cass_S,plus) + s_slack(2197,cass_S,minus) + s_slack(2197,chic_H,plus)
     
      + s_slack(2197,chic_H,minus) + s_slack(2197,chic_L,plus) + s_slack(2197,chic_L,minus) + s_slack(2197,chic_S,plus) + s_slack(2197,chic_S,minus) + s_slack(2197,coff_H,plus) + s_slack(2197,coff_H,minus) + s_slack(2197,coff_L,plus)
     
      + s_slack(2197,coff_L,minus) + s_slack(2197,cott_L,plus) + s_slack(2197,cott_L,minus) + s_slack(2197,cowp_H,plus) + s_slack(2197,cowp_H,minus) + s_slack(2197,cowp_L,plus) + s_slack(2197,cowp_L,minus) + s_slack(2197,cowp_S,plus)
     
      + s_slack(2197,cowp_S,minus) + s_slack(2197,grou_H,plus) + s_slack(2197,grou_H,minus) + s_slack(2197,grou_L,plus) + s_slack(2197,grou_L,minus) + s_slack(2197,grou_S,plus) + s_slack(2197,grou_S,minus) + s_slack(2197,lent_H,plus)
     
      + s_slack(2197,lent_H,minus) + s_slack(2197,lent_L,plus) + s_slack(2197,lent_L,minus) + s_slack(2197,lent_S,plus) + s_slack(2197,lent_S,minus) + s_slack(2197,maiz_H,plus) + s_slack(2197,maiz_H,minus) + s_slack(2197,maiz_L,plus)
     
      + s_slack(2197,maiz_L,minus) + s_slack(2197,maiz_S,plus) + s_slack(2197,maiz_S,minus) + s_slack(2197,mill_H,plus) + s_slack(2197,mill_H,minus) + s_slack(2197,mill_L,plus) + s_slack(2197,mill_L,minus) + s_slack(2197,mill_S,plus)
     
      + s_slack(2197,mill_S,minus) + s_slack(2197,ofib_L,plus) + s_slack(2197,ofib_L,minus) + s_slack(2197,ooil_L,plus) + s_slack(2197,ooil_L,minus) + s_slack(2197,opul_H,plus) + s_slack(2197,opul_H,minus) + s_slack(2197,opul_L,plus)
     
      + s_slack(2197,opul_L,minus) + s_slack(2197,opul_S,plus) + s_slack(2197,opul_S,minus) + s_slack(2197,pige_H,plus) + s_slack(2197,pige_H,minus) + s_slack(2197,pige_L,plus) + s_slack(2197,pige_L,minus) + s_slack(2197,pige_S,plus)
     
      + s_slack(2197,pige_S,minus) + s_slack(2197,pota_H,plus) + s_slack(2197,pota_H,minus) + s_slack(2197,pota_L,plus) + s_slack(2197,pota_L,minus) + s_slack(2197,pota_S,plus) + s_slack(2197,pota_S,minus) + s_slack(2197,rest_H,plus)
     
      + s_slack(2197,rest_H,minus) + s_slack(2197,rest_L,plus) + s_slack(2197,rest_L,minus) + s_slack(2197,rest_S,plus) + s_slack(2197,rest_S,minus) + s_slack(2197,rice_H,plus) + s_slack(2197,rice_H,minus) + s_slack(2197,rice_L,plus)
     
      + s_slack(2197,rice_L,minus) + s_slack(2197,rice_S,plus) + s_slack(2197,rice_S,minus) + s_slack(2197,sorg_L,plus) + s_slack(2197,sorg_L,minus) + s_slack(2197,sorg_S,plus) + s_slack(2197,sorg_S,minus) + s_slack(2197,soyb_L,plus)
     
      + s_slack(2197,soyb_L,minus) + s_slack(2197,soyb_S,plus) + s_slack(2197,soyb_S,minus) + s_slack(2197,sunf_L,plus) + s_slack(2197,sunf_L,minus) + s_slack(2197,temf_H,plus) + s_slack(2197,temf_H,minus) + s_slack(2197,temf_L,plus)
     
      + s_slack(2197,temf_L,minus) + s_slack(2197,temf_S,plus) + s_slack(2197,temf_S,minus) + s_slack(2197,toba_H,plus) + s_slack(2197,toba_H,minus) + s_slack(2197,toba_L,plus) + s_slack(2197,toba_L,minus) + s_slack(2197,trof_L,plus)
     
      + s_slack(2197,trof_L,minus) + s_slack(2197,trof_S,plus) + s_slack(2197,trof_S,minus) + s_slack(2197,vege_H,plus) + s_slack(2197,vege_H,minus) + s_slack(2197,vege_L,plus) + s_slack(2197,vege_L,minus) + s_slack(2197,vege_S,plus)
     
      + s_slack(2197,vege_S,minus) + s_slack(2198,rice_I,plus) + s_slack(2198,rice_I,minus) + s_slack(2198,sugc_I,plus) + s_slack(2198,sugc_I,minus) + s_slack(2198,whea_I,plus) + s_slack(2198,whea_I,minus) + s_slack(2198,bean_H,plus)
     
      + s_slack(2198,bean_H,minus) + s_slack(2198,bean_L,plus) + s_slack(2198,bean_L,minus) + s_slack(2198,bean_S,plus) + s_slack(2198,bean_S,minus) + s_slack(2198,cass_L,plus) + s_slack(2198,cass_L,minus) + s_slack(2198,cass_S,plus)
     
      + s_slack(2198,cass_S,minus) + s_slack(2198,chic_H,plus) + s_slack(2198,chic_H,minus) + s_slack(2198,chic_L,plus) + s_slack(2198,chic_L,minus) + s_slack(2198,chic_S,plus) + s_slack(2198,chic_S,minus) + s_slack(2198,coff_H,plus)
     
      + s_slack(2198,coff_H,minus) + s_slack(2198,coff_L,plus) + s_slack(2198,coff_L,minus) + s_slack(2198,cott_L,plus) + s_slack(2198,cott_L,minus) + s_slack(2198,cowp_H,plus) + s_slack(2198,cowp_H,minus) + s_slack(2198,cowp_L,plus)
     
      + s_slack(2198,cowp_L,minus) + s_slack(2198,cowp_S,plus) + s_slack(2198,cowp_S,minus) + s_slack(2198,grou_H,plus) + s_slack(2198,grou_H,minus) + s_slack(2198,grou_L,plus) + s_slack(2198,grou_L,minus) + s_slack(2198,grou_S,plus)
     
      + s_slack(2198,grou_S,minus) + s_slack(2198,lent_H,plus) + s_slack(2198,lent_H,minus) + s_slack(2198,lent_L,plus) + s_slack(2198,lent_L,minus) + s_slack(2198,lent_S,plus) + s_slack(2198,lent_S,minus) + s_slack(2198,maiz_H,plus)
     
      + s_slack(2198,maiz_H,minus) + s_slack(2198,maiz_L,plus) + s_slack(2198,maiz_L,minus) + s_slack(2198,maiz_S,plus) + s_slack(2198,maiz_S,minus) + s_slack(2198,mill_H,plus) + s_slack(2198,mill_H,minus) + s_slack(2198,mill_L,plus)
     
      + s_slack(2198,mill_L,minus) + s_slack(2198,mill_S,plus) + s_slack(2198,mill_S,minus) + s_slack(2198,ofib_L,plus) + s_slack(2198,ofib_L,minus) + s_slack(2198,ooil_L,plus) + s_slack(2198,ooil_L,minus) + s_slack(2198,opul_H,plus)
     
      + s_slack(2198,opul_H,minus) + s_slack(2198,opul_L,plus) + s_slack(2198,opul_L,minus) + s_slack(2198,opul_S,plus) + s_slack(2198,opul_S,minus) + s_slack(2198,pige_H,plus) + s_slack(2198,pige_H,minus) + s_slack(2198,pige_L,plus)
     
      + s_slack(2198,pige_L,minus) + s_slack(2198,pige_S,plus) + s_slack(2198,pige_S,minus) + s_slack(2198,pota_H,plus) + s_slack(2198,pota_H,minus) + s_slack(2198,pota_L,plus) + s_slack(2198,pota_L,minus) + s_slack(2198,pota_S,plus)
     
      + s_slack(2198,pota_S,minus) + s_slack(2198,rest_H,plus) + s_slack(2198,rest_H,minus) + s_slack(2198,rest_L,plus) + s_slack(2198,rest_L,minus) + s_slack(2198,rest_S,plus) + s_slack(2198,rest_S,minus) + s_slack(2198,rice_H,plus)
     
      + s_slack(2198,rice_H,minus) + s_slack(2198,rice_L,plus) + s_slack(2198,rice_L,minus) + s_slack(2198,rice_S,plus) + s_slack(2198,rice_S,minus) + s_slack(2198,sorg_L,plus) + s_slack(2198,sorg_L,minus) + s_slack(2198,sorg_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 226
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2198,sorg_S,minus) + s_slack(2198,soyb_L,plus) + s_slack(2198,soyb_L,minus) + s_slack(2198,soyb_S,plus) + s_slack(2198,soyb_S,minus) + s_slack(2198,sunf_L,plus) + s_slack(2198,sunf_L,minus) + s_slack(2198,temf_H,plus)
     
      + s_slack(2198,temf_H,minus) + s_slack(2198,temf_L,plus) + s_slack(2198,temf_L,minus) + s_slack(2198,temf_S,plus) + s_slack(2198,temf_S,minus) + s_slack(2198,toba_H,plus) + s_slack(2198,toba_H,minus) + s_slack(2198,toba_L,plus)
     
      + s_slack(2198,toba_L,minus) + s_slack(2198,trof_L,plus) + s_slack(2198,trof_L,minus) + s_slack(2198,trof_S,plus) + s_slack(2198,trof_S,minus) + s_slack(2198,vege_H,plus) + s_slack(2198,vege_H,minus) + s_slack(2198,vege_L,plus)
     
      + s_slack(2198,vege_L,minus) + s_slack(2198,vege_S,plus) + s_slack(2198,vege_S,minus) + s_slack(2200,rice_I,plus) + s_slack(2200,rice_I,minus) + s_slack(2200,sugc_I,plus) + s_slack(2200,sugc_I,minus) + s_slack(2200,whea_I,plus)
     
      + s_slack(2200,whea_I,minus) + s_slack(2200,bean_H,plus) + s_slack(2200,bean_H,minus) + s_slack(2200,bean_L,plus) + s_slack(2200,bean_L,minus) + s_slack(2200,bean_S,plus) + s_slack(2200,bean_S,minus) + s_slack(2200,cass_L,plus)
     
      + s_slack(2200,cass_L,minus) + s_slack(2200,cass_S,plus) + s_slack(2200,cass_S,minus) + s_slack(2200,chic_H,plus) + s_slack(2200,chic_H,minus) + s_slack(2200,chic_L,plus) + s_slack(2200,chic_L,minus) + s_slack(2200,chic_S,plus)
     
      + s_slack(2200,chic_S,minus) + s_slack(2200,coff_H,plus) + s_slack(2200,coff_H,minus) + s_slack(2200,coff_L,plus) + s_slack(2200,coff_L,minus) + s_slack(2200,cott_L,plus) + s_slack(2200,cott_L,minus) + s_slack(2200,cowp_H,plus)
     
      + s_slack(2200,cowp_H,minus) + s_slack(2200,cowp_L,plus) + s_slack(2200,cowp_L,minus) + s_slack(2200,cowp_S,plus) + s_slack(2200,cowp_S,minus) + s_slack(2200,grou_H,plus) + s_slack(2200,grou_H,minus) + s_slack(2200,grou_L,plus)
     
      + s_slack(2200,grou_L,minus) + s_slack(2200,grou_S,plus) + s_slack(2200,grou_S,minus) + s_slack(2200,lent_H,plus) + s_slack(2200,lent_H,minus) + s_slack(2200,lent_L,plus) + s_slack(2200,lent_L,minus) + s_slack(2200,lent_S,plus)
     
      + s_slack(2200,lent_S,minus) + s_slack(2200,maiz_H,plus) + s_slack(2200,maiz_H,minus) + s_slack(2200,maiz_L,plus) + s_slack(2200,maiz_L,minus) + s_slack(2200,maiz_S,plus) + s_slack(2200,maiz_S,minus) + s_slack(2200,mill_H,plus)
     
      + s_slack(2200,mill_H,minus) + s_slack(2200,mill_L,plus) + s_slack(2200,mill_L,minus) + s_slack(2200,mill_S,plus) + s_slack(2200,mill_S,minus) + s_slack(2200,ofib_L,plus) + s_slack(2200,ofib_L,minus) + s_slack(2200,ooil_L,plus)
     
      + s_slack(2200,ooil_L,minus) + s_slack(2200,opul_H,plus) + s_slack(2200,opul_H,minus) + s_slack(2200,opul_L,plus) + s_slack(2200,opul_L,minus) + s_slack(2200,opul_S,plus) + s_slack(2200,opul_S,minus) + s_slack(2200,pige_H,plus)
     
      + s_slack(2200,pige_H,minus) + s_slack(2200,pige_L,plus) + s_slack(2200,pige_L,minus) + s_slack(2200,pige_S,plus) + s_slack(2200,pige_S,minus) + s_slack(2200,pota_H,plus) + s_slack(2200,pota_H,minus) + s_slack(2200,pota_L,plus)
     
      + s_slack(2200,pota_L,minus) + s_slack(2200,pota_S,plus) + s_slack(2200,pota_S,minus) + s_slack(2200,rest_H,plus) + s_slack(2200,rest_H,minus) + s_slack(2200,rest_L,plus) + s_slack(2200,rest_L,minus) + s_slack(2200,rest_S,plus)
     
      + s_slack(2200,rest_S,minus) + s_slack(2200,rice_H,plus) + s_slack(2200,rice_H,minus) + s_slack(2200,rice_L,plus) + s_slack(2200,rice_L,minus) + s_slack(2200,rice_S,plus) + s_slack(2200,rice_S,minus) + s_slack(2200,sorg_L,plus)
     
      + s_slack(2200,sorg_L,minus) + s_slack(2200,sorg_S,plus) + s_slack(2200,sorg_S,minus) + s_slack(2200,soyb_L,plus) + s_slack(2200,soyb_L,minus) + s_slack(2200,soyb_S,plus) + s_slack(2200,soyb_S,minus) + s_slack(2200,sunf_L,plus)
     
      + s_slack(2200,sunf_L,minus) + s_slack(2200,temf_H,plus) + s_slack(2200,temf_H,minus) + s_slack(2200,temf_L,plus) + s_slack(2200,temf_L,minus) + s_slack(2200,temf_S,plus) + s_slack(2200,temf_S,minus) + s_slack(2200,toba_H,plus)
     
      + s_slack(2200,toba_H,minus) + s_slack(2200,toba_L,plus) + s_slack(2200,toba_L,minus) + s_slack(2200,trof_L,plus) + s_slack(2200,trof_L,minus) + s_slack(2200,trof_S,plus) + s_slack(2200,trof_S,minus) + s_slack(2200,vege_H,plus)
     
      + s_slack(2200,vege_H,minus) + s_slack(2200,vege_L,plus) + s_slack(2200,vege_L,minus) + s_slack(2200,vege_S,plus) + s_slack(2200,vege_S,minus) + s_slack(2201,rice_I,plus) + s_slack(2201,rice_I,minus) + s_slack(2201,sugc_I,plus)
     
      + s_slack(2201,sugc_I,minus) + s_slack(2201,whea_I,plus) + s_slack(2201,whea_I,minus) + s_slack(2201,bean_H,plus) + s_slack(2201,bean_H,minus) + s_slack(2201,bean_L,plus) + s_slack(2201,bean_L,minus) + s_slack(2201,bean_S,plus)
     
      + s_slack(2201,bean_S,minus) + s_slack(2201,cass_L,plus) + s_slack(2201,cass_L,minus) + s_slack(2201,cass_S,plus) + s_slack(2201,cass_S,minus) + s_slack(2201,chic_H,plus) + s_slack(2201,chic_H,minus) + s_slack(2201,chic_L,plus)
     
      + s_slack(2201,chic_L,minus) + s_slack(2201,chic_S,plus) + s_slack(2201,chic_S,minus) + s_slack(2201,coff_H,plus) + s_slack(2201,coff_H,minus) + s_slack(2201,coff_L,plus) + s_slack(2201,coff_L,minus) + s_slack(2201,cott_L,plus)
     
      + s_slack(2201,cott_L,minus) + s_slack(2201,cowp_H,plus) + s_slack(2201,cowp_H,minus) + s_slack(2201,cowp_L,plus) + s_slack(2201,cowp_L,minus) + s_slack(2201,cowp_S,plus) + s_slack(2201,cowp_S,minus) + s_slack(2201,grou_H,plus)
     
      + s_slack(2201,grou_H,minus) + s_slack(2201,grou_L,plus) + s_slack(2201,grou_L,minus) + s_slack(2201,grou_S,plus) + s_slack(2201,grou_S,minus) + s_slack(2201,lent_H,plus) + s_slack(2201,lent_H,minus) + s_slack(2201,lent_L,plus)
     
      + s_slack(2201,lent_L,minus) + s_slack(2201,lent_S,plus) + s_slack(2201,lent_S,minus) + s_slack(2201,maiz_H,plus) + s_slack(2201,maiz_H,minus) + s_slack(2201,maiz_L,plus) + s_slack(2201,maiz_L,minus) + s_slack(2201,maiz_S,plus)
     
      + s_slack(2201,maiz_S,minus) + s_slack(2201,mill_H,plus) + s_slack(2201,mill_H,minus) + s_slack(2201,mill_L,plus) + s_slack(2201,mill_L,minus) + s_slack(2201,mill_S,plus) + s_slack(2201,mill_S,minus) + s_slack(2201,ofib_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 227
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2201,ofib_L,minus) + s_slack(2201,ooil_L,plus) + s_slack(2201,ooil_L,minus) + s_slack(2201,opul_H,plus) + s_slack(2201,opul_H,minus) + s_slack(2201,opul_L,plus) + s_slack(2201,opul_L,minus) + s_slack(2201,opul_S,plus)
     
      + s_slack(2201,opul_S,minus) + s_slack(2201,pige_H,plus) + s_slack(2201,pige_H,minus) + s_slack(2201,pige_L,plus) + s_slack(2201,pige_L,minus) + s_slack(2201,pige_S,plus) + s_slack(2201,pige_S,minus) + s_slack(2201,pota_H,plus)
     
      + s_slack(2201,pota_H,minus) + s_slack(2201,pota_L,plus) + s_slack(2201,pota_L,minus) + s_slack(2201,pota_S,plus) + s_slack(2201,pota_S,minus) + s_slack(2201,rest_H,plus) + s_slack(2201,rest_H,minus) + s_slack(2201,rest_L,plus)
     
      + s_slack(2201,rest_L,minus) + s_slack(2201,rest_S,plus) + s_slack(2201,rest_S,minus) + s_slack(2201,rice_H,plus) + s_slack(2201,rice_H,minus) + s_slack(2201,rice_L,plus) + s_slack(2201,rice_L,minus) + s_slack(2201,rice_S,plus)
     
      + s_slack(2201,rice_S,minus) + s_slack(2201,sorg_L,plus) + s_slack(2201,sorg_L,minus) + s_slack(2201,sorg_S,plus) + s_slack(2201,sorg_S,minus) + s_slack(2201,soyb_L,plus) + s_slack(2201,soyb_L,minus) + s_slack(2201,soyb_S,plus)
     
      + s_slack(2201,soyb_S,minus) + s_slack(2201,sunf_L,plus) + s_slack(2201,sunf_L,minus) + s_slack(2201,temf_H,plus) + s_slack(2201,temf_H,minus) + s_slack(2201,temf_L,plus) + s_slack(2201,temf_L,minus) + s_slack(2201,temf_S,plus)
     
      + s_slack(2201,temf_S,minus) + s_slack(2201,toba_H,plus) + s_slack(2201,toba_H,minus) + s_slack(2201,toba_L,plus) + s_slack(2201,toba_L,minus) + s_slack(2201,trof_L,plus) + s_slack(2201,trof_L,minus) + s_slack(2201,trof_S,plus)
     
      + s_slack(2201,trof_S,minus) + s_slack(2201,vege_H,plus) + s_slack(2201,vege_H,minus) + s_slack(2201,vege_L,plus) + s_slack(2201,vege_L,minus) + s_slack(2201,vege_S,plus) + s_slack(2201,vege_S,minus) + s_slack(2202,rice_I,plus)
     
      + s_slack(2202,rice_I,minus) + s_slack(2202,sugc_I,plus) + s_slack(2202,sugc_I,minus) + s_slack(2202,whea_I,plus) + s_slack(2202,whea_I,minus) + s_slack(2202,bean_H,plus) + s_slack(2202,bean_H,minus) + s_slack(2202,bean_L,plus)
     
      + s_slack(2202,bean_L,minus) + s_slack(2202,bean_S,plus) + s_slack(2202,bean_S,minus) + s_slack(2202,cass_L,plus) + s_slack(2202,cass_L,minus) + s_slack(2202,cass_S,plus) + s_slack(2202,cass_S,minus) + s_slack(2202,chic_H,plus)
     
      + s_slack(2202,chic_H,minus) + s_slack(2202,chic_L,plus) + s_slack(2202,chic_L,minus) + s_slack(2202,chic_S,plus) + s_slack(2202,chic_S,minus) + s_slack(2202,coff_H,plus) + s_slack(2202,coff_H,minus) + s_slack(2202,coff_L,plus)
     
      + s_slack(2202,coff_L,minus) + s_slack(2202,cott_L,plus) + s_slack(2202,cott_L,minus) + s_slack(2202,cowp_H,plus) + s_slack(2202,cowp_H,minus) + s_slack(2202,cowp_L,plus) + s_slack(2202,cowp_L,minus) + s_slack(2202,cowp_S,plus)
     
      + s_slack(2202,cowp_S,minus) + s_slack(2202,grou_H,plus) + s_slack(2202,grou_H,minus) + s_slack(2202,grou_L,plus) + s_slack(2202,grou_L,minus) + s_slack(2202,grou_S,plus) + s_slack(2202,grou_S,minus) + s_slack(2202,lent_H,plus)
     
      + s_slack(2202,lent_H,minus) + s_slack(2202,lent_L,plus) + s_slack(2202,lent_L,minus) + s_slack(2202,lent_S,plus) + s_slack(2202,lent_S,minus) + s_slack(2202,maiz_H,plus) + s_slack(2202,maiz_H,minus) + s_slack(2202,maiz_L,plus)
     
      + s_slack(2202,maiz_L,minus) + s_slack(2202,maiz_S,plus) + s_slack(2202,maiz_S,minus) + s_slack(2202,mill_H,plus) + s_slack(2202,mill_H,minus) + s_slack(2202,mill_L,plus) + s_slack(2202,mill_L,minus) + s_slack(2202,mill_S,plus)
     
      + s_slack(2202,mill_S,minus) + s_slack(2202,ofib_L,plus) + s_slack(2202,ofib_L,minus) + s_slack(2202,ooil_L,plus) + s_slack(2202,ooil_L,minus) + s_slack(2202,opul_H,plus) + s_slack(2202,opul_H,minus) + s_slack(2202,opul_L,plus)
     
      + s_slack(2202,opul_L,minus) + s_slack(2202,opul_S,plus) + s_slack(2202,opul_S,minus) + s_slack(2202,pige_H,plus) + s_slack(2202,pige_H,minus) + s_slack(2202,pige_L,plus) + s_slack(2202,pige_L,minus) + s_slack(2202,pige_S,plus)
     
      + s_slack(2202,pige_S,minus) + s_slack(2202,pota_H,plus) + s_slack(2202,pota_H,minus) + s_slack(2202,pota_L,plus) + s_slack(2202,pota_L,minus) + s_slack(2202,pota_S,plus) + s_slack(2202,pota_S,minus) + s_slack(2202,rest_H,plus)
     
      + s_slack(2202,rest_H,minus) + s_slack(2202,rest_L,plus) + s_slack(2202,rest_L,minus) + s_slack(2202,rest_S,plus) + s_slack(2202,rest_S,minus) + s_slack(2202,rice_H,plus) + s_slack(2202,rice_H,minus) + s_slack(2202,rice_L,plus)
     
      + s_slack(2202,rice_L,minus) + s_slack(2202,rice_S,plus) + s_slack(2202,rice_S,minus) + s_slack(2202,sorg_L,plus) + s_slack(2202,sorg_L,minus) + s_slack(2202,sorg_S,plus) + s_slack(2202,sorg_S,minus) + s_slack(2202,soyb_L,plus)
     
      + s_slack(2202,soyb_L,minus) + s_slack(2202,soyb_S,plus) + s_slack(2202,soyb_S,minus) + s_slack(2202,sunf_L,plus) + s_slack(2202,sunf_L,minus) + s_slack(2202,temf_H,plus) + s_slack(2202,temf_H,minus) + s_slack(2202,temf_L,plus)
     
      + s_slack(2202,temf_L,minus) + s_slack(2202,temf_S,plus) + s_slack(2202,temf_S,minus) + s_slack(2202,toba_H,plus) + s_slack(2202,toba_H,minus) + s_slack(2202,toba_L,plus) + s_slack(2202,toba_L,minus) + s_slack(2202,trof_L,plus)
     
      + s_slack(2202,trof_L,minus) + s_slack(2202,trof_S,plus) + s_slack(2202,trof_S,minus) + s_slack(2202,vege_H,plus) + s_slack(2202,vege_H,minus) + s_slack(2202,vege_L,plus) + s_slack(2202,vege_L,minus) + s_slack(2202,vege_S,plus)
     
      + s_slack(2202,vege_S,minus) + s_slack(2203,rice_I,plus) + s_slack(2203,rice_I,minus) + s_slack(2203,sugc_I,plus) + s_slack(2203,sugc_I,minus) + s_slack(2203,whea_I,plus) + s_slack(2203,whea_I,minus) + s_slack(2203,bean_H,plus)
     
      + s_slack(2203,bean_H,minus) + s_slack(2203,bean_L,plus) + s_slack(2203,bean_L,minus) + s_slack(2203,bean_S,plus) + s_slack(2203,bean_S,minus) + s_slack(2203,cass_L,plus) + s_slack(2203,cass_L,minus) + s_slack(2203,cass_S,plus)
     
      + s_slack(2203,cass_S,minus) + s_slack(2203,chic_H,plus) + s_slack(2203,chic_H,minus) + s_slack(2203,chic_L,plus) + s_slack(2203,chic_L,minus) + s_slack(2203,chic_S,plus) + s_slack(2203,chic_S,minus) + s_slack(2203,coff_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 228
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2203,coff_H,minus) + s_slack(2203,coff_L,plus) + s_slack(2203,coff_L,minus) + s_slack(2203,cott_L,plus) + s_slack(2203,cott_L,minus) + s_slack(2203,cowp_H,plus) + s_slack(2203,cowp_H,minus) + s_slack(2203,cowp_L,plus)
     
      + s_slack(2203,cowp_L,minus) + s_slack(2203,cowp_S,plus) + s_slack(2203,cowp_S,minus) + s_slack(2203,grou_H,plus) + s_slack(2203,grou_H,minus) + s_slack(2203,grou_L,plus) + s_slack(2203,grou_L,minus) + s_slack(2203,grou_S,plus)
     
      + s_slack(2203,grou_S,minus) + s_slack(2203,lent_H,plus) + s_slack(2203,lent_H,minus) + s_slack(2203,lent_L,plus) + s_slack(2203,lent_L,minus) + s_slack(2203,lent_S,plus) + s_slack(2203,lent_S,minus) + s_slack(2203,maiz_H,plus)
     
      + s_slack(2203,maiz_H,minus) + s_slack(2203,maiz_L,plus) + s_slack(2203,maiz_L,minus) + s_slack(2203,maiz_S,plus) + s_slack(2203,maiz_S,minus) + s_slack(2203,mill_H,plus) + s_slack(2203,mill_H,minus) + s_slack(2203,mill_L,plus)
     
      + s_slack(2203,mill_L,minus) + s_slack(2203,mill_S,plus) + s_slack(2203,mill_S,minus) + s_slack(2203,ofib_L,plus) + s_slack(2203,ofib_L,minus) + s_slack(2203,ooil_L,plus) + s_slack(2203,ooil_L,minus) + s_slack(2203,opul_H,plus)
     
      + s_slack(2203,opul_H,minus) + s_slack(2203,opul_L,plus) + s_slack(2203,opul_L,minus) + s_slack(2203,opul_S,plus) + s_slack(2203,opul_S,minus) + s_slack(2203,pige_H,plus) + s_slack(2203,pige_H,minus) + s_slack(2203,pige_L,plus)
     
      + s_slack(2203,pige_L,minus) + s_slack(2203,pige_S,plus) + s_slack(2203,pige_S,minus) + s_slack(2203,pota_H,plus) + s_slack(2203,pota_H,minus) + s_slack(2203,pota_L,plus) + s_slack(2203,pota_L,minus) + s_slack(2203,pota_S,plus)
     
      + s_slack(2203,pota_S,minus) + s_slack(2203,rest_H,plus) + s_slack(2203,rest_H,minus) + s_slack(2203,rest_L,plus) + s_slack(2203,rest_L,minus) + s_slack(2203,rest_S,plus) + s_slack(2203,rest_S,minus) + s_slack(2203,rice_H,plus)
     
      + s_slack(2203,rice_H,minus) + s_slack(2203,rice_L,plus) + s_slack(2203,rice_L,minus) + s_slack(2203,rice_S,plus) + s_slack(2203,rice_S,minus) + s_slack(2203,sorg_L,plus) + s_slack(2203,sorg_L,minus) + s_slack(2203,sorg_S,plus)
     
      + s_slack(2203,sorg_S,minus) + s_slack(2203,soyb_L,plus) + s_slack(2203,soyb_L,minus) + s_slack(2203,soyb_S,plus) + s_slack(2203,soyb_S,minus) + s_slack(2203,sunf_L,plus) + s_slack(2203,sunf_L,minus) + s_slack(2203,temf_H,plus)
     
      + s_slack(2203,temf_H,minus) + s_slack(2203,temf_L,plus) + s_slack(2203,temf_L,minus) + s_slack(2203,temf_S,plus) + s_slack(2203,temf_S,minus) + s_slack(2203,toba_H,plus) + s_slack(2203,toba_H,minus) + s_slack(2203,toba_L,plus)
     
      + s_slack(2203,toba_L,minus) + s_slack(2203,trof_L,plus) + s_slack(2203,trof_L,minus) + s_slack(2203,trof_S,plus) + s_slack(2203,trof_S,minus) + s_slack(2203,vege_H,plus) + s_slack(2203,vege_H,minus) + s_slack(2203,vege_L,plus)
     
      + s_slack(2203,vege_L,minus) + s_slack(2203,vege_S,plus) + s_slack(2203,vege_S,minus) + s_slack(2204,rice_I,plus) + s_slack(2204,rice_I,minus) + s_slack(2204,sugc_I,plus) + s_slack(2204,sugc_I,minus) + s_slack(2204,whea_I,plus)
     
      + s_slack(2204,whea_I,minus) + s_slack(2204,bean_H,plus) + s_slack(2204,bean_H,minus) + s_slack(2204,bean_L,plus) + s_slack(2204,bean_L,minus) + s_slack(2204,bean_S,plus) + s_slack(2204,bean_S,minus) + s_slack(2204,cass_L,plus)
     
      + s_slack(2204,cass_L,minus) + s_slack(2204,cass_S,plus) + s_slack(2204,cass_S,minus) + s_slack(2204,chic_H,plus) + s_slack(2204,chic_H,minus) + s_slack(2204,chic_L,plus) + s_slack(2204,chic_L,minus) + s_slack(2204,chic_S,plus)
     
      + s_slack(2204,chic_S,minus) + s_slack(2204,coff_H,plus) + s_slack(2204,coff_H,minus) + s_slack(2204,coff_L,plus) + s_slack(2204,coff_L,minus) + s_slack(2204,cott_L,plus) + s_slack(2204,cott_L,minus) + s_slack(2204,cowp_H,plus)
     
      + s_slack(2204,cowp_H,minus) + s_slack(2204,cowp_L,plus) + s_slack(2204,cowp_L,minus) + s_slack(2204,cowp_S,plus) + s_slack(2204,cowp_S,minus) + s_slack(2204,grou_H,plus) + s_slack(2204,grou_H,minus) + s_slack(2204,grou_L,plus)
     
      + s_slack(2204,grou_L,minus) + s_slack(2204,grou_S,plus) + s_slack(2204,grou_S,minus) + s_slack(2204,lent_H,plus) + s_slack(2204,lent_H,minus) + s_slack(2204,lent_L,plus) + s_slack(2204,lent_L,minus) + s_slack(2204,lent_S,plus)
     
      + s_slack(2204,lent_S,minus) + s_slack(2204,maiz_H,plus) + s_slack(2204,maiz_H,minus) + s_slack(2204,maiz_L,plus) + s_slack(2204,maiz_L,minus) + s_slack(2204,maiz_S,plus) + s_slack(2204,maiz_S,minus) + s_slack(2204,mill_H,plus)
     
      + s_slack(2204,mill_H,minus) + s_slack(2204,mill_L,plus) + s_slack(2204,mill_L,minus) + s_slack(2204,mill_S,plus) + s_slack(2204,mill_S,minus) + s_slack(2204,ofib_L,plus) + s_slack(2204,ofib_L,minus) + s_slack(2204,ooil_L,plus)
     
      + s_slack(2204,ooil_L,minus) + s_slack(2204,opul_H,plus) + s_slack(2204,opul_H,minus) + s_slack(2204,opul_L,plus) + s_slack(2204,opul_L,minus) + s_slack(2204,opul_S,plus) + s_slack(2204,opul_S,minus) + s_slack(2204,pige_H,plus)
     
      + s_slack(2204,pige_H,minus) + s_slack(2204,pige_L,plus) + s_slack(2204,pige_L,minus) + s_slack(2204,pige_S,plus) + s_slack(2204,pige_S,minus) + s_slack(2204,pota_H,plus) + s_slack(2204,pota_H,minus) + s_slack(2204,pota_L,plus)
     
      + s_slack(2204,pota_L,minus) + s_slack(2204,pota_S,plus) + s_slack(2204,pota_S,minus) + s_slack(2204,rest_H,plus) + s_slack(2204,rest_H,minus) + s_slack(2204,rest_L,plus) + s_slack(2204,rest_L,minus) + s_slack(2204,rest_S,plus)
     
      + s_slack(2204,rest_S,minus) + s_slack(2204,rice_H,plus) + s_slack(2204,rice_H,minus) + s_slack(2204,rice_L,plus) + s_slack(2204,rice_L,minus) + s_slack(2204,rice_S,plus) + s_slack(2204,rice_S,minus) + s_slack(2204,sorg_L,plus)
     
      + s_slack(2204,sorg_L,minus) + s_slack(2204,sorg_S,plus) + s_slack(2204,sorg_S,minus) + s_slack(2204,soyb_L,plus) + s_slack(2204,soyb_L,minus) + s_slack(2204,soyb_S,plus) + s_slack(2204,soyb_S,minus) + s_slack(2204,sunf_L,plus)
     
      + s_slack(2204,sunf_L,minus) + s_slack(2204,temf_H,plus) + s_slack(2204,temf_H,minus) + s_slack(2204,temf_L,plus) + s_slack(2204,temf_L,minus) + s_slack(2204,temf_S,plus) + s_slack(2204,temf_S,minus) + s_slack(2204,toba_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 229
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2204,toba_H,minus) + s_slack(2204,toba_L,plus) + s_slack(2204,toba_L,minus) + s_slack(2204,trof_L,plus) + s_slack(2204,trof_L,minus) + s_slack(2204,trof_S,plus) + s_slack(2204,trof_S,minus) + s_slack(2204,vege_H,plus)
     
      + s_slack(2204,vege_H,minus) + s_slack(2204,vege_L,plus) + s_slack(2204,vege_L,minus) + s_slack(2204,vege_S,plus) + s_slack(2204,vege_S,minus) + s_slack(2206,rice_I,plus) + s_slack(2206,rice_I,minus) + s_slack(2206,sugc_I,plus)
     
      + s_slack(2206,sugc_I,minus) + s_slack(2206,whea_I,plus) + s_slack(2206,whea_I,minus) + s_slack(2206,bean_H,plus) + s_slack(2206,bean_H,minus) + s_slack(2206,bean_L,plus) + s_slack(2206,bean_L,minus) + s_slack(2206,bean_S,plus)
     
      + s_slack(2206,bean_S,minus) + s_slack(2206,cass_L,plus) + s_slack(2206,cass_L,minus) + s_slack(2206,cass_S,plus) + s_slack(2206,cass_S,minus) + s_slack(2206,chic_H,plus) + s_slack(2206,chic_H,minus) + s_slack(2206,chic_L,plus)
     
      + s_slack(2206,chic_L,minus) + s_slack(2206,chic_S,plus) + s_slack(2206,chic_S,minus) + s_slack(2206,coff_H,plus) + s_slack(2206,coff_H,minus) + s_slack(2206,coff_L,plus) + s_slack(2206,coff_L,minus) + s_slack(2206,cott_L,plus)
     
      + s_slack(2206,cott_L,minus) + s_slack(2206,cowp_H,plus) + s_slack(2206,cowp_H,minus) + s_slack(2206,cowp_L,plus) + s_slack(2206,cowp_L,minus) + s_slack(2206,cowp_S,plus) + s_slack(2206,cowp_S,minus) + s_slack(2206,grou_H,plus)
     
      + s_slack(2206,grou_H,minus) + s_slack(2206,grou_L,plus) + s_slack(2206,grou_L,minus) + s_slack(2206,grou_S,plus) + s_slack(2206,grou_S,minus) + s_slack(2206,lent_H,plus) + s_slack(2206,lent_H,minus) + s_slack(2206,lent_L,plus)
     
      + s_slack(2206,lent_L,minus) + s_slack(2206,lent_S,plus) + s_slack(2206,lent_S,minus) + s_slack(2206,maiz_H,plus) + s_slack(2206,maiz_H,minus) + s_slack(2206,maiz_L,plus) + s_slack(2206,maiz_L,minus) + s_slack(2206,maiz_S,plus)
     
      + s_slack(2206,maiz_S,minus) + s_slack(2206,mill_H,plus) + s_slack(2206,mill_H,minus) + s_slack(2206,mill_L,plus) + s_slack(2206,mill_L,minus) + s_slack(2206,mill_S,plus) + s_slack(2206,mill_S,minus) + s_slack(2206,ofib_L,plus)
     
      + s_slack(2206,ofib_L,minus) + s_slack(2206,ooil_L,plus) + s_slack(2206,ooil_L,minus) + s_slack(2206,opul_H,plus) + s_slack(2206,opul_H,minus) + s_slack(2206,opul_L,plus) + s_slack(2206,opul_L,minus) + s_slack(2206,opul_S,plus)
     
      + s_slack(2206,opul_S,minus) + s_slack(2206,pige_H,plus) + s_slack(2206,pige_H,minus) + s_slack(2206,pige_L,plus) + s_slack(2206,pige_L,minus) + s_slack(2206,pige_S,plus) + s_slack(2206,pige_S,minus) + s_slack(2206,pota_H,plus)
     
      + s_slack(2206,pota_H,minus) + s_slack(2206,pota_L,plus) + s_slack(2206,pota_L,minus) + s_slack(2206,pota_S,plus) + s_slack(2206,pota_S,minus) + s_slack(2206,rest_H,plus) + s_slack(2206,rest_H,minus) + s_slack(2206,rest_L,plus)
     
      + s_slack(2206,rest_L,minus) + s_slack(2206,rest_S,plus) + s_slack(2206,rest_S,minus) + s_slack(2206,rice_H,plus) + s_slack(2206,rice_H,minus) + s_slack(2206,rice_L,plus) + s_slack(2206,rice_L,minus) + s_slack(2206,rice_S,plus)
     
      + s_slack(2206,rice_S,minus) + s_slack(2206,sorg_L,plus) + s_slack(2206,sorg_L,minus) + s_slack(2206,sorg_S,plus) + s_slack(2206,sorg_S,minus) + s_slack(2206,soyb_L,plus) + s_slack(2206,soyb_L,minus) + s_slack(2206,soyb_S,plus)
     
      + s_slack(2206,soyb_S,minus) + s_slack(2206,sunf_L,plus) + s_slack(2206,sunf_L,minus) + s_slack(2206,temf_H,plus) + s_slack(2206,temf_H,minus) + s_slack(2206,temf_L,plus) + s_slack(2206,temf_L,minus) + s_slack(2206,temf_S,plus)
     
      + s_slack(2206,temf_S,minus) + s_slack(2206,toba_H,plus) + s_slack(2206,toba_H,minus) + s_slack(2206,toba_L,plus) + s_slack(2206,toba_L,minus) + s_slack(2206,trof_L,plus) + s_slack(2206,trof_L,minus) + s_slack(2206,trof_S,plus)
     
      + s_slack(2206,trof_S,minus) + s_slack(2206,vege_H,plus) + s_slack(2206,vege_H,minus) + s_slack(2206,vege_L,plus) + s_slack(2206,vege_L,minus) + s_slack(2206,vege_S,plus) + s_slack(2206,vege_S,minus) + s_slack(2232,rice_I,plus)
     
      + s_slack(2232,rice_I,minus) + s_slack(2232,sugc_I,plus) + s_slack(2232,sugc_I,minus) + s_slack(2232,whea_I,plus) + s_slack(2232,whea_I,minus) + s_slack(2232,bean_H,plus) + s_slack(2232,bean_H,minus) + s_slack(2232,bean_L,plus)
     
      + s_slack(2232,bean_L,minus) + s_slack(2232,bean_S,plus) + s_slack(2232,bean_S,minus) + s_slack(2232,cass_L,plus) + s_slack(2232,cass_L,minus) + s_slack(2232,cass_S,plus) + s_slack(2232,cass_S,minus) + s_slack(2232,chic_H,plus)
     
      + s_slack(2232,chic_H,minus) + s_slack(2232,chic_L,plus) + s_slack(2232,chic_L,minus) + s_slack(2232,chic_S,plus) + s_slack(2232,chic_S,minus) + s_slack(2232,coff_H,plus) + s_slack(2232,coff_H,minus) + s_slack(2232,coff_L,plus)
     
      + s_slack(2232,coff_L,minus) + s_slack(2232,cott_L,plus) + s_slack(2232,cott_L,minus) + s_slack(2232,cowp_H,plus) + s_slack(2232,cowp_H,minus) + s_slack(2232,cowp_L,plus) + s_slack(2232,cowp_L,minus) + s_slack(2232,cowp_S,plus)
     
      + s_slack(2232,cowp_S,minus) + s_slack(2232,grou_H,plus) + s_slack(2232,grou_H,minus) + s_slack(2232,grou_L,plus) + s_slack(2232,grou_L,minus) + s_slack(2232,grou_S,plus) + s_slack(2232,grou_S,minus) + s_slack(2232,lent_H,plus)
     
      + s_slack(2232,lent_H,minus) + s_slack(2232,lent_L,plus) + s_slack(2232,lent_L,minus) + s_slack(2232,lent_S,plus) + s_slack(2232,lent_S,minus) + s_slack(2232,maiz_H,plus) + s_slack(2232,maiz_H,minus) + s_slack(2232,maiz_L,plus)
     
      + s_slack(2232,maiz_L,minus) + s_slack(2232,maiz_S,plus) + s_slack(2232,maiz_S,minus) + s_slack(2232,mill_H,plus) + s_slack(2232,mill_H,minus) + s_slack(2232,mill_L,plus) + s_slack(2232,mill_L,minus) + s_slack(2232,mill_S,plus)
     
      + s_slack(2232,mill_S,minus) + s_slack(2232,ofib_L,plus) + s_slack(2232,ofib_L,minus) + s_slack(2232,ooil_L,plus) + s_slack(2232,ooil_L,minus) + s_slack(2232,opul_H,plus) + s_slack(2232,opul_H,minus) + s_slack(2232,opul_L,plus)
     
      + s_slack(2232,opul_L,minus) + s_slack(2232,opul_S,plus) + s_slack(2232,opul_S,minus) + s_slack(2232,pige_H,plus) + s_slack(2232,pige_H,minus) + s_slack(2232,pige_L,plus) + s_slack(2232,pige_L,minus) + s_slack(2232,pige_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 230
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2232,pige_S,minus) + s_slack(2232,pota_H,plus) + s_slack(2232,pota_H,minus) + s_slack(2232,pota_L,plus) + s_slack(2232,pota_L,minus) + s_slack(2232,pota_S,plus) + s_slack(2232,pota_S,minus) + s_slack(2232,rest_H,plus)
     
      + s_slack(2232,rest_H,minus) + s_slack(2232,rest_L,plus) + s_slack(2232,rest_L,minus) + s_slack(2232,rest_S,plus) + s_slack(2232,rest_S,minus) + s_slack(2232,rice_H,plus) + s_slack(2232,rice_H,minus) + s_slack(2232,rice_L,plus)
     
      + s_slack(2232,rice_L,minus) + s_slack(2232,rice_S,plus) + s_slack(2232,rice_S,minus) + s_slack(2232,sorg_L,plus) + s_slack(2232,sorg_L,minus) + s_slack(2232,sorg_S,plus) + s_slack(2232,sorg_S,minus) + s_slack(2232,soyb_L,plus)
     
      + s_slack(2232,soyb_L,minus) + s_slack(2232,soyb_S,plus) + s_slack(2232,soyb_S,minus) + s_slack(2232,sunf_L,plus) + s_slack(2232,sunf_L,minus) + s_slack(2232,temf_H,plus) + s_slack(2232,temf_H,minus) + s_slack(2232,temf_L,plus)
     
      + s_slack(2232,temf_L,minus) + s_slack(2232,temf_S,plus) + s_slack(2232,temf_S,minus) + s_slack(2232,toba_H,plus) + s_slack(2232,toba_H,minus) + s_slack(2232,toba_L,plus) + s_slack(2232,toba_L,minus) + s_slack(2232,trof_L,plus)
     
      + s_slack(2232,trof_L,minus) + s_slack(2232,trof_S,plus) + s_slack(2232,trof_S,minus) + s_slack(2232,vege_H,plus) + s_slack(2232,vege_H,minus) + s_slack(2232,vege_L,plus) + s_slack(2232,vege_L,minus) + s_slack(2232,vege_S,plus)
     
      + s_slack(2232,vege_S,minus) + s_slack(2233,rice_I,plus) + s_slack(2233,rice_I,minus) + s_slack(2233,sugc_I,plus) + s_slack(2233,sugc_I,minus) + s_slack(2233,whea_I,plus) + s_slack(2233,whea_I,minus) + s_slack(2233,bean_H,plus)
     
      + s_slack(2233,bean_H,minus) + s_slack(2233,bean_L,plus) + s_slack(2233,bean_L,minus) + s_slack(2233,bean_S,plus) + s_slack(2233,bean_S,minus) + s_slack(2233,cass_L,plus) + s_slack(2233,cass_L,minus) + s_slack(2233,cass_S,plus)
     
      + s_slack(2233,cass_S,minus) + s_slack(2233,chic_H,plus) + s_slack(2233,chic_H,minus) + s_slack(2233,chic_L,plus) + s_slack(2233,chic_L,minus) + s_slack(2233,chic_S,plus) + s_slack(2233,chic_S,minus) + s_slack(2233,coff_H,plus)
     
      + s_slack(2233,coff_H,minus) + s_slack(2233,coff_L,plus) + s_slack(2233,coff_L,minus) + s_slack(2233,cott_L,plus) + s_slack(2233,cott_L,minus) + s_slack(2233,cowp_H,plus) + s_slack(2233,cowp_H,minus) + s_slack(2233,cowp_L,plus)
     
      + s_slack(2233,cowp_L,minus) + s_slack(2233,cowp_S,plus) + s_slack(2233,cowp_S,minus) + s_slack(2233,grou_H,plus) + s_slack(2233,grou_H,minus) + s_slack(2233,grou_L,plus) + s_slack(2233,grou_L,minus) + s_slack(2233,grou_S,plus)
     
      + s_slack(2233,grou_S,minus) + s_slack(2233,lent_H,plus) + s_slack(2233,lent_H,minus) + s_slack(2233,lent_L,plus) + s_slack(2233,lent_L,minus) + s_slack(2233,lent_S,plus) + s_slack(2233,lent_S,minus) + s_slack(2233,maiz_H,plus)
     
      + s_slack(2233,maiz_H,minus) + s_slack(2233,maiz_L,plus) + s_slack(2233,maiz_L,minus) + s_slack(2233,maiz_S,plus) + s_slack(2233,maiz_S,minus) + s_slack(2233,mill_H,plus) + s_slack(2233,mill_H,minus) + s_slack(2233,mill_L,plus)
     
      + s_slack(2233,mill_L,minus) + s_slack(2233,mill_S,plus) + s_slack(2233,mill_S,minus) + s_slack(2233,ofib_L,plus) + s_slack(2233,ofib_L,minus) + s_slack(2233,ooil_L,plus) + s_slack(2233,ooil_L,minus) + s_slack(2233,opul_H,plus)
     
      + s_slack(2233,opul_H,minus) + s_slack(2233,opul_L,plus) + s_slack(2233,opul_L,minus) + s_slack(2233,opul_S,plus) + s_slack(2233,opul_S,minus) + s_slack(2233,pige_H,plus) + s_slack(2233,pige_H,minus) + s_slack(2233,pige_L,plus)
     
      + s_slack(2233,pige_L,minus) + s_slack(2233,pige_S,plus) + s_slack(2233,pige_S,minus) + s_slack(2233,pota_H,plus) + s_slack(2233,pota_H,minus) + s_slack(2233,pota_L,plus) + s_slack(2233,pota_L,minus) + s_slack(2233,pota_S,plus)
     
      + s_slack(2233,pota_S,minus) + s_slack(2233,rest_H,plus) + s_slack(2233,rest_H,minus) + s_slack(2233,rest_L,plus) + s_slack(2233,rest_L,minus) + s_slack(2233,rest_S,plus) + s_slack(2233,rest_S,minus) + s_slack(2233,rice_H,plus)
     
      + s_slack(2233,rice_H,minus) + s_slack(2233,rice_L,plus) + s_slack(2233,rice_L,minus) + s_slack(2233,rice_S,plus) + s_slack(2233,rice_S,minus) + s_slack(2233,sorg_L,plus) + s_slack(2233,sorg_L,minus) + s_slack(2233,sorg_S,plus)
     
      + s_slack(2233,sorg_S,minus) + s_slack(2233,soyb_L,plus) + s_slack(2233,soyb_L,minus) + s_slack(2233,soyb_S,plus) + s_slack(2233,soyb_S,minus) + s_slack(2233,sunf_L,plus) + s_slack(2233,sunf_L,minus) + s_slack(2233,temf_H,plus)
     
      + s_slack(2233,temf_H,minus) + s_slack(2233,temf_L,plus) + s_slack(2233,temf_L,minus) + s_slack(2233,temf_S,plus) + s_slack(2233,temf_S,minus) + s_slack(2233,toba_H,plus) + s_slack(2233,toba_H,minus) + s_slack(2233,toba_L,plus)
     
      + s_slack(2233,toba_L,minus) + s_slack(2233,trof_L,plus) + s_slack(2233,trof_L,minus) + s_slack(2233,trof_S,plus) + s_slack(2233,trof_S,minus) + s_slack(2233,vege_H,plus) + s_slack(2233,vege_H,minus) + s_slack(2233,vege_L,plus)
     
      + s_slack(2233,vege_L,minus) + s_slack(2233,vege_S,plus) + s_slack(2233,vege_S,minus) + s_slack(2234,rice_I,plus) + s_slack(2234,rice_I,minus) + s_slack(2234,sugc_I,plus) + s_slack(2234,sugc_I,minus) + s_slack(2234,whea_I,plus)
     
      + s_slack(2234,whea_I,minus) + s_slack(2234,bean_H,plus) + s_slack(2234,bean_H,minus) + s_slack(2234,bean_L,plus) + s_slack(2234,bean_L,minus) + s_slack(2234,bean_S,plus) + s_slack(2234,bean_S,minus) + s_slack(2234,cass_L,plus)
     
      + s_slack(2234,cass_L,minus) + s_slack(2234,cass_S,plus) + s_slack(2234,cass_S,minus) + s_slack(2234,chic_H,plus) + s_slack(2234,chic_H,minus) + s_slack(2234,chic_L,plus) + s_slack(2234,chic_L,minus) + s_slack(2234,chic_S,plus)
     
      + s_slack(2234,chic_S,minus) + s_slack(2234,coff_H,plus) + s_slack(2234,coff_H,minus) + s_slack(2234,coff_L,plus) + s_slack(2234,coff_L,minus) + s_slack(2234,cott_L,plus) + s_slack(2234,cott_L,minus) + s_slack(2234,cowp_H,plus)
     
      + s_slack(2234,cowp_H,minus) + s_slack(2234,cowp_L,plus) + s_slack(2234,cowp_L,minus) + s_slack(2234,cowp_S,plus) + s_slack(2234,cowp_S,minus) + s_slack(2234,grou_H,plus) + s_slack(2234,grou_H,minus) + s_slack(2234,grou_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 231
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2234,grou_L,minus) + s_slack(2234,grou_S,plus) + s_slack(2234,grou_S,minus) + s_slack(2234,lent_H,plus) + s_slack(2234,lent_H,minus) + s_slack(2234,lent_L,plus) + s_slack(2234,lent_L,minus) + s_slack(2234,lent_S,plus)
     
      + s_slack(2234,lent_S,minus) + s_slack(2234,maiz_H,plus) + s_slack(2234,maiz_H,minus) + s_slack(2234,maiz_L,plus) + s_slack(2234,maiz_L,minus) + s_slack(2234,maiz_S,plus) + s_slack(2234,maiz_S,minus) + s_slack(2234,mill_H,plus)
     
      + s_slack(2234,mill_H,minus) + s_slack(2234,mill_L,plus) + s_slack(2234,mill_L,minus) + s_slack(2234,mill_S,plus) + s_slack(2234,mill_S,minus) + s_slack(2234,ofib_L,plus) + s_slack(2234,ofib_L,minus) + s_slack(2234,ooil_L,plus)
     
      + s_slack(2234,ooil_L,minus) + s_slack(2234,opul_H,plus) + s_slack(2234,opul_H,minus) + s_slack(2234,opul_L,plus) + s_slack(2234,opul_L,minus) + s_slack(2234,opul_S,plus) + s_slack(2234,opul_S,minus) + s_slack(2234,pige_H,plus)
     
      + s_slack(2234,pige_H,minus) + s_slack(2234,pige_L,plus) + s_slack(2234,pige_L,minus) + s_slack(2234,pige_S,plus) + s_slack(2234,pige_S,minus) + s_slack(2234,pota_H,plus) + s_slack(2234,pota_H,minus) + s_slack(2234,pota_L,plus)
     
      + s_slack(2234,pota_L,minus) + s_slack(2234,pota_S,plus) + s_slack(2234,pota_S,minus) + s_slack(2234,rest_H,plus) + s_slack(2234,rest_H,minus) + s_slack(2234,rest_L,plus) + s_slack(2234,rest_L,minus) + s_slack(2234,rest_S,plus)
     
      + s_slack(2234,rest_S,minus) + s_slack(2234,rice_H,plus) + s_slack(2234,rice_H,minus) + s_slack(2234,rice_L,plus) + s_slack(2234,rice_L,minus) + s_slack(2234,rice_S,plus) + s_slack(2234,rice_S,minus) + s_slack(2234,sorg_L,plus)
     
      + s_slack(2234,sorg_L,minus) + s_slack(2234,sorg_S,plus) + s_slack(2234,sorg_S,minus) + s_slack(2234,soyb_L,plus) + s_slack(2234,soyb_L,minus) + s_slack(2234,soyb_S,plus) + s_slack(2234,soyb_S,minus) + s_slack(2234,sunf_L,plus)
     
      + s_slack(2234,sunf_L,minus) + s_slack(2234,temf_H,plus) + s_slack(2234,temf_H,minus) + s_slack(2234,temf_L,plus) + s_slack(2234,temf_L,minus) + s_slack(2234,temf_S,plus) + s_slack(2234,temf_S,minus) + s_slack(2234,toba_H,plus)
     
      + s_slack(2234,toba_H,minus) + s_slack(2234,toba_L,plus) + s_slack(2234,toba_L,minus) + s_slack(2234,trof_L,plus) + s_slack(2234,trof_L,minus) + s_slack(2234,trof_S,plus) + s_slack(2234,trof_S,minus) + s_slack(2234,vege_H,plus)
     
      + s_slack(2234,vege_H,minus) + s_slack(2234,vege_L,plus) + s_slack(2234,vege_L,minus) + s_slack(2234,vege_S,plus) + s_slack(2234,vege_S,minus) + s_slack(2235,rice_I,plus) + s_slack(2235,rice_I,minus) + s_slack(2235,sugc_I,plus)
     
      + s_slack(2235,sugc_I,minus) + s_slack(2235,whea_I,plus) + s_slack(2235,whea_I,minus) + s_slack(2235,bean_H,plus) + s_slack(2235,bean_H,minus) + s_slack(2235,bean_L,plus) + s_slack(2235,bean_L,minus) + s_slack(2235,bean_S,plus)
     
      + s_slack(2235,bean_S,minus) + s_slack(2235,cass_L,plus) + s_slack(2235,cass_L,minus) + s_slack(2235,cass_S,plus) + s_slack(2235,cass_S,minus) + s_slack(2235,chic_H,plus) + s_slack(2235,chic_H,minus) + s_slack(2235,chic_L,plus)
     
      + s_slack(2235,chic_L,minus) + s_slack(2235,chic_S,plus) + s_slack(2235,chic_S,minus) + s_slack(2235,coff_H,plus) + s_slack(2235,coff_H,minus) + s_slack(2235,coff_L,plus) + s_slack(2235,coff_L,minus) + s_slack(2235,cott_L,plus)
     
      + s_slack(2235,cott_L,minus) + s_slack(2235,cowp_H,plus) + s_slack(2235,cowp_H,minus) + s_slack(2235,cowp_L,plus) + s_slack(2235,cowp_L,minus) + s_slack(2235,cowp_S,plus) + s_slack(2235,cowp_S,minus) + s_slack(2235,grou_H,plus)
     
      + s_slack(2235,grou_H,minus) + s_slack(2235,grou_L,plus) + s_slack(2235,grou_L,minus) + s_slack(2235,grou_S,plus) + s_slack(2235,grou_S,minus) + s_slack(2235,lent_H,plus) + s_slack(2235,lent_H,minus) + s_slack(2235,lent_L,plus)
     
      + s_slack(2235,lent_L,minus) + s_slack(2235,lent_S,plus) + s_slack(2235,lent_S,minus) + s_slack(2235,maiz_H,plus) + s_slack(2235,maiz_H,minus) + s_slack(2235,maiz_L,plus) + s_slack(2235,maiz_L,minus) + s_slack(2235,maiz_S,plus)
     
      + s_slack(2235,maiz_S,minus) + s_slack(2235,mill_H,plus) + s_slack(2235,mill_H,minus) + s_slack(2235,mill_L,plus) + s_slack(2235,mill_L,minus) + s_slack(2235,mill_S,plus) + s_slack(2235,mill_S,minus) + s_slack(2235,ofib_L,plus)
     
      + s_slack(2235,ofib_L,minus) + s_slack(2235,ooil_L,plus) + s_slack(2235,ooil_L,minus) + s_slack(2235,opul_H,plus) + s_slack(2235,opul_H,minus) + s_slack(2235,opul_L,plus) + s_slack(2235,opul_L,minus) + s_slack(2235,opul_S,plus)
     
      + s_slack(2235,opul_S,minus) + s_slack(2235,pige_H,plus) + s_slack(2235,pige_H,minus) + s_slack(2235,pige_L,plus) + s_slack(2235,pige_L,minus) + s_slack(2235,pige_S,plus) + s_slack(2235,pige_S,minus) + s_slack(2235,pota_H,plus)
     
      + s_slack(2235,pota_H,minus) + s_slack(2235,pota_L,plus) + s_slack(2235,pota_L,minus) + s_slack(2235,pota_S,plus) + s_slack(2235,pota_S,minus) + s_slack(2235,rest_H,plus) + s_slack(2235,rest_H,minus) + s_slack(2235,rest_L,plus)
     
      + s_slack(2235,rest_L,minus) + s_slack(2235,rest_S,plus) + s_slack(2235,rest_S,minus) + s_slack(2235,rice_H,plus) + s_slack(2235,rice_H,minus) + s_slack(2235,rice_L,plus) + s_slack(2235,rice_L,minus) + s_slack(2235,rice_S,plus)
     
      + s_slack(2235,rice_S,minus) + s_slack(2235,sorg_L,plus) + s_slack(2235,sorg_L,minus) + s_slack(2235,sorg_S,plus) + s_slack(2235,sorg_S,minus) + s_slack(2235,soyb_L,plus) + s_slack(2235,soyb_L,minus) + s_slack(2235,soyb_S,plus)
     
      + s_slack(2235,soyb_S,minus) + s_slack(2235,sunf_L,plus) + s_slack(2235,sunf_L,minus) + s_slack(2235,temf_H,plus) + s_slack(2235,temf_H,minus) + s_slack(2235,temf_L,plus) + s_slack(2235,temf_L,minus) + s_slack(2235,temf_S,plus)
     
      + s_slack(2235,temf_S,minus) + s_slack(2235,toba_H,plus) + s_slack(2235,toba_H,minus) + s_slack(2235,toba_L,plus) + s_slack(2235,toba_L,minus) + s_slack(2235,trof_L,plus) + s_slack(2235,trof_L,minus) + s_slack(2235,trof_S,plus)
     
      + s_slack(2235,trof_S,minus) + s_slack(2235,vege_H,plus) + s_slack(2235,vege_H,minus) + s_slack(2235,vege_L,plus) + s_slack(2235,vege_L,minus) + s_slack(2235,vege_S,plus) + s_slack(2235,vege_S,minus) + s_slack(2236,rice_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 232
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2236,rice_I,minus) + s_slack(2236,sugc_I,plus) + s_slack(2236,sugc_I,minus) + s_slack(2236,whea_I,plus) + s_slack(2236,whea_I,minus) + s_slack(2236,bean_H,plus) + s_slack(2236,bean_H,minus) + s_slack(2236,bean_L,plus)
     
      + s_slack(2236,bean_L,minus) + s_slack(2236,bean_S,plus) + s_slack(2236,bean_S,minus) + s_slack(2236,cass_L,plus) + s_slack(2236,cass_L,minus) + s_slack(2236,cass_S,plus) + s_slack(2236,cass_S,minus) + s_slack(2236,chic_H,plus)
     
      + s_slack(2236,chic_H,minus) + s_slack(2236,chic_L,plus) + s_slack(2236,chic_L,minus) + s_slack(2236,chic_S,plus) + s_slack(2236,chic_S,minus) + s_slack(2236,coff_H,plus) + s_slack(2236,coff_H,minus) + s_slack(2236,coff_L,plus)
     
      + s_slack(2236,coff_L,minus) + s_slack(2236,cott_L,plus) + s_slack(2236,cott_L,minus) + s_slack(2236,cowp_H,plus) + s_slack(2236,cowp_H,minus) + s_slack(2236,cowp_L,plus) + s_slack(2236,cowp_L,minus) + s_slack(2236,cowp_S,plus)
     
      + s_slack(2236,cowp_S,minus) + s_slack(2236,grou_H,plus) + s_slack(2236,grou_H,minus) + s_slack(2236,grou_L,plus) + s_slack(2236,grou_L,minus) + s_slack(2236,grou_S,plus) + s_slack(2236,grou_S,minus) + s_slack(2236,lent_H,plus)
     
      + s_slack(2236,lent_H,minus) + s_slack(2236,lent_L,plus) + s_slack(2236,lent_L,minus) + s_slack(2236,lent_S,plus) + s_slack(2236,lent_S,minus) + s_slack(2236,maiz_H,plus) + s_slack(2236,maiz_H,minus) + s_slack(2236,maiz_L,plus)
     
      + s_slack(2236,maiz_L,minus) + s_slack(2236,maiz_S,plus) + s_slack(2236,maiz_S,minus) + s_slack(2236,mill_H,plus) + s_slack(2236,mill_H,minus) + s_slack(2236,mill_L,plus) + s_slack(2236,mill_L,minus) + s_slack(2236,mill_S,plus)
     
      + s_slack(2236,mill_S,minus) + s_slack(2236,ofib_L,plus) + s_slack(2236,ofib_L,minus) + s_slack(2236,ooil_L,plus) + s_slack(2236,ooil_L,minus) + s_slack(2236,opul_H,plus) + s_slack(2236,opul_H,minus) + s_slack(2236,opul_L,plus)
     
      + s_slack(2236,opul_L,minus) + s_slack(2236,opul_S,plus) + s_slack(2236,opul_S,minus) + s_slack(2236,pige_H,plus) + s_slack(2236,pige_H,minus) + s_slack(2236,pige_L,plus) + s_slack(2236,pige_L,minus) + s_slack(2236,pige_S,plus)
     
      + s_slack(2236,pige_S,minus) + s_slack(2236,pota_H,plus) + s_slack(2236,pota_H,minus) + s_slack(2236,pota_L,plus) + s_slack(2236,pota_L,minus) + s_slack(2236,pota_S,plus) + s_slack(2236,pota_S,minus) + s_slack(2236,rest_H,plus)
     
      + s_slack(2236,rest_H,minus) + s_slack(2236,rest_L,plus) + s_slack(2236,rest_L,minus) + s_slack(2236,rest_S,plus) + s_slack(2236,rest_S,minus) + s_slack(2236,rice_H,plus) + s_slack(2236,rice_H,minus) + s_slack(2236,rice_L,plus)
     
      + s_slack(2236,rice_L,minus) + s_slack(2236,rice_S,plus) + s_slack(2236,rice_S,minus) + s_slack(2236,sorg_L,plus) + s_slack(2236,sorg_L,minus) + s_slack(2236,sorg_S,plus) + s_slack(2236,sorg_S,minus) + s_slack(2236,soyb_L,plus)
     
      + s_slack(2236,soyb_L,minus) + s_slack(2236,soyb_S,plus) + s_slack(2236,soyb_S,minus) + s_slack(2236,sunf_L,plus) + s_slack(2236,sunf_L,minus) + s_slack(2236,temf_H,plus) + s_slack(2236,temf_H,minus) + s_slack(2236,temf_L,plus)
     
      + s_slack(2236,temf_L,minus) + s_slack(2236,temf_S,plus) + s_slack(2236,temf_S,minus) + s_slack(2236,toba_H,plus) + s_slack(2236,toba_H,minus) + s_slack(2236,toba_L,plus) + s_slack(2236,toba_L,minus) + s_slack(2236,trof_L,plus)
     
      + s_slack(2236,trof_L,minus) + s_slack(2236,trof_S,plus) + s_slack(2236,trof_S,minus) + s_slack(2236,vege_H,plus) + s_slack(2236,vege_H,minus) + s_slack(2236,vege_L,plus) + s_slack(2236,vege_L,minus) + s_slack(2236,vege_S,plus)
     
      + s_slack(2236,vege_S,minus) + s_slack(2237,rice_I,plus) + s_slack(2237,rice_I,minus) + s_slack(2237,sugc_I,plus) + s_slack(2237,sugc_I,minus) + s_slack(2237,whea_I,plus) + s_slack(2237,whea_I,minus) + s_slack(2237,bean_H,plus)
     
      + s_slack(2237,bean_H,minus) + s_slack(2237,bean_L,plus) + s_slack(2237,bean_L,minus) + s_slack(2237,bean_S,plus) + s_slack(2237,bean_S,minus) + s_slack(2237,cass_L,plus) + s_slack(2237,cass_L,minus) + s_slack(2237,cass_S,plus)
     
      + s_slack(2237,cass_S,minus) + s_slack(2237,chic_H,plus) + s_slack(2237,chic_H,minus) + s_slack(2237,chic_L,plus) + s_slack(2237,chic_L,minus) + s_slack(2237,chic_S,plus) + s_slack(2237,chic_S,minus) + s_slack(2237,coff_H,plus)
     
      + s_slack(2237,coff_H,minus) + s_slack(2237,coff_L,plus) + s_slack(2237,coff_L,minus) + s_slack(2237,cott_L,plus) + s_slack(2237,cott_L,minus) + s_slack(2237,cowp_H,plus) + s_slack(2237,cowp_H,minus) + s_slack(2237,cowp_L,plus)
     
      + s_slack(2237,cowp_L,minus) + s_slack(2237,cowp_S,plus) + s_slack(2237,cowp_S,minus) + s_slack(2237,grou_H,plus) + s_slack(2237,grou_H,minus) + s_slack(2237,grou_L,plus) + s_slack(2237,grou_L,minus) + s_slack(2237,grou_S,plus)
     
      + s_slack(2237,grou_S,minus) + s_slack(2237,lent_H,plus) + s_slack(2237,lent_H,minus) + s_slack(2237,lent_L,plus) + s_slack(2237,lent_L,minus) + s_slack(2237,lent_S,plus) + s_slack(2237,lent_S,minus) + s_slack(2237,maiz_H,plus)
     
      + s_slack(2237,maiz_H,minus) + s_slack(2237,maiz_L,plus) + s_slack(2237,maiz_L,minus) + s_slack(2237,maiz_S,plus) + s_slack(2237,maiz_S,minus) + s_slack(2237,mill_H,plus) + s_slack(2237,mill_H,minus) + s_slack(2237,mill_L,plus)
     
      + s_slack(2237,mill_L,minus) + s_slack(2237,mill_S,plus) + s_slack(2237,mill_S,minus) + s_slack(2237,ofib_L,plus) + s_slack(2237,ofib_L,minus) + s_slack(2237,ooil_L,plus) + s_slack(2237,ooil_L,minus) + s_slack(2237,opul_H,plus)
     
      + s_slack(2237,opul_H,minus) + s_slack(2237,opul_L,plus) + s_slack(2237,opul_L,minus) + s_slack(2237,opul_S,plus) + s_slack(2237,opul_S,minus) + s_slack(2237,pige_H,plus) + s_slack(2237,pige_H,minus) + s_slack(2237,pige_L,plus)
     
      + s_slack(2237,pige_L,minus) + s_slack(2237,pige_S,plus) + s_slack(2237,pige_S,minus) + s_slack(2237,pota_H,plus) + s_slack(2237,pota_H,minus) + s_slack(2237,pota_L,plus) + s_slack(2237,pota_L,minus) + s_slack(2237,pota_S,plus)
     
      + s_slack(2237,pota_S,minus) + s_slack(2237,rest_H,plus) + s_slack(2237,rest_H,minus) + s_slack(2237,rest_L,plus) + s_slack(2237,rest_L,minus) + s_slack(2237,rest_S,plus) + s_slack(2237,rest_S,minus) + s_slack(2237,rice_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 233
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2237,rice_H,minus) + s_slack(2237,rice_L,plus) + s_slack(2237,rice_L,minus) + s_slack(2237,rice_S,plus) + s_slack(2237,rice_S,minus) + s_slack(2237,sorg_L,plus) + s_slack(2237,sorg_L,minus) + s_slack(2237,sorg_S,plus)
     
      + s_slack(2237,sorg_S,minus) + s_slack(2237,soyb_L,plus) + s_slack(2237,soyb_L,minus) + s_slack(2237,soyb_S,plus) + s_slack(2237,soyb_S,minus) + s_slack(2237,sunf_L,plus) + s_slack(2237,sunf_L,minus) + s_slack(2237,temf_H,plus)
     
      + s_slack(2237,temf_H,minus) + s_slack(2237,temf_L,plus) + s_slack(2237,temf_L,minus) + s_slack(2237,temf_S,plus) + s_slack(2237,temf_S,minus) + s_slack(2237,toba_H,plus) + s_slack(2237,toba_H,minus) + s_slack(2237,toba_L,plus)
     
      + s_slack(2237,toba_L,minus) + s_slack(2237,trof_L,plus) + s_slack(2237,trof_L,minus) + s_slack(2237,trof_S,plus) + s_slack(2237,trof_S,minus) + s_slack(2237,vege_H,plus) + s_slack(2237,vege_H,minus) + s_slack(2237,vege_L,plus)
     
      + s_slack(2237,vege_L,minus) + s_slack(2237,vege_S,plus) + s_slack(2237,vege_S,minus) + s_slack(2238,rice_I,plus) + s_slack(2238,rice_I,minus) + s_slack(2238,sugc_I,plus) + s_slack(2238,sugc_I,minus) + s_slack(2238,whea_I,plus)
     
      + s_slack(2238,whea_I,minus) + s_slack(2238,bean_H,plus) + s_slack(2238,bean_H,minus) + s_slack(2238,bean_L,plus) + s_slack(2238,bean_L,minus) + s_slack(2238,bean_S,plus) + s_slack(2238,bean_S,minus) + s_slack(2238,cass_L,plus)
     
      + s_slack(2238,cass_L,minus) + s_slack(2238,cass_S,plus) + s_slack(2238,cass_S,minus) + s_slack(2238,chic_H,plus) + s_slack(2238,chic_H,minus) + s_slack(2238,chic_L,plus) + s_slack(2238,chic_L,minus) + s_slack(2238,chic_S,plus)
     
      + s_slack(2238,chic_S,minus) + s_slack(2238,coff_H,plus) + s_slack(2238,coff_H,minus) + s_slack(2238,coff_L,plus) + s_slack(2238,coff_L,minus) + s_slack(2238,cott_L,plus) + s_slack(2238,cott_L,minus) + s_slack(2238,cowp_H,plus)
     
      + s_slack(2238,cowp_H,minus) + s_slack(2238,cowp_L,plus) + s_slack(2238,cowp_L,minus) + s_slack(2238,cowp_S,plus) + s_slack(2238,cowp_S,minus) + s_slack(2238,grou_H,plus) + s_slack(2238,grou_H,minus) + s_slack(2238,grou_L,plus)
     
      + s_slack(2238,grou_L,minus) + s_slack(2238,grou_S,plus) + s_slack(2238,grou_S,minus) + s_slack(2238,lent_H,plus) + s_slack(2238,lent_H,minus) + s_slack(2238,lent_L,plus) + s_slack(2238,lent_L,minus) + s_slack(2238,lent_S,plus)
     
      + s_slack(2238,lent_S,minus) + s_slack(2238,maiz_H,plus) + s_slack(2238,maiz_H,minus) + s_slack(2238,maiz_L,plus) + s_slack(2238,maiz_L,minus) + s_slack(2238,maiz_S,plus) + s_slack(2238,maiz_S,minus) + s_slack(2238,mill_H,plus)
     
      + s_slack(2238,mill_H,minus) + s_slack(2238,mill_L,plus) + s_slack(2238,mill_L,minus) + s_slack(2238,mill_S,plus) + s_slack(2238,mill_S,minus) + s_slack(2238,ofib_L,plus) + s_slack(2238,ofib_L,minus) + s_slack(2238,ooil_L,plus)
     
      + s_slack(2238,ooil_L,minus) + s_slack(2238,opul_H,plus) + s_slack(2238,opul_H,minus) + s_slack(2238,opul_L,plus) + s_slack(2238,opul_L,minus) + s_slack(2238,opul_S,plus) + s_slack(2238,opul_S,minus) + s_slack(2238,pige_H,plus)
     
      + s_slack(2238,pige_H,minus) + s_slack(2238,pige_L,plus) + s_slack(2238,pige_L,minus) + s_slack(2238,pige_S,plus) + s_slack(2238,pige_S,minus) + s_slack(2238,pota_H,plus) + s_slack(2238,pota_H,minus) + s_slack(2238,pota_L,plus)
     
      + s_slack(2238,pota_L,minus) + s_slack(2238,pota_S,plus) + s_slack(2238,pota_S,minus) + s_slack(2238,rest_H,plus) + s_slack(2238,rest_H,minus) + s_slack(2238,rest_L,plus) + s_slack(2238,rest_L,minus) + s_slack(2238,rest_S,plus)
     
      + s_slack(2238,rest_S,minus) + s_slack(2238,rice_H,plus) + s_slack(2238,rice_H,minus) + s_slack(2238,rice_L,plus) + s_slack(2238,rice_L,minus) + s_slack(2238,rice_S,plus) + s_slack(2238,rice_S,minus) + s_slack(2238,sorg_L,plus)
     
      + s_slack(2238,sorg_L,minus) + s_slack(2238,sorg_S,plus) + s_slack(2238,sorg_S,minus) + s_slack(2238,soyb_L,plus) + s_slack(2238,soyb_L,minus) + s_slack(2238,soyb_S,plus) + s_slack(2238,soyb_S,minus) + s_slack(2238,sunf_L,plus)
     
      + s_slack(2238,sunf_L,minus) + s_slack(2238,temf_H,plus) + s_slack(2238,temf_H,minus) + s_slack(2238,temf_L,plus) + s_slack(2238,temf_L,minus) + s_slack(2238,temf_S,plus) + s_slack(2238,temf_S,minus) + s_slack(2238,toba_H,plus)
     
      + s_slack(2238,toba_H,minus) + s_slack(2238,toba_L,plus) + s_slack(2238,toba_L,minus) + s_slack(2238,trof_L,plus) + s_slack(2238,trof_L,minus) + s_slack(2238,trof_S,plus) + s_slack(2238,trof_S,minus) + s_slack(2238,vege_H,plus)
     
      + s_slack(2238,vege_H,minus) + s_slack(2238,vege_L,plus) + s_slack(2238,vege_L,minus) + s_slack(2238,vege_S,plus) + s_slack(2238,vege_S,minus) + s_slack(2239,rice_I,plus) + s_slack(2239,rice_I,minus) + s_slack(2239,sugc_I,plus)
     
      + s_slack(2239,sugc_I,minus) + s_slack(2239,whea_I,plus) + s_slack(2239,whea_I,minus) + s_slack(2239,bean_H,plus) + s_slack(2239,bean_H,minus) + s_slack(2239,bean_L,plus) + s_slack(2239,bean_L,minus) + s_slack(2239,bean_S,plus)
     
      + s_slack(2239,bean_S,minus) + s_slack(2239,cass_L,plus) + s_slack(2239,cass_L,minus) + s_slack(2239,cass_S,plus) + s_slack(2239,cass_S,minus) + s_slack(2239,chic_H,plus) + s_slack(2239,chic_H,minus) + s_slack(2239,chic_L,plus)
     
      + s_slack(2239,chic_L,minus) + s_slack(2239,chic_S,plus) + s_slack(2239,chic_S,minus) + s_slack(2239,coff_H,plus) + s_slack(2239,coff_H,minus) + s_slack(2239,coff_L,plus) + s_slack(2239,coff_L,minus) + s_slack(2239,cott_L,plus)
     
      + s_slack(2239,cott_L,minus) + s_slack(2239,cowp_H,plus) + s_slack(2239,cowp_H,minus) + s_slack(2239,cowp_L,plus) + s_slack(2239,cowp_L,minus) + s_slack(2239,cowp_S,plus) + s_slack(2239,cowp_S,minus) + s_slack(2239,grou_H,plus)
     
      + s_slack(2239,grou_H,minus) + s_slack(2239,grou_L,plus) + s_slack(2239,grou_L,minus) + s_slack(2239,grou_S,plus) + s_slack(2239,grou_S,minus) + s_slack(2239,lent_H,plus) + s_slack(2239,lent_H,minus) + s_slack(2239,lent_L,plus)
     
      + s_slack(2239,lent_L,minus) + s_slack(2239,lent_S,plus) + s_slack(2239,lent_S,minus) + s_slack(2239,maiz_H,plus) + s_slack(2239,maiz_H,minus) + s_slack(2239,maiz_L,plus) + s_slack(2239,maiz_L,minus) + s_slack(2239,maiz_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 234
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2239,maiz_S,minus) + s_slack(2239,mill_H,plus) + s_slack(2239,mill_H,minus) + s_slack(2239,mill_L,plus) + s_slack(2239,mill_L,minus) + s_slack(2239,mill_S,plus) + s_slack(2239,mill_S,minus) + s_slack(2239,ofib_L,plus)
     
      + s_slack(2239,ofib_L,minus) + s_slack(2239,ooil_L,plus) + s_slack(2239,ooil_L,minus) + s_slack(2239,opul_H,plus) + s_slack(2239,opul_H,minus) + s_slack(2239,opul_L,plus) + s_slack(2239,opul_L,minus) + s_slack(2239,opul_S,plus)
     
      + s_slack(2239,opul_S,minus) + s_slack(2239,pige_H,plus) + s_slack(2239,pige_H,minus) + s_slack(2239,pige_L,plus) + s_slack(2239,pige_L,minus) + s_slack(2239,pige_S,plus) + s_slack(2239,pige_S,minus) + s_slack(2239,pota_H,plus)
     
      + s_slack(2239,pota_H,minus) + s_slack(2239,pota_L,plus) + s_slack(2239,pota_L,minus) + s_slack(2239,pota_S,plus) + s_slack(2239,pota_S,minus) + s_slack(2239,rest_H,plus) + s_slack(2239,rest_H,minus) + s_slack(2239,rest_L,plus)
     
      + s_slack(2239,rest_L,minus) + s_slack(2239,rest_S,plus) + s_slack(2239,rest_S,minus) + s_slack(2239,rice_H,plus) + s_slack(2239,rice_H,minus) + s_slack(2239,rice_L,plus) + s_slack(2239,rice_L,minus) + s_slack(2239,rice_S,plus)
     
      + s_slack(2239,rice_S,minus) + s_slack(2239,sorg_L,plus) + s_slack(2239,sorg_L,minus) + s_slack(2239,sorg_S,plus) + s_slack(2239,sorg_S,minus) + s_slack(2239,soyb_L,plus) + s_slack(2239,soyb_L,minus) + s_slack(2239,soyb_S,plus)
     
      + s_slack(2239,soyb_S,minus) + s_slack(2239,sunf_L,plus) + s_slack(2239,sunf_L,minus) + s_slack(2239,temf_H,plus) + s_slack(2239,temf_H,minus) + s_slack(2239,temf_L,plus) + s_slack(2239,temf_L,minus) + s_slack(2239,temf_S,plus)
     
      + s_slack(2239,temf_S,minus) + s_slack(2239,toba_H,plus) + s_slack(2239,toba_H,minus) + s_slack(2239,toba_L,plus) + s_slack(2239,toba_L,minus) + s_slack(2239,trof_L,plus) + s_slack(2239,trof_L,minus) + s_slack(2239,trof_S,plus)
     
      + s_slack(2239,trof_S,minus) + s_slack(2239,vege_H,plus) + s_slack(2239,vege_H,minus) + s_slack(2239,vege_L,plus) + s_slack(2239,vege_L,minus) + s_slack(2239,vege_S,plus) + s_slack(2239,vege_S,minus) + s_slack(2240,rice_I,plus)
     
      + s_slack(2240,rice_I,minus) + s_slack(2240,sugc_I,plus) + s_slack(2240,sugc_I,minus) + s_slack(2240,whea_I,plus) + s_slack(2240,whea_I,minus) + s_slack(2240,bean_H,plus) + s_slack(2240,bean_H,minus) + s_slack(2240,bean_L,plus)
     
      + s_slack(2240,bean_L,minus) + s_slack(2240,bean_S,plus) + s_slack(2240,bean_S,minus) + s_slack(2240,cass_L,plus) + s_slack(2240,cass_L,minus) + s_slack(2240,cass_S,plus) + s_slack(2240,cass_S,minus) + s_slack(2240,chic_H,plus)
     
      + s_slack(2240,chic_H,minus) + s_slack(2240,chic_L,plus) + s_slack(2240,chic_L,minus) + s_slack(2240,chic_S,plus) + s_slack(2240,chic_S,minus) + s_slack(2240,coff_H,plus) + s_slack(2240,coff_H,minus) + s_slack(2240,coff_L,plus)
     
      + s_slack(2240,coff_L,minus) + s_slack(2240,cott_L,plus) + s_slack(2240,cott_L,minus) + s_slack(2240,cowp_H,plus) + s_slack(2240,cowp_H,minus) + s_slack(2240,cowp_L,plus) + s_slack(2240,cowp_L,minus) + s_slack(2240,cowp_S,plus)
     
      + s_slack(2240,cowp_S,minus) + s_slack(2240,grou_H,plus) + s_slack(2240,grou_H,minus) + s_slack(2240,grou_L,plus) + s_slack(2240,grou_L,minus) + s_slack(2240,grou_S,plus) + s_slack(2240,grou_S,minus) + s_slack(2240,lent_H,plus)
     
      + s_slack(2240,lent_H,minus) + s_slack(2240,lent_L,plus) + s_slack(2240,lent_L,minus) + s_slack(2240,lent_S,plus) + s_slack(2240,lent_S,minus) + s_slack(2240,maiz_H,plus) + s_slack(2240,maiz_H,minus) + s_slack(2240,maiz_L,plus)
     
      + s_slack(2240,maiz_L,minus) + s_slack(2240,maiz_S,plus) + s_slack(2240,maiz_S,minus) + s_slack(2240,mill_H,plus) + s_slack(2240,mill_H,minus) + s_slack(2240,mill_L,plus) + s_slack(2240,mill_L,minus) + s_slack(2240,mill_S,plus)
     
      + s_slack(2240,mill_S,minus) + s_slack(2240,ofib_L,plus) + s_slack(2240,ofib_L,minus) + s_slack(2240,ooil_L,plus) + s_slack(2240,ooil_L,minus) + s_slack(2240,opul_H,plus) + s_slack(2240,opul_H,minus) + s_slack(2240,opul_L,plus)
     
      + s_slack(2240,opul_L,minus) + s_slack(2240,opul_S,plus) + s_slack(2240,opul_S,minus) + s_slack(2240,pige_H,plus) + s_slack(2240,pige_H,minus) + s_slack(2240,pige_L,plus) + s_slack(2240,pige_L,minus) + s_slack(2240,pige_S,plus)
     
      + s_slack(2240,pige_S,minus) + s_slack(2240,pota_H,plus) + s_slack(2240,pota_H,minus) + s_slack(2240,pota_L,plus) + s_slack(2240,pota_L,minus) + s_slack(2240,pota_S,plus) + s_slack(2240,pota_S,minus) + s_slack(2240,rest_H,plus)
     
      + s_slack(2240,rest_H,minus) + s_slack(2240,rest_L,plus) + s_slack(2240,rest_L,minus) + s_slack(2240,rest_S,plus) + s_slack(2240,rest_S,minus) + s_slack(2240,rice_H,plus) + s_slack(2240,rice_H,minus) + s_slack(2240,rice_L,plus)
     
      + s_slack(2240,rice_L,minus) + s_slack(2240,rice_S,plus) + s_slack(2240,rice_S,minus) + s_slack(2240,sorg_L,plus) + s_slack(2240,sorg_L,minus) + s_slack(2240,sorg_S,plus) + s_slack(2240,sorg_S,minus) + s_slack(2240,soyb_L,plus)
     
      + s_slack(2240,soyb_L,minus) + s_slack(2240,soyb_S,plus) + s_slack(2240,soyb_S,minus) + s_slack(2240,sunf_L,plus) + s_slack(2240,sunf_L,minus) + s_slack(2240,temf_H,plus) + s_slack(2240,temf_H,minus) + s_slack(2240,temf_L,plus)
     
      + s_slack(2240,temf_L,minus) + s_slack(2240,temf_S,plus) + s_slack(2240,temf_S,minus) + s_slack(2240,toba_H,plus) + s_slack(2240,toba_H,minus) + s_slack(2240,toba_L,plus) + s_slack(2240,toba_L,minus) + s_slack(2240,trof_L,plus)
     
      + s_slack(2240,trof_L,minus) + s_slack(2240,trof_S,plus) + s_slack(2240,trof_S,minus) + s_slack(2240,vege_H,plus) + s_slack(2240,vege_H,minus) + s_slack(2240,vege_L,plus) + s_slack(2240,vege_L,minus) + s_slack(2240,vege_S,plus)
     
      + s_slack(2240,vege_S,minus) + s_slack(2241,rice_I,plus) + s_slack(2241,rice_I,minus) + s_slack(2241,sugc_I,plus) + s_slack(2241,sugc_I,minus) + s_slack(2241,whea_I,plus) + s_slack(2241,whea_I,minus) + s_slack(2241,bean_H,plus)
     
      + s_slack(2241,bean_H,minus) + s_slack(2241,bean_L,plus) + s_slack(2241,bean_L,minus) + s_slack(2241,bean_S,plus) + s_slack(2241,bean_S,minus) + s_slack(2241,cass_L,plus) + s_slack(2241,cass_L,minus) + s_slack(2241,cass_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 235
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2241,cass_S,minus) + s_slack(2241,chic_H,plus) + s_slack(2241,chic_H,minus) + s_slack(2241,chic_L,plus) + s_slack(2241,chic_L,minus) + s_slack(2241,chic_S,plus) + s_slack(2241,chic_S,minus) + s_slack(2241,coff_H,plus)
     
      + s_slack(2241,coff_H,minus) + s_slack(2241,coff_L,plus) + s_slack(2241,coff_L,minus) + s_slack(2241,cott_L,plus) + s_slack(2241,cott_L,minus) + s_slack(2241,cowp_H,plus) + s_slack(2241,cowp_H,minus) + s_slack(2241,cowp_L,plus)
     
      + s_slack(2241,cowp_L,minus) + s_slack(2241,cowp_S,plus) + s_slack(2241,cowp_S,minus) + s_slack(2241,grou_H,plus) + s_slack(2241,grou_H,minus) + s_slack(2241,grou_L,plus) + s_slack(2241,grou_L,minus) + s_slack(2241,grou_S,plus)
     
      + s_slack(2241,grou_S,minus) + s_slack(2241,lent_H,plus) + s_slack(2241,lent_H,minus) + s_slack(2241,lent_L,plus) + s_slack(2241,lent_L,minus) + s_slack(2241,lent_S,plus) + s_slack(2241,lent_S,minus) + s_slack(2241,maiz_H,plus)
     
      + s_slack(2241,maiz_H,minus) + s_slack(2241,maiz_L,plus) + s_slack(2241,maiz_L,minus) + s_slack(2241,maiz_S,plus) + s_slack(2241,maiz_S,minus) + s_slack(2241,mill_H,plus) + s_slack(2241,mill_H,minus) + s_slack(2241,mill_L,plus)
     
      + s_slack(2241,mill_L,minus) + s_slack(2241,mill_S,plus) + s_slack(2241,mill_S,minus) + s_slack(2241,ofib_L,plus) + s_slack(2241,ofib_L,minus) + s_slack(2241,ooil_L,plus) + s_slack(2241,ooil_L,minus) + s_slack(2241,opul_H,plus)
     
      + s_slack(2241,opul_H,minus) + s_slack(2241,opul_L,plus) + s_slack(2241,opul_L,minus) + s_slack(2241,opul_S,plus) + s_slack(2241,opul_S,minus) + s_slack(2241,pige_H,plus) + s_slack(2241,pige_H,minus) + s_slack(2241,pige_L,plus)
     
      + s_slack(2241,pige_L,minus) + s_slack(2241,pige_S,plus) + s_slack(2241,pige_S,minus) + s_slack(2241,pota_H,plus) + s_slack(2241,pota_H,minus) + s_slack(2241,pota_L,plus) + s_slack(2241,pota_L,minus) + s_slack(2241,pota_S,plus)
     
      + s_slack(2241,pota_S,minus) + s_slack(2241,rest_H,plus) + s_slack(2241,rest_H,minus) + s_slack(2241,rest_L,plus) + s_slack(2241,rest_L,minus) + s_slack(2241,rest_S,plus) + s_slack(2241,rest_S,minus) + s_slack(2241,rice_H,plus)
     
      + s_slack(2241,rice_H,minus) + s_slack(2241,rice_L,plus) + s_slack(2241,rice_L,minus) + s_slack(2241,rice_S,plus) + s_slack(2241,rice_S,minus) + s_slack(2241,sorg_L,plus) + s_slack(2241,sorg_L,minus) + s_slack(2241,sorg_S,plus)
     
      + s_slack(2241,sorg_S,minus) + s_slack(2241,soyb_L,plus) + s_slack(2241,soyb_L,minus) + s_slack(2241,soyb_S,plus) + s_slack(2241,soyb_S,minus) + s_slack(2241,sunf_L,plus) + s_slack(2241,sunf_L,minus) + s_slack(2241,temf_H,plus)
     
      + s_slack(2241,temf_H,minus) + s_slack(2241,temf_L,plus) + s_slack(2241,temf_L,minus) + s_slack(2241,temf_S,plus) + s_slack(2241,temf_S,minus) + s_slack(2241,toba_H,plus) + s_slack(2241,toba_H,minus) + s_slack(2241,toba_L,plus)
     
      + s_slack(2241,toba_L,minus) + s_slack(2241,trof_L,plus) + s_slack(2241,trof_L,minus) + s_slack(2241,trof_S,plus) + s_slack(2241,trof_S,minus) + s_slack(2241,vege_H,plus) + s_slack(2241,vege_H,minus) + s_slack(2241,vege_L,plus)
     
      + s_slack(2241,vege_L,minus) + s_slack(2241,vege_S,plus) + s_slack(2241,vege_S,minus) + s_slack(2242,rice_I,plus) + s_slack(2242,rice_I,minus) + s_slack(2242,sugc_I,plus) + s_slack(2242,sugc_I,minus) + s_slack(2242,whea_I,plus)
     
      + s_slack(2242,whea_I,minus) + s_slack(2242,bean_H,plus) + s_slack(2242,bean_H,minus) + s_slack(2242,bean_L,plus) + s_slack(2242,bean_L,minus) + s_slack(2242,bean_S,plus) + s_slack(2242,bean_S,minus) + s_slack(2242,cass_L,plus)
     
      + s_slack(2242,cass_L,minus) + s_slack(2242,cass_S,plus) + s_slack(2242,cass_S,minus) + s_slack(2242,chic_H,plus) + s_slack(2242,chic_H,minus) + s_slack(2242,chic_L,plus) + s_slack(2242,chic_L,minus) + s_slack(2242,chic_S,plus)
     
      + s_slack(2242,chic_S,minus) + s_slack(2242,coff_H,plus) + s_slack(2242,coff_H,minus) + s_slack(2242,coff_L,plus) + s_slack(2242,coff_L,minus) + s_slack(2242,cott_L,plus) + s_slack(2242,cott_L,minus) + s_slack(2242,cowp_H,plus)
     
      + s_slack(2242,cowp_H,minus) + s_slack(2242,cowp_L,plus) + s_slack(2242,cowp_L,minus) + s_slack(2242,cowp_S,plus) + s_slack(2242,cowp_S,minus) + s_slack(2242,grou_H,plus) + s_slack(2242,grou_H,minus) + s_slack(2242,grou_L,plus)
     
      + s_slack(2242,grou_L,minus) + s_slack(2242,grou_S,plus) + s_slack(2242,grou_S,minus) + s_slack(2242,lent_H,plus) + s_slack(2242,lent_H,minus) + s_slack(2242,lent_L,plus) + s_slack(2242,lent_L,minus) + s_slack(2242,lent_S,plus)
     
      + s_slack(2242,lent_S,minus) + s_slack(2242,maiz_H,plus) + s_slack(2242,maiz_H,minus) + s_slack(2242,maiz_L,plus) + s_slack(2242,maiz_L,minus) + s_slack(2242,maiz_S,plus) + s_slack(2242,maiz_S,minus) + s_slack(2242,mill_H,plus)
     
      + s_slack(2242,mill_H,minus) + s_slack(2242,mill_L,plus) + s_slack(2242,mill_L,minus) + s_slack(2242,mill_S,plus) + s_slack(2242,mill_S,minus) + s_slack(2242,ofib_L,plus) + s_slack(2242,ofib_L,minus) + s_slack(2242,ooil_L,plus)
     
      + s_slack(2242,ooil_L,minus) + s_slack(2242,opul_H,plus) + s_slack(2242,opul_H,minus) + s_slack(2242,opul_L,plus) + s_slack(2242,opul_L,minus) + s_slack(2242,opul_S,plus) + s_slack(2242,opul_S,minus) + s_slack(2242,pige_H,plus)
     
      + s_slack(2242,pige_H,minus) + s_slack(2242,pige_L,plus) + s_slack(2242,pige_L,minus) + s_slack(2242,pige_S,plus) + s_slack(2242,pige_S,minus) + s_slack(2242,pota_H,plus) + s_slack(2242,pota_H,minus) + s_slack(2242,pota_L,plus)
     
      + s_slack(2242,pota_L,minus) + s_slack(2242,pota_S,plus) + s_slack(2242,pota_S,minus) + s_slack(2242,rest_H,plus) + s_slack(2242,rest_H,minus) + s_slack(2242,rest_L,plus) + s_slack(2242,rest_L,minus) + s_slack(2242,rest_S,plus)
     
      + s_slack(2242,rest_S,minus) + s_slack(2242,rice_H,plus) + s_slack(2242,rice_H,minus) + s_slack(2242,rice_L,plus) + s_slack(2242,rice_L,minus) + s_slack(2242,rice_S,plus) + s_slack(2242,rice_S,minus) + s_slack(2242,sorg_L,plus)
     
      + s_slack(2242,sorg_L,minus) + s_slack(2242,sorg_S,plus) + s_slack(2242,sorg_S,minus) + s_slack(2242,soyb_L,plus) + s_slack(2242,soyb_L,minus) + s_slack(2242,soyb_S,plus) + s_slack(2242,soyb_S,minus) + s_slack(2242,sunf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 236
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2242,sunf_L,minus) + s_slack(2242,temf_H,plus) + s_slack(2242,temf_H,minus) + s_slack(2242,temf_L,plus) + s_slack(2242,temf_L,minus) + s_slack(2242,temf_S,plus) + s_slack(2242,temf_S,minus) + s_slack(2242,toba_H,plus)
     
      + s_slack(2242,toba_H,minus) + s_slack(2242,toba_L,plus) + s_slack(2242,toba_L,minus) + s_slack(2242,trof_L,plus) + s_slack(2242,trof_L,minus) + s_slack(2242,trof_S,plus) + s_slack(2242,trof_S,minus) + s_slack(2242,vege_H,plus)
     
      + s_slack(2242,vege_H,minus) + s_slack(2242,vege_L,plus) + s_slack(2242,vege_L,minus) + s_slack(2242,vege_S,plus) + s_slack(2242,vege_S,minus) + s_slack(2243,rice_I,plus) + s_slack(2243,rice_I,minus) + s_slack(2243,sugc_I,plus)
     
      + s_slack(2243,sugc_I,minus) + s_slack(2243,whea_I,plus) + s_slack(2243,whea_I,minus) + s_slack(2243,bean_H,plus) + s_slack(2243,bean_H,minus) + s_slack(2243,bean_L,plus) + s_slack(2243,bean_L,minus) + s_slack(2243,bean_S,plus)
     
      + s_slack(2243,bean_S,minus) + s_slack(2243,cass_L,plus) + s_slack(2243,cass_L,minus) + s_slack(2243,cass_S,plus) + s_slack(2243,cass_S,minus) + s_slack(2243,chic_H,plus) + s_slack(2243,chic_H,minus) + s_slack(2243,chic_L,plus)
     
      + s_slack(2243,chic_L,minus) + s_slack(2243,chic_S,plus) + s_slack(2243,chic_S,minus) + s_slack(2243,coff_H,plus) + s_slack(2243,coff_H,minus) + s_slack(2243,coff_L,plus) + s_slack(2243,coff_L,minus) + s_slack(2243,cott_L,plus)
     
      + s_slack(2243,cott_L,minus) + s_slack(2243,cowp_H,plus) + s_slack(2243,cowp_H,minus) + s_slack(2243,cowp_L,plus) + s_slack(2243,cowp_L,minus) + s_slack(2243,cowp_S,plus) + s_slack(2243,cowp_S,minus) + s_slack(2243,grou_H,plus)
     
      + s_slack(2243,grou_H,minus) + s_slack(2243,grou_L,plus) + s_slack(2243,grou_L,minus) + s_slack(2243,grou_S,plus) + s_slack(2243,grou_S,minus) + s_slack(2243,lent_H,plus) + s_slack(2243,lent_H,minus) + s_slack(2243,lent_L,plus)
     
      + s_slack(2243,lent_L,minus) + s_slack(2243,lent_S,plus) + s_slack(2243,lent_S,minus) + s_slack(2243,maiz_H,plus) + s_slack(2243,maiz_H,minus) + s_slack(2243,maiz_L,plus) + s_slack(2243,maiz_L,minus) + s_slack(2243,maiz_S,plus)
     
      + s_slack(2243,maiz_S,minus) + s_slack(2243,mill_H,plus) + s_slack(2243,mill_H,minus) + s_slack(2243,mill_L,plus) + s_slack(2243,mill_L,minus) + s_slack(2243,mill_S,plus) + s_slack(2243,mill_S,minus) + s_slack(2243,ofib_L,plus)
     
      + s_slack(2243,ofib_L,minus) + s_slack(2243,ooil_L,plus) + s_slack(2243,ooil_L,minus) + s_slack(2243,opul_H,plus) + s_slack(2243,opul_H,minus) + s_slack(2243,opul_L,plus) + s_slack(2243,opul_L,minus) + s_slack(2243,opul_S,plus)
     
      + s_slack(2243,opul_S,minus) + s_slack(2243,pige_H,plus) + s_slack(2243,pige_H,minus) + s_slack(2243,pige_L,plus) + s_slack(2243,pige_L,minus) + s_slack(2243,pige_S,plus) + s_slack(2243,pige_S,minus) + s_slack(2243,pota_H,plus)
     
      + s_slack(2243,pota_H,minus) + s_slack(2243,pota_L,plus) + s_slack(2243,pota_L,minus) + s_slack(2243,pota_S,plus) + s_slack(2243,pota_S,minus) + s_slack(2243,rest_H,plus) + s_slack(2243,rest_H,minus) + s_slack(2243,rest_L,plus)
     
      + s_slack(2243,rest_L,minus) + s_slack(2243,rest_S,plus) + s_slack(2243,rest_S,minus) + s_slack(2243,rice_H,plus) + s_slack(2243,rice_H,minus) + s_slack(2243,rice_L,plus) + s_slack(2243,rice_L,minus) + s_slack(2243,rice_S,plus)
     
      + s_slack(2243,rice_S,minus) + s_slack(2243,sorg_L,plus) + s_slack(2243,sorg_L,minus) + s_slack(2243,sorg_S,plus) + s_slack(2243,sorg_S,minus) + s_slack(2243,soyb_L,plus) + s_slack(2243,soyb_L,minus) + s_slack(2243,soyb_S,plus)
     
      + s_slack(2243,soyb_S,minus) + s_slack(2243,sunf_L,plus) + s_slack(2243,sunf_L,minus) + s_slack(2243,temf_H,plus) + s_slack(2243,temf_H,minus) + s_slack(2243,temf_L,plus) + s_slack(2243,temf_L,minus) + s_slack(2243,temf_S,plus)
     
      + s_slack(2243,temf_S,minus) + s_slack(2243,toba_H,plus) + s_slack(2243,toba_H,minus) + s_slack(2243,toba_L,plus) + s_slack(2243,toba_L,minus) + s_slack(2243,trof_L,plus) + s_slack(2243,trof_L,minus) + s_slack(2243,trof_S,plus)
     
      + s_slack(2243,trof_S,minus) + s_slack(2243,vege_H,plus) + s_slack(2243,vege_H,minus) + s_slack(2243,vege_L,plus) + s_slack(2243,vege_L,minus) + s_slack(2243,vege_S,plus) + s_slack(2243,vege_S,minus) + s_slack(2244,rice_I,plus)
     
      + s_slack(2244,rice_I,minus) + s_slack(2244,sugc_I,plus) + s_slack(2244,sugc_I,minus) + s_slack(2244,whea_I,plus) + s_slack(2244,whea_I,minus) + s_slack(2244,bean_H,plus) + s_slack(2244,bean_H,minus) + s_slack(2244,bean_L,plus)
     
      + s_slack(2244,bean_L,minus) + s_slack(2244,bean_S,plus) + s_slack(2244,bean_S,minus) + s_slack(2244,cass_L,plus) + s_slack(2244,cass_L,minus) + s_slack(2244,cass_S,plus) + s_slack(2244,cass_S,minus) + s_slack(2244,chic_H,plus)
     
      + s_slack(2244,chic_H,minus) + s_slack(2244,chic_L,plus) + s_slack(2244,chic_L,minus) + s_slack(2244,chic_S,plus) + s_slack(2244,chic_S,minus) + s_slack(2244,coff_H,plus) + s_slack(2244,coff_H,minus) + s_slack(2244,coff_L,plus)
     
      + s_slack(2244,coff_L,minus) + s_slack(2244,cott_L,plus) + s_slack(2244,cott_L,minus) + s_slack(2244,cowp_H,plus) + s_slack(2244,cowp_H,minus) + s_slack(2244,cowp_L,plus) + s_slack(2244,cowp_L,minus) + s_slack(2244,cowp_S,plus)
     
      + s_slack(2244,cowp_S,minus) + s_slack(2244,grou_H,plus) + s_slack(2244,grou_H,minus) + s_slack(2244,grou_L,plus) + s_slack(2244,grou_L,minus) + s_slack(2244,grou_S,plus) + s_slack(2244,grou_S,minus) + s_slack(2244,lent_H,plus)
     
      + s_slack(2244,lent_H,minus) + s_slack(2244,lent_L,plus) + s_slack(2244,lent_L,minus) + s_slack(2244,lent_S,plus) + s_slack(2244,lent_S,minus) + s_slack(2244,maiz_H,plus) + s_slack(2244,maiz_H,minus) + s_slack(2244,maiz_L,plus)
     
      + s_slack(2244,maiz_L,minus) + s_slack(2244,maiz_S,plus) + s_slack(2244,maiz_S,minus) + s_slack(2244,mill_H,plus) + s_slack(2244,mill_H,minus) + s_slack(2244,mill_L,plus) + s_slack(2244,mill_L,minus) + s_slack(2244,mill_S,plus)
     
      + s_slack(2244,mill_S,minus) + s_slack(2244,ofib_L,plus) + s_slack(2244,ofib_L,minus) + s_slack(2244,ooil_L,plus) + s_slack(2244,ooil_L,minus) + s_slack(2244,opul_H,plus) + s_slack(2244,opul_H,minus) + s_slack(2244,opul_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 237
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2244,opul_L,minus) + s_slack(2244,opul_S,plus) + s_slack(2244,opul_S,minus) + s_slack(2244,pige_H,plus) + s_slack(2244,pige_H,minus) + s_slack(2244,pige_L,plus) + s_slack(2244,pige_L,minus) + s_slack(2244,pige_S,plus)
     
      + s_slack(2244,pige_S,minus) + s_slack(2244,pota_H,plus) + s_slack(2244,pota_H,minus) + s_slack(2244,pota_L,plus) + s_slack(2244,pota_L,minus) + s_slack(2244,pota_S,plus) + s_slack(2244,pota_S,minus) + s_slack(2244,rest_H,plus)
     
      + s_slack(2244,rest_H,minus) + s_slack(2244,rest_L,plus) + s_slack(2244,rest_L,minus) + s_slack(2244,rest_S,plus) + s_slack(2244,rest_S,minus) + s_slack(2244,rice_H,plus) + s_slack(2244,rice_H,minus) + s_slack(2244,rice_L,plus)
     
      + s_slack(2244,rice_L,minus) + s_slack(2244,rice_S,plus) + s_slack(2244,rice_S,minus) + s_slack(2244,sorg_L,plus) + s_slack(2244,sorg_L,minus) + s_slack(2244,sorg_S,plus) + s_slack(2244,sorg_S,minus) + s_slack(2244,soyb_L,plus)
     
      + s_slack(2244,soyb_L,minus) + s_slack(2244,soyb_S,plus) + s_slack(2244,soyb_S,minus) + s_slack(2244,sunf_L,plus) + s_slack(2244,sunf_L,minus) + s_slack(2244,temf_H,plus) + s_slack(2244,temf_H,minus) + s_slack(2244,temf_L,plus)
     
      + s_slack(2244,temf_L,minus) + s_slack(2244,temf_S,plus) + s_slack(2244,temf_S,minus) + s_slack(2244,toba_H,plus) + s_slack(2244,toba_H,minus) + s_slack(2244,toba_L,plus) + s_slack(2244,toba_L,minus) + s_slack(2244,trof_L,plus)
     
      + s_slack(2244,trof_L,minus) + s_slack(2244,trof_S,plus) + s_slack(2244,trof_S,minus) + s_slack(2244,vege_H,plus) + s_slack(2244,vege_H,minus) + s_slack(2244,vege_L,plus) + s_slack(2244,vege_L,minus) + s_slack(2244,vege_S,plus)
     
      + s_slack(2244,vege_S,minus) + s_slack(2271,rice_I,plus) + s_slack(2271,rice_I,minus) + s_slack(2271,sugc_I,plus) + s_slack(2271,sugc_I,minus) + s_slack(2271,whea_I,plus) + s_slack(2271,whea_I,minus) + s_slack(2271,bean_H,plus)
     
      + s_slack(2271,bean_H,minus) + s_slack(2271,bean_L,plus) + s_slack(2271,bean_L,minus) + s_slack(2271,bean_S,plus) + s_slack(2271,bean_S,minus) + s_slack(2271,cass_L,plus) + s_slack(2271,cass_L,minus) + s_slack(2271,cass_S,plus)
     
      + s_slack(2271,cass_S,minus) + s_slack(2271,chic_H,plus) + s_slack(2271,chic_H,minus) + s_slack(2271,chic_L,plus) + s_slack(2271,chic_L,minus) + s_slack(2271,chic_S,plus) + s_slack(2271,chic_S,minus) + s_slack(2271,coff_H,plus)
     
      + s_slack(2271,coff_H,minus) + s_slack(2271,coff_L,plus) + s_slack(2271,coff_L,minus) + s_slack(2271,cott_L,plus) + s_slack(2271,cott_L,minus) + s_slack(2271,cowp_H,plus) + s_slack(2271,cowp_H,minus) + s_slack(2271,cowp_L,plus)
     
      + s_slack(2271,cowp_L,minus) + s_slack(2271,cowp_S,plus) + s_slack(2271,cowp_S,minus) + s_slack(2271,grou_H,plus) + s_slack(2271,grou_H,minus) + s_slack(2271,grou_L,plus) + s_slack(2271,grou_L,minus) + s_slack(2271,grou_S,plus)
     
      + s_slack(2271,grou_S,minus) + s_slack(2271,lent_H,plus) + s_slack(2271,lent_H,minus) + s_slack(2271,lent_L,plus) + s_slack(2271,lent_L,minus) + s_slack(2271,lent_S,plus) + s_slack(2271,lent_S,minus) + s_slack(2271,maiz_H,plus)
     
      + s_slack(2271,maiz_H,minus) + s_slack(2271,maiz_L,plus) + s_slack(2271,maiz_L,minus) + s_slack(2271,maiz_S,plus) + s_slack(2271,maiz_S,minus) + s_slack(2271,mill_H,plus) + s_slack(2271,mill_H,minus) + s_slack(2271,mill_L,plus)
     
      + s_slack(2271,mill_L,minus) + s_slack(2271,mill_S,plus) + s_slack(2271,mill_S,minus) + s_slack(2271,ofib_L,plus) + s_slack(2271,ofib_L,minus) + s_slack(2271,ooil_L,plus) + s_slack(2271,ooil_L,minus) + s_slack(2271,opul_H,plus)
     
      + s_slack(2271,opul_H,minus) + s_slack(2271,opul_L,plus) + s_slack(2271,opul_L,minus) + s_slack(2271,opul_S,plus) + s_slack(2271,opul_S,minus) + s_slack(2271,pige_H,plus) + s_slack(2271,pige_H,minus) + s_slack(2271,pige_L,plus)
     
      + s_slack(2271,pige_L,minus) + s_slack(2271,pige_S,plus) + s_slack(2271,pige_S,minus) + s_slack(2271,pota_H,plus) + s_slack(2271,pota_H,minus) + s_slack(2271,pota_L,plus) + s_slack(2271,pota_L,minus) + s_slack(2271,pota_S,plus)
     
      + s_slack(2271,pota_S,minus) + s_slack(2271,rest_H,plus) + s_slack(2271,rest_H,minus) + s_slack(2271,rest_L,plus) + s_slack(2271,rest_L,minus) + s_slack(2271,rest_S,plus) + s_slack(2271,rest_S,minus) + s_slack(2271,rice_H,plus)
     
      + s_slack(2271,rice_H,minus) + s_slack(2271,rice_L,plus) + s_slack(2271,rice_L,minus) + s_slack(2271,rice_S,plus) + s_slack(2271,rice_S,minus) + s_slack(2271,sorg_L,plus) + s_slack(2271,sorg_L,minus) + s_slack(2271,sorg_S,plus)
     
      + s_slack(2271,sorg_S,minus) + s_slack(2271,soyb_L,plus) + s_slack(2271,soyb_L,minus) + s_slack(2271,soyb_S,plus) + s_slack(2271,soyb_S,minus) + s_slack(2271,sunf_L,plus) + s_slack(2271,sunf_L,minus) + s_slack(2271,temf_H,plus)
     
      + s_slack(2271,temf_H,minus) + s_slack(2271,temf_L,plus) + s_slack(2271,temf_L,minus) + s_slack(2271,temf_S,plus) + s_slack(2271,temf_S,minus) + s_slack(2271,toba_H,plus) + s_slack(2271,toba_H,minus) + s_slack(2271,toba_L,plus)
     
      + s_slack(2271,toba_L,minus) + s_slack(2271,trof_L,plus) + s_slack(2271,trof_L,minus) + s_slack(2271,trof_S,plus) + s_slack(2271,trof_S,minus) + s_slack(2271,vege_H,plus) + s_slack(2271,vege_H,minus) + s_slack(2271,vege_L,plus)
     
      + s_slack(2271,vege_L,minus) + s_slack(2271,vege_S,plus) + s_slack(2271,vege_S,minus) + s_slack(2274,rice_I,plus) + s_slack(2274,rice_I,minus) + s_slack(2274,sugc_I,plus) + s_slack(2274,sugc_I,minus) + s_slack(2274,whea_I,plus)
     
      + s_slack(2274,whea_I,minus) + s_slack(2274,bean_H,plus) + s_slack(2274,bean_H,minus) + s_slack(2274,bean_L,plus) + s_slack(2274,bean_L,minus) + s_slack(2274,bean_S,plus) + s_slack(2274,bean_S,minus) + s_slack(2274,cass_L,plus)
     
      + s_slack(2274,cass_L,minus) + s_slack(2274,cass_S,plus) + s_slack(2274,cass_S,minus) + s_slack(2274,chic_H,plus) + s_slack(2274,chic_H,minus) + s_slack(2274,chic_L,plus) + s_slack(2274,chic_L,minus) + s_slack(2274,chic_S,plus)
     
      + s_slack(2274,chic_S,minus) + s_slack(2274,coff_H,plus) + s_slack(2274,coff_H,minus) + s_slack(2274,coff_L,plus) + s_slack(2274,coff_L,minus) + s_slack(2274,cott_L,plus) + s_slack(2274,cott_L,minus) + s_slack(2274,cowp_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 238
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2274,cowp_H,minus) + s_slack(2274,cowp_L,plus) + s_slack(2274,cowp_L,minus) + s_slack(2274,cowp_S,plus) + s_slack(2274,cowp_S,minus) + s_slack(2274,grou_H,plus) + s_slack(2274,grou_H,minus) + s_slack(2274,grou_L,plus)
     
      + s_slack(2274,grou_L,minus) + s_slack(2274,grou_S,plus) + s_slack(2274,grou_S,minus) + s_slack(2274,lent_H,plus) + s_slack(2274,lent_H,minus) + s_slack(2274,lent_L,plus) + s_slack(2274,lent_L,minus) + s_slack(2274,lent_S,plus)
     
      + s_slack(2274,lent_S,minus) + s_slack(2274,maiz_H,plus) + s_slack(2274,maiz_H,minus) + s_slack(2274,maiz_L,plus) + s_slack(2274,maiz_L,minus) + s_slack(2274,maiz_S,plus) + s_slack(2274,maiz_S,minus) + s_slack(2274,mill_H,plus)
     
      + s_slack(2274,mill_H,minus) + s_slack(2274,mill_L,plus) + s_slack(2274,mill_L,minus) + s_slack(2274,mill_S,plus) + s_slack(2274,mill_S,minus) + s_slack(2274,ofib_L,plus) + s_slack(2274,ofib_L,minus) + s_slack(2274,ooil_L,plus)
     
      + s_slack(2274,ooil_L,minus) + s_slack(2274,opul_H,plus) + s_slack(2274,opul_H,minus) + s_slack(2274,opul_L,plus) + s_slack(2274,opul_L,minus) + s_slack(2274,opul_S,plus) + s_slack(2274,opul_S,minus) + s_slack(2274,pige_H,plus)
     
      + s_slack(2274,pige_H,minus) + s_slack(2274,pige_L,plus) + s_slack(2274,pige_L,minus) + s_slack(2274,pige_S,plus) + s_slack(2274,pige_S,minus) + s_slack(2274,pota_H,plus) + s_slack(2274,pota_H,minus) + s_slack(2274,pota_L,plus)
     
      + s_slack(2274,pota_L,minus) + s_slack(2274,pota_S,plus) + s_slack(2274,pota_S,minus) + s_slack(2274,rest_H,plus) + s_slack(2274,rest_H,minus) + s_slack(2274,rest_L,plus) + s_slack(2274,rest_L,minus) + s_slack(2274,rest_S,plus)
     
      + s_slack(2274,rest_S,minus) + s_slack(2274,rice_H,plus) + s_slack(2274,rice_H,minus) + s_slack(2274,rice_L,plus) + s_slack(2274,rice_L,minus) + s_slack(2274,rice_S,plus) + s_slack(2274,rice_S,minus) + s_slack(2274,sorg_L,plus)
     
      + s_slack(2274,sorg_L,minus) + s_slack(2274,sorg_S,plus) + s_slack(2274,sorg_S,minus) + s_slack(2274,soyb_L,plus) + s_slack(2274,soyb_L,minus) + s_slack(2274,soyb_S,plus) + s_slack(2274,soyb_S,minus) + s_slack(2274,sunf_L,plus)
     
      + s_slack(2274,sunf_L,minus) + s_slack(2274,temf_H,plus) + s_slack(2274,temf_H,minus) + s_slack(2274,temf_L,plus) + s_slack(2274,temf_L,minus) + s_slack(2274,temf_S,plus) + s_slack(2274,temf_S,minus) + s_slack(2274,toba_H,plus)
     
      + s_slack(2274,toba_H,minus) + s_slack(2274,toba_L,plus) + s_slack(2274,toba_L,minus) + s_slack(2274,trof_L,plus) + s_slack(2274,trof_L,minus) + s_slack(2274,trof_S,plus) + s_slack(2274,trof_S,minus) + s_slack(2274,vege_H,plus)
     
      + s_slack(2274,vege_H,minus) + s_slack(2274,vege_L,plus) + s_slack(2274,vege_L,minus) + s_slack(2274,vege_S,plus) + s_slack(2274,vege_S,minus) + s_slack(2275,rice_I,plus) + s_slack(2275,rice_I,minus) + s_slack(2275,sugc_I,plus)
     
      + s_slack(2275,sugc_I,minus) + s_slack(2275,whea_I,plus) + s_slack(2275,whea_I,minus) + s_slack(2275,bean_H,plus) + s_slack(2275,bean_H,minus) + s_slack(2275,bean_L,plus) + s_slack(2275,bean_L,minus) + s_slack(2275,bean_S,plus)
     
      + s_slack(2275,bean_S,minus) + s_slack(2275,cass_L,plus) + s_slack(2275,cass_L,minus) + s_slack(2275,cass_S,plus) + s_slack(2275,cass_S,minus) + s_slack(2275,chic_H,plus) + s_slack(2275,chic_H,minus) + s_slack(2275,chic_L,plus)
     
      + s_slack(2275,chic_L,minus) + s_slack(2275,chic_S,plus) + s_slack(2275,chic_S,minus) + s_slack(2275,coff_H,plus) + s_slack(2275,coff_H,minus) + s_slack(2275,coff_L,plus) + s_slack(2275,coff_L,minus) + s_slack(2275,cott_L,plus)
     
      + s_slack(2275,cott_L,minus) + s_slack(2275,cowp_H,plus) + s_slack(2275,cowp_H,minus) + s_slack(2275,cowp_L,plus) + s_slack(2275,cowp_L,minus) + s_slack(2275,cowp_S,plus) + s_slack(2275,cowp_S,minus) + s_slack(2275,grou_H,plus)
     
      + s_slack(2275,grou_H,minus) + s_slack(2275,grou_L,plus) + s_slack(2275,grou_L,minus) + s_slack(2275,grou_S,plus) + s_slack(2275,grou_S,minus) + s_slack(2275,lent_H,plus) + s_slack(2275,lent_H,minus) + s_slack(2275,lent_L,plus)
     
      + s_slack(2275,lent_L,minus) + s_slack(2275,lent_S,plus) + s_slack(2275,lent_S,minus) + s_slack(2275,maiz_H,plus) + s_slack(2275,maiz_H,minus) + s_slack(2275,maiz_L,plus) + s_slack(2275,maiz_L,minus) + s_slack(2275,maiz_S,plus)
     
      + s_slack(2275,maiz_S,minus) + s_slack(2275,mill_H,plus) + s_slack(2275,mill_H,minus) + s_slack(2275,mill_L,plus) + s_slack(2275,mill_L,minus) + s_slack(2275,mill_S,plus) + s_slack(2275,mill_S,minus) + s_slack(2275,ofib_L,plus)
     
      + s_slack(2275,ofib_L,minus) + s_slack(2275,ooil_L,plus) + s_slack(2275,ooil_L,minus) + s_slack(2275,opul_H,plus) + s_slack(2275,opul_H,minus) + s_slack(2275,opul_L,plus) + s_slack(2275,opul_L,minus) + s_slack(2275,opul_S,plus)
     
      + s_slack(2275,opul_S,minus) + s_slack(2275,pige_H,plus) + s_slack(2275,pige_H,minus) + s_slack(2275,pige_L,plus) + s_slack(2275,pige_L,minus) + s_slack(2275,pige_S,plus) + s_slack(2275,pige_S,minus) + s_slack(2275,pota_H,plus)
     
      + s_slack(2275,pota_H,minus) + s_slack(2275,pota_L,plus) + s_slack(2275,pota_L,minus) + s_slack(2275,pota_S,plus) + s_slack(2275,pota_S,minus) + s_slack(2275,rest_H,plus) + s_slack(2275,rest_H,minus) + s_slack(2275,rest_L,plus)
     
      + s_slack(2275,rest_L,minus) + s_slack(2275,rest_S,plus) + s_slack(2275,rest_S,minus) + s_slack(2275,rice_H,plus) + s_slack(2275,rice_H,minus) + s_slack(2275,rice_L,plus) + s_slack(2275,rice_L,minus) + s_slack(2275,rice_S,plus)
     
      + s_slack(2275,rice_S,minus) + s_slack(2275,sorg_L,plus) + s_slack(2275,sorg_L,minus) + s_slack(2275,sorg_S,plus) + s_slack(2275,sorg_S,minus) + s_slack(2275,soyb_L,plus) + s_slack(2275,soyb_L,minus) + s_slack(2275,soyb_S,plus)
     
      + s_slack(2275,soyb_S,minus) + s_slack(2275,sunf_L,plus) + s_slack(2275,sunf_L,minus) + s_slack(2275,temf_H,plus) + s_slack(2275,temf_H,minus) + s_slack(2275,temf_L,plus) + s_slack(2275,temf_L,minus) + s_slack(2275,temf_S,plus)
     
      + s_slack(2275,temf_S,minus) + s_slack(2275,toba_H,plus) + s_slack(2275,toba_H,minus) + s_slack(2275,toba_L,plus) + s_slack(2275,toba_L,minus) + s_slack(2275,trof_L,plus) + s_slack(2275,trof_L,minus) + s_slack(2275,trof_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 239
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2275,trof_S,minus) + s_slack(2275,vege_H,plus) + s_slack(2275,vege_H,minus) + s_slack(2275,vege_L,plus) + s_slack(2275,vege_L,minus) + s_slack(2275,vege_S,plus) + s_slack(2275,vege_S,minus) + s_slack(2276,rice_I,plus)
     
      + s_slack(2276,rice_I,minus) + s_slack(2276,sugc_I,plus) + s_slack(2276,sugc_I,minus) + s_slack(2276,whea_I,plus) + s_slack(2276,whea_I,minus) + s_slack(2276,bean_H,plus) + s_slack(2276,bean_H,minus) + s_slack(2276,bean_L,plus)
     
      + s_slack(2276,bean_L,minus) + s_slack(2276,bean_S,plus) + s_slack(2276,bean_S,minus) + s_slack(2276,cass_L,plus) + s_slack(2276,cass_L,minus) + s_slack(2276,cass_S,plus) + s_slack(2276,cass_S,minus) + s_slack(2276,chic_H,plus)
     
      + s_slack(2276,chic_H,minus) + s_slack(2276,chic_L,plus) + s_slack(2276,chic_L,minus) + s_slack(2276,chic_S,plus) + s_slack(2276,chic_S,minus) + s_slack(2276,coff_H,plus) + s_slack(2276,coff_H,minus) + s_slack(2276,coff_L,plus)
     
      + s_slack(2276,coff_L,minus) + s_slack(2276,cott_L,plus) + s_slack(2276,cott_L,minus) + s_slack(2276,cowp_H,plus) + s_slack(2276,cowp_H,minus) + s_slack(2276,cowp_L,plus) + s_slack(2276,cowp_L,minus) + s_slack(2276,cowp_S,plus)
     
      + s_slack(2276,cowp_S,minus) + s_slack(2276,grou_H,plus) + s_slack(2276,grou_H,minus) + s_slack(2276,grou_L,plus) + s_slack(2276,grou_L,minus) + s_slack(2276,grou_S,plus) + s_slack(2276,grou_S,minus) + s_slack(2276,lent_H,plus)
     
      + s_slack(2276,lent_H,minus) + s_slack(2276,lent_L,plus) + s_slack(2276,lent_L,minus) + s_slack(2276,lent_S,plus) + s_slack(2276,lent_S,minus) + s_slack(2276,maiz_H,plus) + s_slack(2276,maiz_H,minus) + s_slack(2276,maiz_L,plus)
     
      + s_slack(2276,maiz_L,minus) + s_slack(2276,maiz_S,plus) + s_slack(2276,maiz_S,minus) + s_slack(2276,mill_H,plus) + s_slack(2276,mill_H,minus) + s_slack(2276,mill_L,plus) + s_slack(2276,mill_L,minus) + s_slack(2276,mill_S,plus)
     
      + s_slack(2276,mill_S,minus) + s_slack(2276,ofib_L,plus) + s_slack(2276,ofib_L,minus) + s_slack(2276,ooil_L,plus) + s_slack(2276,ooil_L,minus) + s_slack(2276,opul_H,plus) + s_slack(2276,opul_H,minus) + s_slack(2276,opul_L,plus)
     
      + s_slack(2276,opul_L,minus) + s_slack(2276,opul_S,plus) + s_slack(2276,opul_S,minus) + s_slack(2276,pige_H,plus) + s_slack(2276,pige_H,minus) + s_slack(2276,pige_L,plus) + s_slack(2276,pige_L,minus) + s_slack(2276,pige_S,plus)
     
      + s_slack(2276,pige_S,minus) + s_slack(2276,pota_H,plus) + s_slack(2276,pota_H,minus) + s_slack(2276,pota_L,plus) + s_slack(2276,pota_L,minus) + s_slack(2276,pota_S,plus) + s_slack(2276,pota_S,minus) + s_slack(2276,rest_H,plus)
     
      + s_slack(2276,rest_H,minus) + s_slack(2276,rest_L,plus) + s_slack(2276,rest_L,minus) + s_slack(2276,rest_S,plus) + s_slack(2276,rest_S,minus) + s_slack(2276,rice_H,plus) + s_slack(2276,rice_H,minus) + s_slack(2276,rice_L,plus)
     
      + s_slack(2276,rice_L,minus) + s_slack(2276,rice_S,plus) + s_slack(2276,rice_S,minus) + s_slack(2276,sorg_L,plus) + s_slack(2276,sorg_L,minus) + s_slack(2276,sorg_S,plus) + s_slack(2276,sorg_S,minus) + s_slack(2276,soyb_L,plus)
     
      + s_slack(2276,soyb_L,minus) + s_slack(2276,soyb_S,plus) + s_slack(2276,soyb_S,minus) + s_slack(2276,sunf_L,plus) + s_slack(2276,sunf_L,minus) + s_slack(2276,temf_H,plus) + s_slack(2276,temf_H,minus) + s_slack(2276,temf_L,plus)
     
      + s_slack(2276,temf_L,minus) + s_slack(2276,temf_S,plus) + s_slack(2276,temf_S,minus) + s_slack(2276,toba_H,plus) + s_slack(2276,toba_H,minus) + s_slack(2276,toba_L,plus) + s_slack(2276,toba_L,minus) + s_slack(2276,trof_L,plus)
     
      + s_slack(2276,trof_L,minus) + s_slack(2276,trof_S,plus) + s_slack(2276,trof_S,minus) + s_slack(2276,vege_H,plus) + s_slack(2276,vege_H,minus) + s_slack(2276,vege_L,plus) + s_slack(2276,vege_L,minus) + s_slack(2276,vege_S,plus)
     
      + s_slack(2276,vege_S,minus) + s_slack(2277,rice_I,plus) + s_slack(2277,rice_I,minus) + s_slack(2277,sugc_I,plus) + s_slack(2277,sugc_I,minus) + s_slack(2277,whea_I,plus) + s_slack(2277,whea_I,minus) + s_slack(2277,bean_H,plus)
     
      + s_slack(2277,bean_H,minus) + s_slack(2277,bean_L,plus) + s_slack(2277,bean_L,minus) + s_slack(2277,bean_S,plus) + s_slack(2277,bean_S,minus) + s_slack(2277,cass_L,plus) + s_slack(2277,cass_L,minus) + s_slack(2277,cass_S,plus)
     
      + s_slack(2277,cass_S,minus) + s_slack(2277,chic_H,plus) + s_slack(2277,chic_H,minus) + s_slack(2277,chic_L,plus) + s_slack(2277,chic_L,minus) + s_slack(2277,chic_S,plus) + s_slack(2277,chic_S,minus) + s_slack(2277,coff_H,plus)
     
      + s_slack(2277,coff_H,minus) + s_slack(2277,coff_L,plus) + s_slack(2277,coff_L,minus) + s_slack(2277,cott_L,plus) + s_slack(2277,cott_L,minus) + s_slack(2277,cowp_H,plus) + s_slack(2277,cowp_H,minus) + s_slack(2277,cowp_L,plus)
     
      + s_slack(2277,cowp_L,minus) + s_slack(2277,cowp_S,plus) + s_slack(2277,cowp_S,minus) + s_slack(2277,grou_H,plus) + s_slack(2277,grou_H,minus) + s_slack(2277,grou_L,plus) + s_slack(2277,grou_L,minus) + s_slack(2277,grou_S,plus)
     
      + s_slack(2277,grou_S,minus) + s_slack(2277,lent_H,plus) + s_slack(2277,lent_H,minus) + s_slack(2277,lent_L,plus) + s_slack(2277,lent_L,minus) + s_slack(2277,lent_S,plus) + s_slack(2277,lent_S,minus) + s_slack(2277,maiz_H,plus)
     
      + s_slack(2277,maiz_H,minus) + s_slack(2277,maiz_L,plus) + s_slack(2277,maiz_L,minus) + s_slack(2277,maiz_S,plus) + s_slack(2277,maiz_S,minus) + s_slack(2277,mill_H,plus) + s_slack(2277,mill_H,minus) + s_slack(2277,mill_L,plus)
     
      + s_slack(2277,mill_L,minus) + s_slack(2277,mill_S,plus) + s_slack(2277,mill_S,minus) + s_slack(2277,ofib_L,plus) + s_slack(2277,ofib_L,minus) + s_slack(2277,ooil_L,plus) + s_slack(2277,ooil_L,minus) + s_slack(2277,opul_H,plus)
     
      + s_slack(2277,opul_H,minus) + s_slack(2277,opul_L,plus) + s_slack(2277,opul_L,minus) + s_slack(2277,opul_S,plus) + s_slack(2277,opul_S,minus) + s_slack(2277,pige_H,plus) + s_slack(2277,pige_H,minus) + s_slack(2277,pige_L,plus)
     
      + s_slack(2277,pige_L,minus) + s_slack(2277,pige_S,plus) + s_slack(2277,pige_S,minus) + s_slack(2277,pota_H,plus) + s_slack(2277,pota_H,minus) + s_slack(2277,pota_L,plus) + s_slack(2277,pota_L,minus) + s_slack(2277,pota_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 240
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2277,pota_S,minus) + s_slack(2277,rest_H,plus) + s_slack(2277,rest_H,minus) + s_slack(2277,rest_L,plus) + s_slack(2277,rest_L,minus) + s_slack(2277,rest_S,plus) + s_slack(2277,rest_S,minus) + s_slack(2277,rice_H,plus)
     
      + s_slack(2277,rice_H,minus) + s_slack(2277,rice_L,plus) + s_slack(2277,rice_L,minus) + s_slack(2277,rice_S,plus) + s_slack(2277,rice_S,minus) + s_slack(2277,sorg_L,plus) + s_slack(2277,sorg_L,minus) + s_slack(2277,sorg_S,plus)
     
      + s_slack(2277,sorg_S,minus) + s_slack(2277,soyb_L,plus) + s_slack(2277,soyb_L,minus) + s_slack(2277,soyb_S,plus) + s_slack(2277,soyb_S,minus) + s_slack(2277,sunf_L,plus) + s_slack(2277,sunf_L,minus) + s_slack(2277,temf_H,plus)
     
      + s_slack(2277,temf_H,minus) + s_slack(2277,temf_L,plus) + s_slack(2277,temf_L,minus) + s_slack(2277,temf_S,plus) + s_slack(2277,temf_S,minus) + s_slack(2277,toba_H,plus) + s_slack(2277,toba_H,minus) + s_slack(2277,toba_L,plus)
     
      + s_slack(2277,toba_L,minus) + s_slack(2277,trof_L,plus) + s_slack(2277,trof_L,minus) + s_slack(2277,trof_S,plus) + s_slack(2277,trof_S,minus) + s_slack(2277,vege_H,plus) + s_slack(2277,vege_H,minus) + s_slack(2277,vege_L,plus)
     
      + s_slack(2277,vege_L,minus) + s_slack(2277,vege_S,plus) + s_slack(2277,vege_S,minus) + s_slack(2278,rice_I,plus) + s_slack(2278,rice_I,minus) + s_slack(2278,sugc_I,plus) + s_slack(2278,sugc_I,minus) + s_slack(2278,whea_I,plus)
     
      + s_slack(2278,whea_I,minus) + s_slack(2278,bean_H,plus) + s_slack(2278,bean_H,minus) + s_slack(2278,bean_L,plus) + s_slack(2278,bean_L,minus) + s_slack(2278,bean_S,plus) + s_slack(2278,bean_S,minus) + s_slack(2278,cass_L,plus)
     
      + s_slack(2278,cass_L,minus) + s_slack(2278,cass_S,plus) + s_slack(2278,cass_S,minus) + s_slack(2278,chic_H,plus) + s_slack(2278,chic_H,minus) + s_slack(2278,chic_L,plus) + s_slack(2278,chic_L,minus) + s_slack(2278,chic_S,plus)
     
      + s_slack(2278,chic_S,minus) + s_slack(2278,coff_H,plus) + s_slack(2278,coff_H,minus) + s_slack(2278,coff_L,plus) + s_slack(2278,coff_L,minus) + s_slack(2278,cott_L,plus) + s_slack(2278,cott_L,minus) + s_slack(2278,cowp_H,plus)
     
      + s_slack(2278,cowp_H,minus) + s_slack(2278,cowp_L,plus) + s_slack(2278,cowp_L,minus) + s_slack(2278,cowp_S,plus) + s_slack(2278,cowp_S,minus) + s_slack(2278,grou_H,plus) + s_slack(2278,grou_H,minus) + s_slack(2278,grou_L,plus)
     
      + s_slack(2278,grou_L,minus) + s_slack(2278,grou_S,plus) + s_slack(2278,grou_S,minus) + s_slack(2278,lent_H,plus) + s_slack(2278,lent_H,minus) + s_slack(2278,lent_L,plus) + s_slack(2278,lent_L,minus) + s_slack(2278,lent_S,plus)
     
      + s_slack(2278,lent_S,minus) + s_slack(2278,maiz_H,plus) + s_slack(2278,maiz_H,minus) + s_slack(2278,maiz_L,plus) + s_slack(2278,maiz_L,minus) + s_slack(2278,maiz_S,plus) + s_slack(2278,maiz_S,minus) + s_slack(2278,mill_H,plus)
     
      + s_slack(2278,mill_H,minus) + s_slack(2278,mill_L,plus) + s_slack(2278,mill_L,minus) + s_slack(2278,mill_S,plus) + s_slack(2278,mill_S,minus) + s_slack(2278,ofib_L,plus) + s_slack(2278,ofib_L,minus) + s_slack(2278,ooil_L,plus)
     
      + s_slack(2278,ooil_L,minus) + s_slack(2278,opul_H,plus) + s_slack(2278,opul_H,minus) + s_slack(2278,opul_L,plus) + s_slack(2278,opul_L,minus) + s_slack(2278,opul_S,plus) + s_slack(2278,opul_S,minus) + s_slack(2278,pige_H,plus)
     
      + s_slack(2278,pige_H,minus) + s_slack(2278,pige_L,plus) + s_slack(2278,pige_L,minus) + s_slack(2278,pige_S,plus) + s_slack(2278,pige_S,minus) + s_slack(2278,pota_H,plus) + s_slack(2278,pota_H,minus) + s_slack(2278,pota_L,plus)
     
      + s_slack(2278,pota_L,minus) + s_slack(2278,pota_S,plus) + s_slack(2278,pota_S,minus) + s_slack(2278,rest_H,plus) + s_slack(2278,rest_H,minus) + s_slack(2278,rest_L,plus) + s_slack(2278,rest_L,minus) + s_slack(2278,rest_S,plus)
     
      + s_slack(2278,rest_S,minus) + s_slack(2278,rice_H,plus) + s_slack(2278,rice_H,minus) + s_slack(2278,rice_L,plus) + s_slack(2278,rice_L,minus) + s_slack(2278,rice_S,plus) + s_slack(2278,rice_S,minus) + s_slack(2278,sorg_L,plus)
     
      + s_slack(2278,sorg_L,minus) + s_slack(2278,sorg_S,plus) + s_slack(2278,sorg_S,minus) + s_slack(2278,soyb_L,plus) + s_slack(2278,soyb_L,minus) + s_slack(2278,soyb_S,plus) + s_slack(2278,soyb_S,minus) + s_slack(2278,sunf_L,plus)
     
      + s_slack(2278,sunf_L,minus) + s_slack(2278,temf_H,plus) + s_slack(2278,temf_H,minus) + s_slack(2278,temf_L,plus) + s_slack(2278,temf_L,minus) + s_slack(2278,temf_S,plus) + s_slack(2278,temf_S,minus) + s_slack(2278,toba_H,plus)
     
      + s_slack(2278,toba_H,minus) + s_slack(2278,toba_L,plus) + s_slack(2278,toba_L,minus) + s_slack(2278,trof_L,plus) + s_slack(2278,trof_L,minus) + s_slack(2278,trof_S,plus) + s_slack(2278,trof_S,minus) + s_slack(2278,vege_H,plus)
     
      + s_slack(2278,vege_H,minus) + s_slack(2278,vege_L,plus) + s_slack(2278,vege_L,minus) + s_slack(2278,vege_S,plus) + s_slack(2278,vege_S,minus) + s_slack(2281,rice_I,plus) + s_slack(2281,rice_I,minus) + s_slack(2281,sugc_I,plus)
     
      + s_slack(2281,sugc_I,minus) + s_slack(2281,whea_I,plus) + s_slack(2281,whea_I,minus) + s_slack(2281,bean_H,plus) + s_slack(2281,bean_H,minus) + s_slack(2281,bean_L,plus) + s_slack(2281,bean_L,minus) + s_slack(2281,bean_S,plus)
     
      + s_slack(2281,bean_S,minus) + s_slack(2281,cass_L,plus) + s_slack(2281,cass_L,minus) + s_slack(2281,cass_S,plus) + s_slack(2281,cass_S,minus) + s_slack(2281,chic_H,plus) + s_slack(2281,chic_H,minus) + s_slack(2281,chic_L,plus)
     
      + s_slack(2281,chic_L,minus) + s_slack(2281,chic_S,plus) + s_slack(2281,chic_S,minus) + s_slack(2281,coff_H,plus) + s_slack(2281,coff_H,minus) + s_slack(2281,coff_L,plus) + s_slack(2281,coff_L,minus) + s_slack(2281,cott_L,plus)
     
      + s_slack(2281,cott_L,minus) + s_slack(2281,cowp_H,plus) + s_slack(2281,cowp_H,minus) + s_slack(2281,cowp_L,plus) + s_slack(2281,cowp_L,minus) + s_slack(2281,cowp_S,plus) + s_slack(2281,cowp_S,minus) + s_slack(2281,grou_H,plus)
     
      + s_slack(2281,grou_H,minus) + s_slack(2281,grou_L,plus) + s_slack(2281,grou_L,minus) + s_slack(2281,grou_S,plus) + s_slack(2281,grou_S,minus) + s_slack(2281,lent_H,plus) + s_slack(2281,lent_H,minus) + s_slack(2281,lent_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 241
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2281,lent_L,minus) + s_slack(2281,lent_S,plus) + s_slack(2281,lent_S,minus) + s_slack(2281,maiz_H,plus) + s_slack(2281,maiz_H,minus) + s_slack(2281,maiz_L,plus) + s_slack(2281,maiz_L,minus) + s_slack(2281,maiz_S,plus)
     
      + s_slack(2281,maiz_S,minus) + s_slack(2281,mill_H,plus) + s_slack(2281,mill_H,minus) + s_slack(2281,mill_L,plus) + s_slack(2281,mill_L,minus) + s_slack(2281,mill_S,plus) + s_slack(2281,mill_S,minus) + s_slack(2281,ofib_L,plus)
     
      + s_slack(2281,ofib_L,minus) + s_slack(2281,ooil_L,plus) + s_slack(2281,ooil_L,minus) + s_slack(2281,opul_H,plus) + s_slack(2281,opul_H,minus) + s_slack(2281,opul_L,plus) + s_slack(2281,opul_L,minus) + s_slack(2281,opul_S,plus)
     
      + s_slack(2281,opul_S,minus) + s_slack(2281,pige_H,plus) + s_slack(2281,pige_H,minus) + s_slack(2281,pige_L,plus) + s_slack(2281,pige_L,minus) + s_slack(2281,pige_S,plus) + s_slack(2281,pige_S,minus) + s_slack(2281,pota_H,plus)
     
      + s_slack(2281,pota_H,minus) + s_slack(2281,pota_L,plus) + s_slack(2281,pota_L,minus) + s_slack(2281,pota_S,plus) + s_slack(2281,pota_S,minus) + s_slack(2281,rest_H,plus) + s_slack(2281,rest_H,minus) + s_slack(2281,rest_L,plus)
     
      + s_slack(2281,rest_L,minus) + s_slack(2281,rest_S,plus) + s_slack(2281,rest_S,minus) + s_slack(2281,rice_H,plus) + s_slack(2281,rice_H,minus) + s_slack(2281,rice_L,plus) + s_slack(2281,rice_L,minus) + s_slack(2281,rice_S,plus)
     
      + s_slack(2281,rice_S,minus) + s_slack(2281,sorg_L,plus) + s_slack(2281,sorg_L,minus) + s_slack(2281,sorg_S,plus) + s_slack(2281,sorg_S,minus) + s_slack(2281,soyb_L,plus) + s_slack(2281,soyb_L,minus) + s_slack(2281,soyb_S,plus)
     
      + s_slack(2281,soyb_S,minus) + s_slack(2281,sunf_L,plus) + s_slack(2281,sunf_L,minus) + s_slack(2281,temf_H,plus) + s_slack(2281,temf_H,minus) + s_slack(2281,temf_L,plus) + s_slack(2281,temf_L,minus) + s_slack(2281,temf_S,plus)
     
      + s_slack(2281,temf_S,minus) + s_slack(2281,toba_H,plus) + s_slack(2281,toba_H,minus) + s_slack(2281,toba_L,plus) + s_slack(2281,toba_L,minus) + s_slack(2281,trof_L,plus) + s_slack(2281,trof_L,minus) + s_slack(2281,trof_S,plus)
     
      + s_slack(2281,trof_S,minus) + s_slack(2281,vege_H,plus) + s_slack(2281,vege_H,minus) + s_slack(2281,vege_L,plus) + s_slack(2281,vege_L,minus) + s_slack(2281,vege_S,plus) + s_slack(2281,vege_S,minus) + s_slack(2282,rice_I,plus)
     
      + s_slack(2282,rice_I,minus) + s_slack(2282,sugc_I,plus) + s_slack(2282,sugc_I,minus) + s_slack(2282,whea_I,plus) + s_slack(2282,whea_I,minus) + s_slack(2282,bean_H,plus) + s_slack(2282,bean_H,minus) + s_slack(2282,bean_L,plus)
     
      + s_slack(2282,bean_L,minus) + s_slack(2282,bean_S,plus) + s_slack(2282,bean_S,minus) + s_slack(2282,cass_L,plus) + s_slack(2282,cass_L,minus) + s_slack(2282,cass_S,plus) + s_slack(2282,cass_S,minus) + s_slack(2282,chic_H,plus)
     
      + s_slack(2282,chic_H,minus) + s_slack(2282,chic_L,plus) + s_slack(2282,chic_L,minus) + s_slack(2282,chic_S,plus) + s_slack(2282,chic_S,minus) + s_slack(2282,coff_H,plus) + s_slack(2282,coff_H,minus) + s_slack(2282,coff_L,plus)
     
      + s_slack(2282,coff_L,minus) + s_slack(2282,cott_L,plus) + s_slack(2282,cott_L,minus) + s_slack(2282,cowp_H,plus) + s_slack(2282,cowp_H,minus) + s_slack(2282,cowp_L,plus) + s_slack(2282,cowp_L,minus) + s_slack(2282,cowp_S,plus)
     
      + s_slack(2282,cowp_S,minus) + s_slack(2282,grou_H,plus) + s_slack(2282,grou_H,minus) + s_slack(2282,grou_L,plus) + s_slack(2282,grou_L,minus) + s_slack(2282,grou_S,plus) + s_slack(2282,grou_S,minus) + s_slack(2282,lent_H,plus)
     
      + s_slack(2282,lent_H,minus) + s_slack(2282,lent_L,plus) + s_slack(2282,lent_L,minus) + s_slack(2282,lent_S,plus) + s_slack(2282,lent_S,minus) + s_slack(2282,maiz_H,plus) + s_slack(2282,maiz_H,minus) + s_slack(2282,maiz_L,plus)
     
      + s_slack(2282,maiz_L,minus) + s_slack(2282,maiz_S,plus) + s_slack(2282,maiz_S,minus) + s_slack(2282,mill_H,plus) + s_slack(2282,mill_H,minus) + s_slack(2282,mill_L,plus) + s_slack(2282,mill_L,minus) + s_slack(2282,mill_S,plus)
     
      + s_slack(2282,mill_S,minus) + s_slack(2282,ofib_L,plus) + s_slack(2282,ofib_L,minus) + s_slack(2282,ooil_L,plus) + s_slack(2282,ooil_L,minus) + s_slack(2282,opul_H,plus) + s_slack(2282,opul_H,minus) + s_slack(2282,opul_L,plus)
     
      + s_slack(2282,opul_L,minus) + s_slack(2282,opul_S,plus) + s_slack(2282,opul_S,minus) + s_slack(2282,pige_H,plus) + s_slack(2282,pige_H,minus) + s_slack(2282,pige_L,plus) + s_slack(2282,pige_L,minus) + s_slack(2282,pige_S,plus)
     
      + s_slack(2282,pige_S,minus) + s_slack(2282,pota_H,plus) + s_slack(2282,pota_H,minus) + s_slack(2282,pota_L,plus) + s_slack(2282,pota_L,minus) + s_slack(2282,pota_S,plus) + s_slack(2282,pota_S,minus) + s_slack(2282,rest_H,plus)
     
      + s_slack(2282,rest_H,minus) + s_slack(2282,rest_L,plus) + s_slack(2282,rest_L,minus) + s_slack(2282,rest_S,plus) + s_slack(2282,rest_S,minus) + s_slack(2282,rice_H,plus) + s_slack(2282,rice_H,minus) + s_slack(2282,rice_L,plus)
     
      + s_slack(2282,rice_L,minus) + s_slack(2282,rice_S,plus) + s_slack(2282,rice_S,minus) + s_slack(2282,sorg_L,plus) + s_slack(2282,sorg_L,minus) + s_slack(2282,sorg_S,plus) + s_slack(2282,sorg_S,minus) + s_slack(2282,soyb_L,plus)
     
      + s_slack(2282,soyb_L,minus) + s_slack(2282,soyb_S,plus) + s_slack(2282,soyb_S,minus) + s_slack(2282,sunf_L,plus) + s_slack(2282,sunf_L,minus) + s_slack(2282,temf_H,plus) + s_slack(2282,temf_H,minus) + s_slack(2282,temf_L,plus)
     
      + s_slack(2282,temf_L,minus) + s_slack(2282,temf_S,plus) + s_slack(2282,temf_S,minus) + s_slack(2282,toba_H,plus) + s_slack(2282,toba_H,minus) + s_slack(2282,toba_L,plus) + s_slack(2282,toba_L,minus) + s_slack(2282,trof_L,plus)
     
      + s_slack(2282,trof_L,minus) + s_slack(2282,trof_S,plus) + s_slack(2282,trof_S,minus) + s_slack(2282,vege_H,plus) + s_slack(2282,vege_H,minus) + s_slack(2282,vege_L,plus) + s_slack(2282,vege_L,minus) + s_slack(2282,vege_S,plus)
     
      + s_slack(2282,vege_S,minus) + s_slack(2283,rice_I,plus) + s_slack(2283,rice_I,minus) + s_slack(2283,sugc_I,plus) + s_slack(2283,sugc_I,minus) + s_slack(2283,whea_I,plus) + s_slack(2283,whea_I,minus) + s_slack(2283,bean_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 242
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2283,bean_H,minus) + s_slack(2283,bean_L,plus) + s_slack(2283,bean_L,minus) + s_slack(2283,bean_S,plus) + s_slack(2283,bean_S,minus) + s_slack(2283,cass_L,plus) + s_slack(2283,cass_L,minus) + s_slack(2283,cass_S,plus)
     
      + s_slack(2283,cass_S,minus) + s_slack(2283,chic_H,plus) + s_slack(2283,chic_H,minus) + s_slack(2283,chic_L,plus) + s_slack(2283,chic_L,minus) + s_slack(2283,chic_S,plus) + s_slack(2283,chic_S,minus) + s_slack(2283,coff_H,plus)
     
      + s_slack(2283,coff_H,minus) + s_slack(2283,coff_L,plus) + s_slack(2283,coff_L,minus) + s_slack(2283,cott_L,plus) + s_slack(2283,cott_L,minus) + s_slack(2283,cowp_H,plus) + s_slack(2283,cowp_H,minus) + s_slack(2283,cowp_L,plus)
     
      + s_slack(2283,cowp_L,minus) + s_slack(2283,cowp_S,plus) + s_slack(2283,cowp_S,minus) + s_slack(2283,grou_H,plus) + s_slack(2283,grou_H,minus) + s_slack(2283,grou_L,plus) + s_slack(2283,grou_L,minus) + s_slack(2283,grou_S,plus)
     
      + s_slack(2283,grou_S,minus) + s_slack(2283,lent_H,plus) + s_slack(2283,lent_H,minus) + s_slack(2283,lent_L,plus) + s_slack(2283,lent_L,minus) + s_slack(2283,lent_S,plus) + s_slack(2283,lent_S,minus) + s_slack(2283,maiz_H,plus)
     
      + s_slack(2283,maiz_H,minus) + s_slack(2283,maiz_L,plus) + s_slack(2283,maiz_L,minus) + s_slack(2283,maiz_S,plus) + s_slack(2283,maiz_S,minus) + s_slack(2283,mill_H,plus) + s_slack(2283,mill_H,minus) + s_slack(2283,mill_L,plus)
     
      + s_slack(2283,mill_L,minus) + s_slack(2283,mill_S,plus) + s_slack(2283,mill_S,minus) + s_slack(2283,ofib_L,plus) + s_slack(2283,ofib_L,minus) + s_slack(2283,ooil_L,plus) + s_slack(2283,ooil_L,minus) + s_slack(2283,opul_H,plus)
     
      + s_slack(2283,opul_H,minus) + s_slack(2283,opul_L,plus) + s_slack(2283,opul_L,minus) + s_slack(2283,opul_S,plus) + s_slack(2283,opul_S,minus) + s_slack(2283,pige_H,plus) + s_slack(2283,pige_H,minus) + s_slack(2283,pige_L,plus)
     
      + s_slack(2283,pige_L,minus) + s_slack(2283,pige_S,plus) + s_slack(2283,pige_S,minus) + s_slack(2283,pota_H,plus) + s_slack(2283,pota_H,minus) + s_slack(2283,pota_L,plus) + s_slack(2283,pota_L,minus) + s_slack(2283,pota_S,plus)
     
      + s_slack(2283,pota_S,minus) + s_slack(2283,rest_H,plus) + s_slack(2283,rest_H,minus) + s_slack(2283,rest_L,plus) + s_slack(2283,rest_L,minus) + s_slack(2283,rest_S,plus) + s_slack(2283,rest_S,minus) + s_slack(2283,rice_H,plus)
     
      + s_slack(2283,rice_H,minus) + s_slack(2283,rice_L,plus) + s_slack(2283,rice_L,minus) + s_slack(2283,rice_S,plus) + s_slack(2283,rice_S,minus) + s_slack(2283,sorg_L,plus) + s_slack(2283,sorg_L,minus) + s_slack(2283,sorg_S,plus)
     
      + s_slack(2283,sorg_S,minus) + s_slack(2283,soyb_L,plus) + s_slack(2283,soyb_L,minus) + s_slack(2283,soyb_S,plus) + s_slack(2283,soyb_S,minus) + s_slack(2283,sunf_L,plus) + s_slack(2283,sunf_L,minus) + s_slack(2283,temf_H,plus)
     
      + s_slack(2283,temf_H,minus) + s_slack(2283,temf_L,plus) + s_slack(2283,temf_L,minus) + s_slack(2283,temf_S,plus) + s_slack(2283,temf_S,minus) + s_slack(2283,toba_H,plus) + s_slack(2283,toba_H,minus) + s_slack(2283,toba_L,plus)
     
      + s_slack(2283,toba_L,minus) + s_slack(2283,trof_L,plus) + s_slack(2283,trof_L,minus) + s_slack(2283,trof_S,plus) + s_slack(2283,trof_S,minus) + s_slack(2283,vege_H,plus) + s_slack(2283,vege_H,minus) + s_slack(2283,vege_L,plus)
     
      + s_slack(2283,vege_L,minus) + s_slack(2283,vege_S,plus) + s_slack(2283,vege_S,minus) + s_slack(2284,rice_I,plus) + s_slack(2284,rice_I,minus) + s_slack(2284,sugc_I,plus) + s_slack(2284,sugc_I,minus) + s_slack(2284,whea_I,plus)
     
      + s_slack(2284,whea_I,minus) + s_slack(2284,bean_H,plus) + s_slack(2284,bean_H,minus) + s_slack(2284,bean_L,plus) + s_slack(2284,bean_L,minus) + s_slack(2284,bean_S,plus) + s_slack(2284,bean_S,minus) + s_slack(2284,cass_L,plus)
     
      + s_slack(2284,cass_L,minus) + s_slack(2284,cass_S,plus) + s_slack(2284,cass_S,minus) + s_slack(2284,chic_H,plus) + s_slack(2284,chic_H,minus) + s_slack(2284,chic_L,plus) + s_slack(2284,chic_L,minus) + s_slack(2284,chic_S,plus)
     
      + s_slack(2284,chic_S,minus) + s_slack(2284,coff_H,plus) + s_slack(2284,coff_H,minus) + s_slack(2284,coff_L,plus) + s_slack(2284,coff_L,minus) + s_slack(2284,cott_L,plus) + s_slack(2284,cott_L,minus) + s_slack(2284,cowp_H,plus)
     
      + s_slack(2284,cowp_H,minus) + s_slack(2284,cowp_L,plus) + s_slack(2284,cowp_L,minus) + s_slack(2284,cowp_S,plus) + s_slack(2284,cowp_S,minus) + s_slack(2284,grou_H,plus) + s_slack(2284,grou_H,minus) + s_slack(2284,grou_L,plus)
     
      + s_slack(2284,grou_L,minus) + s_slack(2284,grou_S,plus) + s_slack(2284,grou_S,minus) + s_slack(2284,lent_H,plus) + s_slack(2284,lent_H,minus) + s_slack(2284,lent_L,plus) + s_slack(2284,lent_L,minus) + s_slack(2284,lent_S,plus)
     
      + s_slack(2284,lent_S,minus) + s_slack(2284,maiz_H,plus) + s_slack(2284,maiz_H,minus) + s_slack(2284,maiz_L,plus) + s_slack(2284,maiz_L,minus) + s_slack(2284,maiz_S,plus) + s_slack(2284,maiz_S,minus) + s_slack(2284,mill_H,plus)
     
      + s_slack(2284,mill_H,minus) + s_slack(2284,mill_L,plus) + s_slack(2284,mill_L,minus) + s_slack(2284,mill_S,plus) + s_slack(2284,mill_S,minus) + s_slack(2284,ofib_L,plus) + s_slack(2284,ofib_L,minus) + s_slack(2284,ooil_L,plus)
     
      + s_slack(2284,ooil_L,minus) + s_slack(2284,opul_H,plus) + s_slack(2284,opul_H,minus) + s_slack(2284,opul_L,plus) + s_slack(2284,opul_L,minus) + s_slack(2284,opul_S,plus) + s_slack(2284,opul_S,minus) + s_slack(2284,pige_H,plus)
     
      + s_slack(2284,pige_H,minus) + s_slack(2284,pige_L,plus) + s_slack(2284,pige_L,minus) + s_slack(2284,pige_S,plus) + s_slack(2284,pige_S,minus) + s_slack(2284,pota_H,plus) + s_slack(2284,pota_H,minus) + s_slack(2284,pota_L,plus)
     
      + s_slack(2284,pota_L,minus) + s_slack(2284,pota_S,plus) + s_slack(2284,pota_S,minus) + s_slack(2284,rest_H,plus) + s_slack(2284,rest_H,minus) + s_slack(2284,rest_L,plus) + s_slack(2284,rest_L,minus) + s_slack(2284,rest_S,plus)
     
      + s_slack(2284,rest_S,minus) + s_slack(2284,rice_H,plus) + s_slack(2284,rice_H,minus) + s_slack(2284,rice_L,plus) + s_slack(2284,rice_L,minus) + s_slack(2284,rice_S,plus) + s_slack(2284,rice_S,minus) + s_slack(2284,sorg_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 243
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2284,sorg_L,minus) + s_slack(2284,sorg_S,plus) + s_slack(2284,sorg_S,minus) + s_slack(2284,soyb_L,plus) + s_slack(2284,soyb_L,minus) + s_slack(2284,soyb_S,plus) + s_slack(2284,soyb_S,minus) + s_slack(2284,sunf_L,plus)
     
      + s_slack(2284,sunf_L,minus) + s_slack(2284,temf_H,plus) + s_slack(2284,temf_H,minus) + s_slack(2284,temf_L,plus) + s_slack(2284,temf_L,minus) + s_slack(2284,temf_S,plus) + s_slack(2284,temf_S,minus) + s_slack(2284,toba_H,plus)
     
      + s_slack(2284,toba_H,minus) + s_slack(2284,toba_L,plus) + s_slack(2284,toba_L,minus) + s_slack(2284,trof_L,plus) + s_slack(2284,trof_L,minus) + s_slack(2284,trof_S,plus) + s_slack(2284,trof_S,minus) + s_slack(2284,vege_H,plus)
     
      + s_slack(2284,vege_H,minus) + s_slack(2284,vege_L,plus) + s_slack(2284,vege_L,minus) + s_slack(2284,vege_S,plus) + s_slack(2284,vege_S,minus) + s_slack(2313,rice_I,plus) + s_slack(2313,rice_I,minus) + s_slack(2313,sugc_I,plus)
     
      + s_slack(2313,sugc_I,minus) + s_slack(2313,whea_I,plus) + s_slack(2313,whea_I,minus) + s_slack(2313,bean_H,plus) + s_slack(2313,bean_H,minus) + s_slack(2313,bean_L,plus) + s_slack(2313,bean_L,minus) + s_slack(2313,bean_S,plus)
     
      + s_slack(2313,bean_S,minus) + s_slack(2313,cass_L,plus) + s_slack(2313,cass_L,minus) + s_slack(2313,cass_S,plus) + s_slack(2313,cass_S,minus) + s_slack(2313,chic_H,plus) + s_slack(2313,chic_H,minus) + s_slack(2313,chic_L,plus)
     
      + s_slack(2313,chic_L,minus) + s_slack(2313,chic_S,plus) + s_slack(2313,chic_S,minus) + s_slack(2313,coff_H,plus) + s_slack(2313,coff_H,minus) + s_slack(2313,coff_L,plus) + s_slack(2313,coff_L,minus) + s_slack(2313,cott_L,plus)
     
      + s_slack(2313,cott_L,minus) + s_slack(2313,cowp_H,plus) + s_slack(2313,cowp_H,minus) + s_slack(2313,cowp_L,plus) + s_slack(2313,cowp_L,minus) + s_slack(2313,cowp_S,plus) + s_slack(2313,cowp_S,minus) + s_slack(2313,grou_H,plus)
     
      + s_slack(2313,grou_H,minus) + s_slack(2313,grou_L,plus) + s_slack(2313,grou_L,minus) + s_slack(2313,grou_S,plus) + s_slack(2313,grou_S,minus) + s_slack(2313,lent_H,plus) + s_slack(2313,lent_H,minus) + s_slack(2313,lent_L,plus)
     
      + s_slack(2313,lent_L,minus) + s_slack(2313,lent_S,plus) + s_slack(2313,lent_S,minus) + s_slack(2313,maiz_H,plus) + s_slack(2313,maiz_H,minus) + s_slack(2313,maiz_L,plus) + s_slack(2313,maiz_L,minus) + s_slack(2313,maiz_S,plus)
     
      + s_slack(2313,maiz_S,minus) + s_slack(2313,mill_H,plus) + s_slack(2313,mill_H,minus) + s_slack(2313,mill_L,plus) + s_slack(2313,mill_L,minus) + s_slack(2313,mill_S,plus) + s_slack(2313,mill_S,minus) + s_slack(2313,ofib_L,plus)
     
      + s_slack(2313,ofib_L,minus) + s_slack(2313,ooil_L,plus) + s_slack(2313,ooil_L,minus) + s_slack(2313,opul_H,plus) + s_slack(2313,opul_H,minus) + s_slack(2313,opul_L,plus) + s_slack(2313,opul_L,minus) + s_slack(2313,opul_S,plus)
     
      + s_slack(2313,opul_S,minus) + s_slack(2313,pige_H,plus) + s_slack(2313,pige_H,minus) + s_slack(2313,pige_L,plus) + s_slack(2313,pige_L,minus) + s_slack(2313,pige_S,plus) + s_slack(2313,pige_S,minus) + s_slack(2313,pota_H,plus)
     
      + s_slack(2313,pota_H,minus) + s_slack(2313,pota_L,plus) + s_slack(2313,pota_L,minus) + s_slack(2313,pota_S,plus) + s_slack(2313,pota_S,minus) + s_slack(2313,rest_H,plus) + s_slack(2313,rest_H,minus) + s_slack(2313,rest_L,plus)
     
      + s_slack(2313,rest_L,minus) + s_slack(2313,rest_S,plus) + s_slack(2313,rest_S,minus) + s_slack(2313,rice_H,plus) + s_slack(2313,rice_H,minus) + s_slack(2313,rice_L,plus) + s_slack(2313,rice_L,minus) + s_slack(2313,rice_S,plus)
     
      + s_slack(2313,rice_S,minus) + s_slack(2313,sorg_L,plus) + s_slack(2313,sorg_L,minus) + s_slack(2313,sorg_S,plus) + s_slack(2313,sorg_S,minus) + s_slack(2313,soyb_L,plus) + s_slack(2313,soyb_L,minus) + s_slack(2313,soyb_S,plus)
     
      + s_slack(2313,soyb_S,minus) + s_slack(2313,sunf_L,plus) + s_slack(2313,sunf_L,minus) + s_slack(2313,temf_H,plus) + s_slack(2313,temf_H,minus) + s_slack(2313,temf_L,plus) + s_slack(2313,temf_L,minus) + s_slack(2313,temf_S,plus)
     
      + s_slack(2313,temf_S,minus) + s_slack(2313,toba_H,plus) + s_slack(2313,toba_H,minus) + s_slack(2313,toba_L,plus) + s_slack(2313,toba_L,minus) + s_slack(2313,trof_L,plus) + s_slack(2313,trof_L,minus) + s_slack(2313,trof_S,plus)
     
      + s_slack(2313,trof_S,minus) + s_slack(2313,vege_H,plus) + s_slack(2313,vege_H,minus) + s_slack(2313,vege_L,plus) + s_slack(2313,vege_L,minus) + s_slack(2313,vege_S,plus) + s_slack(2313,vege_S,minus) + s_slack(2314,rice_I,plus)
     
      + s_slack(2314,rice_I,minus) + s_slack(2314,sugc_I,plus) + s_slack(2314,sugc_I,minus) + s_slack(2314,whea_I,plus) + s_slack(2314,whea_I,minus) + s_slack(2314,bean_H,plus) + s_slack(2314,bean_H,minus) + s_slack(2314,bean_L,plus)
     
      + s_slack(2314,bean_L,minus) + s_slack(2314,bean_S,plus) + s_slack(2314,bean_S,minus) + s_slack(2314,cass_L,plus) + s_slack(2314,cass_L,minus) + s_slack(2314,cass_S,plus) + s_slack(2314,cass_S,minus) + s_slack(2314,chic_H,plus)
     
      + s_slack(2314,chic_H,minus) + s_slack(2314,chic_L,plus) + s_slack(2314,chic_L,minus) + s_slack(2314,chic_S,plus) + s_slack(2314,chic_S,minus) + s_slack(2314,coff_H,plus) + s_slack(2314,coff_H,minus) + s_slack(2314,coff_L,plus)
     
      + s_slack(2314,coff_L,minus) + s_slack(2314,cott_L,plus) + s_slack(2314,cott_L,minus) + s_slack(2314,cowp_H,plus) + s_slack(2314,cowp_H,minus) + s_slack(2314,cowp_L,plus) + s_slack(2314,cowp_L,minus) + s_slack(2314,cowp_S,plus)
     
      + s_slack(2314,cowp_S,minus) + s_slack(2314,grou_H,plus) + s_slack(2314,grou_H,minus) + s_slack(2314,grou_L,plus) + s_slack(2314,grou_L,minus) + s_slack(2314,grou_S,plus) + s_slack(2314,grou_S,minus) + s_slack(2314,lent_H,plus)
     
      + s_slack(2314,lent_H,minus) + s_slack(2314,lent_L,plus) + s_slack(2314,lent_L,minus) + s_slack(2314,lent_S,plus) + s_slack(2314,lent_S,minus) + s_slack(2314,maiz_H,plus) + s_slack(2314,maiz_H,minus) + s_slack(2314,maiz_L,plus)
     
      + s_slack(2314,maiz_L,minus) + s_slack(2314,maiz_S,plus) + s_slack(2314,maiz_S,minus) + s_slack(2314,mill_H,plus) + s_slack(2314,mill_H,minus) + s_slack(2314,mill_L,plus) + s_slack(2314,mill_L,minus) + s_slack(2314,mill_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 244
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2314,mill_S,minus) + s_slack(2314,ofib_L,plus) + s_slack(2314,ofib_L,minus) + s_slack(2314,ooil_L,plus) + s_slack(2314,ooil_L,minus) + s_slack(2314,opul_H,plus) + s_slack(2314,opul_H,minus) + s_slack(2314,opul_L,plus)
     
      + s_slack(2314,opul_L,minus) + s_slack(2314,opul_S,plus) + s_slack(2314,opul_S,minus) + s_slack(2314,pige_H,plus) + s_slack(2314,pige_H,minus) + s_slack(2314,pige_L,plus) + s_slack(2314,pige_L,minus) + s_slack(2314,pige_S,plus)
     
      + s_slack(2314,pige_S,minus) + s_slack(2314,pota_H,plus) + s_slack(2314,pota_H,minus) + s_slack(2314,pota_L,plus) + s_slack(2314,pota_L,minus) + s_slack(2314,pota_S,plus) + s_slack(2314,pota_S,minus) + s_slack(2314,rest_H,plus)
     
      + s_slack(2314,rest_H,minus) + s_slack(2314,rest_L,plus) + s_slack(2314,rest_L,minus) + s_slack(2314,rest_S,plus) + s_slack(2314,rest_S,minus) + s_slack(2314,rice_H,plus) + s_slack(2314,rice_H,minus) + s_slack(2314,rice_L,plus)
     
      + s_slack(2314,rice_L,minus) + s_slack(2314,rice_S,plus) + s_slack(2314,rice_S,minus) + s_slack(2314,sorg_L,plus) + s_slack(2314,sorg_L,minus) + s_slack(2314,sorg_S,plus) + s_slack(2314,sorg_S,minus) + s_slack(2314,soyb_L,plus)
     
      + s_slack(2314,soyb_L,minus) + s_slack(2314,soyb_S,plus) + s_slack(2314,soyb_S,minus) + s_slack(2314,sunf_L,plus) + s_slack(2314,sunf_L,minus) + s_slack(2314,temf_H,plus) + s_slack(2314,temf_H,minus) + s_slack(2314,temf_L,plus)
     
      + s_slack(2314,temf_L,minus) + s_slack(2314,temf_S,plus) + s_slack(2314,temf_S,minus) + s_slack(2314,toba_H,plus) + s_slack(2314,toba_H,minus) + s_slack(2314,toba_L,plus) + s_slack(2314,toba_L,minus) + s_slack(2314,trof_L,plus)
     
      + s_slack(2314,trof_L,minus) + s_slack(2314,trof_S,plus) + s_slack(2314,trof_S,minus) + s_slack(2314,vege_H,plus) + s_slack(2314,vege_H,minus) + s_slack(2314,vege_L,plus) + s_slack(2314,vege_L,minus) + s_slack(2314,vege_S,plus)
     
      + s_slack(2314,vege_S,minus) + s_slack(2315,rice_I,plus) + s_slack(2315,rice_I,minus) + s_slack(2315,sugc_I,plus) + s_slack(2315,sugc_I,minus) + s_slack(2315,whea_I,plus) + s_slack(2315,whea_I,minus) + s_slack(2315,bean_H,plus)
     
      + s_slack(2315,bean_H,minus) + s_slack(2315,bean_L,plus) + s_slack(2315,bean_L,minus) + s_slack(2315,bean_S,plus) + s_slack(2315,bean_S,minus) + s_slack(2315,cass_L,plus) + s_slack(2315,cass_L,minus) + s_slack(2315,cass_S,plus)
     
      + s_slack(2315,cass_S,minus) + s_slack(2315,chic_H,plus) + s_slack(2315,chic_H,minus) + s_slack(2315,chic_L,plus) + s_slack(2315,chic_L,minus) + s_slack(2315,chic_S,plus) + s_slack(2315,chic_S,minus) + s_slack(2315,coff_H,plus)
     
      + s_slack(2315,coff_H,minus) + s_slack(2315,coff_L,plus) + s_slack(2315,coff_L,minus) + s_slack(2315,cott_L,plus) + s_slack(2315,cott_L,minus) + s_slack(2315,cowp_H,plus) + s_slack(2315,cowp_H,minus) + s_slack(2315,cowp_L,plus)
     
      + s_slack(2315,cowp_L,minus) + s_slack(2315,cowp_S,plus) + s_slack(2315,cowp_S,minus) + s_slack(2315,grou_H,plus) + s_slack(2315,grou_H,minus) + s_slack(2315,grou_L,plus) + s_slack(2315,grou_L,minus) + s_slack(2315,grou_S,plus)
     
      + s_slack(2315,grou_S,minus) + s_slack(2315,lent_H,plus) + s_slack(2315,lent_H,minus) + s_slack(2315,lent_L,plus) + s_slack(2315,lent_L,minus) + s_slack(2315,lent_S,plus) + s_slack(2315,lent_S,minus) + s_slack(2315,maiz_H,plus)
     
      + s_slack(2315,maiz_H,minus) + s_slack(2315,maiz_L,plus) + s_slack(2315,maiz_L,minus) + s_slack(2315,maiz_S,plus) + s_slack(2315,maiz_S,minus) + s_slack(2315,mill_H,plus) + s_slack(2315,mill_H,minus) + s_slack(2315,mill_L,plus)
     
      + s_slack(2315,mill_L,minus) + s_slack(2315,mill_S,plus) + s_slack(2315,mill_S,minus) + s_slack(2315,ofib_L,plus) + s_slack(2315,ofib_L,minus) + s_slack(2315,ooil_L,plus) + s_slack(2315,ooil_L,minus) + s_slack(2315,opul_H,plus)
     
      + s_slack(2315,opul_H,minus) + s_slack(2315,opul_L,plus) + s_slack(2315,opul_L,minus) + s_slack(2315,opul_S,plus) + s_slack(2315,opul_S,minus) + s_slack(2315,pige_H,plus) + s_slack(2315,pige_H,minus) + s_slack(2315,pige_L,plus)
     
      + s_slack(2315,pige_L,minus) + s_slack(2315,pige_S,plus) + s_slack(2315,pige_S,minus) + s_slack(2315,pota_H,plus) + s_slack(2315,pota_H,minus) + s_slack(2315,pota_L,plus) + s_slack(2315,pota_L,minus) + s_slack(2315,pota_S,plus)
     
      + s_slack(2315,pota_S,minus) + s_slack(2315,rest_H,plus) + s_slack(2315,rest_H,minus) + s_slack(2315,rest_L,plus) + s_slack(2315,rest_L,minus) + s_slack(2315,rest_S,plus) + s_slack(2315,rest_S,minus) + s_slack(2315,rice_H,plus)
     
      + s_slack(2315,rice_H,minus) + s_slack(2315,rice_L,plus) + s_slack(2315,rice_L,minus) + s_slack(2315,rice_S,plus) + s_slack(2315,rice_S,minus) + s_slack(2315,sorg_L,plus) + s_slack(2315,sorg_L,minus) + s_slack(2315,sorg_S,plus)
     
      + s_slack(2315,sorg_S,minus) + s_slack(2315,soyb_L,plus) + s_slack(2315,soyb_L,minus) + s_slack(2315,soyb_S,plus) + s_slack(2315,soyb_S,minus) + s_slack(2315,sunf_L,plus) + s_slack(2315,sunf_L,minus) + s_slack(2315,temf_H,plus)
     
      + s_slack(2315,temf_H,minus) + s_slack(2315,temf_L,plus) + s_slack(2315,temf_L,minus) + s_slack(2315,temf_S,plus) + s_slack(2315,temf_S,minus) + s_slack(2315,toba_H,plus) + s_slack(2315,toba_H,minus) + s_slack(2315,toba_L,plus)
     
      + s_slack(2315,toba_L,minus) + s_slack(2315,trof_L,plus) + s_slack(2315,trof_L,minus) + s_slack(2315,trof_S,plus) + s_slack(2315,trof_S,minus) + s_slack(2315,vege_H,plus) + s_slack(2315,vege_H,minus) + s_slack(2315,vege_L,plus)
     
      + s_slack(2315,vege_L,minus) + s_slack(2315,vege_S,plus) + s_slack(2315,vege_S,minus) + s_slack(2316,rice_I,plus) + s_slack(2316,rice_I,minus) + s_slack(2316,sugc_I,plus) + s_slack(2316,sugc_I,minus) + s_slack(2316,whea_I,plus)
     
      + s_slack(2316,whea_I,minus) + s_slack(2316,bean_H,plus) + s_slack(2316,bean_H,minus) + s_slack(2316,bean_L,plus) + s_slack(2316,bean_L,minus) + s_slack(2316,bean_S,plus) + s_slack(2316,bean_S,minus) + s_slack(2316,cass_L,plus)
     
      + s_slack(2316,cass_L,minus) + s_slack(2316,cass_S,plus) + s_slack(2316,cass_S,minus) + s_slack(2316,chic_H,plus) + s_slack(2316,chic_H,minus) + s_slack(2316,chic_L,plus) + s_slack(2316,chic_L,minus) + s_slack(2316,chic_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 245
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2316,chic_S,minus) + s_slack(2316,coff_H,plus) + s_slack(2316,coff_H,minus) + s_slack(2316,coff_L,plus) + s_slack(2316,coff_L,minus) + s_slack(2316,cott_L,plus) + s_slack(2316,cott_L,minus) + s_slack(2316,cowp_H,plus)
     
      + s_slack(2316,cowp_H,minus) + s_slack(2316,cowp_L,plus) + s_slack(2316,cowp_L,minus) + s_slack(2316,cowp_S,plus) + s_slack(2316,cowp_S,minus) + s_slack(2316,grou_H,plus) + s_slack(2316,grou_H,minus) + s_slack(2316,grou_L,plus)
     
      + s_slack(2316,grou_L,minus) + s_slack(2316,grou_S,plus) + s_slack(2316,grou_S,minus) + s_slack(2316,lent_H,plus) + s_slack(2316,lent_H,minus) + s_slack(2316,lent_L,plus) + s_slack(2316,lent_L,minus) + s_slack(2316,lent_S,plus)
     
      + s_slack(2316,lent_S,minus) + s_slack(2316,maiz_H,plus) + s_slack(2316,maiz_H,minus) + s_slack(2316,maiz_L,plus) + s_slack(2316,maiz_L,minus) + s_slack(2316,maiz_S,plus) + s_slack(2316,maiz_S,minus) + s_slack(2316,mill_H,plus)
     
      + s_slack(2316,mill_H,minus) + s_slack(2316,mill_L,plus) + s_slack(2316,mill_L,minus) + s_slack(2316,mill_S,plus) + s_slack(2316,mill_S,minus) + s_slack(2316,ofib_L,plus) + s_slack(2316,ofib_L,minus) + s_slack(2316,ooil_L,plus)
     
      + s_slack(2316,ooil_L,minus) + s_slack(2316,opul_H,plus) + s_slack(2316,opul_H,minus) + s_slack(2316,opul_L,plus) + s_slack(2316,opul_L,minus) + s_slack(2316,opul_S,plus) + s_slack(2316,opul_S,minus) + s_slack(2316,pige_H,plus)
     
      + s_slack(2316,pige_H,minus) + s_slack(2316,pige_L,plus) + s_slack(2316,pige_L,minus) + s_slack(2316,pige_S,plus) + s_slack(2316,pige_S,minus) + s_slack(2316,pota_H,plus) + s_slack(2316,pota_H,minus) + s_slack(2316,pota_L,plus)
     
      + s_slack(2316,pota_L,minus) + s_slack(2316,pota_S,plus) + s_slack(2316,pota_S,minus) + s_slack(2316,rest_H,plus) + s_slack(2316,rest_H,minus) + s_slack(2316,rest_L,plus) + s_slack(2316,rest_L,minus) + s_slack(2316,rest_S,plus)
     
      + s_slack(2316,rest_S,minus) + s_slack(2316,rice_H,plus) + s_slack(2316,rice_H,minus) + s_slack(2316,rice_L,plus) + s_slack(2316,rice_L,minus) + s_slack(2316,rice_S,plus) + s_slack(2316,rice_S,minus) + s_slack(2316,sorg_L,plus)
     
      + s_slack(2316,sorg_L,minus) + s_slack(2316,sorg_S,plus) + s_slack(2316,sorg_S,minus) + s_slack(2316,soyb_L,plus) + s_slack(2316,soyb_L,minus) + s_slack(2316,soyb_S,plus) + s_slack(2316,soyb_S,minus) + s_slack(2316,sunf_L,plus)
     
      + s_slack(2316,sunf_L,minus) + s_slack(2316,temf_H,plus) + s_slack(2316,temf_H,minus) + s_slack(2316,temf_L,plus) + s_slack(2316,temf_L,minus) + s_slack(2316,temf_S,plus) + s_slack(2316,temf_S,minus) + s_slack(2316,toba_H,plus)
     
      + s_slack(2316,toba_H,minus) + s_slack(2316,toba_L,plus) + s_slack(2316,toba_L,minus) + s_slack(2316,trof_L,plus) + s_slack(2316,trof_L,minus) + s_slack(2316,trof_S,plus) + s_slack(2316,trof_S,minus) + s_slack(2316,vege_H,plus)
     
      + s_slack(2316,vege_H,minus) + s_slack(2316,vege_L,plus) + s_slack(2316,vege_L,minus) + s_slack(2316,vege_S,plus) + s_slack(2316,vege_S,minus) + s_slack(2317,rice_I,plus) + s_slack(2317,rice_I,minus) + s_slack(2317,sugc_I,plus)
     
      + s_slack(2317,sugc_I,minus) + s_slack(2317,whea_I,plus) + s_slack(2317,whea_I,minus) + s_slack(2317,bean_H,plus) + s_slack(2317,bean_H,minus) + s_slack(2317,bean_L,plus) + s_slack(2317,bean_L,minus) + s_slack(2317,bean_S,plus)
     
      + s_slack(2317,bean_S,minus) + s_slack(2317,cass_L,plus) + s_slack(2317,cass_L,minus) + s_slack(2317,cass_S,plus) + s_slack(2317,cass_S,minus) + s_slack(2317,chic_H,plus) + s_slack(2317,chic_H,minus) + s_slack(2317,chic_L,plus)
     
      + s_slack(2317,chic_L,minus) + s_slack(2317,chic_S,plus) + s_slack(2317,chic_S,minus) + s_slack(2317,coff_H,plus) + s_slack(2317,coff_H,minus) + s_slack(2317,coff_L,plus) + s_slack(2317,coff_L,minus) + s_slack(2317,cott_L,plus)
     
      + s_slack(2317,cott_L,minus) + s_slack(2317,cowp_H,plus) + s_slack(2317,cowp_H,minus) + s_slack(2317,cowp_L,plus) + s_slack(2317,cowp_L,minus) + s_slack(2317,cowp_S,plus) + s_slack(2317,cowp_S,minus) + s_slack(2317,grou_H,plus)
     
      + s_slack(2317,grou_H,minus) + s_slack(2317,grou_L,plus) + s_slack(2317,grou_L,minus) + s_slack(2317,grou_S,plus) + s_slack(2317,grou_S,minus) + s_slack(2317,lent_H,plus) + s_slack(2317,lent_H,minus) + s_slack(2317,lent_L,plus)
     
      + s_slack(2317,lent_L,minus) + s_slack(2317,lent_S,plus) + s_slack(2317,lent_S,minus) + s_slack(2317,maiz_H,plus) + s_slack(2317,maiz_H,minus) + s_slack(2317,maiz_L,plus) + s_slack(2317,maiz_L,minus) + s_slack(2317,maiz_S,plus)
     
      + s_slack(2317,maiz_S,minus) + s_slack(2317,mill_H,plus) + s_slack(2317,mill_H,minus) + s_slack(2317,mill_L,plus) + s_slack(2317,mill_L,minus) + s_slack(2317,mill_S,plus) + s_slack(2317,mill_S,minus) + s_slack(2317,ofib_L,plus)
     
      + s_slack(2317,ofib_L,minus) + s_slack(2317,ooil_L,plus) + s_slack(2317,ooil_L,minus) + s_slack(2317,opul_H,plus) + s_slack(2317,opul_H,minus) + s_slack(2317,opul_L,plus) + s_slack(2317,opul_L,minus) + s_slack(2317,opul_S,plus)
     
      + s_slack(2317,opul_S,minus) + s_slack(2317,pige_H,plus) + s_slack(2317,pige_H,minus) + s_slack(2317,pige_L,plus) + s_slack(2317,pige_L,minus) + s_slack(2317,pige_S,plus) + s_slack(2317,pige_S,minus) + s_slack(2317,pota_H,plus)
     
      + s_slack(2317,pota_H,minus) + s_slack(2317,pota_L,plus) + s_slack(2317,pota_L,minus) + s_slack(2317,pota_S,plus) + s_slack(2317,pota_S,minus) + s_slack(2317,rest_H,plus) + s_slack(2317,rest_H,minus) + s_slack(2317,rest_L,plus)
     
      + s_slack(2317,rest_L,minus) + s_slack(2317,rest_S,plus) + s_slack(2317,rest_S,minus) + s_slack(2317,rice_H,plus) + s_slack(2317,rice_H,minus) + s_slack(2317,rice_L,plus) + s_slack(2317,rice_L,minus) + s_slack(2317,rice_S,plus)
     
      + s_slack(2317,rice_S,minus) + s_slack(2317,sorg_L,plus) + s_slack(2317,sorg_L,minus) + s_slack(2317,sorg_S,plus) + s_slack(2317,sorg_S,minus) + s_slack(2317,soyb_L,plus) + s_slack(2317,soyb_L,minus) + s_slack(2317,soyb_S,plus)
     
      + s_slack(2317,soyb_S,minus) + s_slack(2317,sunf_L,plus) + s_slack(2317,sunf_L,minus) + s_slack(2317,temf_H,plus) + s_slack(2317,temf_H,minus) + s_slack(2317,temf_L,plus) + s_slack(2317,temf_L,minus) + s_slack(2317,temf_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 246
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2317,temf_S,minus) + s_slack(2317,toba_H,plus) + s_slack(2317,toba_H,minus) + s_slack(2317,toba_L,plus) + s_slack(2317,toba_L,minus) + s_slack(2317,trof_L,plus) + s_slack(2317,trof_L,minus) + s_slack(2317,trof_S,plus)
     
      + s_slack(2317,trof_S,minus) + s_slack(2317,vege_H,plus) + s_slack(2317,vege_H,minus) + s_slack(2317,vege_L,plus) + s_slack(2317,vege_L,minus) + s_slack(2317,vege_S,plus) + s_slack(2317,vege_S,minus) + s_slack(2318,rice_I,plus)
     
      + s_slack(2318,rice_I,minus) + s_slack(2318,sugc_I,plus) + s_slack(2318,sugc_I,minus) + s_slack(2318,whea_I,plus) + s_slack(2318,whea_I,minus) + s_slack(2318,bean_H,plus) + s_slack(2318,bean_H,minus) + s_slack(2318,bean_L,plus)
     
      + s_slack(2318,bean_L,minus) + s_slack(2318,bean_S,plus) + s_slack(2318,bean_S,minus) + s_slack(2318,cass_L,plus) + s_slack(2318,cass_L,minus) + s_slack(2318,cass_S,plus) + s_slack(2318,cass_S,minus) + s_slack(2318,chic_H,plus)
     
      + s_slack(2318,chic_H,minus) + s_slack(2318,chic_L,plus) + s_slack(2318,chic_L,minus) + s_slack(2318,chic_S,plus) + s_slack(2318,chic_S,minus) + s_slack(2318,coff_H,plus) + s_slack(2318,coff_H,minus) + s_slack(2318,coff_L,plus)
     
      + s_slack(2318,coff_L,minus) + s_slack(2318,cott_L,plus) + s_slack(2318,cott_L,minus) + s_slack(2318,cowp_H,plus) + s_slack(2318,cowp_H,minus) + s_slack(2318,cowp_L,plus) + s_slack(2318,cowp_L,minus) + s_slack(2318,cowp_S,plus)
     
      + s_slack(2318,cowp_S,minus) + s_slack(2318,grou_H,plus) + s_slack(2318,grou_H,minus) + s_slack(2318,grou_L,plus) + s_slack(2318,grou_L,minus) + s_slack(2318,grou_S,plus) + s_slack(2318,grou_S,minus) + s_slack(2318,lent_H,plus)
     
      + s_slack(2318,lent_H,minus) + s_slack(2318,lent_L,plus) + s_slack(2318,lent_L,minus) + s_slack(2318,lent_S,plus) + s_slack(2318,lent_S,minus) + s_slack(2318,maiz_H,plus) + s_slack(2318,maiz_H,minus) + s_slack(2318,maiz_L,plus)
     
      + s_slack(2318,maiz_L,minus) + s_slack(2318,maiz_S,plus) + s_slack(2318,maiz_S,minus) + s_slack(2318,mill_H,plus) + s_slack(2318,mill_H,minus) + s_slack(2318,mill_L,plus) + s_slack(2318,mill_L,minus) + s_slack(2318,mill_S,plus)
     
      + s_slack(2318,mill_S,minus) + s_slack(2318,ofib_L,plus) + s_slack(2318,ofib_L,minus) + s_slack(2318,ooil_L,plus) + s_slack(2318,ooil_L,minus) + s_slack(2318,opul_H,plus) + s_slack(2318,opul_H,minus) + s_slack(2318,opul_L,plus)
     
      + s_slack(2318,opul_L,minus) + s_slack(2318,opul_S,plus) + s_slack(2318,opul_S,minus) + s_slack(2318,pige_H,plus) + s_slack(2318,pige_H,minus) + s_slack(2318,pige_L,plus) + s_slack(2318,pige_L,minus) + s_slack(2318,pige_S,plus)
     
      + s_slack(2318,pige_S,minus) + s_slack(2318,pota_H,plus) + s_slack(2318,pota_H,minus) + s_slack(2318,pota_L,plus) + s_slack(2318,pota_L,minus) + s_slack(2318,pota_S,plus) + s_slack(2318,pota_S,minus) + s_slack(2318,rest_H,plus)
     
      + s_slack(2318,rest_H,minus) + s_slack(2318,rest_L,plus) + s_slack(2318,rest_L,minus) + s_slack(2318,rest_S,plus) + s_slack(2318,rest_S,minus) + s_slack(2318,rice_H,plus) + s_slack(2318,rice_H,minus) + s_slack(2318,rice_L,plus)
     
      + s_slack(2318,rice_L,minus) + s_slack(2318,rice_S,plus) + s_slack(2318,rice_S,minus) + s_slack(2318,sorg_L,plus) + s_slack(2318,sorg_L,minus) + s_slack(2318,sorg_S,plus) + s_slack(2318,sorg_S,minus) + s_slack(2318,soyb_L,plus)
     
      + s_slack(2318,soyb_L,minus) + s_slack(2318,soyb_S,plus) + s_slack(2318,soyb_S,minus) + s_slack(2318,sunf_L,plus) + s_slack(2318,sunf_L,minus) + s_slack(2318,temf_H,plus) + s_slack(2318,temf_H,minus) + s_slack(2318,temf_L,plus)
     
      + s_slack(2318,temf_L,minus) + s_slack(2318,temf_S,plus) + s_slack(2318,temf_S,minus) + s_slack(2318,toba_H,plus) + s_slack(2318,toba_H,minus) + s_slack(2318,toba_L,plus) + s_slack(2318,toba_L,minus) + s_slack(2318,trof_L,plus)
     
      + s_slack(2318,trof_L,minus) + s_slack(2318,trof_S,plus) + s_slack(2318,trof_S,minus) + s_slack(2318,vege_H,plus) + s_slack(2318,vege_H,minus) + s_slack(2318,vege_L,plus) + s_slack(2318,vege_L,minus) + s_slack(2318,vege_S,plus)
     
      + s_slack(2318,vege_S,minus) + s_slack(2319,rice_I,plus) + s_slack(2319,rice_I,minus) + s_slack(2319,sugc_I,plus) + s_slack(2319,sugc_I,minus) + s_slack(2319,whea_I,plus) + s_slack(2319,whea_I,minus) + s_slack(2319,bean_H,plus)
     
      + s_slack(2319,bean_H,minus) + s_slack(2319,bean_L,plus) + s_slack(2319,bean_L,minus) + s_slack(2319,bean_S,plus) + s_slack(2319,bean_S,minus) + s_slack(2319,cass_L,plus) + s_slack(2319,cass_L,minus) + s_slack(2319,cass_S,plus)
     
      + s_slack(2319,cass_S,minus) + s_slack(2319,chic_H,plus) + s_slack(2319,chic_H,minus) + s_slack(2319,chic_L,plus) + s_slack(2319,chic_L,minus) + s_slack(2319,chic_S,plus) + s_slack(2319,chic_S,minus) + s_slack(2319,coff_H,plus)
     
      + s_slack(2319,coff_H,minus) + s_slack(2319,coff_L,plus) + s_slack(2319,coff_L,minus) + s_slack(2319,cott_L,plus) + s_slack(2319,cott_L,minus) + s_slack(2319,cowp_H,plus) + s_slack(2319,cowp_H,minus) + s_slack(2319,cowp_L,plus)
     
      + s_slack(2319,cowp_L,minus) + s_slack(2319,cowp_S,plus) + s_slack(2319,cowp_S,minus) + s_slack(2319,grou_H,plus) + s_slack(2319,grou_H,minus) + s_slack(2319,grou_L,plus) + s_slack(2319,grou_L,minus) + s_slack(2319,grou_S,plus)
     
      + s_slack(2319,grou_S,minus) + s_slack(2319,lent_H,plus) + s_slack(2319,lent_H,minus) + s_slack(2319,lent_L,plus) + s_slack(2319,lent_L,minus) + s_slack(2319,lent_S,plus) + s_slack(2319,lent_S,minus) + s_slack(2319,maiz_H,plus)
     
      + s_slack(2319,maiz_H,minus) + s_slack(2319,maiz_L,plus) + s_slack(2319,maiz_L,minus) + s_slack(2319,maiz_S,plus) + s_slack(2319,maiz_S,minus) + s_slack(2319,mill_H,plus) + s_slack(2319,mill_H,minus) + s_slack(2319,mill_L,plus)
     
      + s_slack(2319,mill_L,minus) + s_slack(2319,mill_S,plus) + s_slack(2319,mill_S,minus) + s_slack(2319,ofib_L,plus) + s_slack(2319,ofib_L,minus) + s_slack(2319,ooil_L,plus) + s_slack(2319,ooil_L,minus) + s_slack(2319,opul_H,plus)
     
      + s_slack(2319,opul_H,minus) + s_slack(2319,opul_L,plus) + s_slack(2319,opul_L,minus) + s_slack(2319,opul_S,plus) + s_slack(2319,opul_S,minus) + s_slack(2319,pige_H,plus) + s_slack(2319,pige_H,minus) + s_slack(2319,pige_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 247
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2319,pige_L,minus) + s_slack(2319,pige_S,plus) + s_slack(2319,pige_S,minus) + s_slack(2319,pota_H,plus) + s_slack(2319,pota_H,minus) + s_slack(2319,pota_L,plus) + s_slack(2319,pota_L,minus) + s_slack(2319,pota_S,plus)
     
      + s_slack(2319,pota_S,minus) + s_slack(2319,rest_H,plus) + s_slack(2319,rest_H,minus) + s_slack(2319,rest_L,plus) + s_slack(2319,rest_L,minus) + s_slack(2319,rest_S,plus) + s_slack(2319,rest_S,minus) + s_slack(2319,rice_H,plus)
     
      + s_slack(2319,rice_H,minus) + s_slack(2319,rice_L,plus) + s_slack(2319,rice_L,minus) + s_slack(2319,rice_S,plus) + s_slack(2319,rice_S,minus) + s_slack(2319,sorg_L,plus) + s_slack(2319,sorg_L,minus) + s_slack(2319,sorg_S,plus)
     
      + s_slack(2319,sorg_S,minus) + s_slack(2319,soyb_L,plus) + s_slack(2319,soyb_L,minus) + s_slack(2319,soyb_S,plus) + s_slack(2319,soyb_S,minus) + s_slack(2319,sunf_L,plus) + s_slack(2319,sunf_L,minus) + s_slack(2319,temf_H,plus)
     
      + s_slack(2319,temf_H,minus) + s_slack(2319,temf_L,plus) + s_slack(2319,temf_L,minus) + s_slack(2319,temf_S,plus) + s_slack(2319,temf_S,minus) + s_slack(2319,toba_H,plus) + s_slack(2319,toba_H,minus) + s_slack(2319,toba_L,plus)
     
      + s_slack(2319,toba_L,minus) + s_slack(2319,trof_L,plus) + s_slack(2319,trof_L,minus) + s_slack(2319,trof_S,plus) + s_slack(2319,trof_S,minus) + s_slack(2319,vege_H,plus) + s_slack(2319,vege_H,minus) + s_slack(2319,vege_L,plus)
     
      + s_slack(2319,vege_L,minus) + s_slack(2319,vege_S,plus) + s_slack(2319,vege_S,minus) + s_slack(2320,rice_I,plus) + s_slack(2320,rice_I,minus) + s_slack(2320,sugc_I,plus) + s_slack(2320,sugc_I,minus) + s_slack(2320,whea_I,plus)
     
      + s_slack(2320,whea_I,minus) + s_slack(2320,bean_H,plus) + s_slack(2320,bean_H,minus) + s_slack(2320,bean_L,plus) + s_slack(2320,bean_L,minus) + s_slack(2320,bean_S,plus) + s_slack(2320,bean_S,minus) + s_slack(2320,cass_L,plus)
     
      + s_slack(2320,cass_L,minus) + s_slack(2320,cass_S,plus) + s_slack(2320,cass_S,minus) + s_slack(2320,chic_H,plus) + s_slack(2320,chic_H,minus) + s_slack(2320,chic_L,plus) + s_slack(2320,chic_L,minus) + s_slack(2320,chic_S,plus)
     
      + s_slack(2320,chic_S,minus) + s_slack(2320,coff_H,plus) + s_slack(2320,coff_H,minus) + s_slack(2320,coff_L,plus) + s_slack(2320,coff_L,minus) + s_slack(2320,cott_L,plus) + s_slack(2320,cott_L,minus) + s_slack(2320,cowp_H,plus)
     
      + s_slack(2320,cowp_H,minus) + s_slack(2320,cowp_L,plus) + s_slack(2320,cowp_L,minus) + s_slack(2320,cowp_S,plus) + s_slack(2320,cowp_S,minus) + s_slack(2320,grou_H,plus) + s_slack(2320,grou_H,minus) + s_slack(2320,grou_L,plus)
     
      + s_slack(2320,grou_L,minus) + s_slack(2320,grou_S,plus) + s_slack(2320,grou_S,minus) + s_slack(2320,lent_H,plus) + s_slack(2320,lent_H,minus) + s_slack(2320,lent_L,plus) + s_slack(2320,lent_L,minus) + s_slack(2320,lent_S,plus)
     
      + s_slack(2320,lent_S,minus) + s_slack(2320,maiz_H,plus) + s_slack(2320,maiz_H,minus) + s_slack(2320,maiz_L,plus) + s_slack(2320,maiz_L,minus) + s_slack(2320,maiz_S,plus) + s_slack(2320,maiz_S,minus) + s_slack(2320,mill_H,plus)
     
      + s_slack(2320,mill_H,minus) + s_slack(2320,mill_L,plus) + s_slack(2320,mill_L,minus) + s_slack(2320,mill_S,plus) + s_slack(2320,mill_S,minus) + s_slack(2320,ofib_L,plus) + s_slack(2320,ofib_L,minus) + s_slack(2320,ooil_L,plus)
     
      + s_slack(2320,ooil_L,minus) + s_slack(2320,opul_H,plus) + s_slack(2320,opul_H,minus) + s_slack(2320,opul_L,plus) + s_slack(2320,opul_L,minus) + s_slack(2320,opul_S,plus) + s_slack(2320,opul_S,minus) + s_slack(2320,pige_H,plus)
     
      + s_slack(2320,pige_H,minus) + s_slack(2320,pige_L,plus) + s_slack(2320,pige_L,minus) + s_slack(2320,pige_S,plus) + s_slack(2320,pige_S,minus) + s_slack(2320,pota_H,plus) + s_slack(2320,pota_H,minus) + s_slack(2320,pota_L,plus)
     
      + s_slack(2320,pota_L,minus) + s_slack(2320,pota_S,plus) + s_slack(2320,pota_S,minus) + s_slack(2320,rest_H,plus) + s_slack(2320,rest_H,minus) + s_slack(2320,rest_L,plus) + s_slack(2320,rest_L,minus) + s_slack(2320,rest_S,plus)
     
      + s_slack(2320,rest_S,minus) + s_slack(2320,rice_H,plus) + s_slack(2320,rice_H,minus) + s_slack(2320,rice_L,plus) + s_slack(2320,rice_L,minus) + s_slack(2320,rice_S,plus) + s_slack(2320,rice_S,minus) + s_slack(2320,sorg_L,plus)
     
      + s_slack(2320,sorg_L,minus) + s_slack(2320,sorg_S,plus) + s_slack(2320,sorg_S,minus) + s_slack(2320,soyb_L,plus) + s_slack(2320,soyb_L,minus) + s_slack(2320,soyb_S,plus) + s_slack(2320,soyb_S,minus) + s_slack(2320,sunf_L,plus)
     
      + s_slack(2320,sunf_L,minus) + s_slack(2320,temf_H,plus) + s_slack(2320,temf_H,minus) + s_slack(2320,temf_L,plus) + s_slack(2320,temf_L,minus) + s_slack(2320,temf_S,plus) + s_slack(2320,temf_S,minus) + s_slack(2320,toba_H,plus)
     
      + s_slack(2320,toba_H,minus) + s_slack(2320,toba_L,plus) + s_slack(2320,toba_L,minus) + s_slack(2320,trof_L,plus) + s_slack(2320,trof_L,minus) + s_slack(2320,trof_S,plus) + s_slack(2320,trof_S,minus) + s_slack(2320,vege_H,plus)
     
      + s_slack(2320,vege_H,minus) + s_slack(2320,vege_L,plus) + s_slack(2320,vege_L,minus) + s_slack(2320,vege_S,plus) + s_slack(2320,vege_S,minus) + s_slack(2321,rice_I,plus) + s_slack(2321,rice_I,minus) + s_slack(2321,sugc_I,plus)
     
      + s_slack(2321,sugc_I,minus) + s_slack(2321,whea_I,plus) + s_slack(2321,whea_I,minus) + s_slack(2321,bean_H,plus) + s_slack(2321,bean_H,minus) + s_slack(2321,bean_L,plus) + s_slack(2321,bean_L,minus) + s_slack(2321,bean_S,plus)
     
      + s_slack(2321,bean_S,minus) + s_slack(2321,cass_L,plus) + s_slack(2321,cass_L,minus) + s_slack(2321,cass_S,plus) + s_slack(2321,cass_S,minus) + s_slack(2321,chic_H,plus) + s_slack(2321,chic_H,minus) + s_slack(2321,chic_L,plus)
     
      + s_slack(2321,chic_L,minus) + s_slack(2321,chic_S,plus) + s_slack(2321,chic_S,minus) + s_slack(2321,coff_H,plus) + s_slack(2321,coff_H,minus) + s_slack(2321,coff_L,plus) + s_slack(2321,coff_L,minus) + s_slack(2321,cott_L,plus)
     
      + s_slack(2321,cott_L,minus) + s_slack(2321,cowp_H,plus) + s_slack(2321,cowp_H,minus) + s_slack(2321,cowp_L,plus) + s_slack(2321,cowp_L,minus) + s_slack(2321,cowp_S,plus) + s_slack(2321,cowp_S,minus) + s_slack(2321,grou_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 248
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2321,grou_H,minus) + s_slack(2321,grou_L,plus) + s_slack(2321,grou_L,minus) + s_slack(2321,grou_S,plus) + s_slack(2321,grou_S,minus) + s_slack(2321,lent_H,plus) + s_slack(2321,lent_H,minus) + s_slack(2321,lent_L,plus)
     
      + s_slack(2321,lent_L,minus) + s_slack(2321,lent_S,plus) + s_slack(2321,lent_S,minus) + s_slack(2321,maiz_H,plus) + s_slack(2321,maiz_H,minus) + s_slack(2321,maiz_L,plus) + s_slack(2321,maiz_L,minus) + s_slack(2321,maiz_S,plus)
     
      + s_slack(2321,maiz_S,minus) + s_slack(2321,mill_H,plus) + s_slack(2321,mill_H,minus) + s_slack(2321,mill_L,plus) + s_slack(2321,mill_L,minus) + s_slack(2321,mill_S,plus) + s_slack(2321,mill_S,minus) + s_slack(2321,ofib_L,plus)
     
      + s_slack(2321,ofib_L,minus) + s_slack(2321,ooil_L,plus) + s_slack(2321,ooil_L,minus) + s_slack(2321,opul_H,plus) + s_slack(2321,opul_H,minus) + s_slack(2321,opul_L,plus) + s_slack(2321,opul_L,minus) + s_slack(2321,opul_S,plus)
     
      + s_slack(2321,opul_S,minus) + s_slack(2321,pige_H,plus) + s_slack(2321,pige_H,minus) + s_slack(2321,pige_L,plus) + s_slack(2321,pige_L,minus) + s_slack(2321,pige_S,plus) + s_slack(2321,pige_S,minus) + s_slack(2321,pota_H,plus)
     
      + s_slack(2321,pota_H,minus) + s_slack(2321,pota_L,plus) + s_slack(2321,pota_L,minus) + s_slack(2321,pota_S,plus) + s_slack(2321,pota_S,minus) + s_slack(2321,rest_H,plus) + s_slack(2321,rest_H,minus) + s_slack(2321,rest_L,plus)
     
      + s_slack(2321,rest_L,minus) + s_slack(2321,rest_S,plus) + s_slack(2321,rest_S,minus) + s_slack(2321,rice_H,plus) + s_slack(2321,rice_H,minus) + s_slack(2321,rice_L,plus) + s_slack(2321,rice_L,minus) + s_slack(2321,rice_S,plus)
     
      + s_slack(2321,rice_S,minus) + s_slack(2321,sorg_L,plus) + s_slack(2321,sorg_L,minus) + s_slack(2321,sorg_S,plus) + s_slack(2321,sorg_S,minus) + s_slack(2321,soyb_L,plus) + s_slack(2321,soyb_L,minus) + s_slack(2321,soyb_S,plus)
     
      + s_slack(2321,soyb_S,minus) + s_slack(2321,sunf_L,plus) + s_slack(2321,sunf_L,minus) + s_slack(2321,temf_H,plus) + s_slack(2321,temf_H,minus) + s_slack(2321,temf_L,plus) + s_slack(2321,temf_L,minus) + s_slack(2321,temf_S,plus)
     
      + s_slack(2321,temf_S,minus) + s_slack(2321,toba_H,plus) + s_slack(2321,toba_H,minus) + s_slack(2321,toba_L,plus) + s_slack(2321,toba_L,minus) + s_slack(2321,trof_L,plus) + s_slack(2321,trof_L,minus) + s_slack(2321,trof_S,plus)
     
      + s_slack(2321,trof_S,minus) + s_slack(2321,vege_H,plus) + s_slack(2321,vege_H,minus) + s_slack(2321,vege_L,plus) + s_slack(2321,vege_L,minus) + s_slack(2321,vege_S,plus) + s_slack(2321,vege_S,minus) + s_slack(2322,rice_I,plus)
     
      + s_slack(2322,rice_I,minus) + s_slack(2322,sugc_I,plus) + s_slack(2322,sugc_I,minus) + s_slack(2322,whea_I,plus) + s_slack(2322,whea_I,minus) + s_slack(2322,bean_H,plus) + s_slack(2322,bean_H,minus) + s_slack(2322,bean_L,plus)
     
      + s_slack(2322,bean_L,minus) + s_slack(2322,bean_S,plus) + s_slack(2322,bean_S,minus) + s_slack(2322,cass_L,plus) + s_slack(2322,cass_L,minus) + s_slack(2322,cass_S,plus) + s_slack(2322,cass_S,minus) + s_slack(2322,chic_H,plus)
     
      + s_slack(2322,chic_H,minus) + s_slack(2322,chic_L,plus) + s_slack(2322,chic_L,minus) + s_slack(2322,chic_S,plus) + s_slack(2322,chic_S,minus) + s_slack(2322,coff_H,plus) + s_slack(2322,coff_H,minus) + s_slack(2322,coff_L,plus)
     
      + s_slack(2322,coff_L,minus) + s_slack(2322,cott_L,plus) + s_slack(2322,cott_L,minus) + s_slack(2322,cowp_H,plus) + s_slack(2322,cowp_H,minus) + s_slack(2322,cowp_L,plus) + s_slack(2322,cowp_L,minus) + s_slack(2322,cowp_S,plus)
     
      + s_slack(2322,cowp_S,minus) + s_slack(2322,grou_H,plus) + s_slack(2322,grou_H,minus) + s_slack(2322,grou_L,plus) + s_slack(2322,grou_L,minus) + s_slack(2322,grou_S,plus) + s_slack(2322,grou_S,minus) + s_slack(2322,lent_H,plus)
     
      + s_slack(2322,lent_H,minus) + s_slack(2322,lent_L,plus) + s_slack(2322,lent_L,minus) + s_slack(2322,lent_S,plus) + s_slack(2322,lent_S,minus) + s_slack(2322,maiz_H,plus) + s_slack(2322,maiz_H,minus) + s_slack(2322,maiz_L,plus)
     
      + s_slack(2322,maiz_L,minus) + s_slack(2322,maiz_S,plus) + s_slack(2322,maiz_S,minus) + s_slack(2322,mill_H,plus) + s_slack(2322,mill_H,minus) + s_slack(2322,mill_L,plus) + s_slack(2322,mill_L,minus) + s_slack(2322,mill_S,plus)
     
      + s_slack(2322,mill_S,minus) + s_slack(2322,ofib_L,plus) + s_slack(2322,ofib_L,minus) + s_slack(2322,ooil_L,plus) + s_slack(2322,ooil_L,minus) + s_slack(2322,opul_H,plus) + s_slack(2322,opul_H,minus) + s_slack(2322,opul_L,plus)
     
      + s_slack(2322,opul_L,minus) + s_slack(2322,opul_S,plus) + s_slack(2322,opul_S,minus) + s_slack(2322,pige_H,plus) + s_slack(2322,pige_H,minus) + s_slack(2322,pige_L,plus) + s_slack(2322,pige_L,minus) + s_slack(2322,pige_S,plus)
     
      + s_slack(2322,pige_S,minus) + s_slack(2322,pota_H,plus) + s_slack(2322,pota_H,minus) + s_slack(2322,pota_L,plus) + s_slack(2322,pota_L,minus) + s_slack(2322,pota_S,plus) + s_slack(2322,pota_S,minus) + s_slack(2322,rest_H,plus)
     
      + s_slack(2322,rest_H,minus) + s_slack(2322,rest_L,plus) + s_slack(2322,rest_L,minus) + s_slack(2322,rest_S,plus) + s_slack(2322,rest_S,minus) + s_slack(2322,rice_H,plus) + s_slack(2322,rice_H,minus) + s_slack(2322,rice_L,plus)
     
      + s_slack(2322,rice_L,minus) + s_slack(2322,rice_S,plus) + s_slack(2322,rice_S,minus) + s_slack(2322,sorg_L,plus) + s_slack(2322,sorg_L,minus) + s_slack(2322,sorg_S,plus) + s_slack(2322,sorg_S,minus) + s_slack(2322,soyb_L,plus)
     
      + s_slack(2322,soyb_L,minus) + s_slack(2322,soyb_S,plus) + s_slack(2322,soyb_S,minus) + s_slack(2322,sunf_L,plus) + s_slack(2322,sunf_L,minus) + s_slack(2322,temf_H,plus) + s_slack(2322,temf_H,minus) + s_slack(2322,temf_L,plus)
     
      + s_slack(2322,temf_L,minus) + s_slack(2322,temf_S,plus) + s_slack(2322,temf_S,minus) + s_slack(2322,toba_H,plus) + s_slack(2322,toba_H,minus) + s_slack(2322,toba_L,plus) + s_slack(2322,toba_L,minus) + s_slack(2322,trof_L,plus)
     
      + s_slack(2322,trof_L,minus) + s_slack(2322,trof_S,plus) + s_slack(2322,trof_S,minus) + s_slack(2322,vege_H,plus) + s_slack(2322,vege_H,minus) + s_slack(2322,vege_L,plus) + s_slack(2322,vege_L,minus) + s_slack(2322,vege_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 249
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2322,vege_S,minus) + s_slack(2323,rice_I,plus) + s_slack(2323,rice_I,minus) + s_slack(2323,sugc_I,plus) + s_slack(2323,sugc_I,minus) + s_slack(2323,whea_I,plus) + s_slack(2323,whea_I,minus) + s_slack(2323,bean_H,plus)
     
      + s_slack(2323,bean_H,minus) + s_slack(2323,bean_L,plus) + s_slack(2323,bean_L,minus) + s_slack(2323,bean_S,plus) + s_slack(2323,bean_S,minus) + s_slack(2323,cass_L,plus) + s_slack(2323,cass_L,minus) + s_slack(2323,cass_S,plus)
     
      + s_slack(2323,cass_S,minus) + s_slack(2323,chic_H,plus) + s_slack(2323,chic_H,minus) + s_slack(2323,chic_L,plus) + s_slack(2323,chic_L,minus) + s_slack(2323,chic_S,plus) + s_slack(2323,chic_S,minus) + s_slack(2323,coff_H,plus)
     
      + s_slack(2323,coff_H,minus) + s_slack(2323,coff_L,plus) + s_slack(2323,coff_L,minus) + s_slack(2323,cott_L,plus) + s_slack(2323,cott_L,minus) + s_slack(2323,cowp_H,plus) + s_slack(2323,cowp_H,minus) + s_slack(2323,cowp_L,plus)
     
      + s_slack(2323,cowp_L,minus) + s_slack(2323,cowp_S,plus) + s_slack(2323,cowp_S,minus) + s_slack(2323,grou_H,plus) + s_slack(2323,grou_H,minus) + s_slack(2323,grou_L,plus) + s_slack(2323,grou_L,minus) + s_slack(2323,grou_S,plus)
     
      + s_slack(2323,grou_S,minus) + s_slack(2323,lent_H,plus) + s_slack(2323,lent_H,minus) + s_slack(2323,lent_L,plus) + s_slack(2323,lent_L,minus) + s_slack(2323,lent_S,plus) + s_slack(2323,lent_S,minus) + s_slack(2323,maiz_H,plus)
     
      + s_slack(2323,maiz_H,minus) + s_slack(2323,maiz_L,plus) + s_slack(2323,maiz_L,minus) + s_slack(2323,maiz_S,plus) + s_slack(2323,maiz_S,minus) + s_slack(2323,mill_H,plus) + s_slack(2323,mill_H,minus) + s_slack(2323,mill_L,plus)
     
      + s_slack(2323,mill_L,minus) + s_slack(2323,mill_S,plus) + s_slack(2323,mill_S,minus) + s_slack(2323,ofib_L,plus) + s_slack(2323,ofib_L,minus) + s_slack(2323,ooil_L,plus) + s_slack(2323,ooil_L,minus) + s_slack(2323,opul_H,plus)
     
      + s_slack(2323,opul_H,minus) + s_slack(2323,opul_L,plus) + s_slack(2323,opul_L,minus) + s_slack(2323,opul_S,plus) + s_slack(2323,opul_S,minus) + s_slack(2323,pige_H,plus) + s_slack(2323,pige_H,minus) + s_slack(2323,pige_L,plus)
     
      + s_slack(2323,pige_L,minus) + s_slack(2323,pige_S,plus) + s_slack(2323,pige_S,minus) + s_slack(2323,pota_H,plus) + s_slack(2323,pota_H,minus) + s_slack(2323,pota_L,plus) + s_slack(2323,pota_L,minus) + s_slack(2323,pota_S,plus)
     
      + s_slack(2323,pota_S,minus) + s_slack(2323,rest_H,plus) + s_slack(2323,rest_H,minus) + s_slack(2323,rest_L,plus) + s_slack(2323,rest_L,minus) + s_slack(2323,rest_S,plus) + s_slack(2323,rest_S,minus) + s_slack(2323,rice_H,plus)
     
      + s_slack(2323,rice_H,minus) + s_slack(2323,rice_L,plus) + s_slack(2323,rice_L,minus) + s_slack(2323,rice_S,plus) + s_slack(2323,rice_S,minus) + s_slack(2323,sorg_L,plus) + s_slack(2323,sorg_L,minus) + s_slack(2323,sorg_S,plus)
     
      + s_slack(2323,sorg_S,minus) + s_slack(2323,soyb_L,plus) + s_slack(2323,soyb_L,minus) + s_slack(2323,soyb_S,plus) + s_slack(2323,soyb_S,minus) + s_slack(2323,sunf_L,plus) + s_slack(2323,sunf_L,minus) + s_slack(2323,temf_H,plus)
     
      + s_slack(2323,temf_H,minus) + s_slack(2323,temf_L,plus) + s_slack(2323,temf_L,minus) + s_slack(2323,temf_S,plus) + s_slack(2323,temf_S,minus) + s_slack(2323,toba_H,plus) + s_slack(2323,toba_H,minus) + s_slack(2323,toba_L,plus)
     
      + s_slack(2323,toba_L,minus) + s_slack(2323,trof_L,plus) + s_slack(2323,trof_L,minus) + s_slack(2323,trof_S,plus) + s_slack(2323,trof_S,minus) + s_slack(2323,vege_H,plus) + s_slack(2323,vege_H,minus) + s_slack(2323,vege_L,plus)
     
      + s_slack(2323,vege_L,minus) + s_slack(2323,vege_S,plus) + s_slack(2323,vege_S,minus) + s_slack(2324,rice_I,plus) + s_slack(2324,rice_I,minus) + s_slack(2324,sugc_I,plus) + s_slack(2324,sugc_I,minus) + s_slack(2324,whea_I,plus)
     
      + s_slack(2324,whea_I,minus) + s_slack(2324,bean_H,plus) + s_slack(2324,bean_H,minus) + s_slack(2324,bean_L,plus) + s_slack(2324,bean_L,minus) + s_slack(2324,bean_S,plus) + s_slack(2324,bean_S,minus) + s_slack(2324,cass_L,plus)
     
      + s_slack(2324,cass_L,minus) + s_slack(2324,cass_S,plus) + s_slack(2324,cass_S,minus) + s_slack(2324,chic_H,plus) + s_slack(2324,chic_H,minus) + s_slack(2324,chic_L,plus) + s_slack(2324,chic_L,minus) + s_slack(2324,chic_S,plus)
     
      + s_slack(2324,chic_S,minus) + s_slack(2324,coff_H,plus) + s_slack(2324,coff_H,minus) + s_slack(2324,coff_L,plus) + s_slack(2324,coff_L,minus) + s_slack(2324,cott_L,plus) + s_slack(2324,cott_L,minus) + s_slack(2324,cowp_H,plus)
     
      + s_slack(2324,cowp_H,minus) + s_slack(2324,cowp_L,plus) + s_slack(2324,cowp_L,minus) + s_slack(2324,cowp_S,plus) + s_slack(2324,cowp_S,minus) + s_slack(2324,grou_H,plus) + s_slack(2324,grou_H,minus) + s_slack(2324,grou_L,plus)
     
      + s_slack(2324,grou_L,minus) + s_slack(2324,grou_S,plus) + s_slack(2324,grou_S,minus) + s_slack(2324,lent_H,plus) + s_slack(2324,lent_H,minus) + s_slack(2324,lent_L,plus) + s_slack(2324,lent_L,minus) + s_slack(2324,lent_S,plus)
     
      + s_slack(2324,lent_S,minus) + s_slack(2324,maiz_H,plus) + s_slack(2324,maiz_H,minus) + s_slack(2324,maiz_L,plus) + s_slack(2324,maiz_L,minus) + s_slack(2324,maiz_S,plus) + s_slack(2324,maiz_S,minus) + s_slack(2324,mill_H,plus)
     
      + s_slack(2324,mill_H,minus) + s_slack(2324,mill_L,plus) + s_slack(2324,mill_L,minus) + s_slack(2324,mill_S,plus) + s_slack(2324,mill_S,minus) + s_slack(2324,ofib_L,plus) + s_slack(2324,ofib_L,minus) + s_slack(2324,ooil_L,plus)
     
      + s_slack(2324,ooil_L,minus) + s_slack(2324,opul_H,plus) + s_slack(2324,opul_H,minus) + s_slack(2324,opul_L,plus) + s_slack(2324,opul_L,minus) + s_slack(2324,opul_S,plus) + s_slack(2324,opul_S,minus) + s_slack(2324,pige_H,plus)
     
      + s_slack(2324,pige_H,minus) + s_slack(2324,pige_L,plus) + s_slack(2324,pige_L,minus) + s_slack(2324,pige_S,plus) + s_slack(2324,pige_S,minus) + s_slack(2324,pota_H,plus) + s_slack(2324,pota_H,minus) + s_slack(2324,pota_L,plus)
     
      + s_slack(2324,pota_L,minus) + s_slack(2324,pota_S,plus) + s_slack(2324,pota_S,minus) + s_slack(2324,rest_H,plus) + s_slack(2324,rest_H,minus) + s_slack(2324,rest_L,plus) + s_slack(2324,rest_L,minus) + s_slack(2324,rest_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 250
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2324,rest_S,minus) + s_slack(2324,rice_H,plus) + s_slack(2324,rice_H,minus) + s_slack(2324,rice_L,plus) + s_slack(2324,rice_L,minus) + s_slack(2324,rice_S,plus) + s_slack(2324,rice_S,minus) + s_slack(2324,sorg_L,plus)
     
      + s_slack(2324,sorg_L,minus) + s_slack(2324,sorg_S,plus) + s_slack(2324,sorg_S,minus) + s_slack(2324,soyb_L,plus) + s_slack(2324,soyb_L,minus) + s_slack(2324,soyb_S,plus) + s_slack(2324,soyb_S,minus) + s_slack(2324,sunf_L,plus)
     
      + s_slack(2324,sunf_L,minus) + s_slack(2324,temf_H,plus) + s_slack(2324,temf_H,minus) + s_slack(2324,temf_L,plus) + s_slack(2324,temf_L,minus) + s_slack(2324,temf_S,plus) + s_slack(2324,temf_S,minus) + s_slack(2324,toba_H,plus)
     
      + s_slack(2324,toba_H,minus) + s_slack(2324,toba_L,plus) + s_slack(2324,toba_L,minus) + s_slack(2324,trof_L,plus) + s_slack(2324,trof_L,minus) + s_slack(2324,trof_S,plus) + s_slack(2324,trof_S,minus) + s_slack(2324,vege_H,plus)
     
      + s_slack(2324,vege_H,minus) + s_slack(2324,vege_L,plus) + s_slack(2324,vege_L,minus) + s_slack(2324,vege_S,plus) + s_slack(2324,vege_S,minus) + s_slack(2325,rice_I,plus) + s_slack(2325,rice_I,minus) + s_slack(2325,sugc_I,plus)
     
      + s_slack(2325,sugc_I,minus) + s_slack(2325,whea_I,plus) + s_slack(2325,whea_I,minus) + s_slack(2325,bean_H,plus) + s_slack(2325,bean_H,minus) + s_slack(2325,bean_L,plus) + s_slack(2325,bean_L,minus) + s_slack(2325,bean_S,plus)
     
      + s_slack(2325,bean_S,minus) + s_slack(2325,cass_L,plus) + s_slack(2325,cass_L,minus) + s_slack(2325,cass_S,plus) + s_slack(2325,cass_S,minus) + s_slack(2325,chic_H,plus) + s_slack(2325,chic_H,minus) + s_slack(2325,chic_L,plus)
     
      + s_slack(2325,chic_L,minus) + s_slack(2325,chic_S,plus) + s_slack(2325,chic_S,minus) + s_slack(2325,coff_H,plus) + s_slack(2325,coff_H,minus) + s_slack(2325,coff_L,plus) + s_slack(2325,coff_L,minus) + s_slack(2325,cott_L,plus)
     
      + s_slack(2325,cott_L,minus) + s_slack(2325,cowp_H,plus) + s_slack(2325,cowp_H,minus) + s_slack(2325,cowp_L,plus) + s_slack(2325,cowp_L,minus) + s_slack(2325,cowp_S,plus) + s_slack(2325,cowp_S,minus) + s_slack(2325,grou_H,plus)
     
      + s_slack(2325,grou_H,minus) + s_slack(2325,grou_L,plus) + s_slack(2325,grou_L,minus) + s_slack(2325,grou_S,plus) + s_slack(2325,grou_S,minus) + s_slack(2325,lent_H,plus) + s_slack(2325,lent_H,minus) + s_slack(2325,lent_L,plus)
     
      + s_slack(2325,lent_L,minus) + s_slack(2325,lent_S,plus) + s_slack(2325,lent_S,minus) + s_slack(2325,maiz_H,plus) + s_slack(2325,maiz_H,minus) + s_slack(2325,maiz_L,plus) + s_slack(2325,maiz_L,minus) + s_slack(2325,maiz_S,plus)
     
      + s_slack(2325,maiz_S,minus) + s_slack(2325,mill_H,plus) + s_slack(2325,mill_H,minus) + s_slack(2325,mill_L,plus) + s_slack(2325,mill_L,minus) + s_slack(2325,mill_S,plus) + s_slack(2325,mill_S,minus) + s_slack(2325,ofib_L,plus)
     
      + s_slack(2325,ofib_L,minus) + s_slack(2325,ooil_L,plus) + s_slack(2325,ooil_L,minus) + s_slack(2325,opul_H,plus) + s_slack(2325,opul_H,minus) + s_slack(2325,opul_L,plus) + s_slack(2325,opul_L,minus) + s_slack(2325,opul_S,plus)
     
      + s_slack(2325,opul_S,minus) + s_slack(2325,pige_H,plus) + s_slack(2325,pige_H,minus) + s_slack(2325,pige_L,plus) + s_slack(2325,pige_L,minus) + s_slack(2325,pige_S,plus) + s_slack(2325,pige_S,minus) + s_slack(2325,pota_H,plus)
     
      + s_slack(2325,pota_H,minus) + s_slack(2325,pota_L,plus) + s_slack(2325,pota_L,minus) + s_slack(2325,pota_S,plus) + s_slack(2325,pota_S,minus) + s_slack(2325,rest_H,plus) + s_slack(2325,rest_H,minus) + s_slack(2325,rest_L,plus)
     
      + s_slack(2325,rest_L,minus) + s_slack(2325,rest_S,plus) + s_slack(2325,rest_S,minus) + s_slack(2325,rice_H,plus) + s_slack(2325,rice_H,minus) + s_slack(2325,rice_L,plus) + s_slack(2325,rice_L,minus) + s_slack(2325,rice_S,plus)
     
      + s_slack(2325,rice_S,minus) + s_slack(2325,sorg_L,plus) + s_slack(2325,sorg_L,minus) + s_slack(2325,sorg_S,plus) + s_slack(2325,sorg_S,minus) + s_slack(2325,soyb_L,plus) + s_slack(2325,soyb_L,minus) + s_slack(2325,soyb_S,plus)
     
      + s_slack(2325,soyb_S,minus) + s_slack(2325,sunf_L,plus) + s_slack(2325,sunf_L,minus) + s_slack(2325,temf_H,plus) + s_slack(2325,temf_H,minus) + s_slack(2325,temf_L,plus) + s_slack(2325,temf_L,minus) + s_slack(2325,temf_S,plus)
     
      + s_slack(2325,temf_S,minus) + s_slack(2325,toba_H,plus) + s_slack(2325,toba_H,minus) + s_slack(2325,toba_L,plus) + s_slack(2325,toba_L,minus) + s_slack(2325,trof_L,plus) + s_slack(2325,trof_L,minus) + s_slack(2325,trof_S,plus)
     
      + s_slack(2325,trof_S,minus) + s_slack(2325,vege_H,plus) + s_slack(2325,vege_H,minus) + s_slack(2325,vege_L,plus) + s_slack(2325,vege_L,minus) + s_slack(2325,vege_S,plus) + s_slack(2325,vege_S,minus) + s_slack(2352,rice_I,plus)
     
      + s_slack(2352,rice_I,minus) + s_slack(2352,sugc_I,plus) + s_slack(2352,sugc_I,minus) + s_slack(2352,whea_I,plus) + s_slack(2352,whea_I,minus) + s_slack(2352,bean_H,plus) + s_slack(2352,bean_H,minus) + s_slack(2352,bean_L,plus)
     
      + s_slack(2352,bean_L,minus) + s_slack(2352,bean_S,plus) + s_slack(2352,bean_S,minus) + s_slack(2352,cass_L,plus) + s_slack(2352,cass_L,minus) + s_slack(2352,cass_S,plus) + s_slack(2352,cass_S,minus) + s_slack(2352,chic_H,plus)
     
      + s_slack(2352,chic_H,minus) + s_slack(2352,chic_L,plus) + s_slack(2352,chic_L,minus) + s_slack(2352,chic_S,plus) + s_slack(2352,chic_S,minus) + s_slack(2352,coff_H,plus) + s_slack(2352,coff_H,minus) + s_slack(2352,coff_L,plus)
     
      + s_slack(2352,coff_L,minus) + s_slack(2352,cott_L,plus) + s_slack(2352,cott_L,minus) + s_slack(2352,cowp_H,plus) + s_slack(2352,cowp_H,minus) + s_slack(2352,cowp_L,plus) + s_slack(2352,cowp_L,minus) + s_slack(2352,cowp_S,plus)
     
      + s_slack(2352,cowp_S,minus) + s_slack(2352,grou_H,plus) + s_slack(2352,grou_H,minus) + s_slack(2352,grou_L,plus) + s_slack(2352,grou_L,minus) + s_slack(2352,grou_S,plus) + s_slack(2352,grou_S,minus) + s_slack(2352,lent_H,plus)
     
      + s_slack(2352,lent_H,minus) + s_slack(2352,lent_L,plus) + s_slack(2352,lent_L,minus) + s_slack(2352,lent_S,plus) + s_slack(2352,lent_S,minus) + s_slack(2352,maiz_H,plus) + s_slack(2352,maiz_H,minus) + s_slack(2352,maiz_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 251
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2352,maiz_L,minus) + s_slack(2352,maiz_S,plus) + s_slack(2352,maiz_S,minus) + s_slack(2352,mill_H,plus) + s_slack(2352,mill_H,minus) + s_slack(2352,mill_L,plus) + s_slack(2352,mill_L,minus) + s_slack(2352,mill_S,plus)
     
      + s_slack(2352,mill_S,minus) + s_slack(2352,ofib_L,plus) + s_slack(2352,ofib_L,minus) + s_slack(2352,ooil_L,plus) + s_slack(2352,ooil_L,minus) + s_slack(2352,opul_H,plus) + s_slack(2352,opul_H,minus) + s_slack(2352,opul_L,plus)
     
      + s_slack(2352,opul_L,minus) + s_slack(2352,opul_S,plus) + s_slack(2352,opul_S,minus) + s_slack(2352,pige_H,plus) + s_slack(2352,pige_H,minus) + s_slack(2352,pige_L,plus) + s_slack(2352,pige_L,minus) + s_slack(2352,pige_S,plus)
     
      + s_slack(2352,pige_S,minus) + s_slack(2352,pota_H,plus) + s_slack(2352,pota_H,minus) + s_slack(2352,pota_L,plus) + s_slack(2352,pota_L,minus) + s_slack(2352,pota_S,plus) + s_slack(2352,pota_S,minus) + s_slack(2352,rest_H,plus)
     
      + s_slack(2352,rest_H,minus) + s_slack(2352,rest_L,plus) + s_slack(2352,rest_L,minus) + s_slack(2352,rest_S,plus) + s_slack(2352,rest_S,minus) + s_slack(2352,rice_H,plus) + s_slack(2352,rice_H,minus) + s_slack(2352,rice_L,plus)
     
      + s_slack(2352,rice_L,minus) + s_slack(2352,rice_S,plus) + s_slack(2352,rice_S,minus) + s_slack(2352,sorg_L,plus) + s_slack(2352,sorg_L,minus) + s_slack(2352,sorg_S,plus) + s_slack(2352,sorg_S,minus) + s_slack(2352,soyb_L,plus)
     
      + s_slack(2352,soyb_L,minus) + s_slack(2352,soyb_S,plus) + s_slack(2352,soyb_S,minus) + s_slack(2352,sunf_L,plus) + s_slack(2352,sunf_L,minus) + s_slack(2352,temf_H,plus) + s_slack(2352,temf_H,minus) + s_slack(2352,temf_L,plus)
     
      + s_slack(2352,temf_L,minus) + s_slack(2352,temf_S,plus) + s_slack(2352,temf_S,minus) + s_slack(2352,toba_H,plus) + s_slack(2352,toba_H,minus) + s_slack(2352,toba_L,plus) + s_slack(2352,toba_L,minus) + s_slack(2352,trof_L,plus)
     
      + s_slack(2352,trof_L,minus) + s_slack(2352,trof_S,plus) + s_slack(2352,trof_S,minus) + s_slack(2352,vege_H,plus) + s_slack(2352,vege_H,minus) + s_slack(2352,vege_L,plus) + s_slack(2352,vege_L,minus) + s_slack(2352,vege_S,plus)
     
      + s_slack(2352,vege_S,minus) + s_slack(2353,rice_I,plus) + s_slack(2353,rice_I,minus) + s_slack(2353,sugc_I,plus) + s_slack(2353,sugc_I,minus) + s_slack(2353,whea_I,plus) + s_slack(2353,whea_I,minus) + s_slack(2353,bean_H,plus)
     
      + s_slack(2353,bean_H,minus) + s_slack(2353,bean_L,plus) + s_slack(2353,bean_L,minus) + s_slack(2353,bean_S,plus) + s_slack(2353,bean_S,minus) + s_slack(2353,cass_L,plus) + s_slack(2353,cass_L,minus) + s_slack(2353,cass_S,plus)
     
      + s_slack(2353,cass_S,minus) + s_slack(2353,chic_H,plus) + s_slack(2353,chic_H,minus) + s_slack(2353,chic_L,plus) + s_slack(2353,chic_L,minus) + s_slack(2353,chic_S,plus) + s_slack(2353,chic_S,minus) + s_slack(2353,coff_H,plus)
     
      + s_slack(2353,coff_H,minus) + s_slack(2353,coff_L,plus) + s_slack(2353,coff_L,minus) + s_slack(2353,cott_L,plus) + s_slack(2353,cott_L,minus) + s_slack(2353,cowp_H,plus) + s_slack(2353,cowp_H,minus) + s_slack(2353,cowp_L,plus)
     
      + s_slack(2353,cowp_L,minus) + s_slack(2353,cowp_S,plus) + s_slack(2353,cowp_S,minus) + s_slack(2353,grou_H,plus) + s_slack(2353,grou_H,minus) + s_slack(2353,grou_L,plus) + s_slack(2353,grou_L,minus) + s_slack(2353,grou_S,plus)
     
      + s_slack(2353,grou_S,minus) + s_slack(2353,lent_H,plus) + s_slack(2353,lent_H,minus) + s_slack(2353,lent_L,plus) + s_slack(2353,lent_L,minus) + s_slack(2353,lent_S,plus) + s_slack(2353,lent_S,minus) + s_slack(2353,maiz_H,plus)
     
      + s_slack(2353,maiz_H,minus) + s_slack(2353,maiz_L,plus) + s_slack(2353,maiz_L,minus) + s_slack(2353,maiz_S,plus) + s_slack(2353,maiz_S,minus) + s_slack(2353,mill_H,plus) + s_slack(2353,mill_H,minus) + s_slack(2353,mill_L,plus)
     
      + s_slack(2353,mill_L,minus) + s_slack(2353,mill_S,plus) + s_slack(2353,mill_S,minus) + s_slack(2353,ofib_L,plus) + s_slack(2353,ofib_L,minus) + s_slack(2353,ooil_L,plus) + s_slack(2353,ooil_L,minus) + s_slack(2353,opul_H,plus)
     
      + s_slack(2353,opul_H,minus) + s_slack(2353,opul_L,plus) + s_slack(2353,opul_L,minus) + s_slack(2353,opul_S,plus) + s_slack(2353,opul_S,minus) + s_slack(2353,pige_H,plus) + s_slack(2353,pige_H,minus) + s_slack(2353,pige_L,plus)
     
      + s_slack(2353,pige_L,minus) + s_slack(2353,pige_S,plus) + s_slack(2353,pige_S,minus) + s_slack(2353,pota_H,plus) + s_slack(2353,pota_H,minus) + s_slack(2353,pota_L,plus) + s_slack(2353,pota_L,minus) + s_slack(2353,pota_S,plus)
     
      + s_slack(2353,pota_S,minus) + s_slack(2353,rest_H,plus) + s_slack(2353,rest_H,minus) + s_slack(2353,rest_L,plus) + s_slack(2353,rest_L,minus) + s_slack(2353,rest_S,plus) + s_slack(2353,rest_S,minus) + s_slack(2353,rice_H,plus)
     
      + s_slack(2353,rice_H,minus) + s_slack(2353,rice_L,plus) + s_slack(2353,rice_L,minus) + s_slack(2353,rice_S,plus) + s_slack(2353,rice_S,minus) + s_slack(2353,sorg_L,plus) + s_slack(2353,sorg_L,minus) + s_slack(2353,sorg_S,plus)
     
      + s_slack(2353,sorg_S,minus) + s_slack(2353,soyb_L,plus) + s_slack(2353,soyb_L,minus) + s_slack(2353,soyb_S,plus) + s_slack(2353,soyb_S,minus) + s_slack(2353,sunf_L,plus) + s_slack(2353,sunf_L,minus) + s_slack(2353,temf_H,plus)
     
      + s_slack(2353,temf_H,minus) + s_slack(2353,temf_L,plus) + s_slack(2353,temf_L,minus) + s_slack(2353,temf_S,plus) + s_slack(2353,temf_S,minus) + s_slack(2353,toba_H,plus) + s_slack(2353,toba_H,minus) + s_slack(2353,toba_L,plus)
     
      + s_slack(2353,toba_L,minus) + s_slack(2353,trof_L,plus) + s_slack(2353,trof_L,minus) + s_slack(2353,trof_S,plus) + s_slack(2353,trof_S,minus) + s_slack(2353,vege_H,plus) + s_slack(2353,vege_H,minus) + s_slack(2353,vege_L,plus)
     
      + s_slack(2353,vege_L,minus) + s_slack(2353,vege_S,plus) + s_slack(2353,vege_S,minus) + s_slack(2354,rice_I,plus) + s_slack(2354,rice_I,minus) + s_slack(2354,sugc_I,plus) + s_slack(2354,sugc_I,minus) + s_slack(2354,whea_I,plus)
     
      + s_slack(2354,whea_I,minus) + s_slack(2354,bean_H,plus) + s_slack(2354,bean_H,minus) + s_slack(2354,bean_L,plus) + s_slack(2354,bean_L,minus) + s_slack(2354,bean_S,plus) + s_slack(2354,bean_S,minus) + s_slack(2354,cass_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 252
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2354,cass_L,minus) + s_slack(2354,cass_S,plus) + s_slack(2354,cass_S,minus) + s_slack(2354,chic_H,plus) + s_slack(2354,chic_H,minus) + s_slack(2354,chic_L,plus) + s_slack(2354,chic_L,minus) + s_slack(2354,chic_S,plus)
     
      + s_slack(2354,chic_S,minus) + s_slack(2354,coff_H,plus) + s_slack(2354,coff_H,minus) + s_slack(2354,coff_L,plus) + s_slack(2354,coff_L,minus) + s_slack(2354,cott_L,plus) + s_slack(2354,cott_L,minus) + s_slack(2354,cowp_H,plus)
     
      + s_slack(2354,cowp_H,minus) + s_slack(2354,cowp_L,plus) + s_slack(2354,cowp_L,minus) + s_slack(2354,cowp_S,plus) + s_slack(2354,cowp_S,minus) + s_slack(2354,grou_H,plus) + s_slack(2354,grou_H,minus) + s_slack(2354,grou_L,plus)
     
      + s_slack(2354,grou_L,minus) + s_slack(2354,grou_S,plus) + s_slack(2354,grou_S,minus) + s_slack(2354,lent_H,plus) + s_slack(2354,lent_H,minus) + s_slack(2354,lent_L,plus) + s_slack(2354,lent_L,minus) + s_slack(2354,lent_S,plus)
     
      + s_slack(2354,lent_S,minus) + s_slack(2354,maiz_H,plus) + s_slack(2354,maiz_H,minus) + s_slack(2354,maiz_L,plus) + s_slack(2354,maiz_L,minus) + s_slack(2354,maiz_S,plus) + s_slack(2354,maiz_S,minus) + s_slack(2354,mill_H,plus)
     
      + s_slack(2354,mill_H,minus) + s_slack(2354,mill_L,plus) + s_slack(2354,mill_L,minus) + s_slack(2354,mill_S,plus) + s_slack(2354,mill_S,minus) + s_slack(2354,ofib_L,plus) + s_slack(2354,ofib_L,minus) + s_slack(2354,ooil_L,plus)
     
      + s_slack(2354,ooil_L,minus) + s_slack(2354,opul_H,plus) + s_slack(2354,opul_H,minus) + s_slack(2354,opul_L,plus) + s_slack(2354,opul_L,minus) + s_slack(2354,opul_S,plus) + s_slack(2354,opul_S,minus) + s_slack(2354,pige_H,plus)
     
      + s_slack(2354,pige_H,minus) + s_slack(2354,pige_L,plus) + s_slack(2354,pige_L,minus) + s_slack(2354,pige_S,plus) + s_slack(2354,pige_S,minus) + s_slack(2354,pota_H,plus) + s_slack(2354,pota_H,minus) + s_slack(2354,pota_L,plus)
     
      + s_slack(2354,pota_L,minus) + s_slack(2354,pota_S,plus) + s_slack(2354,pota_S,minus) + s_slack(2354,rest_H,plus) + s_slack(2354,rest_H,minus) + s_slack(2354,rest_L,plus) + s_slack(2354,rest_L,minus) + s_slack(2354,rest_S,plus)
     
      + s_slack(2354,rest_S,minus) + s_slack(2354,rice_H,plus) + s_slack(2354,rice_H,minus) + s_slack(2354,rice_L,plus) + s_slack(2354,rice_L,minus) + s_slack(2354,rice_S,plus) + s_slack(2354,rice_S,minus) + s_slack(2354,sorg_L,plus)
     
      + s_slack(2354,sorg_L,minus) + s_slack(2354,sorg_S,plus) + s_slack(2354,sorg_S,minus) + s_slack(2354,soyb_L,plus) + s_slack(2354,soyb_L,minus) + s_slack(2354,soyb_S,plus) + s_slack(2354,soyb_S,minus) + s_slack(2354,sunf_L,plus)
     
      + s_slack(2354,sunf_L,minus) + s_slack(2354,temf_H,plus) + s_slack(2354,temf_H,minus) + s_slack(2354,temf_L,plus) + s_slack(2354,temf_L,minus) + s_slack(2354,temf_S,plus) + s_slack(2354,temf_S,minus) + s_slack(2354,toba_H,plus)
     
      + s_slack(2354,toba_H,minus) + s_slack(2354,toba_L,plus) + s_slack(2354,toba_L,minus) + s_slack(2354,trof_L,plus) + s_slack(2354,trof_L,minus) + s_slack(2354,trof_S,plus) + s_slack(2354,trof_S,minus) + s_slack(2354,vege_H,plus)
     
      + s_slack(2354,vege_H,minus) + s_slack(2354,vege_L,plus) + s_slack(2354,vege_L,minus) + s_slack(2354,vege_S,plus) + s_slack(2354,vege_S,minus) + s_slack(2355,rice_I,plus) + s_slack(2355,rice_I,minus) + s_slack(2355,sugc_I,plus)
     
      + s_slack(2355,sugc_I,minus) + s_slack(2355,whea_I,plus) + s_slack(2355,whea_I,minus) + s_slack(2355,bean_H,plus) + s_slack(2355,bean_H,minus) + s_slack(2355,bean_L,plus) + s_slack(2355,bean_L,minus) + s_slack(2355,bean_S,plus)
     
      + s_slack(2355,bean_S,minus) + s_slack(2355,cass_L,plus) + s_slack(2355,cass_L,minus) + s_slack(2355,cass_S,plus) + s_slack(2355,cass_S,minus) + s_slack(2355,chic_H,plus) + s_slack(2355,chic_H,minus) + s_slack(2355,chic_L,plus)
     
      + s_slack(2355,chic_L,minus) + s_slack(2355,chic_S,plus) + s_slack(2355,chic_S,minus) + s_slack(2355,coff_H,plus) + s_slack(2355,coff_H,minus) + s_slack(2355,coff_L,plus) + s_slack(2355,coff_L,minus) + s_slack(2355,cott_L,plus)
     
      + s_slack(2355,cott_L,minus) + s_slack(2355,cowp_H,plus) + s_slack(2355,cowp_H,minus) + s_slack(2355,cowp_L,plus) + s_slack(2355,cowp_L,minus) + s_slack(2355,cowp_S,plus) + s_slack(2355,cowp_S,minus) + s_slack(2355,grou_H,plus)
     
      + s_slack(2355,grou_H,minus) + s_slack(2355,grou_L,plus) + s_slack(2355,grou_L,minus) + s_slack(2355,grou_S,plus) + s_slack(2355,grou_S,minus) + s_slack(2355,lent_H,plus) + s_slack(2355,lent_H,minus) + s_slack(2355,lent_L,plus)
     
      + s_slack(2355,lent_L,minus) + s_slack(2355,lent_S,plus) + s_slack(2355,lent_S,minus) + s_slack(2355,maiz_H,plus) + s_slack(2355,maiz_H,minus) + s_slack(2355,maiz_L,plus) + s_slack(2355,maiz_L,minus) + s_slack(2355,maiz_S,plus)
     
      + s_slack(2355,maiz_S,minus) + s_slack(2355,mill_H,plus) + s_slack(2355,mill_H,minus) + s_slack(2355,mill_L,plus) + s_slack(2355,mill_L,minus) + s_slack(2355,mill_S,plus) + s_slack(2355,mill_S,minus) + s_slack(2355,ofib_L,plus)
     
      + s_slack(2355,ofib_L,minus) + s_slack(2355,ooil_L,plus) + s_slack(2355,ooil_L,minus) + s_slack(2355,opul_H,plus) + s_slack(2355,opul_H,minus) + s_slack(2355,opul_L,plus) + s_slack(2355,opul_L,minus) + s_slack(2355,opul_S,plus)
     
      + s_slack(2355,opul_S,minus) + s_slack(2355,pige_H,plus) + s_slack(2355,pige_H,minus) + s_slack(2355,pige_L,plus) + s_slack(2355,pige_L,minus) + s_slack(2355,pige_S,plus) + s_slack(2355,pige_S,minus) + s_slack(2355,pota_H,plus)
     
      + s_slack(2355,pota_H,minus) + s_slack(2355,pota_L,plus) + s_slack(2355,pota_L,minus) + s_slack(2355,pota_S,plus) + s_slack(2355,pota_S,minus) + s_slack(2355,rest_H,plus) + s_slack(2355,rest_H,minus) + s_slack(2355,rest_L,plus)
     
      + s_slack(2355,rest_L,minus) + s_slack(2355,rest_S,plus) + s_slack(2355,rest_S,minus) + s_slack(2355,rice_H,plus) + s_slack(2355,rice_H,minus) + s_slack(2355,rice_L,plus) + s_slack(2355,rice_L,minus) + s_slack(2355,rice_S,plus)
     
      + s_slack(2355,rice_S,minus) + s_slack(2355,sorg_L,plus) + s_slack(2355,sorg_L,minus) + s_slack(2355,sorg_S,plus) + s_slack(2355,sorg_S,minus) + s_slack(2355,soyb_L,plus) + s_slack(2355,soyb_L,minus) + s_slack(2355,soyb_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 253
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2355,soyb_S,minus) + s_slack(2355,sunf_L,plus) + s_slack(2355,sunf_L,minus) + s_slack(2355,temf_H,plus) + s_slack(2355,temf_H,minus) + s_slack(2355,temf_L,plus) + s_slack(2355,temf_L,minus) + s_slack(2355,temf_S,plus)
     
      + s_slack(2355,temf_S,minus) + s_slack(2355,toba_H,plus) + s_slack(2355,toba_H,minus) + s_slack(2355,toba_L,plus) + s_slack(2355,toba_L,minus) + s_slack(2355,trof_L,plus) + s_slack(2355,trof_L,minus) + s_slack(2355,trof_S,plus)
     
      + s_slack(2355,trof_S,minus) + s_slack(2355,vege_H,plus) + s_slack(2355,vege_H,minus) + s_slack(2355,vege_L,plus) + s_slack(2355,vege_L,minus) + s_slack(2355,vege_S,plus) + s_slack(2355,vege_S,minus) + s_slack(2356,rice_I,plus)
     
      + s_slack(2356,rice_I,minus) + s_slack(2356,sugc_I,plus) + s_slack(2356,sugc_I,minus) + s_slack(2356,whea_I,plus) + s_slack(2356,whea_I,minus) + s_slack(2356,bean_H,plus) + s_slack(2356,bean_H,minus) + s_slack(2356,bean_L,plus)
     
      + s_slack(2356,bean_L,minus) + s_slack(2356,bean_S,plus) + s_slack(2356,bean_S,minus) + s_slack(2356,cass_L,plus) + s_slack(2356,cass_L,minus) + s_slack(2356,cass_S,plus) + s_slack(2356,cass_S,minus) + s_slack(2356,chic_H,plus)
     
      + s_slack(2356,chic_H,minus) + s_slack(2356,chic_L,plus) + s_slack(2356,chic_L,minus) + s_slack(2356,chic_S,plus) + s_slack(2356,chic_S,minus) + s_slack(2356,coff_H,plus) + s_slack(2356,coff_H,minus) + s_slack(2356,coff_L,plus)
     
      + s_slack(2356,coff_L,minus) + s_slack(2356,cott_L,plus) + s_slack(2356,cott_L,minus) + s_slack(2356,cowp_H,plus) + s_slack(2356,cowp_H,minus) + s_slack(2356,cowp_L,plus) + s_slack(2356,cowp_L,minus) + s_slack(2356,cowp_S,plus)
     
      + s_slack(2356,cowp_S,minus) + s_slack(2356,grou_H,plus) + s_slack(2356,grou_H,minus) + s_slack(2356,grou_L,plus) + s_slack(2356,grou_L,minus) + s_slack(2356,grou_S,plus) + s_slack(2356,grou_S,minus) + s_slack(2356,lent_H,plus)
     
      + s_slack(2356,lent_H,minus) + s_slack(2356,lent_L,plus) + s_slack(2356,lent_L,minus) + s_slack(2356,lent_S,plus) + s_slack(2356,lent_S,minus) + s_slack(2356,maiz_H,plus) + s_slack(2356,maiz_H,minus) + s_slack(2356,maiz_L,plus)
     
      + s_slack(2356,maiz_L,minus) + s_slack(2356,maiz_S,plus) + s_slack(2356,maiz_S,minus) + s_slack(2356,mill_H,plus) + s_slack(2356,mill_H,minus) + s_slack(2356,mill_L,plus) + s_slack(2356,mill_L,minus) + s_slack(2356,mill_S,plus)
     
      + s_slack(2356,mill_S,minus) + s_slack(2356,ofib_L,plus) + s_slack(2356,ofib_L,minus) + s_slack(2356,ooil_L,plus) + s_slack(2356,ooil_L,minus) + s_slack(2356,opul_H,plus) + s_slack(2356,opul_H,minus) + s_slack(2356,opul_L,plus)
     
      + s_slack(2356,opul_L,minus) + s_slack(2356,opul_S,plus) + s_slack(2356,opul_S,minus) + s_slack(2356,pige_H,plus) + s_slack(2356,pige_H,minus) + s_slack(2356,pige_L,plus) + s_slack(2356,pige_L,minus) + s_slack(2356,pige_S,plus)
     
      + s_slack(2356,pige_S,minus) + s_slack(2356,pota_H,plus) + s_slack(2356,pota_H,minus) + s_slack(2356,pota_L,plus) + s_slack(2356,pota_L,minus) + s_slack(2356,pota_S,plus) + s_slack(2356,pota_S,minus) + s_slack(2356,rest_H,plus)
     
      + s_slack(2356,rest_H,minus) + s_slack(2356,rest_L,plus) + s_slack(2356,rest_L,minus) + s_slack(2356,rest_S,plus) + s_slack(2356,rest_S,minus) + s_slack(2356,rice_H,plus) + s_slack(2356,rice_H,minus) + s_slack(2356,rice_L,plus)
     
      + s_slack(2356,rice_L,minus) + s_slack(2356,rice_S,plus) + s_slack(2356,rice_S,minus) + s_slack(2356,sorg_L,plus) + s_slack(2356,sorg_L,minus) + s_slack(2356,sorg_S,plus) + s_slack(2356,sorg_S,minus) + s_slack(2356,soyb_L,plus)
     
      + s_slack(2356,soyb_L,minus) + s_slack(2356,soyb_S,plus) + s_slack(2356,soyb_S,minus) + s_slack(2356,sunf_L,plus) + s_slack(2356,sunf_L,minus) + s_slack(2356,temf_H,plus) + s_slack(2356,temf_H,minus) + s_slack(2356,temf_L,plus)
     
      + s_slack(2356,temf_L,minus) + s_slack(2356,temf_S,plus) + s_slack(2356,temf_S,minus) + s_slack(2356,toba_H,plus) + s_slack(2356,toba_H,minus) + s_slack(2356,toba_L,plus) + s_slack(2356,toba_L,minus) + s_slack(2356,trof_L,plus)
     
      + s_slack(2356,trof_L,minus) + s_slack(2356,trof_S,plus) + s_slack(2356,trof_S,minus) + s_slack(2356,vege_H,plus) + s_slack(2356,vege_H,minus) + s_slack(2356,vege_L,plus) + s_slack(2356,vege_L,minus) + s_slack(2356,vege_S,plus)
     
      + s_slack(2356,vege_S,minus) + s_slack(2357,rice_I,plus) + s_slack(2357,rice_I,minus) + s_slack(2357,sugc_I,plus) + s_slack(2357,sugc_I,minus) + s_slack(2357,whea_I,plus) + s_slack(2357,whea_I,minus) + s_slack(2357,bean_H,plus)
     
      + s_slack(2357,bean_H,minus) + s_slack(2357,bean_L,plus) + s_slack(2357,bean_L,minus) + s_slack(2357,bean_S,plus) + s_slack(2357,bean_S,minus) + s_slack(2357,cass_L,plus) + s_slack(2357,cass_L,minus) + s_slack(2357,cass_S,plus)
     
      + s_slack(2357,cass_S,minus) + s_slack(2357,chic_H,plus) + s_slack(2357,chic_H,minus) + s_slack(2357,chic_L,plus) + s_slack(2357,chic_L,minus) + s_slack(2357,chic_S,plus) + s_slack(2357,chic_S,minus) + s_slack(2357,coff_H,plus)
     
      + s_slack(2357,coff_H,minus) + s_slack(2357,coff_L,plus) + s_slack(2357,coff_L,minus) + s_slack(2357,cott_L,plus) + s_slack(2357,cott_L,minus) + s_slack(2357,cowp_H,plus) + s_slack(2357,cowp_H,minus) + s_slack(2357,cowp_L,plus)
     
      + s_slack(2357,cowp_L,minus) + s_slack(2357,cowp_S,plus) + s_slack(2357,cowp_S,minus) + s_slack(2357,grou_H,plus) + s_slack(2357,grou_H,minus) + s_slack(2357,grou_L,plus) + s_slack(2357,grou_L,minus) + s_slack(2357,grou_S,plus)
     
      + s_slack(2357,grou_S,minus) + s_slack(2357,lent_H,plus) + s_slack(2357,lent_H,minus) + s_slack(2357,lent_L,plus) + s_slack(2357,lent_L,minus) + s_slack(2357,lent_S,plus) + s_slack(2357,lent_S,minus) + s_slack(2357,maiz_H,plus)
     
      + s_slack(2357,maiz_H,minus) + s_slack(2357,maiz_L,plus) + s_slack(2357,maiz_L,minus) + s_slack(2357,maiz_S,plus) + s_slack(2357,maiz_S,minus) + s_slack(2357,mill_H,plus) + s_slack(2357,mill_H,minus) + s_slack(2357,mill_L,plus)
     
      + s_slack(2357,mill_L,minus) + s_slack(2357,mill_S,plus) + s_slack(2357,mill_S,minus) + s_slack(2357,ofib_L,plus) + s_slack(2357,ofib_L,minus) + s_slack(2357,ooil_L,plus) + s_slack(2357,ooil_L,minus) + s_slack(2357,opul_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 254
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2357,opul_H,minus) + s_slack(2357,opul_L,plus) + s_slack(2357,opul_L,minus) + s_slack(2357,opul_S,plus) + s_slack(2357,opul_S,minus) + s_slack(2357,pige_H,plus) + s_slack(2357,pige_H,minus) + s_slack(2357,pige_L,plus)
     
      + s_slack(2357,pige_L,minus) + s_slack(2357,pige_S,plus) + s_slack(2357,pige_S,minus) + s_slack(2357,pota_H,plus) + s_slack(2357,pota_H,minus) + s_slack(2357,pota_L,plus) + s_slack(2357,pota_L,minus) + s_slack(2357,pota_S,plus)
     
      + s_slack(2357,pota_S,minus) + s_slack(2357,rest_H,plus) + s_slack(2357,rest_H,minus) + s_slack(2357,rest_L,plus) + s_slack(2357,rest_L,minus) + s_slack(2357,rest_S,plus) + s_slack(2357,rest_S,minus) + s_slack(2357,rice_H,plus)
     
      + s_slack(2357,rice_H,minus) + s_slack(2357,rice_L,plus) + s_slack(2357,rice_L,minus) + s_slack(2357,rice_S,plus) + s_slack(2357,rice_S,minus) + s_slack(2357,sorg_L,plus) + s_slack(2357,sorg_L,minus) + s_slack(2357,sorg_S,plus)
     
      + s_slack(2357,sorg_S,minus) + s_slack(2357,soyb_L,plus) + s_slack(2357,soyb_L,minus) + s_slack(2357,soyb_S,plus) + s_slack(2357,soyb_S,minus) + s_slack(2357,sunf_L,plus) + s_slack(2357,sunf_L,minus) + s_slack(2357,temf_H,plus)
     
      + s_slack(2357,temf_H,minus) + s_slack(2357,temf_L,plus) + s_slack(2357,temf_L,minus) + s_slack(2357,temf_S,plus) + s_slack(2357,temf_S,minus) + s_slack(2357,toba_H,plus) + s_slack(2357,toba_H,minus) + s_slack(2357,toba_L,plus)
     
      + s_slack(2357,toba_L,minus) + s_slack(2357,trof_L,plus) + s_slack(2357,trof_L,minus) + s_slack(2357,trof_S,plus) + s_slack(2357,trof_S,minus) + s_slack(2357,vege_H,plus) + s_slack(2357,vege_H,minus) + s_slack(2357,vege_L,plus)
     
      + s_slack(2357,vege_L,minus) + s_slack(2357,vege_S,plus) + s_slack(2357,vege_S,minus) + s_slack(2358,rice_I,plus) + s_slack(2358,rice_I,minus) + s_slack(2358,sugc_I,plus) + s_slack(2358,sugc_I,minus) + s_slack(2358,whea_I,plus)
     
      + s_slack(2358,whea_I,minus) + s_slack(2358,bean_H,plus) + s_slack(2358,bean_H,minus) + s_slack(2358,bean_L,plus) + s_slack(2358,bean_L,minus) + s_slack(2358,bean_S,plus) + s_slack(2358,bean_S,minus) + s_slack(2358,cass_L,plus)
     
      + s_slack(2358,cass_L,minus) + s_slack(2358,cass_S,plus) + s_slack(2358,cass_S,minus) + s_slack(2358,chic_H,plus) + s_slack(2358,chic_H,minus) + s_slack(2358,chic_L,plus) + s_slack(2358,chic_L,minus) + s_slack(2358,chic_S,plus)
     
      + s_slack(2358,chic_S,minus) + s_slack(2358,coff_H,plus) + s_slack(2358,coff_H,minus) + s_slack(2358,coff_L,plus) + s_slack(2358,coff_L,minus) + s_slack(2358,cott_L,plus) + s_slack(2358,cott_L,minus) + s_slack(2358,cowp_H,plus)
     
      + s_slack(2358,cowp_H,minus) + s_slack(2358,cowp_L,plus) + s_slack(2358,cowp_L,minus) + s_slack(2358,cowp_S,plus) + s_slack(2358,cowp_S,minus) + s_slack(2358,grou_H,plus) + s_slack(2358,grou_H,minus) + s_slack(2358,grou_L,plus)
     
      + s_slack(2358,grou_L,minus) + s_slack(2358,grou_S,plus) + s_slack(2358,grou_S,minus) + s_slack(2358,lent_H,plus) + s_slack(2358,lent_H,minus) + s_slack(2358,lent_L,plus) + s_slack(2358,lent_L,minus) + s_slack(2358,lent_S,plus)
     
      + s_slack(2358,lent_S,minus) + s_slack(2358,maiz_H,plus) + s_slack(2358,maiz_H,minus) + s_slack(2358,maiz_L,plus) + s_slack(2358,maiz_L,minus) + s_slack(2358,maiz_S,plus) + s_slack(2358,maiz_S,minus) + s_slack(2358,mill_H,plus)
     
      + s_slack(2358,mill_H,minus) + s_slack(2358,mill_L,plus) + s_slack(2358,mill_L,minus) + s_slack(2358,mill_S,plus) + s_slack(2358,mill_S,minus) + s_slack(2358,ofib_L,plus) + s_slack(2358,ofib_L,minus) + s_slack(2358,ooil_L,plus)
     
      + s_slack(2358,ooil_L,minus) + s_slack(2358,opul_H,plus) + s_slack(2358,opul_H,minus) + s_slack(2358,opul_L,plus) + s_slack(2358,opul_L,minus) + s_slack(2358,opul_S,plus) + s_slack(2358,opul_S,minus) + s_slack(2358,pige_H,plus)
     
      + s_slack(2358,pige_H,minus) + s_slack(2358,pige_L,plus) + s_slack(2358,pige_L,minus) + s_slack(2358,pige_S,plus) + s_slack(2358,pige_S,minus) + s_slack(2358,pota_H,plus) + s_slack(2358,pota_H,minus) + s_slack(2358,pota_L,plus)
     
      + s_slack(2358,pota_L,minus) + s_slack(2358,pota_S,plus) + s_slack(2358,pota_S,minus) + s_slack(2358,rest_H,plus) + s_slack(2358,rest_H,minus) + s_slack(2358,rest_L,plus) + s_slack(2358,rest_L,minus) + s_slack(2358,rest_S,plus)
     
      + s_slack(2358,rest_S,minus) + s_slack(2358,rice_H,plus) + s_slack(2358,rice_H,minus) + s_slack(2358,rice_L,plus) + s_slack(2358,rice_L,minus) + s_slack(2358,rice_S,plus) + s_slack(2358,rice_S,minus) + s_slack(2358,sorg_L,plus)
     
      + s_slack(2358,sorg_L,minus) + s_slack(2358,sorg_S,plus) + s_slack(2358,sorg_S,minus) + s_slack(2358,soyb_L,plus) + s_slack(2358,soyb_L,minus) + s_slack(2358,soyb_S,plus) + s_slack(2358,soyb_S,minus) + s_slack(2358,sunf_L,plus)
     
      + s_slack(2358,sunf_L,minus) + s_slack(2358,temf_H,plus) + s_slack(2358,temf_H,minus) + s_slack(2358,temf_L,plus) + s_slack(2358,temf_L,minus) + s_slack(2358,temf_S,plus) + s_slack(2358,temf_S,minus) + s_slack(2358,toba_H,plus)
     
      + s_slack(2358,toba_H,minus) + s_slack(2358,toba_L,plus) + s_slack(2358,toba_L,minus) + s_slack(2358,trof_L,plus) + s_slack(2358,trof_L,minus) + s_slack(2358,trof_S,plus) + s_slack(2358,trof_S,minus) + s_slack(2358,vege_H,plus)
     
      + s_slack(2358,vege_H,minus) + s_slack(2358,vege_L,plus) + s_slack(2358,vege_L,minus) + s_slack(2358,vege_S,plus) + s_slack(2358,vege_S,minus) + s_slack(2359,rice_I,plus) + s_slack(2359,rice_I,minus) + s_slack(2359,sugc_I,plus)
     
      + s_slack(2359,sugc_I,minus) + s_slack(2359,whea_I,plus) + s_slack(2359,whea_I,minus) + s_slack(2359,bean_H,plus) + s_slack(2359,bean_H,minus) + s_slack(2359,bean_L,plus) + s_slack(2359,bean_L,minus) + s_slack(2359,bean_S,plus)
     
      + s_slack(2359,bean_S,minus) + s_slack(2359,cass_L,plus) + s_slack(2359,cass_L,minus) + s_slack(2359,cass_S,plus) + s_slack(2359,cass_S,minus) + s_slack(2359,chic_H,plus) + s_slack(2359,chic_H,minus) + s_slack(2359,chic_L,plus)
     
      + s_slack(2359,chic_L,minus) + s_slack(2359,chic_S,plus) + s_slack(2359,chic_S,minus) + s_slack(2359,coff_H,plus) + s_slack(2359,coff_H,minus) + s_slack(2359,coff_L,plus) + s_slack(2359,coff_L,minus) + s_slack(2359,cott_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 255
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2359,cott_L,minus) + s_slack(2359,cowp_H,plus) + s_slack(2359,cowp_H,minus) + s_slack(2359,cowp_L,plus) + s_slack(2359,cowp_L,minus) + s_slack(2359,cowp_S,plus) + s_slack(2359,cowp_S,minus) + s_slack(2359,grou_H,plus)
     
      + s_slack(2359,grou_H,minus) + s_slack(2359,grou_L,plus) + s_slack(2359,grou_L,minus) + s_slack(2359,grou_S,plus) + s_slack(2359,grou_S,minus) + s_slack(2359,lent_H,plus) + s_slack(2359,lent_H,minus) + s_slack(2359,lent_L,plus)
     
      + s_slack(2359,lent_L,minus) + s_slack(2359,lent_S,plus) + s_slack(2359,lent_S,minus) + s_slack(2359,maiz_H,plus) + s_slack(2359,maiz_H,minus) + s_slack(2359,maiz_L,plus) + s_slack(2359,maiz_L,minus) + s_slack(2359,maiz_S,plus)
     
      + s_slack(2359,maiz_S,minus) + s_slack(2359,mill_H,plus) + s_slack(2359,mill_H,minus) + s_slack(2359,mill_L,plus) + s_slack(2359,mill_L,minus) + s_slack(2359,mill_S,plus) + s_slack(2359,mill_S,minus) + s_slack(2359,ofib_L,plus)
     
      + s_slack(2359,ofib_L,minus) + s_slack(2359,ooil_L,plus) + s_slack(2359,ooil_L,minus) + s_slack(2359,opul_H,plus) + s_slack(2359,opul_H,minus) + s_slack(2359,opul_L,plus) + s_slack(2359,opul_L,minus) + s_slack(2359,opul_S,plus)
     
      + s_slack(2359,opul_S,minus) + s_slack(2359,pige_H,plus) + s_slack(2359,pige_H,minus) + s_slack(2359,pige_L,plus) + s_slack(2359,pige_L,minus) + s_slack(2359,pige_S,plus) + s_slack(2359,pige_S,minus) + s_slack(2359,pota_H,plus)
     
      + s_slack(2359,pota_H,minus) + s_slack(2359,pota_L,plus) + s_slack(2359,pota_L,minus) + s_slack(2359,pota_S,plus) + s_slack(2359,pota_S,minus) + s_slack(2359,rest_H,plus) + s_slack(2359,rest_H,minus) + s_slack(2359,rest_L,plus)
     
      + s_slack(2359,rest_L,minus) + s_slack(2359,rest_S,plus) + s_slack(2359,rest_S,minus) + s_slack(2359,rice_H,plus) + s_slack(2359,rice_H,minus) + s_slack(2359,rice_L,plus) + s_slack(2359,rice_L,minus) + s_slack(2359,rice_S,plus)
     
      + s_slack(2359,rice_S,minus) + s_slack(2359,sorg_L,plus) + s_slack(2359,sorg_L,minus) + s_slack(2359,sorg_S,plus) + s_slack(2359,sorg_S,minus) + s_slack(2359,soyb_L,plus) + s_slack(2359,soyb_L,minus) + s_slack(2359,soyb_S,plus)
     
      + s_slack(2359,soyb_S,minus) + s_slack(2359,sunf_L,plus) + s_slack(2359,sunf_L,minus) + s_slack(2359,temf_H,plus) + s_slack(2359,temf_H,minus) + s_slack(2359,temf_L,plus) + s_slack(2359,temf_L,minus) + s_slack(2359,temf_S,plus)
     
      + s_slack(2359,temf_S,minus) + s_slack(2359,toba_H,plus) + s_slack(2359,toba_H,minus) + s_slack(2359,toba_L,plus) + s_slack(2359,toba_L,minus) + s_slack(2359,trof_L,plus) + s_slack(2359,trof_L,minus) + s_slack(2359,trof_S,plus)
     
      + s_slack(2359,trof_S,minus) + s_slack(2359,vege_H,plus) + s_slack(2359,vege_H,minus) + s_slack(2359,vege_L,plus) + s_slack(2359,vege_L,minus) + s_slack(2359,vege_S,plus) + s_slack(2359,vege_S,minus) + s_slack(2361,rice_I,plus)
     
      + s_slack(2361,rice_I,minus) + s_slack(2361,sugc_I,plus) + s_slack(2361,sugc_I,minus) + s_slack(2361,whea_I,plus) + s_slack(2361,whea_I,minus) + s_slack(2361,bean_H,plus) + s_slack(2361,bean_H,minus) + s_slack(2361,bean_L,plus)
     
      + s_slack(2361,bean_L,minus) + s_slack(2361,bean_S,plus) + s_slack(2361,bean_S,minus) + s_slack(2361,cass_L,plus) + s_slack(2361,cass_L,minus) + s_slack(2361,cass_S,plus) + s_slack(2361,cass_S,minus) + s_slack(2361,chic_H,plus)
     
      + s_slack(2361,chic_H,minus) + s_slack(2361,chic_L,plus) + s_slack(2361,chic_L,minus) + s_slack(2361,chic_S,plus) + s_slack(2361,chic_S,minus) + s_slack(2361,coff_H,plus) + s_slack(2361,coff_H,minus) + s_slack(2361,coff_L,plus)
     
      + s_slack(2361,coff_L,minus) + s_slack(2361,cott_L,plus) + s_slack(2361,cott_L,minus) + s_slack(2361,cowp_H,plus) + s_slack(2361,cowp_H,minus) + s_slack(2361,cowp_L,plus) + s_slack(2361,cowp_L,minus) + s_slack(2361,cowp_S,plus)
     
      + s_slack(2361,cowp_S,minus) + s_slack(2361,grou_H,plus) + s_slack(2361,grou_H,minus) + s_slack(2361,grou_L,plus) + s_slack(2361,grou_L,minus) + s_slack(2361,grou_S,plus) + s_slack(2361,grou_S,minus) + s_slack(2361,lent_H,plus)
     
      + s_slack(2361,lent_H,minus) + s_slack(2361,lent_L,plus) + s_slack(2361,lent_L,minus) + s_slack(2361,lent_S,plus) + s_slack(2361,lent_S,minus) + s_slack(2361,maiz_H,plus) + s_slack(2361,maiz_H,minus) + s_slack(2361,maiz_L,plus)
     
      + s_slack(2361,maiz_L,minus) + s_slack(2361,maiz_S,plus) + s_slack(2361,maiz_S,minus) + s_slack(2361,mill_H,plus) + s_slack(2361,mill_H,minus) + s_slack(2361,mill_L,plus) + s_slack(2361,mill_L,minus) + s_slack(2361,mill_S,plus)
     
      + s_slack(2361,mill_S,minus) + s_slack(2361,ofib_L,plus) + s_slack(2361,ofib_L,minus) + s_slack(2361,ooil_L,plus) + s_slack(2361,ooil_L,minus) + s_slack(2361,opul_H,plus) + s_slack(2361,opul_H,minus) + s_slack(2361,opul_L,plus)
     
      + s_slack(2361,opul_L,minus) + s_slack(2361,opul_S,plus) + s_slack(2361,opul_S,minus) + s_slack(2361,pige_H,plus) + s_slack(2361,pige_H,minus) + s_slack(2361,pige_L,plus) + s_slack(2361,pige_L,minus) + s_slack(2361,pige_S,plus)
     
      + s_slack(2361,pige_S,minus) + s_slack(2361,pota_H,plus) + s_slack(2361,pota_H,minus) + s_slack(2361,pota_L,plus) + s_slack(2361,pota_L,minus) + s_slack(2361,pota_S,plus) + s_slack(2361,pota_S,minus) + s_slack(2361,rest_H,plus)
     
      + s_slack(2361,rest_H,minus) + s_slack(2361,rest_L,plus) + s_slack(2361,rest_L,minus) + s_slack(2361,rest_S,plus) + s_slack(2361,rest_S,minus) + s_slack(2361,rice_H,plus) + s_slack(2361,rice_H,minus) + s_slack(2361,rice_L,plus)
     
      + s_slack(2361,rice_L,minus) + s_slack(2361,rice_S,plus) + s_slack(2361,rice_S,minus) + s_slack(2361,sorg_L,plus) + s_slack(2361,sorg_L,minus) + s_slack(2361,sorg_S,plus) + s_slack(2361,sorg_S,minus) + s_slack(2361,soyb_L,plus)
     
      + s_slack(2361,soyb_L,minus) + s_slack(2361,soyb_S,plus) + s_slack(2361,soyb_S,minus) + s_slack(2361,sunf_L,plus) + s_slack(2361,sunf_L,minus) + s_slack(2361,temf_H,plus) + s_slack(2361,temf_H,minus) + s_slack(2361,temf_L,plus)
     
      + s_slack(2361,temf_L,minus) + s_slack(2361,temf_S,plus) + s_slack(2361,temf_S,minus) + s_slack(2361,toba_H,plus) + s_slack(2361,toba_H,minus) + s_slack(2361,toba_L,plus) + s_slack(2361,toba_L,minus) + s_slack(2361,trof_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 256
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2361,trof_L,minus) + s_slack(2361,trof_S,plus) + s_slack(2361,trof_S,minus) + s_slack(2361,vege_H,plus) + s_slack(2361,vege_H,minus) + s_slack(2361,vege_L,plus) + s_slack(2361,vege_L,minus) + s_slack(2361,vege_S,plus)
     
      + s_slack(2361,vege_S,minus) + s_slack(2362,rice_I,plus) + s_slack(2362,rice_I,minus) + s_slack(2362,sugc_I,plus) + s_slack(2362,sugc_I,minus) + s_slack(2362,whea_I,plus) + s_slack(2362,whea_I,minus) + s_slack(2362,bean_H,plus)
     
      + s_slack(2362,bean_H,minus) + s_slack(2362,bean_L,plus) + s_slack(2362,bean_L,minus) + s_slack(2362,bean_S,plus) + s_slack(2362,bean_S,minus) + s_slack(2362,cass_L,plus) + s_slack(2362,cass_L,minus) + s_slack(2362,cass_S,plus)
     
      + s_slack(2362,cass_S,minus) + s_slack(2362,chic_H,plus) + s_slack(2362,chic_H,minus) + s_slack(2362,chic_L,plus) + s_slack(2362,chic_L,minus) + s_slack(2362,chic_S,plus) + s_slack(2362,chic_S,minus) + s_slack(2362,coff_H,plus)
     
      + s_slack(2362,coff_H,minus) + s_slack(2362,coff_L,plus) + s_slack(2362,coff_L,minus) + s_slack(2362,cott_L,plus) + s_slack(2362,cott_L,minus) + s_slack(2362,cowp_H,plus) + s_slack(2362,cowp_H,minus) + s_slack(2362,cowp_L,plus)
     
      + s_slack(2362,cowp_L,minus) + s_slack(2362,cowp_S,plus) + s_slack(2362,cowp_S,minus) + s_slack(2362,grou_H,plus) + s_slack(2362,grou_H,minus) + s_slack(2362,grou_L,plus) + s_slack(2362,grou_L,minus) + s_slack(2362,grou_S,plus)
     
      + s_slack(2362,grou_S,minus) + s_slack(2362,lent_H,plus) + s_slack(2362,lent_H,minus) + s_slack(2362,lent_L,plus) + s_slack(2362,lent_L,minus) + s_slack(2362,lent_S,plus) + s_slack(2362,lent_S,minus) + s_slack(2362,maiz_H,plus)
     
      + s_slack(2362,maiz_H,minus) + s_slack(2362,maiz_L,plus) + s_slack(2362,maiz_L,minus) + s_slack(2362,maiz_S,plus) + s_slack(2362,maiz_S,minus) + s_slack(2362,mill_H,plus) + s_slack(2362,mill_H,minus) + s_slack(2362,mill_L,plus)
     
      + s_slack(2362,mill_L,minus) + s_slack(2362,mill_S,plus) + s_slack(2362,mill_S,minus) + s_slack(2362,ofib_L,plus) + s_slack(2362,ofib_L,minus) + s_slack(2362,ooil_L,plus) + s_slack(2362,ooil_L,minus) + s_slack(2362,opul_H,plus)
     
      + s_slack(2362,opul_H,minus) + s_slack(2362,opul_L,plus) + s_slack(2362,opul_L,minus) + s_slack(2362,opul_S,plus) + s_slack(2362,opul_S,minus) + s_slack(2362,pige_H,plus) + s_slack(2362,pige_H,minus) + s_slack(2362,pige_L,plus)
     
      + s_slack(2362,pige_L,minus) + s_slack(2362,pige_S,plus) + s_slack(2362,pige_S,minus) + s_slack(2362,pota_H,plus) + s_slack(2362,pota_H,minus) + s_slack(2362,pota_L,plus) + s_slack(2362,pota_L,minus) + s_slack(2362,pota_S,plus)
     
      + s_slack(2362,pota_S,minus) + s_slack(2362,rest_H,plus) + s_slack(2362,rest_H,minus) + s_slack(2362,rest_L,plus) + s_slack(2362,rest_L,minus) + s_slack(2362,rest_S,plus) + s_slack(2362,rest_S,minus) + s_slack(2362,rice_H,plus)
     
      + s_slack(2362,rice_H,minus) + s_slack(2362,rice_L,plus) + s_slack(2362,rice_L,minus) + s_slack(2362,rice_S,plus) + s_slack(2362,rice_S,minus) + s_slack(2362,sorg_L,plus) + s_slack(2362,sorg_L,minus) + s_slack(2362,sorg_S,plus)
     
      + s_slack(2362,sorg_S,minus) + s_slack(2362,soyb_L,plus) + s_slack(2362,soyb_L,minus) + s_slack(2362,soyb_S,plus) + s_slack(2362,soyb_S,minus) + s_slack(2362,sunf_L,plus) + s_slack(2362,sunf_L,minus) + s_slack(2362,temf_H,plus)
     
      + s_slack(2362,temf_H,minus) + s_slack(2362,temf_L,plus) + s_slack(2362,temf_L,minus) + s_slack(2362,temf_S,plus) + s_slack(2362,temf_S,minus) + s_slack(2362,toba_H,plus) + s_slack(2362,toba_H,minus) + s_slack(2362,toba_L,plus)
     
      + s_slack(2362,toba_L,minus) + s_slack(2362,trof_L,plus) + s_slack(2362,trof_L,minus) + s_slack(2362,trof_S,plus) + s_slack(2362,trof_S,minus) + s_slack(2362,vege_H,plus) + s_slack(2362,vege_H,minus) + s_slack(2362,vege_L,plus)
     
      + s_slack(2362,vege_L,minus) + s_slack(2362,vege_S,plus) + s_slack(2362,vege_S,minus) + s_slack(2363,rice_I,plus) + s_slack(2363,rice_I,minus) + s_slack(2363,sugc_I,plus) + s_slack(2363,sugc_I,minus) + s_slack(2363,whea_I,plus)
     
      + s_slack(2363,whea_I,minus) + s_slack(2363,bean_H,plus) + s_slack(2363,bean_H,minus) + s_slack(2363,bean_L,plus) + s_slack(2363,bean_L,minus) + s_slack(2363,bean_S,plus) + s_slack(2363,bean_S,minus) + s_slack(2363,cass_L,plus)
     
      + s_slack(2363,cass_L,minus) + s_slack(2363,cass_S,plus) + s_slack(2363,cass_S,minus) + s_slack(2363,chic_H,plus) + s_slack(2363,chic_H,minus) + s_slack(2363,chic_L,plus) + s_slack(2363,chic_L,minus) + s_slack(2363,chic_S,plus)
     
      + s_slack(2363,chic_S,minus) + s_slack(2363,coff_H,plus) + s_slack(2363,coff_H,minus) + s_slack(2363,coff_L,plus) + s_slack(2363,coff_L,minus) + s_slack(2363,cott_L,plus) + s_slack(2363,cott_L,minus) + s_slack(2363,cowp_H,plus)
     
      + s_slack(2363,cowp_H,minus) + s_slack(2363,cowp_L,plus) + s_slack(2363,cowp_L,minus) + s_slack(2363,cowp_S,plus) + s_slack(2363,cowp_S,minus) + s_slack(2363,grou_H,plus) + s_slack(2363,grou_H,minus) + s_slack(2363,grou_L,plus)
     
      + s_slack(2363,grou_L,minus) + s_slack(2363,grou_S,plus) + s_slack(2363,grou_S,minus) + s_slack(2363,lent_H,plus) + s_slack(2363,lent_H,minus) + s_slack(2363,lent_L,plus) + s_slack(2363,lent_L,minus) + s_slack(2363,lent_S,plus)
     
      + s_slack(2363,lent_S,minus) + s_slack(2363,maiz_H,plus) + s_slack(2363,maiz_H,minus) + s_slack(2363,maiz_L,plus) + s_slack(2363,maiz_L,minus) + s_slack(2363,maiz_S,plus) + s_slack(2363,maiz_S,minus) + s_slack(2363,mill_H,plus)
     
      + s_slack(2363,mill_H,minus) + s_slack(2363,mill_L,plus) + s_slack(2363,mill_L,minus) + s_slack(2363,mill_S,plus) + s_slack(2363,mill_S,minus) + s_slack(2363,ofib_L,plus) + s_slack(2363,ofib_L,minus) + s_slack(2363,ooil_L,plus)
     
      + s_slack(2363,ooil_L,minus) + s_slack(2363,opul_H,plus) + s_slack(2363,opul_H,minus) + s_slack(2363,opul_L,plus) + s_slack(2363,opul_L,minus) + s_slack(2363,opul_S,plus) + s_slack(2363,opul_S,minus) + s_slack(2363,pige_H,plus)
     
      + s_slack(2363,pige_H,minus) + s_slack(2363,pige_L,plus) + s_slack(2363,pige_L,minus) + s_slack(2363,pige_S,plus) + s_slack(2363,pige_S,minus) + s_slack(2363,pota_H,plus) + s_slack(2363,pota_H,minus) + s_slack(2363,pota_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 257
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2363,pota_L,minus) + s_slack(2363,pota_S,plus) + s_slack(2363,pota_S,minus) + s_slack(2363,rest_H,plus) + s_slack(2363,rest_H,minus) + s_slack(2363,rest_L,plus) + s_slack(2363,rest_L,minus) + s_slack(2363,rest_S,plus)
     
      + s_slack(2363,rest_S,minus) + s_slack(2363,rice_H,plus) + s_slack(2363,rice_H,minus) + s_slack(2363,rice_L,plus) + s_slack(2363,rice_L,minus) + s_slack(2363,rice_S,plus) + s_slack(2363,rice_S,minus) + s_slack(2363,sorg_L,plus)
     
      + s_slack(2363,sorg_L,minus) + s_slack(2363,sorg_S,plus) + s_slack(2363,sorg_S,minus) + s_slack(2363,soyb_L,plus) + s_slack(2363,soyb_L,minus) + s_slack(2363,soyb_S,plus) + s_slack(2363,soyb_S,minus) + s_slack(2363,sunf_L,plus)
     
      + s_slack(2363,sunf_L,minus) + s_slack(2363,temf_H,plus) + s_slack(2363,temf_H,minus) + s_slack(2363,temf_L,plus) + s_slack(2363,temf_L,minus) + s_slack(2363,temf_S,plus) + s_slack(2363,temf_S,minus) + s_slack(2363,toba_H,plus)
     
      + s_slack(2363,toba_H,minus) + s_slack(2363,toba_L,plus) + s_slack(2363,toba_L,minus) + s_slack(2363,trof_L,plus) + s_slack(2363,trof_L,minus) + s_slack(2363,trof_S,plus) + s_slack(2363,trof_S,minus) + s_slack(2363,vege_H,plus)
     
      + s_slack(2363,vege_H,minus) + s_slack(2363,vege_L,plus) + s_slack(2363,vege_L,minus) + s_slack(2363,vege_S,plus) + s_slack(2363,vege_S,minus) + s_slack(2364,rice_I,plus) + s_slack(2364,rice_I,minus) + s_slack(2364,sugc_I,plus)
     
      + s_slack(2364,sugc_I,minus) + s_slack(2364,whea_I,plus) + s_slack(2364,whea_I,minus) + s_slack(2364,bean_H,plus) + s_slack(2364,bean_H,minus) + s_slack(2364,bean_L,plus) + s_slack(2364,bean_L,minus) + s_slack(2364,bean_S,plus)
     
      + s_slack(2364,bean_S,minus) + s_slack(2364,cass_L,plus) + s_slack(2364,cass_L,minus) + s_slack(2364,cass_S,plus) + s_slack(2364,cass_S,minus) + s_slack(2364,chic_H,plus) + s_slack(2364,chic_H,minus) + s_slack(2364,chic_L,plus)
     
      + s_slack(2364,chic_L,minus) + s_slack(2364,chic_S,plus) + s_slack(2364,chic_S,minus) + s_slack(2364,coff_H,plus) + s_slack(2364,coff_H,minus) + s_slack(2364,coff_L,plus) + s_slack(2364,coff_L,minus) + s_slack(2364,cott_L,plus)
     
      + s_slack(2364,cott_L,minus) + s_slack(2364,cowp_H,plus) + s_slack(2364,cowp_H,minus) + s_slack(2364,cowp_L,plus) + s_slack(2364,cowp_L,minus) + s_slack(2364,cowp_S,plus) + s_slack(2364,cowp_S,minus) + s_slack(2364,grou_H,plus)
     
      + s_slack(2364,grou_H,minus) + s_slack(2364,grou_L,plus) + s_slack(2364,grou_L,minus) + s_slack(2364,grou_S,plus) + s_slack(2364,grou_S,minus) + s_slack(2364,lent_H,plus) + s_slack(2364,lent_H,minus) + s_slack(2364,lent_L,plus)
     
      + s_slack(2364,lent_L,minus) + s_slack(2364,lent_S,plus) + s_slack(2364,lent_S,minus) + s_slack(2364,maiz_H,plus) + s_slack(2364,maiz_H,minus) + s_slack(2364,maiz_L,plus) + s_slack(2364,maiz_L,minus) + s_slack(2364,maiz_S,plus)
     
      + s_slack(2364,maiz_S,minus) + s_slack(2364,mill_H,plus) + s_slack(2364,mill_H,minus) + s_slack(2364,mill_L,plus) + s_slack(2364,mill_L,minus) + s_slack(2364,mill_S,plus) + s_slack(2364,mill_S,minus) + s_slack(2364,ofib_L,plus)
     
      + s_slack(2364,ofib_L,minus) + s_slack(2364,ooil_L,plus) + s_slack(2364,ooil_L,minus) + s_slack(2364,opul_H,plus) + s_slack(2364,opul_H,minus) + s_slack(2364,opul_L,plus) + s_slack(2364,opul_L,minus) + s_slack(2364,opul_S,plus)
     
      + s_slack(2364,opul_S,minus) + s_slack(2364,pige_H,plus) + s_slack(2364,pige_H,minus) + s_slack(2364,pige_L,plus) + s_slack(2364,pige_L,minus) + s_slack(2364,pige_S,plus) + s_slack(2364,pige_S,minus) + s_slack(2364,pota_H,plus)
     
      + s_slack(2364,pota_H,minus) + s_slack(2364,pota_L,plus) + s_slack(2364,pota_L,minus) + s_slack(2364,pota_S,plus) + s_slack(2364,pota_S,minus) + s_slack(2364,rest_H,plus) + s_slack(2364,rest_H,minus) + s_slack(2364,rest_L,plus)
     
      + s_slack(2364,rest_L,minus) + s_slack(2364,rest_S,plus) + s_slack(2364,rest_S,minus) + s_slack(2364,rice_H,plus) + s_slack(2364,rice_H,minus) + s_slack(2364,rice_L,plus) + s_slack(2364,rice_L,minus) + s_slack(2364,rice_S,plus)
     
      + s_slack(2364,rice_S,minus) + s_slack(2364,sorg_L,plus) + s_slack(2364,sorg_L,minus) + s_slack(2364,sorg_S,plus) + s_slack(2364,sorg_S,minus) + s_slack(2364,soyb_L,plus) + s_slack(2364,soyb_L,minus) + s_slack(2364,soyb_S,plus)
     
      + s_slack(2364,soyb_S,minus) + s_slack(2364,sunf_L,plus) + s_slack(2364,sunf_L,minus) + s_slack(2364,temf_H,plus) + s_slack(2364,temf_H,minus) + s_slack(2364,temf_L,plus) + s_slack(2364,temf_L,minus) + s_slack(2364,temf_S,plus)
     
      + s_slack(2364,temf_S,minus) + s_slack(2364,toba_H,plus) + s_slack(2364,toba_H,minus) + s_slack(2364,toba_L,plus) + s_slack(2364,toba_L,minus) + s_slack(2364,trof_L,plus) + s_slack(2364,trof_L,minus) + s_slack(2364,trof_S,plus)
     
      + s_slack(2364,trof_S,minus) + s_slack(2364,vege_H,plus) + s_slack(2364,vege_H,minus) + s_slack(2364,vege_L,plus) + s_slack(2364,vege_L,minus) + s_slack(2364,vege_S,plus) + s_slack(2364,vege_S,minus) + s_slack(2365,rice_I,plus)
     
      + s_slack(2365,rice_I,minus) + s_slack(2365,sugc_I,plus) + s_slack(2365,sugc_I,minus) + s_slack(2365,whea_I,plus) + s_slack(2365,whea_I,minus) + s_slack(2365,bean_H,plus) + s_slack(2365,bean_H,minus) + s_slack(2365,bean_L,plus)
     
      + s_slack(2365,bean_L,minus) + s_slack(2365,bean_S,plus) + s_slack(2365,bean_S,minus) + s_slack(2365,cass_L,plus) + s_slack(2365,cass_L,minus) + s_slack(2365,cass_S,plus) + s_slack(2365,cass_S,minus) + s_slack(2365,chic_H,plus)
     
      + s_slack(2365,chic_H,minus) + s_slack(2365,chic_L,plus) + s_slack(2365,chic_L,minus) + s_slack(2365,chic_S,plus) + s_slack(2365,chic_S,minus) + s_slack(2365,coff_H,plus) + s_slack(2365,coff_H,minus) + s_slack(2365,coff_L,plus)
     
      + s_slack(2365,coff_L,minus) + s_slack(2365,cott_L,plus) + s_slack(2365,cott_L,minus) + s_slack(2365,cowp_H,plus) + s_slack(2365,cowp_H,minus) + s_slack(2365,cowp_L,plus) + s_slack(2365,cowp_L,minus) + s_slack(2365,cowp_S,plus)
     
      + s_slack(2365,cowp_S,minus) + s_slack(2365,grou_H,plus) + s_slack(2365,grou_H,minus) + s_slack(2365,grou_L,plus) + s_slack(2365,grou_L,minus) + s_slack(2365,grou_S,plus) + s_slack(2365,grou_S,minus) + s_slack(2365,lent_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 258
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2365,lent_H,minus) + s_slack(2365,lent_L,plus) + s_slack(2365,lent_L,minus) + s_slack(2365,lent_S,plus) + s_slack(2365,lent_S,minus) + s_slack(2365,maiz_H,plus) + s_slack(2365,maiz_H,minus) + s_slack(2365,maiz_L,plus)
     
      + s_slack(2365,maiz_L,minus) + s_slack(2365,maiz_S,plus) + s_slack(2365,maiz_S,minus) + s_slack(2365,mill_H,plus) + s_slack(2365,mill_H,minus) + s_slack(2365,mill_L,plus) + s_slack(2365,mill_L,minus) + s_slack(2365,mill_S,plus)
     
      + s_slack(2365,mill_S,minus) + s_slack(2365,ofib_L,plus) + s_slack(2365,ofib_L,minus) + s_slack(2365,ooil_L,plus) + s_slack(2365,ooil_L,minus) + s_slack(2365,opul_H,plus) + s_slack(2365,opul_H,minus) + s_slack(2365,opul_L,plus)
     
      + s_slack(2365,opul_L,minus) + s_slack(2365,opul_S,plus) + s_slack(2365,opul_S,minus) + s_slack(2365,pige_H,plus) + s_slack(2365,pige_H,minus) + s_slack(2365,pige_L,plus) + s_slack(2365,pige_L,minus) + s_slack(2365,pige_S,plus)
     
      + s_slack(2365,pige_S,minus) + s_slack(2365,pota_H,plus) + s_slack(2365,pota_H,minus) + s_slack(2365,pota_L,plus) + s_slack(2365,pota_L,minus) + s_slack(2365,pota_S,plus) + s_slack(2365,pota_S,minus) + s_slack(2365,rest_H,plus)
     
      + s_slack(2365,rest_H,minus) + s_slack(2365,rest_L,plus) + s_slack(2365,rest_L,minus) + s_slack(2365,rest_S,plus) + s_slack(2365,rest_S,minus) + s_slack(2365,rice_H,plus) + s_slack(2365,rice_H,minus) + s_slack(2365,rice_L,plus)
     
      + s_slack(2365,rice_L,minus) + s_slack(2365,rice_S,plus) + s_slack(2365,rice_S,minus) + s_slack(2365,sorg_L,plus) + s_slack(2365,sorg_L,minus) + s_slack(2365,sorg_S,plus) + s_slack(2365,sorg_S,minus) + s_slack(2365,soyb_L,plus)
     
      + s_slack(2365,soyb_L,minus) + s_slack(2365,soyb_S,plus) + s_slack(2365,soyb_S,minus) + s_slack(2365,sunf_L,plus) + s_slack(2365,sunf_L,minus) + s_slack(2365,temf_H,plus) + s_slack(2365,temf_H,minus) + s_slack(2365,temf_L,plus)
     
      + s_slack(2365,temf_L,minus) + s_slack(2365,temf_S,plus) + s_slack(2365,temf_S,minus) + s_slack(2365,toba_H,plus) + s_slack(2365,toba_H,minus) + s_slack(2365,toba_L,plus) + s_slack(2365,toba_L,minus) + s_slack(2365,trof_L,plus)
     
      + s_slack(2365,trof_L,minus) + s_slack(2365,trof_S,plus) + s_slack(2365,trof_S,minus) + s_slack(2365,vege_H,plus) + s_slack(2365,vege_H,minus) + s_slack(2365,vege_L,plus) + s_slack(2365,vege_L,minus) + s_slack(2365,vege_S,plus)
     
      + s_slack(2365,vege_S,minus) + s_slack(2393,rice_I,plus) + s_slack(2393,rice_I,minus) + s_slack(2393,sugc_I,plus) + s_slack(2393,sugc_I,minus) + s_slack(2393,whea_I,plus) + s_slack(2393,whea_I,minus) + s_slack(2393,bean_H,plus)
     
      + s_slack(2393,bean_H,minus) + s_slack(2393,bean_L,plus) + s_slack(2393,bean_L,minus) + s_slack(2393,bean_S,plus) + s_slack(2393,bean_S,minus) + s_slack(2393,cass_L,plus) + s_slack(2393,cass_L,minus) + s_slack(2393,cass_S,plus)
     
      + s_slack(2393,cass_S,minus) + s_slack(2393,chic_H,plus) + s_slack(2393,chic_H,minus) + s_slack(2393,chic_L,plus) + s_slack(2393,chic_L,minus) + s_slack(2393,chic_S,plus) + s_slack(2393,chic_S,minus) + s_slack(2393,coff_H,plus)
     
      + s_slack(2393,coff_H,minus) + s_slack(2393,coff_L,plus) + s_slack(2393,coff_L,minus) + s_slack(2393,cott_L,plus) + s_slack(2393,cott_L,minus) + s_slack(2393,cowp_H,plus) + s_slack(2393,cowp_H,minus) + s_slack(2393,cowp_L,plus)
     
      + s_slack(2393,cowp_L,minus) + s_slack(2393,cowp_S,plus) + s_slack(2393,cowp_S,minus) + s_slack(2393,grou_H,plus) + s_slack(2393,grou_H,minus) + s_slack(2393,grou_L,plus) + s_slack(2393,grou_L,minus) + s_slack(2393,grou_S,plus)
     
      + s_slack(2393,grou_S,minus) + s_slack(2393,lent_H,plus) + s_slack(2393,lent_H,minus) + s_slack(2393,lent_L,plus) + s_slack(2393,lent_L,minus) + s_slack(2393,lent_S,plus) + s_slack(2393,lent_S,minus) + s_slack(2393,maiz_H,plus)
     
      + s_slack(2393,maiz_H,minus) + s_slack(2393,maiz_L,plus) + s_slack(2393,maiz_L,minus) + s_slack(2393,maiz_S,plus) + s_slack(2393,maiz_S,minus) + s_slack(2393,mill_H,plus) + s_slack(2393,mill_H,minus) + s_slack(2393,mill_L,plus)
     
      + s_slack(2393,mill_L,minus) + s_slack(2393,mill_S,plus) + s_slack(2393,mill_S,minus) + s_slack(2393,ofib_L,plus) + s_slack(2393,ofib_L,minus) + s_slack(2393,ooil_L,plus) + s_slack(2393,ooil_L,minus) + s_slack(2393,opul_H,plus)
     
      + s_slack(2393,opul_H,minus) + s_slack(2393,opul_L,plus) + s_slack(2393,opul_L,minus) + s_slack(2393,opul_S,plus) + s_slack(2393,opul_S,minus) + s_slack(2393,pige_H,plus) + s_slack(2393,pige_H,minus) + s_slack(2393,pige_L,plus)
     
      + s_slack(2393,pige_L,minus) + s_slack(2393,pige_S,plus) + s_slack(2393,pige_S,minus) + s_slack(2393,pota_H,plus) + s_slack(2393,pota_H,minus) + s_slack(2393,pota_L,plus) + s_slack(2393,pota_L,minus) + s_slack(2393,pota_S,plus)
     
      + s_slack(2393,pota_S,minus) + s_slack(2393,rest_H,plus) + s_slack(2393,rest_H,minus) + s_slack(2393,rest_L,plus) + s_slack(2393,rest_L,minus) + s_slack(2393,rest_S,plus) + s_slack(2393,rest_S,minus) + s_slack(2393,rice_H,plus)
     
      + s_slack(2393,rice_H,minus) + s_slack(2393,rice_L,plus) + s_slack(2393,rice_L,minus) + s_slack(2393,rice_S,plus) + s_slack(2393,rice_S,minus) + s_slack(2393,sorg_L,plus) + s_slack(2393,sorg_L,minus) + s_slack(2393,sorg_S,plus)
     
      + s_slack(2393,sorg_S,minus) + s_slack(2393,soyb_L,plus) + s_slack(2393,soyb_L,minus) + s_slack(2393,soyb_S,plus) + s_slack(2393,soyb_S,minus) + s_slack(2393,sunf_L,plus) + s_slack(2393,sunf_L,minus) + s_slack(2393,temf_H,plus)
     
      + s_slack(2393,temf_H,minus) + s_slack(2393,temf_L,plus) + s_slack(2393,temf_L,minus) + s_slack(2393,temf_S,plus) + s_slack(2393,temf_S,minus) + s_slack(2393,toba_H,plus) + s_slack(2393,toba_H,minus) + s_slack(2393,toba_L,plus)
     
      + s_slack(2393,toba_L,minus) + s_slack(2393,trof_L,plus) + s_slack(2393,trof_L,minus) + s_slack(2393,trof_S,plus) + s_slack(2393,trof_S,minus) + s_slack(2393,vege_H,plus) + s_slack(2393,vege_H,minus) + s_slack(2393,vege_L,plus)
     
      + s_slack(2393,vege_L,minus) + s_slack(2393,vege_S,plus) + s_slack(2393,vege_S,minus) + s_slack(2395,rice_I,plus) + s_slack(2395,rice_I,minus) + s_slack(2395,sugc_I,plus) + s_slack(2395,sugc_I,minus) + s_slack(2395,whea_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 259
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2395,whea_I,minus) + s_slack(2395,bean_H,plus) + s_slack(2395,bean_H,minus) + s_slack(2395,bean_L,plus) + s_slack(2395,bean_L,minus) + s_slack(2395,bean_S,plus) + s_slack(2395,bean_S,minus) + s_slack(2395,cass_L,plus)
     
      + s_slack(2395,cass_L,minus) + s_slack(2395,cass_S,plus) + s_slack(2395,cass_S,minus) + s_slack(2395,chic_H,plus) + s_slack(2395,chic_H,minus) + s_slack(2395,chic_L,plus) + s_slack(2395,chic_L,minus) + s_slack(2395,chic_S,plus)
     
      + s_slack(2395,chic_S,minus) + s_slack(2395,coff_H,plus) + s_slack(2395,coff_H,minus) + s_slack(2395,coff_L,plus) + s_slack(2395,coff_L,minus) + s_slack(2395,cott_L,plus) + s_slack(2395,cott_L,minus) + s_slack(2395,cowp_H,plus)
     
      + s_slack(2395,cowp_H,minus) + s_slack(2395,cowp_L,plus) + s_slack(2395,cowp_L,minus) + s_slack(2395,cowp_S,plus) + s_slack(2395,cowp_S,minus) + s_slack(2395,grou_H,plus) + s_slack(2395,grou_H,minus) + s_slack(2395,grou_L,plus)
     
      + s_slack(2395,grou_L,minus) + s_slack(2395,grou_S,plus) + s_slack(2395,grou_S,minus) + s_slack(2395,lent_H,plus) + s_slack(2395,lent_H,minus) + s_slack(2395,lent_L,plus) + s_slack(2395,lent_L,minus) + s_slack(2395,lent_S,plus)
     
      + s_slack(2395,lent_S,minus) + s_slack(2395,maiz_H,plus) + s_slack(2395,maiz_H,minus) + s_slack(2395,maiz_L,plus) + s_slack(2395,maiz_L,minus) + s_slack(2395,maiz_S,plus) + s_slack(2395,maiz_S,minus) + s_slack(2395,mill_H,plus)
     
      + s_slack(2395,mill_H,minus) + s_slack(2395,mill_L,plus) + s_slack(2395,mill_L,minus) + s_slack(2395,mill_S,plus) + s_slack(2395,mill_S,minus) + s_slack(2395,ofib_L,plus) + s_slack(2395,ofib_L,minus) + s_slack(2395,ooil_L,plus)
     
      + s_slack(2395,ooil_L,minus) + s_slack(2395,opul_H,plus) + s_slack(2395,opul_H,minus) + s_slack(2395,opul_L,plus) + s_slack(2395,opul_L,minus) + s_slack(2395,opul_S,plus) + s_slack(2395,opul_S,minus) + s_slack(2395,pige_H,plus)
     
      + s_slack(2395,pige_H,minus) + s_slack(2395,pige_L,plus) + s_slack(2395,pige_L,minus) + s_slack(2395,pige_S,plus) + s_slack(2395,pige_S,minus) + s_slack(2395,pota_H,plus) + s_slack(2395,pota_H,minus) + s_slack(2395,pota_L,plus)
     
      + s_slack(2395,pota_L,minus) + s_slack(2395,pota_S,plus) + s_slack(2395,pota_S,minus) + s_slack(2395,rest_H,plus) + s_slack(2395,rest_H,minus) + s_slack(2395,rest_L,plus) + s_slack(2395,rest_L,minus) + s_slack(2395,rest_S,plus)
     
      + s_slack(2395,rest_S,minus) + s_slack(2395,rice_H,plus) + s_slack(2395,rice_H,minus) + s_slack(2395,rice_L,plus) + s_slack(2395,rice_L,minus) + s_slack(2395,rice_S,plus) + s_slack(2395,rice_S,minus) + s_slack(2395,sorg_L,plus)
     
      + s_slack(2395,sorg_L,minus) + s_slack(2395,sorg_S,plus) + s_slack(2395,sorg_S,minus) + s_slack(2395,soyb_L,plus) + s_slack(2395,soyb_L,minus) + s_slack(2395,soyb_S,plus) + s_slack(2395,soyb_S,minus) + s_slack(2395,sunf_L,plus)
     
      + s_slack(2395,sunf_L,minus) + s_slack(2395,temf_H,plus) + s_slack(2395,temf_H,minus) + s_slack(2395,temf_L,plus) + s_slack(2395,temf_L,minus) + s_slack(2395,temf_S,plus) + s_slack(2395,temf_S,minus) + s_slack(2395,toba_H,plus)
     
      + s_slack(2395,toba_H,minus) + s_slack(2395,toba_L,plus) + s_slack(2395,toba_L,minus) + s_slack(2395,trof_L,plus) + s_slack(2395,trof_L,minus) + s_slack(2395,trof_S,plus) + s_slack(2395,trof_S,minus) + s_slack(2395,vege_H,plus)
     
      + s_slack(2395,vege_H,minus) + s_slack(2395,vege_L,plus) + s_slack(2395,vege_L,minus) + s_slack(2395,vege_S,plus) + s_slack(2395,vege_S,minus) + s_slack(2396,rice_I,plus) + s_slack(2396,rice_I,minus) + s_slack(2396,sugc_I,plus)
     
      + s_slack(2396,sugc_I,minus) + s_slack(2396,whea_I,plus) + s_slack(2396,whea_I,minus) + s_slack(2396,bean_H,plus) + s_slack(2396,bean_H,minus) + s_slack(2396,bean_L,plus) + s_slack(2396,bean_L,minus) + s_slack(2396,bean_S,plus)
     
      + s_slack(2396,bean_S,minus) + s_slack(2396,cass_L,plus) + s_slack(2396,cass_L,minus) + s_slack(2396,cass_S,plus) + s_slack(2396,cass_S,minus) + s_slack(2396,chic_H,plus) + s_slack(2396,chic_H,minus) + s_slack(2396,chic_L,plus)
     
      + s_slack(2396,chic_L,minus) + s_slack(2396,chic_S,plus) + s_slack(2396,chic_S,minus) + s_slack(2396,coff_H,plus) + s_slack(2396,coff_H,minus) + s_slack(2396,coff_L,plus) + s_slack(2396,coff_L,minus) + s_slack(2396,cott_L,plus)
     
      + s_slack(2396,cott_L,minus) + s_slack(2396,cowp_H,plus) + s_slack(2396,cowp_H,minus) + s_slack(2396,cowp_L,plus) + s_slack(2396,cowp_L,minus) + s_slack(2396,cowp_S,plus) + s_slack(2396,cowp_S,minus) + s_slack(2396,grou_H,plus)
     
      + s_slack(2396,grou_H,minus) + s_slack(2396,grou_L,plus) + s_slack(2396,grou_L,minus) + s_slack(2396,grou_S,plus) + s_slack(2396,grou_S,minus) + s_slack(2396,lent_H,plus) + s_slack(2396,lent_H,minus) + s_slack(2396,lent_L,plus)
     
      + s_slack(2396,lent_L,minus) + s_slack(2396,lent_S,plus) + s_slack(2396,lent_S,minus) + s_slack(2396,maiz_H,plus) + s_slack(2396,maiz_H,minus) + s_slack(2396,maiz_L,plus) + s_slack(2396,maiz_L,minus) + s_slack(2396,maiz_S,plus)
     
      + s_slack(2396,maiz_S,minus) + s_slack(2396,mill_H,plus) + s_slack(2396,mill_H,minus) + s_slack(2396,mill_L,plus) + s_slack(2396,mill_L,minus) + s_slack(2396,mill_S,plus) + s_slack(2396,mill_S,minus) + s_slack(2396,ofib_L,plus)
     
      + s_slack(2396,ofib_L,minus) + s_slack(2396,ooil_L,plus) + s_slack(2396,ooil_L,minus) + s_slack(2396,opul_H,plus) + s_slack(2396,opul_H,minus) + s_slack(2396,opul_L,plus) + s_slack(2396,opul_L,minus) + s_slack(2396,opul_S,plus)
     
      + s_slack(2396,opul_S,minus) + s_slack(2396,pige_H,plus) + s_slack(2396,pige_H,minus) + s_slack(2396,pige_L,plus) + s_slack(2396,pige_L,minus) + s_slack(2396,pige_S,plus) + s_slack(2396,pige_S,minus) + s_slack(2396,pota_H,plus)
     
      + s_slack(2396,pota_H,minus) + s_slack(2396,pota_L,plus) + s_slack(2396,pota_L,minus) + s_slack(2396,pota_S,plus) + s_slack(2396,pota_S,minus) + s_slack(2396,rest_H,plus) + s_slack(2396,rest_H,minus) + s_slack(2396,rest_L,plus)
     
      + s_slack(2396,rest_L,minus) + s_slack(2396,rest_S,plus) + s_slack(2396,rest_S,minus) + s_slack(2396,rice_H,plus) + s_slack(2396,rice_H,minus) + s_slack(2396,rice_L,plus) + s_slack(2396,rice_L,minus) + s_slack(2396,rice_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 260
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2396,rice_S,minus) + s_slack(2396,sorg_L,plus) + s_slack(2396,sorg_L,minus) + s_slack(2396,sorg_S,plus) + s_slack(2396,sorg_S,minus) + s_slack(2396,soyb_L,plus) + s_slack(2396,soyb_L,minus) + s_slack(2396,soyb_S,plus)
     
      + s_slack(2396,soyb_S,minus) + s_slack(2396,sunf_L,plus) + s_slack(2396,sunf_L,minus) + s_slack(2396,temf_H,plus) + s_slack(2396,temf_H,minus) + s_slack(2396,temf_L,plus) + s_slack(2396,temf_L,minus) + s_slack(2396,temf_S,plus)
     
      + s_slack(2396,temf_S,minus) + s_slack(2396,toba_H,plus) + s_slack(2396,toba_H,minus) + s_slack(2396,toba_L,plus) + s_slack(2396,toba_L,minus) + s_slack(2396,trof_L,plus) + s_slack(2396,trof_L,minus) + s_slack(2396,trof_S,plus)
     
      + s_slack(2396,trof_S,minus) + s_slack(2396,vege_H,plus) + s_slack(2396,vege_H,minus) + s_slack(2396,vege_L,plus) + s_slack(2396,vege_L,minus) + s_slack(2396,vege_S,plus) + s_slack(2396,vege_S,minus) + s_slack(2401,rice_I,plus)
     
      + s_slack(2401,rice_I,minus) + s_slack(2401,sugc_I,plus) + s_slack(2401,sugc_I,minus) + s_slack(2401,whea_I,plus) + s_slack(2401,whea_I,minus) + s_slack(2401,bean_H,plus) + s_slack(2401,bean_H,minus) + s_slack(2401,bean_L,plus)
     
      + s_slack(2401,bean_L,minus) + s_slack(2401,bean_S,plus) + s_slack(2401,bean_S,minus) + s_slack(2401,cass_L,plus) + s_slack(2401,cass_L,minus) + s_slack(2401,cass_S,plus) + s_slack(2401,cass_S,minus) + s_slack(2401,chic_H,plus)
     
      + s_slack(2401,chic_H,minus) + s_slack(2401,chic_L,plus) + s_slack(2401,chic_L,minus) + s_slack(2401,chic_S,plus) + s_slack(2401,chic_S,minus) + s_slack(2401,coff_H,plus) + s_slack(2401,coff_H,minus) + s_slack(2401,coff_L,plus)
     
      + s_slack(2401,coff_L,minus) + s_slack(2401,cott_L,plus) + s_slack(2401,cott_L,minus) + s_slack(2401,cowp_H,plus) + s_slack(2401,cowp_H,minus) + s_slack(2401,cowp_L,plus) + s_slack(2401,cowp_L,minus) + s_slack(2401,cowp_S,plus)
     
      + s_slack(2401,cowp_S,minus) + s_slack(2401,grou_H,plus) + s_slack(2401,grou_H,minus) + s_slack(2401,grou_L,plus) + s_slack(2401,grou_L,minus) + s_slack(2401,grou_S,plus) + s_slack(2401,grou_S,minus) + s_slack(2401,lent_H,plus)
     
      + s_slack(2401,lent_H,minus) + s_slack(2401,lent_L,plus) + s_slack(2401,lent_L,minus) + s_slack(2401,lent_S,plus) + s_slack(2401,lent_S,minus) + s_slack(2401,maiz_H,plus) + s_slack(2401,maiz_H,minus) + s_slack(2401,maiz_L,plus)
     
      + s_slack(2401,maiz_L,minus) + s_slack(2401,maiz_S,plus) + s_slack(2401,maiz_S,minus) + s_slack(2401,mill_H,plus) + s_slack(2401,mill_H,minus) + s_slack(2401,mill_L,plus) + s_slack(2401,mill_L,minus) + s_slack(2401,mill_S,plus)
     
      + s_slack(2401,mill_S,minus) + s_slack(2401,ofib_L,plus) + s_slack(2401,ofib_L,minus) + s_slack(2401,ooil_L,plus) + s_slack(2401,ooil_L,minus) + s_slack(2401,opul_H,plus) + s_slack(2401,opul_H,minus) + s_slack(2401,opul_L,plus)
     
      + s_slack(2401,opul_L,minus) + s_slack(2401,opul_S,plus) + s_slack(2401,opul_S,minus) + s_slack(2401,pige_H,plus) + s_slack(2401,pige_H,minus) + s_slack(2401,pige_L,plus) + s_slack(2401,pige_L,minus) + s_slack(2401,pige_S,plus)
     
      + s_slack(2401,pige_S,minus) + s_slack(2401,pota_H,plus) + s_slack(2401,pota_H,minus) + s_slack(2401,pota_L,plus) + s_slack(2401,pota_L,minus) + s_slack(2401,pota_S,plus) + s_slack(2401,pota_S,minus) + s_slack(2401,rest_H,plus)
     
      + s_slack(2401,rest_H,minus) + s_slack(2401,rest_L,plus) + s_slack(2401,rest_L,minus) + s_slack(2401,rest_S,plus) + s_slack(2401,rest_S,minus) + s_slack(2401,rice_H,plus) + s_slack(2401,rice_H,minus) + s_slack(2401,rice_L,plus)
     
      + s_slack(2401,rice_L,minus) + s_slack(2401,rice_S,plus) + s_slack(2401,rice_S,minus) + s_slack(2401,sorg_L,plus) + s_slack(2401,sorg_L,minus) + s_slack(2401,sorg_S,plus) + s_slack(2401,sorg_S,minus) + s_slack(2401,soyb_L,plus)
     
      + s_slack(2401,soyb_L,minus) + s_slack(2401,soyb_S,plus) + s_slack(2401,soyb_S,minus) + s_slack(2401,sunf_L,plus) + s_slack(2401,sunf_L,minus) + s_slack(2401,temf_H,plus) + s_slack(2401,temf_H,minus) + s_slack(2401,temf_L,plus)
     
      + s_slack(2401,temf_L,minus) + s_slack(2401,temf_S,plus) + s_slack(2401,temf_S,minus) + s_slack(2401,toba_H,plus) + s_slack(2401,toba_H,minus) + s_slack(2401,toba_L,plus) + s_slack(2401,toba_L,minus) + s_slack(2401,trof_L,plus)
     
      + s_slack(2401,trof_L,minus) + s_slack(2401,trof_S,plus) + s_slack(2401,trof_S,minus) + s_slack(2401,vege_H,plus) + s_slack(2401,vege_H,minus) + s_slack(2401,vege_L,plus) + s_slack(2401,vege_L,minus) + s_slack(2401,vege_S,plus)
     
      + s_slack(2401,vege_S,minus) + s_slack(2402,rice_I,plus) + s_slack(2402,rice_I,minus) + s_slack(2402,sugc_I,plus) + s_slack(2402,sugc_I,minus) + s_slack(2402,whea_I,plus) + s_slack(2402,whea_I,minus) + s_slack(2402,bean_H,plus)
     
      + s_slack(2402,bean_H,minus) + s_slack(2402,bean_L,plus) + s_slack(2402,bean_L,minus) + s_slack(2402,bean_S,plus) + s_slack(2402,bean_S,minus) + s_slack(2402,cass_L,plus) + s_slack(2402,cass_L,minus) + s_slack(2402,cass_S,plus)
     
      + s_slack(2402,cass_S,minus) + s_slack(2402,chic_H,plus) + s_slack(2402,chic_H,minus) + s_slack(2402,chic_L,plus) + s_slack(2402,chic_L,minus) + s_slack(2402,chic_S,plus) + s_slack(2402,chic_S,minus) + s_slack(2402,coff_H,plus)
     
      + s_slack(2402,coff_H,minus) + s_slack(2402,coff_L,plus) + s_slack(2402,coff_L,minus) + s_slack(2402,cott_L,plus) + s_slack(2402,cott_L,minus) + s_slack(2402,cowp_H,plus) + s_slack(2402,cowp_H,minus) + s_slack(2402,cowp_L,plus)
     
      + s_slack(2402,cowp_L,minus) + s_slack(2402,cowp_S,plus) + s_slack(2402,cowp_S,minus) + s_slack(2402,grou_H,plus) + s_slack(2402,grou_H,minus) + s_slack(2402,grou_L,plus) + s_slack(2402,grou_L,minus) + s_slack(2402,grou_S,plus)
     
      + s_slack(2402,grou_S,minus) + s_slack(2402,lent_H,plus) + s_slack(2402,lent_H,minus) + s_slack(2402,lent_L,plus) + s_slack(2402,lent_L,minus) + s_slack(2402,lent_S,plus) + s_slack(2402,lent_S,minus) + s_slack(2402,maiz_H,plus)
     
      + s_slack(2402,maiz_H,minus) + s_slack(2402,maiz_L,plus) + s_slack(2402,maiz_L,minus) + s_slack(2402,maiz_S,plus) + s_slack(2402,maiz_S,minus) + s_slack(2402,mill_H,plus) + s_slack(2402,mill_H,minus) + s_slack(2402,mill_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 261
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2402,mill_L,minus) + s_slack(2402,mill_S,plus) + s_slack(2402,mill_S,minus) + s_slack(2402,ofib_L,plus) + s_slack(2402,ofib_L,minus) + s_slack(2402,ooil_L,plus) + s_slack(2402,ooil_L,minus) + s_slack(2402,opul_H,plus)
     
      + s_slack(2402,opul_H,minus) + s_slack(2402,opul_L,plus) + s_slack(2402,opul_L,minus) + s_slack(2402,opul_S,plus) + s_slack(2402,opul_S,minus) + s_slack(2402,pige_H,plus) + s_slack(2402,pige_H,minus) + s_slack(2402,pige_L,plus)
     
      + s_slack(2402,pige_L,minus) + s_slack(2402,pige_S,plus) + s_slack(2402,pige_S,minus) + s_slack(2402,pota_H,plus) + s_slack(2402,pota_H,minus) + s_slack(2402,pota_L,plus) + s_slack(2402,pota_L,minus) + s_slack(2402,pota_S,plus)
     
      + s_slack(2402,pota_S,minus) + s_slack(2402,rest_H,plus) + s_slack(2402,rest_H,minus) + s_slack(2402,rest_L,plus) + s_slack(2402,rest_L,minus) + s_slack(2402,rest_S,plus) + s_slack(2402,rest_S,minus) + s_slack(2402,rice_H,plus)
     
      + s_slack(2402,rice_H,minus) + s_slack(2402,rice_L,plus) + s_slack(2402,rice_L,minus) + s_slack(2402,rice_S,plus) + s_slack(2402,rice_S,minus) + s_slack(2402,sorg_L,plus) + s_slack(2402,sorg_L,minus) + s_slack(2402,sorg_S,plus)
     
      + s_slack(2402,sorg_S,minus) + s_slack(2402,soyb_L,plus) + s_slack(2402,soyb_L,minus) + s_slack(2402,soyb_S,plus) + s_slack(2402,soyb_S,minus) + s_slack(2402,sunf_L,plus) + s_slack(2402,sunf_L,minus) + s_slack(2402,temf_H,plus)
     
      + s_slack(2402,temf_H,minus) + s_slack(2402,temf_L,plus) + s_slack(2402,temf_L,minus) + s_slack(2402,temf_S,plus) + s_slack(2402,temf_S,minus) + s_slack(2402,toba_H,plus) + s_slack(2402,toba_H,minus) + s_slack(2402,toba_L,plus)
     
      + s_slack(2402,toba_L,minus) + s_slack(2402,trof_L,plus) + s_slack(2402,trof_L,minus) + s_slack(2402,trof_S,plus) + s_slack(2402,trof_S,minus) + s_slack(2402,vege_H,plus) + s_slack(2402,vege_H,minus) + s_slack(2402,vege_L,plus)
     
      + s_slack(2402,vege_L,minus) + s_slack(2402,vege_S,plus) + s_slack(2402,vege_S,minus) + s_slack(2403,rice_I,plus) + s_slack(2403,rice_I,minus) + s_slack(2403,sugc_I,plus) + s_slack(2403,sugc_I,minus) + s_slack(2403,whea_I,plus)
     
      + s_slack(2403,whea_I,minus) + s_slack(2403,bean_H,plus) + s_slack(2403,bean_H,minus) + s_slack(2403,bean_L,plus) + s_slack(2403,bean_L,minus) + s_slack(2403,bean_S,plus) + s_slack(2403,bean_S,minus) + s_slack(2403,cass_L,plus)
     
      + s_slack(2403,cass_L,minus) + s_slack(2403,cass_S,plus) + s_slack(2403,cass_S,minus) + s_slack(2403,chic_H,plus) + s_slack(2403,chic_H,minus) + s_slack(2403,chic_L,plus) + s_slack(2403,chic_L,minus) + s_slack(2403,chic_S,plus)
     
      + s_slack(2403,chic_S,minus) + s_slack(2403,coff_H,plus) + s_slack(2403,coff_H,minus) + s_slack(2403,coff_L,plus) + s_slack(2403,coff_L,minus) + s_slack(2403,cott_L,plus) + s_slack(2403,cott_L,minus) + s_slack(2403,cowp_H,plus)
     
      + s_slack(2403,cowp_H,minus) + s_slack(2403,cowp_L,plus) + s_slack(2403,cowp_L,minus) + s_slack(2403,cowp_S,plus) + s_slack(2403,cowp_S,minus) + s_slack(2403,grou_H,plus) + s_slack(2403,grou_H,minus) + s_slack(2403,grou_L,plus)
     
      + s_slack(2403,grou_L,minus) + s_slack(2403,grou_S,plus) + s_slack(2403,grou_S,minus) + s_slack(2403,lent_H,plus) + s_slack(2403,lent_H,minus) + s_slack(2403,lent_L,plus) + s_slack(2403,lent_L,minus) + s_slack(2403,lent_S,plus)
     
      + s_slack(2403,lent_S,minus) + s_slack(2403,maiz_H,plus) + s_slack(2403,maiz_H,minus) + s_slack(2403,maiz_L,plus) + s_slack(2403,maiz_L,minus) + s_slack(2403,maiz_S,plus) + s_slack(2403,maiz_S,minus) + s_slack(2403,mill_H,plus)
     
      + s_slack(2403,mill_H,minus) + s_slack(2403,mill_L,plus) + s_slack(2403,mill_L,minus) + s_slack(2403,mill_S,plus) + s_slack(2403,mill_S,minus) + s_slack(2403,ofib_L,plus) + s_slack(2403,ofib_L,minus) + s_slack(2403,ooil_L,plus)
     
      + s_slack(2403,ooil_L,minus) + s_slack(2403,opul_H,plus) + s_slack(2403,opul_H,minus) + s_slack(2403,opul_L,plus) + s_slack(2403,opul_L,minus) + s_slack(2403,opul_S,plus) + s_slack(2403,opul_S,minus) + s_slack(2403,pige_H,plus)
     
      + s_slack(2403,pige_H,minus) + s_slack(2403,pige_L,plus) + s_slack(2403,pige_L,minus) + s_slack(2403,pige_S,plus) + s_slack(2403,pige_S,minus) + s_slack(2403,pota_H,plus) + s_slack(2403,pota_H,minus) + s_slack(2403,pota_L,plus)
     
      + s_slack(2403,pota_L,minus) + s_slack(2403,pota_S,plus) + s_slack(2403,pota_S,minus) + s_slack(2403,rest_H,plus) + s_slack(2403,rest_H,minus) + s_slack(2403,rest_L,plus) + s_slack(2403,rest_L,minus) + s_slack(2403,rest_S,plus)
     
      + s_slack(2403,rest_S,minus) + s_slack(2403,rice_H,plus) + s_slack(2403,rice_H,minus) + s_slack(2403,rice_L,plus) + s_slack(2403,rice_L,minus) + s_slack(2403,rice_S,plus) + s_slack(2403,rice_S,minus) + s_slack(2403,sorg_L,plus)
     
      + s_slack(2403,sorg_L,minus) + s_slack(2403,sorg_S,plus) + s_slack(2403,sorg_S,minus) + s_slack(2403,soyb_L,plus) + s_slack(2403,soyb_L,minus) + s_slack(2403,soyb_S,plus) + s_slack(2403,soyb_S,minus) + s_slack(2403,sunf_L,plus)
     
      + s_slack(2403,sunf_L,minus) + s_slack(2403,temf_H,plus) + s_slack(2403,temf_H,minus) + s_slack(2403,temf_L,plus) + s_slack(2403,temf_L,minus) + s_slack(2403,temf_S,plus) + s_slack(2403,temf_S,minus) + s_slack(2403,toba_H,plus)
     
      + s_slack(2403,toba_H,minus) + s_slack(2403,toba_L,plus) + s_slack(2403,toba_L,minus) + s_slack(2403,trof_L,plus) + s_slack(2403,trof_L,minus) + s_slack(2403,trof_S,plus) + s_slack(2403,trof_S,minus) + s_slack(2403,vege_H,plus)
     
      + s_slack(2403,vege_H,minus) + s_slack(2403,vege_L,plus) + s_slack(2403,vege_L,minus) + s_slack(2403,vege_S,plus) + s_slack(2403,vege_S,minus) + s_slack(2404,rice_I,plus) + s_slack(2404,rice_I,minus) + s_slack(2404,sugc_I,plus)
     
      + s_slack(2404,sugc_I,minus) + s_slack(2404,whea_I,plus) + s_slack(2404,whea_I,minus) + s_slack(2404,bean_H,plus) + s_slack(2404,bean_H,minus) + s_slack(2404,bean_L,plus) + s_slack(2404,bean_L,minus) + s_slack(2404,bean_S,plus)
     
      + s_slack(2404,bean_S,minus) + s_slack(2404,cass_L,plus) + s_slack(2404,cass_L,minus) + s_slack(2404,cass_S,plus) + s_slack(2404,cass_S,minus) + s_slack(2404,chic_H,plus) + s_slack(2404,chic_H,minus) + s_slack(2404,chic_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 262
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2404,chic_L,minus) + s_slack(2404,chic_S,plus) + s_slack(2404,chic_S,minus) + s_slack(2404,coff_H,plus) + s_slack(2404,coff_H,minus) + s_slack(2404,coff_L,plus) + s_slack(2404,coff_L,minus) + s_slack(2404,cott_L,plus)
     
      + s_slack(2404,cott_L,minus) + s_slack(2404,cowp_H,plus) + s_slack(2404,cowp_H,minus) + s_slack(2404,cowp_L,plus) + s_slack(2404,cowp_L,minus) + s_slack(2404,cowp_S,plus) + s_slack(2404,cowp_S,minus) + s_slack(2404,grou_H,plus)
     
      + s_slack(2404,grou_H,minus) + s_slack(2404,grou_L,plus) + s_slack(2404,grou_L,minus) + s_slack(2404,grou_S,plus) + s_slack(2404,grou_S,minus) + s_slack(2404,lent_H,plus) + s_slack(2404,lent_H,minus) + s_slack(2404,lent_L,plus)
     
      + s_slack(2404,lent_L,minus) + s_slack(2404,lent_S,plus) + s_slack(2404,lent_S,minus) + s_slack(2404,maiz_H,plus) + s_slack(2404,maiz_H,minus) + s_slack(2404,maiz_L,plus) + s_slack(2404,maiz_L,minus) + s_slack(2404,maiz_S,plus)
     
      + s_slack(2404,maiz_S,minus) + s_slack(2404,mill_H,plus) + s_slack(2404,mill_H,minus) + s_slack(2404,mill_L,plus) + s_slack(2404,mill_L,minus) + s_slack(2404,mill_S,plus) + s_slack(2404,mill_S,minus) + s_slack(2404,ofib_L,plus)
     
      + s_slack(2404,ofib_L,minus) + s_slack(2404,ooil_L,plus) + s_slack(2404,ooil_L,minus) + s_slack(2404,opul_H,plus) + s_slack(2404,opul_H,minus) + s_slack(2404,opul_L,plus) + s_slack(2404,opul_L,minus) + s_slack(2404,opul_S,plus)
     
      + s_slack(2404,opul_S,minus) + s_slack(2404,pige_H,plus) + s_slack(2404,pige_H,minus) + s_slack(2404,pige_L,plus) + s_slack(2404,pige_L,minus) + s_slack(2404,pige_S,plus) + s_slack(2404,pige_S,minus) + s_slack(2404,pota_H,plus)
     
      + s_slack(2404,pota_H,minus) + s_slack(2404,pota_L,plus) + s_slack(2404,pota_L,minus) + s_slack(2404,pota_S,plus) + s_slack(2404,pota_S,minus) + s_slack(2404,rest_H,plus) + s_slack(2404,rest_H,minus) + s_slack(2404,rest_L,plus)
     
      + s_slack(2404,rest_L,minus) + s_slack(2404,rest_S,plus) + s_slack(2404,rest_S,minus) + s_slack(2404,rice_H,plus) + s_slack(2404,rice_H,minus) + s_slack(2404,rice_L,plus) + s_slack(2404,rice_L,minus) + s_slack(2404,rice_S,plus)
     
      + s_slack(2404,rice_S,minus) + s_slack(2404,sorg_L,plus) + s_slack(2404,sorg_L,minus) + s_slack(2404,sorg_S,plus) + s_slack(2404,sorg_S,minus) + s_slack(2404,soyb_L,plus) + s_slack(2404,soyb_L,minus) + s_slack(2404,soyb_S,plus)
     
      + s_slack(2404,soyb_S,minus) + s_slack(2404,sunf_L,plus) + s_slack(2404,sunf_L,minus) + s_slack(2404,temf_H,plus) + s_slack(2404,temf_H,minus) + s_slack(2404,temf_L,plus) + s_slack(2404,temf_L,minus) + s_slack(2404,temf_S,plus)
     
      + s_slack(2404,temf_S,minus) + s_slack(2404,toba_H,plus) + s_slack(2404,toba_H,minus) + s_slack(2404,toba_L,plus) + s_slack(2404,toba_L,minus) + s_slack(2404,trof_L,plus) + s_slack(2404,trof_L,minus) + s_slack(2404,trof_S,plus)
     
      + s_slack(2404,trof_S,minus) + s_slack(2404,vege_H,plus) + s_slack(2404,vege_H,minus) + s_slack(2404,vege_L,plus) + s_slack(2404,vege_L,minus) + s_slack(2404,vege_S,plus) + s_slack(2404,vege_S,minus) + s_slack(2441,rice_I,plus)
     
      + s_slack(2441,rice_I,minus) + s_slack(2441,sugc_I,plus) + s_slack(2441,sugc_I,minus) + s_slack(2441,whea_I,plus) + s_slack(2441,whea_I,minus) + s_slack(2441,bean_H,plus) + s_slack(2441,bean_H,minus) + s_slack(2441,bean_L,plus)
     
      + s_slack(2441,bean_L,minus) + s_slack(2441,bean_S,plus) + s_slack(2441,bean_S,minus) + s_slack(2441,cass_L,plus) + s_slack(2441,cass_L,minus) + s_slack(2441,cass_S,plus) + s_slack(2441,cass_S,minus) + s_slack(2441,chic_H,plus)
     
      + s_slack(2441,chic_H,minus) + s_slack(2441,chic_L,plus) + s_slack(2441,chic_L,minus) + s_slack(2441,chic_S,plus) + s_slack(2441,chic_S,minus) + s_slack(2441,coff_H,plus) + s_slack(2441,coff_H,minus) + s_slack(2441,coff_L,plus)
     
      + s_slack(2441,coff_L,minus) + s_slack(2441,cott_L,plus) + s_slack(2441,cott_L,minus) + s_slack(2441,cowp_H,plus) + s_slack(2441,cowp_H,minus) + s_slack(2441,cowp_L,plus) + s_slack(2441,cowp_L,minus) + s_slack(2441,cowp_S,plus)
     
      + s_slack(2441,cowp_S,minus) + s_slack(2441,grou_H,plus) + s_slack(2441,grou_H,minus) + s_slack(2441,grou_L,plus) + s_slack(2441,grou_L,minus) + s_slack(2441,grou_S,plus) + s_slack(2441,grou_S,minus) + s_slack(2441,lent_H,plus)
     
      + s_slack(2441,lent_H,minus) + s_slack(2441,lent_L,plus) + s_slack(2441,lent_L,minus) + s_slack(2441,lent_S,plus) + s_slack(2441,lent_S,minus) + s_slack(2441,maiz_H,plus) + s_slack(2441,maiz_H,minus) + s_slack(2441,maiz_L,plus)
     
      + s_slack(2441,maiz_L,minus) + s_slack(2441,maiz_S,plus) + s_slack(2441,maiz_S,minus) + s_slack(2441,mill_H,plus) + s_slack(2441,mill_H,minus) + s_slack(2441,mill_L,plus) + s_slack(2441,mill_L,minus) + s_slack(2441,mill_S,plus)
     
      + s_slack(2441,mill_S,minus) + s_slack(2441,ofib_L,plus) + s_slack(2441,ofib_L,minus) + s_slack(2441,ooil_L,plus) + s_slack(2441,ooil_L,minus) + s_slack(2441,opul_H,plus) + s_slack(2441,opul_H,minus) + s_slack(2441,opul_L,plus)
     
      + s_slack(2441,opul_L,minus) + s_slack(2441,opul_S,plus) + s_slack(2441,opul_S,minus) + s_slack(2441,pige_H,plus) + s_slack(2441,pige_H,minus) + s_slack(2441,pige_L,plus) + s_slack(2441,pige_L,minus) + s_slack(2441,pige_S,plus)
     
      + s_slack(2441,pige_S,minus) + s_slack(2441,pota_H,plus) + s_slack(2441,pota_H,minus) + s_slack(2441,pota_L,plus) + s_slack(2441,pota_L,minus) + s_slack(2441,pota_S,plus) + s_slack(2441,pota_S,minus) + s_slack(2441,rest_H,plus)
     
      + s_slack(2441,rest_H,minus) + s_slack(2441,rest_L,plus) + s_slack(2441,rest_L,minus) + s_slack(2441,rest_S,plus) + s_slack(2441,rest_S,minus) + s_slack(2441,rice_H,plus) + s_slack(2441,rice_H,minus) + s_slack(2441,rice_L,plus)
     
      + s_slack(2441,rice_L,minus) + s_slack(2441,rice_S,plus) + s_slack(2441,rice_S,minus) + s_slack(2441,sorg_L,plus) + s_slack(2441,sorg_L,minus) + s_slack(2441,sorg_S,plus) + s_slack(2441,sorg_S,minus) + s_slack(2441,soyb_L,plus)
     
      + s_slack(2441,soyb_L,minus) + s_slack(2441,soyb_S,plus) + s_slack(2441,soyb_S,minus) + s_slack(2441,sunf_L,plus) + s_slack(2441,sunf_L,minus) + s_slack(2441,temf_H,plus) + s_slack(2441,temf_H,minus) + s_slack(2441,temf_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 263
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2441,temf_L,minus) + s_slack(2441,temf_S,plus) + s_slack(2441,temf_S,minus) + s_slack(2441,toba_H,plus) + s_slack(2441,toba_H,minus) + s_slack(2441,toba_L,plus) + s_slack(2441,toba_L,minus) + s_slack(2441,trof_L,plus)
     
      + s_slack(2441,trof_L,minus) + s_slack(2441,trof_S,plus) + s_slack(2441,trof_S,minus) + s_slack(2441,vege_H,plus) + s_slack(2441,vege_H,minus) + s_slack(2441,vege_L,plus) + s_slack(2441,vege_L,minus) + s_slack(2441,vege_S,plus)
     
      + s_slack(2441,vege_S,minus) + s_slack(2442,rice_I,plus) + s_slack(2442,rice_I,minus) + s_slack(2442,sugc_I,plus) + s_slack(2442,sugc_I,minus) + s_slack(2442,whea_I,plus) + s_slack(2442,whea_I,minus) + s_slack(2442,bean_H,plus)
     
      + s_slack(2442,bean_H,minus) + s_slack(2442,bean_L,plus) + s_slack(2442,bean_L,minus) + s_slack(2442,bean_S,plus) + s_slack(2442,bean_S,minus) + s_slack(2442,cass_L,plus) + s_slack(2442,cass_L,minus) + s_slack(2442,cass_S,plus)
     
      + s_slack(2442,cass_S,minus) + s_slack(2442,chic_H,plus) + s_slack(2442,chic_H,minus) + s_slack(2442,chic_L,plus) + s_slack(2442,chic_L,minus) + s_slack(2442,chic_S,plus) + s_slack(2442,chic_S,minus) + s_slack(2442,coff_H,plus)
     
      + s_slack(2442,coff_H,minus) + s_slack(2442,coff_L,plus) + s_slack(2442,coff_L,minus) + s_slack(2442,cott_L,plus) + s_slack(2442,cott_L,minus) + s_slack(2442,cowp_H,plus) + s_slack(2442,cowp_H,minus) + s_slack(2442,cowp_L,plus)
     
      + s_slack(2442,cowp_L,minus) + s_slack(2442,cowp_S,plus) + s_slack(2442,cowp_S,minus) + s_slack(2442,grou_H,plus) + s_slack(2442,grou_H,minus) + s_slack(2442,grou_L,plus) + s_slack(2442,grou_L,minus) + s_slack(2442,grou_S,plus)
     
      + s_slack(2442,grou_S,minus) + s_slack(2442,lent_H,plus) + s_slack(2442,lent_H,minus) + s_slack(2442,lent_L,plus) + s_slack(2442,lent_L,minus) + s_slack(2442,lent_S,plus) + s_slack(2442,lent_S,minus) + s_slack(2442,maiz_H,plus)
     
      + s_slack(2442,maiz_H,minus) + s_slack(2442,maiz_L,plus) + s_slack(2442,maiz_L,minus) + s_slack(2442,maiz_S,plus) + s_slack(2442,maiz_S,minus) + s_slack(2442,mill_H,plus) + s_slack(2442,mill_H,minus) + s_slack(2442,mill_L,plus)
     
      + s_slack(2442,mill_L,minus) + s_slack(2442,mill_S,plus) + s_slack(2442,mill_S,minus) + s_slack(2442,ofib_L,plus) + s_slack(2442,ofib_L,minus) + s_slack(2442,ooil_L,plus) + s_slack(2442,ooil_L,minus) + s_slack(2442,opul_H,plus)
     
      + s_slack(2442,opul_H,minus) + s_slack(2442,opul_L,plus) + s_slack(2442,opul_L,minus) + s_slack(2442,opul_S,plus) + s_slack(2442,opul_S,minus) + s_slack(2442,pige_H,plus) + s_slack(2442,pige_H,minus) + s_slack(2442,pige_L,plus)
     
      + s_slack(2442,pige_L,minus) + s_slack(2442,pige_S,plus) + s_slack(2442,pige_S,minus) + s_slack(2442,pota_H,plus) + s_slack(2442,pota_H,minus) + s_slack(2442,pota_L,plus) + s_slack(2442,pota_L,minus) + s_slack(2442,pota_S,plus)
     
      + s_slack(2442,pota_S,minus) + s_slack(2442,rest_H,plus) + s_slack(2442,rest_H,minus) + s_slack(2442,rest_L,plus) + s_slack(2442,rest_L,minus) + s_slack(2442,rest_S,plus) + s_slack(2442,rest_S,minus) + s_slack(2442,rice_H,plus)
     
      + s_slack(2442,rice_H,minus) + s_slack(2442,rice_L,plus) + s_slack(2442,rice_L,minus) + s_slack(2442,rice_S,plus) + s_slack(2442,rice_S,minus) + s_slack(2442,sorg_L,plus) + s_slack(2442,sorg_L,minus) + s_slack(2442,sorg_S,plus)
     
      + s_slack(2442,sorg_S,minus) + s_slack(2442,soyb_L,plus) + s_slack(2442,soyb_L,minus) + s_slack(2442,soyb_S,plus) + s_slack(2442,soyb_S,minus) + s_slack(2442,sunf_L,plus) + s_slack(2442,sunf_L,minus) + s_slack(2442,temf_H,plus)
     
      + s_slack(2442,temf_H,minus) + s_slack(2442,temf_L,plus) + s_slack(2442,temf_L,minus) + s_slack(2442,temf_S,plus) + s_slack(2442,temf_S,minus) + s_slack(2442,toba_H,plus) + s_slack(2442,toba_H,minus) + s_slack(2442,toba_L,plus)
     
      + s_slack(2442,toba_L,minus) + s_slack(2442,trof_L,plus) + s_slack(2442,trof_L,minus) + s_slack(2442,trof_S,plus) + s_slack(2442,trof_S,minus) + s_slack(2442,vege_H,plus) + s_slack(2442,vege_H,minus) + s_slack(2442,vege_L,plus)
     
      + s_slack(2442,vege_L,minus) + s_slack(2442,vege_S,plus) + s_slack(2442,vege_S,minus) + s_slack(2443,rice_I,plus) + s_slack(2443,rice_I,minus) + s_slack(2443,sugc_I,plus) + s_slack(2443,sugc_I,minus) + s_slack(2443,whea_I,plus)
     
      + s_slack(2443,whea_I,minus) + s_slack(2443,bean_H,plus) + s_slack(2443,bean_H,minus) + s_slack(2443,bean_L,plus) + s_slack(2443,bean_L,minus) + s_slack(2443,bean_S,plus) + s_slack(2443,bean_S,minus) + s_slack(2443,cass_L,plus)
     
      + s_slack(2443,cass_L,minus) + s_slack(2443,cass_S,plus) + s_slack(2443,cass_S,minus) + s_slack(2443,chic_H,plus) + s_slack(2443,chic_H,minus) + s_slack(2443,chic_L,plus) + s_slack(2443,chic_L,minus) + s_slack(2443,chic_S,plus)
     
      + s_slack(2443,chic_S,minus) + s_slack(2443,coff_H,plus) + s_slack(2443,coff_H,minus) + s_slack(2443,coff_L,plus) + s_slack(2443,coff_L,minus) + s_slack(2443,cott_L,plus) + s_slack(2443,cott_L,minus) + s_slack(2443,cowp_H,plus)
     
      + s_slack(2443,cowp_H,minus) + s_slack(2443,cowp_L,plus) + s_slack(2443,cowp_L,minus) + s_slack(2443,cowp_S,plus) + s_slack(2443,cowp_S,minus) + s_slack(2443,grou_H,plus) + s_slack(2443,grou_H,minus) + s_slack(2443,grou_L,plus)
     
      + s_slack(2443,grou_L,minus) + s_slack(2443,grou_S,plus) + s_slack(2443,grou_S,minus) + s_slack(2443,lent_H,plus) + s_slack(2443,lent_H,minus) + s_slack(2443,lent_L,plus) + s_slack(2443,lent_L,minus) + s_slack(2443,lent_S,plus)
     
      + s_slack(2443,lent_S,minus) + s_slack(2443,maiz_H,plus) + s_slack(2443,maiz_H,minus) + s_slack(2443,maiz_L,plus) + s_slack(2443,maiz_L,minus) + s_slack(2443,maiz_S,plus) + s_slack(2443,maiz_S,minus) + s_slack(2443,mill_H,plus)
     
      + s_slack(2443,mill_H,minus) + s_slack(2443,mill_L,plus) + s_slack(2443,mill_L,minus) + s_slack(2443,mill_S,plus) + s_slack(2443,mill_S,minus) + s_slack(2443,ofib_L,plus) + s_slack(2443,ofib_L,minus) + s_slack(2443,ooil_L,plus)
     
      + s_slack(2443,ooil_L,minus) + s_slack(2443,opul_H,plus) + s_slack(2443,opul_H,minus) + s_slack(2443,opul_L,plus) + s_slack(2443,opul_L,minus) + s_slack(2443,opul_S,plus) + s_slack(2443,opul_S,minus) + s_slack(2443,pige_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 264
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2443,pige_H,minus) + s_slack(2443,pige_L,plus) + s_slack(2443,pige_L,minus) + s_slack(2443,pige_S,plus) + s_slack(2443,pige_S,minus) + s_slack(2443,pota_H,plus) + s_slack(2443,pota_H,minus) + s_slack(2443,pota_L,plus)
     
      + s_slack(2443,pota_L,minus) + s_slack(2443,pota_S,plus) + s_slack(2443,pota_S,minus) + s_slack(2443,rest_H,plus) + s_slack(2443,rest_H,minus) + s_slack(2443,rest_L,plus) + s_slack(2443,rest_L,minus) + s_slack(2443,rest_S,plus)
     
      + s_slack(2443,rest_S,minus) + s_slack(2443,rice_H,plus) + s_slack(2443,rice_H,minus) + s_slack(2443,rice_L,plus) + s_slack(2443,rice_L,minus) + s_slack(2443,rice_S,plus) + s_slack(2443,rice_S,minus) + s_slack(2443,sorg_L,plus)
     
      + s_slack(2443,sorg_L,minus) + s_slack(2443,sorg_S,plus) + s_slack(2443,sorg_S,minus) + s_slack(2443,soyb_L,plus) + s_slack(2443,soyb_L,minus) + s_slack(2443,soyb_S,plus) + s_slack(2443,soyb_S,minus) + s_slack(2443,sunf_L,plus)
     
      + s_slack(2443,sunf_L,minus) + s_slack(2443,temf_H,plus) + s_slack(2443,temf_H,minus) + s_slack(2443,temf_L,plus) + s_slack(2443,temf_L,minus) + s_slack(2443,temf_S,plus) + s_slack(2443,temf_S,minus) + s_slack(2443,toba_H,plus)
     
      + s_slack(2443,toba_H,minus) + s_slack(2443,toba_L,plus) + s_slack(2443,toba_L,minus) + s_slack(2443,trof_L,plus) + s_slack(2443,trof_L,minus) + s_slack(2443,trof_S,plus) + s_slack(2443,trof_S,minus) + s_slack(2443,vege_H,plus)
     
      + s_slack(2443,vege_H,minus) + s_slack(2443,vege_L,plus) + s_slack(2443,vege_L,minus) + s_slack(2443,vege_S,plus) + s_slack(2443,vege_S,minus) + s_slack(2480,rice_I,plus) + s_slack(2480,rice_I,minus) + s_slack(2480,sugc_I,plus)
     
      + s_slack(2480,sugc_I,minus) + s_slack(2480,whea_I,plus) + s_slack(2480,whea_I,minus) + s_slack(2480,bean_H,plus) + s_slack(2480,bean_H,minus) + s_slack(2480,bean_L,plus) + s_slack(2480,bean_L,minus) + s_slack(2480,bean_S,plus)
     
      + s_slack(2480,bean_S,minus) + s_slack(2480,cass_L,plus) + s_slack(2480,cass_L,minus) + s_slack(2480,cass_S,plus) + s_slack(2480,cass_S,minus) + s_slack(2480,chic_H,plus) + s_slack(2480,chic_H,minus) + s_slack(2480,chic_L,plus)
     
      + s_slack(2480,chic_L,minus) + s_slack(2480,chic_S,plus) + s_slack(2480,chic_S,minus) + s_slack(2480,coff_H,plus) + s_slack(2480,coff_H,minus) + s_slack(2480,coff_L,plus) + s_slack(2480,coff_L,minus) + s_slack(2480,cott_L,plus)
     
      + s_slack(2480,cott_L,minus) + s_slack(2480,cowp_H,plus) + s_slack(2480,cowp_H,minus) + s_slack(2480,cowp_L,plus) + s_slack(2480,cowp_L,minus) + s_slack(2480,cowp_S,plus) + s_slack(2480,cowp_S,minus) + s_slack(2480,grou_H,plus)
     
      + s_slack(2480,grou_H,minus) + s_slack(2480,grou_L,plus) + s_slack(2480,grou_L,minus) + s_slack(2480,grou_S,plus) + s_slack(2480,grou_S,minus) + s_slack(2480,lent_H,plus) + s_slack(2480,lent_H,minus) + s_slack(2480,lent_L,plus)
     
      + s_slack(2480,lent_L,minus) + s_slack(2480,lent_S,plus) + s_slack(2480,lent_S,minus) + s_slack(2480,maiz_H,plus) + s_slack(2480,maiz_H,minus) + s_slack(2480,maiz_L,plus) + s_slack(2480,maiz_L,minus) + s_slack(2480,maiz_S,plus)
     
      + s_slack(2480,maiz_S,minus) + s_slack(2480,mill_H,plus) + s_slack(2480,mill_H,minus) + s_slack(2480,mill_L,plus) + s_slack(2480,mill_L,minus) + s_slack(2480,mill_S,plus) + s_slack(2480,mill_S,minus) + s_slack(2480,ofib_L,plus)
     
      + s_slack(2480,ofib_L,minus) + s_slack(2480,ooil_L,plus) + s_slack(2480,ooil_L,minus) + s_slack(2480,opul_H,plus) + s_slack(2480,opul_H,minus) + s_slack(2480,opul_L,plus) + s_slack(2480,opul_L,minus) + s_slack(2480,opul_S,plus)
     
      + s_slack(2480,opul_S,minus) + s_slack(2480,pige_H,plus) + s_slack(2480,pige_H,minus) + s_slack(2480,pige_L,plus) + s_slack(2480,pige_L,minus) + s_slack(2480,pige_S,plus) + s_slack(2480,pige_S,minus) + s_slack(2480,pota_H,plus)
     
      + s_slack(2480,pota_H,minus) + s_slack(2480,pota_L,plus) + s_slack(2480,pota_L,minus) + s_slack(2480,pota_S,plus) + s_slack(2480,pota_S,minus) + s_slack(2480,rest_H,plus) + s_slack(2480,rest_H,minus) + s_slack(2480,rest_L,plus)
     
      + s_slack(2480,rest_L,minus) + s_slack(2480,rest_S,plus) + s_slack(2480,rest_S,minus) + s_slack(2480,rice_H,plus) + s_slack(2480,rice_H,minus) + s_slack(2480,rice_L,plus) + s_slack(2480,rice_L,minus) + s_slack(2480,rice_S,plus)
     
      + s_slack(2480,rice_S,minus) + s_slack(2480,sorg_L,plus) + s_slack(2480,sorg_L,minus) + s_slack(2480,sorg_S,plus) + s_slack(2480,sorg_S,minus) + s_slack(2480,soyb_L,plus) + s_slack(2480,soyb_L,minus) + s_slack(2480,soyb_S,plus)
     
      + s_slack(2480,soyb_S,minus) + s_slack(2480,sunf_L,plus) + s_slack(2480,sunf_L,minus) + s_slack(2480,temf_H,plus) + s_slack(2480,temf_H,minus) + s_slack(2480,temf_L,plus) + s_slack(2480,temf_L,minus) + s_slack(2480,temf_S,plus)
     
      + s_slack(2480,temf_S,minus) + s_slack(2480,toba_H,plus) + s_slack(2480,toba_H,minus) + s_slack(2480,toba_L,plus) + s_slack(2480,toba_L,minus) + s_slack(2480,trof_L,plus) + s_slack(2480,trof_L,minus) + s_slack(2480,trof_S,plus)
     
      + s_slack(2480,trof_S,minus) + s_slack(2480,vege_H,plus) + s_slack(2480,vege_H,minus) + s_slack(2480,vege_L,plus) + s_slack(2480,vege_L,minus) + s_slack(2480,vege_S,plus) + s_slack(2480,vege_S,minus) + s_slack(2481,rice_I,plus)
     
      + s_slack(2481,rice_I,minus) + s_slack(2481,sugc_I,plus) + s_slack(2481,sugc_I,minus) + s_slack(2481,whea_I,plus) + s_slack(2481,whea_I,minus) + s_slack(2481,bean_H,plus) + s_slack(2481,bean_H,minus) + s_slack(2481,bean_L,plus)
     
      + s_slack(2481,bean_L,minus) + s_slack(2481,bean_S,plus) + s_slack(2481,bean_S,minus) + s_slack(2481,cass_L,plus) + s_slack(2481,cass_L,minus) + s_slack(2481,cass_S,plus) + s_slack(2481,cass_S,minus) + s_slack(2481,chic_H,plus)
     
      + s_slack(2481,chic_H,minus) + s_slack(2481,chic_L,plus) + s_slack(2481,chic_L,minus) + s_slack(2481,chic_S,plus) + s_slack(2481,chic_S,minus) + s_slack(2481,coff_H,plus) + s_slack(2481,coff_H,minus) + s_slack(2481,coff_L,plus)
     
      + s_slack(2481,coff_L,minus) + s_slack(2481,cott_L,plus) + s_slack(2481,cott_L,minus) + s_slack(2481,cowp_H,plus) + s_slack(2481,cowp_H,minus) + s_slack(2481,cowp_L,plus) + s_slack(2481,cowp_L,minus) + s_slack(2481,cowp_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 265
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2481,cowp_S,minus) + s_slack(2481,grou_H,plus) + s_slack(2481,grou_H,minus) + s_slack(2481,grou_L,plus) + s_slack(2481,grou_L,minus) + s_slack(2481,grou_S,plus) + s_slack(2481,grou_S,minus) + s_slack(2481,lent_H,plus)
     
      + s_slack(2481,lent_H,minus) + s_slack(2481,lent_L,plus) + s_slack(2481,lent_L,minus) + s_slack(2481,lent_S,plus) + s_slack(2481,lent_S,minus) + s_slack(2481,maiz_H,plus) + s_slack(2481,maiz_H,minus) + s_slack(2481,maiz_L,plus)
     
      + s_slack(2481,maiz_L,minus) + s_slack(2481,maiz_S,plus) + s_slack(2481,maiz_S,minus) + s_slack(2481,mill_H,plus) + s_slack(2481,mill_H,minus) + s_slack(2481,mill_L,plus) + s_slack(2481,mill_L,minus) + s_slack(2481,mill_S,plus)
     
      + s_slack(2481,mill_S,minus) + s_slack(2481,ofib_L,plus) + s_slack(2481,ofib_L,minus) + s_slack(2481,ooil_L,plus) + s_slack(2481,ooil_L,minus) + s_slack(2481,opul_H,plus) + s_slack(2481,opul_H,minus) + s_slack(2481,opul_L,plus)
     
      + s_slack(2481,opul_L,minus) + s_slack(2481,opul_S,plus) + s_slack(2481,opul_S,minus) + s_slack(2481,pige_H,plus) + s_slack(2481,pige_H,minus) + s_slack(2481,pige_L,plus) + s_slack(2481,pige_L,minus) + s_slack(2481,pige_S,plus)
     
      + s_slack(2481,pige_S,minus) + s_slack(2481,pota_H,plus) + s_slack(2481,pota_H,minus) + s_slack(2481,pota_L,plus) + s_slack(2481,pota_L,minus) + s_slack(2481,pota_S,plus) + s_slack(2481,pota_S,minus) + s_slack(2481,rest_H,plus)
     
      + s_slack(2481,rest_H,minus) + s_slack(2481,rest_L,plus) + s_slack(2481,rest_L,minus) + s_slack(2481,rest_S,plus) + s_slack(2481,rest_S,minus) + s_slack(2481,rice_H,plus) + s_slack(2481,rice_H,minus) + s_slack(2481,rice_L,plus)
     
      + s_slack(2481,rice_L,minus) + s_slack(2481,rice_S,plus) + s_slack(2481,rice_S,minus) + s_slack(2481,sorg_L,plus) + s_slack(2481,sorg_L,minus) + s_slack(2481,sorg_S,plus) + s_slack(2481,sorg_S,minus) + s_slack(2481,soyb_L,plus)
     
      + s_slack(2481,soyb_L,minus) + s_slack(2481,soyb_S,plus) + s_slack(2481,soyb_S,minus) + s_slack(2481,sunf_L,plus) + s_slack(2481,sunf_L,minus) + s_slack(2481,temf_H,plus) + s_slack(2481,temf_H,minus) + s_slack(2481,temf_L,plus)
     
      + s_slack(2481,temf_L,minus) + s_slack(2481,temf_S,plus) + s_slack(2481,temf_S,minus) + s_slack(2481,toba_H,plus) + s_slack(2481,toba_H,minus) + s_slack(2481,toba_L,plus) + s_slack(2481,toba_L,minus) + s_slack(2481,trof_L,plus)
     
      + s_slack(2481,trof_L,minus) + s_slack(2481,trof_S,plus) + s_slack(2481,trof_S,minus) + s_slack(2481,vege_H,plus) + s_slack(2481,vege_H,minus) + s_slack(2481,vege_L,plus) + s_slack(2481,vege_L,minus) + s_slack(2481,vege_S,plus)
     
      + s_slack(2481,vege_S,minus) + s_slack(2482,rice_I,plus) + s_slack(2482,rice_I,minus) + s_slack(2482,sugc_I,plus) + s_slack(2482,sugc_I,minus) + s_slack(2482,whea_I,plus) + s_slack(2482,whea_I,minus) + s_slack(2482,bean_H,plus)
     
      + s_slack(2482,bean_H,minus) + s_slack(2482,bean_L,plus) + s_slack(2482,bean_L,minus) + s_slack(2482,bean_S,plus) + s_slack(2482,bean_S,minus) + s_slack(2482,cass_L,plus) + s_slack(2482,cass_L,minus) + s_slack(2482,cass_S,plus)
     
      + s_slack(2482,cass_S,minus) + s_slack(2482,chic_H,plus) + s_slack(2482,chic_H,minus) + s_slack(2482,chic_L,plus) + s_slack(2482,chic_L,minus) + s_slack(2482,chic_S,plus) + s_slack(2482,chic_S,minus) + s_slack(2482,coff_H,plus)
     
      + s_slack(2482,coff_H,minus) + s_slack(2482,coff_L,plus) + s_slack(2482,coff_L,minus) + s_slack(2482,cott_L,plus) + s_slack(2482,cott_L,minus) + s_slack(2482,cowp_H,plus) + s_slack(2482,cowp_H,minus) + s_slack(2482,cowp_L,plus)
     
      + s_slack(2482,cowp_L,minus) + s_slack(2482,cowp_S,plus) + s_slack(2482,cowp_S,minus) + s_slack(2482,grou_H,plus) + s_slack(2482,grou_H,minus) + s_slack(2482,grou_L,plus) + s_slack(2482,grou_L,minus) + s_slack(2482,grou_S,plus)
     
      + s_slack(2482,grou_S,minus) + s_slack(2482,lent_H,plus) + s_slack(2482,lent_H,minus) + s_slack(2482,lent_L,plus) + s_slack(2482,lent_L,minus) + s_slack(2482,lent_S,plus) + s_slack(2482,lent_S,minus) + s_slack(2482,maiz_H,plus)
     
      + s_slack(2482,maiz_H,minus) + s_slack(2482,maiz_L,plus) + s_slack(2482,maiz_L,minus) + s_slack(2482,maiz_S,plus) + s_slack(2482,maiz_S,minus) + s_slack(2482,mill_H,plus) + s_slack(2482,mill_H,minus) + s_slack(2482,mill_L,plus)
     
      + s_slack(2482,mill_L,minus) + s_slack(2482,mill_S,plus) + s_slack(2482,mill_S,minus) + s_slack(2482,ofib_L,plus) + s_slack(2482,ofib_L,minus) + s_slack(2482,ooil_L,plus) + s_slack(2482,ooil_L,minus) + s_slack(2482,opul_H,plus)
     
      + s_slack(2482,opul_H,minus) + s_slack(2482,opul_L,plus) + s_slack(2482,opul_L,minus) + s_slack(2482,opul_S,plus) + s_slack(2482,opul_S,minus) + s_slack(2482,pige_H,plus) + s_slack(2482,pige_H,minus) + s_slack(2482,pige_L,plus)
     
      + s_slack(2482,pige_L,minus) + s_slack(2482,pige_S,plus) + s_slack(2482,pige_S,minus) + s_slack(2482,pota_H,plus) + s_slack(2482,pota_H,minus) + s_slack(2482,pota_L,plus) + s_slack(2482,pota_L,minus) + s_slack(2482,pota_S,plus)
     
      + s_slack(2482,pota_S,minus) + s_slack(2482,rest_H,plus) + s_slack(2482,rest_H,minus) + s_slack(2482,rest_L,plus) + s_slack(2482,rest_L,minus) + s_slack(2482,rest_S,plus) + s_slack(2482,rest_S,minus) + s_slack(2482,rice_H,plus)
     
      + s_slack(2482,rice_H,minus) + s_slack(2482,rice_L,plus) + s_slack(2482,rice_L,minus) + s_slack(2482,rice_S,plus) + s_slack(2482,rice_S,minus) + s_slack(2482,sorg_L,plus) + s_slack(2482,sorg_L,minus) + s_slack(2482,sorg_S,plus)
     
      + s_slack(2482,sorg_S,minus) + s_slack(2482,soyb_L,plus) + s_slack(2482,soyb_L,minus) + s_slack(2482,soyb_S,plus) + s_slack(2482,soyb_S,minus) + s_slack(2482,sunf_L,plus) + s_slack(2482,sunf_L,minus) + s_slack(2482,temf_H,plus)
     
      + s_slack(2482,temf_H,minus) + s_slack(2482,temf_L,plus) + s_slack(2482,temf_L,minus) + s_slack(2482,temf_S,plus) + s_slack(2482,temf_S,minus) + s_slack(2482,toba_H,plus) + s_slack(2482,toba_H,minus) + s_slack(2482,toba_L,plus)
     
      + s_slack(2482,toba_L,minus) + s_slack(2482,trof_L,plus) + s_slack(2482,trof_L,minus) + s_slack(2482,trof_S,plus) + s_slack(2482,trof_S,minus) + s_slack(2482,vege_H,plus) + s_slack(2482,vege_H,minus) + s_slack(2482,vege_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 266
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2482,vege_L,minus) + s_slack(2482,vege_S,plus) + s_slack(2482,vege_S,minus) + s_slack(2483,rice_I,plus) + s_slack(2483,rice_I,minus) + s_slack(2483,sugc_I,plus) + s_slack(2483,sugc_I,minus) + s_slack(2483,whea_I,plus)
     
      + s_slack(2483,whea_I,minus) + s_slack(2483,bean_H,plus) + s_slack(2483,bean_H,minus) + s_slack(2483,bean_L,plus) + s_slack(2483,bean_L,minus) + s_slack(2483,bean_S,plus) + s_slack(2483,bean_S,minus) + s_slack(2483,cass_L,plus)
     
      + s_slack(2483,cass_L,minus) + s_slack(2483,cass_S,plus) + s_slack(2483,cass_S,minus) + s_slack(2483,chic_H,plus) + s_slack(2483,chic_H,minus) + s_slack(2483,chic_L,plus) + s_slack(2483,chic_L,minus) + s_slack(2483,chic_S,plus)
     
      + s_slack(2483,chic_S,minus) + s_slack(2483,coff_H,plus) + s_slack(2483,coff_H,minus) + s_slack(2483,coff_L,plus) + s_slack(2483,coff_L,minus) + s_slack(2483,cott_L,plus) + s_slack(2483,cott_L,minus) + s_slack(2483,cowp_H,plus)
     
      + s_slack(2483,cowp_H,minus) + s_slack(2483,cowp_L,plus) + s_slack(2483,cowp_L,minus) + s_slack(2483,cowp_S,plus) + s_slack(2483,cowp_S,minus) + s_slack(2483,grou_H,plus) + s_slack(2483,grou_H,minus) + s_slack(2483,grou_L,plus)
     
      + s_slack(2483,grou_L,minus) + s_slack(2483,grou_S,plus) + s_slack(2483,grou_S,minus) + s_slack(2483,lent_H,plus) + s_slack(2483,lent_H,minus) + s_slack(2483,lent_L,plus) + s_slack(2483,lent_L,minus) + s_slack(2483,lent_S,plus)
     
      + s_slack(2483,lent_S,minus) + s_slack(2483,maiz_H,plus) + s_slack(2483,maiz_H,minus) + s_slack(2483,maiz_L,plus) + s_slack(2483,maiz_L,minus) + s_slack(2483,maiz_S,plus) + s_slack(2483,maiz_S,minus) + s_slack(2483,mill_H,plus)
     
      + s_slack(2483,mill_H,minus) + s_slack(2483,mill_L,plus) + s_slack(2483,mill_L,minus) + s_slack(2483,mill_S,plus) + s_slack(2483,mill_S,minus) + s_slack(2483,ofib_L,plus) + s_slack(2483,ofib_L,minus) + s_slack(2483,ooil_L,plus)
     
      + s_slack(2483,ooil_L,minus) + s_slack(2483,opul_H,plus) + s_slack(2483,opul_H,minus) + s_slack(2483,opul_L,plus) + s_slack(2483,opul_L,minus) + s_slack(2483,opul_S,plus) + s_slack(2483,opul_S,minus) + s_slack(2483,pige_H,plus)
     
      + s_slack(2483,pige_H,minus) + s_slack(2483,pige_L,plus) + s_slack(2483,pige_L,minus) + s_slack(2483,pige_S,plus) + s_slack(2483,pige_S,minus) + s_slack(2483,pota_H,plus) + s_slack(2483,pota_H,minus) + s_slack(2483,pota_L,plus)
     
      + s_slack(2483,pota_L,minus) + s_slack(2483,pota_S,plus) + s_slack(2483,pota_S,minus) + s_slack(2483,rest_H,plus) + s_slack(2483,rest_H,minus) + s_slack(2483,rest_L,plus) + s_slack(2483,rest_L,minus) + s_slack(2483,rest_S,plus)
     
      + s_slack(2483,rest_S,minus) + s_slack(2483,rice_H,plus) + s_slack(2483,rice_H,minus) + s_slack(2483,rice_L,plus) + s_slack(2483,rice_L,minus) + s_slack(2483,rice_S,plus) + s_slack(2483,rice_S,minus) + s_slack(2483,sorg_L,plus)
     
      + s_slack(2483,sorg_L,minus) + s_slack(2483,sorg_S,plus) + s_slack(2483,sorg_S,minus) + s_slack(2483,soyb_L,plus) + s_slack(2483,soyb_L,minus) + s_slack(2483,soyb_S,plus) + s_slack(2483,soyb_S,minus) + s_slack(2483,sunf_L,plus)
     
      + s_slack(2483,sunf_L,minus) + s_slack(2483,temf_H,plus) + s_slack(2483,temf_H,minus) + s_slack(2483,temf_L,plus) + s_slack(2483,temf_L,minus) + s_slack(2483,temf_S,plus) + s_slack(2483,temf_S,minus) + s_slack(2483,toba_H,plus)
     
      + s_slack(2483,toba_H,minus) + s_slack(2483,toba_L,plus) + s_slack(2483,toba_L,minus) + s_slack(2483,trof_L,plus) + s_slack(2483,trof_L,minus) + s_slack(2483,trof_S,plus) + s_slack(2483,trof_S,minus) + s_slack(2483,vege_H,plus)
     
      + s_slack(2483,vege_H,minus) + s_slack(2483,vege_L,plus) + s_slack(2483,vege_L,minus) + s_slack(2483,vege_S,plus) + s_slack(2483,vege_S,minus) + s_slack(2519,rice_I,plus) + s_slack(2519,rice_I,minus) + s_slack(2519,sugc_I,plus)
     
      + s_slack(2519,sugc_I,minus) + s_slack(2519,whea_I,plus) + s_slack(2519,whea_I,minus) + s_slack(2519,bean_H,plus) + s_slack(2519,bean_H,minus) + s_slack(2519,bean_L,plus) + s_slack(2519,bean_L,minus) + s_slack(2519,bean_S,plus)
     
      + s_slack(2519,bean_S,minus) + s_slack(2519,cass_L,plus) + s_slack(2519,cass_L,minus) + s_slack(2519,cass_S,plus) + s_slack(2519,cass_S,minus) + s_slack(2519,chic_H,plus) + s_slack(2519,chic_H,minus) + s_slack(2519,chic_L,plus)
     
      + s_slack(2519,chic_L,minus) + s_slack(2519,chic_S,plus) + s_slack(2519,chic_S,minus) + s_slack(2519,coff_H,plus) + s_slack(2519,coff_H,minus) + s_slack(2519,coff_L,plus) + s_slack(2519,coff_L,minus) + s_slack(2519,cott_L,plus)
     
      + s_slack(2519,cott_L,minus) + s_slack(2519,cowp_H,plus) + s_slack(2519,cowp_H,minus) + s_slack(2519,cowp_L,plus) + s_slack(2519,cowp_L,minus) + s_slack(2519,cowp_S,plus) + s_slack(2519,cowp_S,minus) + s_slack(2519,grou_H,plus)
     
      + s_slack(2519,grou_H,minus) + s_slack(2519,grou_L,plus) + s_slack(2519,grou_L,minus) + s_slack(2519,grou_S,plus) + s_slack(2519,grou_S,minus) + s_slack(2519,lent_H,plus) + s_slack(2519,lent_H,minus) + s_slack(2519,lent_L,plus)
     
      + s_slack(2519,lent_L,minus) + s_slack(2519,lent_S,plus) + s_slack(2519,lent_S,minus) + s_slack(2519,maiz_H,plus) + s_slack(2519,maiz_H,minus) + s_slack(2519,maiz_L,plus) + s_slack(2519,maiz_L,minus) + s_slack(2519,maiz_S,plus)
     
      + s_slack(2519,maiz_S,minus) + s_slack(2519,mill_H,plus) + s_slack(2519,mill_H,minus) + s_slack(2519,mill_L,plus) + s_slack(2519,mill_L,minus) + s_slack(2519,mill_S,plus) + s_slack(2519,mill_S,minus) + s_slack(2519,ofib_L,plus)
     
      + s_slack(2519,ofib_L,minus) + s_slack(2519,ooil_L,plus) + s_slack(2519,ooil_L,minus) + s_slack(2519,opul_H,plus) + s_slack(2519,opul_H,minus) + s_slack(2519,opul_L,plus) + s_slack(2519,opul_L,minus) + s_slack(2519,opul_S,plus)
     
      + s_slack(2519,opul_S,minus) + s_slack(2519,pige_H,plus) + s_slack(2519,pige_H,minus) + s_slack(2519,pige_L,plus) + s_slack(2519,pige_L,minus) + s_slack(2519,pige_S,plus) + s_slack(2519,pige_S,minus) + s_slack(2519,pota_H,plus)
     
      + s_slack(2519,pota_H,minus) + s_slack(2519,pota_L,plus) + s_slack(2519,pota_L,minus) + s_slack(2519,pota_S,plus) + s_slack(2519,pota_S,minus) + s_slack(2519,rest_H,plus) + s_slack(2519,rest_H,minus) + s_slack(2519,rest_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 267
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2519,rest_L,minus) + s_slack(2519,rest_S,plus) + s_slack(2519,rest_S,minus) + s_slack(2519,rice_H,plus) + s_slack(2519,rice_H,minus) + s_slack(2519,rice_L,plus) + s_slack(2519,rice_L,minus) + s_slack(2519,rice_S,plus)
     
      + s_slack(2519,rice_S,minus) + s_slack(2519,sorg_L,plus) + s_slack(2519,sorg_L,minus) + s_slack(2519,sorg_S,plus) + s_slack(2519,sorg_S,minus) + s_slack(2519,soyb_L,plus) + s_slack(2519,soyb_L,minus) + s_slack(2519,soyb_S,plus)
     
      + s_slack(2519,soyb_S,minus) + s_slack(2519,sunf_L,plus) + s_slack(2519,sunf_L,minus) + s_slack(2519,temf_H,plus) + s_slack(2519,temf_H,minus) + s_slack(2519,temf_L,plus) + s_slack(2519,temf_L,minus) + s_slack(2519,temf_S,plus)
     
      + s_slack(2519,temf_S,minus) + s_slack(2519,toba_H,plus) + s_slack(2519,toba_H,minus) + s_slack(2519,toba_L,plus) + s_slack(2519,toba_L,minus) + s_slack(2519,trof_L,plus) + s_slack(2519,trof_L,minus) + s_slack(2519,trof_S,plus)
     
      + s_slack(2519,trof_S,minus) + s_slack(2519,vege_H,plus) + s_slack(2519,vege_H,minus) + s_slack(2519,vege_L,plus) + s_slack(2519,vege_L,minus) + s_slack(2519,vege_S,plus) + s_slack(2519,vege_S,minus) + s_slack(2520,rice_I,plus)
     
      + s_slack(2520,rice_I,minus) + s_slack(2520,sugc_I,plus) + s_slack(2520,sugc_I,minus) + s_slack(2520,whea_I,plus) + s_slack(2520,whea_I,minus) + s_slack(2520,bean_H,plus) + s_slack(2520,bean_H,minus) + s_slack(2520,bean_L,plus)
     
      + s_slack(2520,bean_L,minus) + s_slack(2520,bean_S,plus) + s_slack(2520,bean_S,minus) + s_slack(2520,cass_L,plus) + s_slack(2520,cass_L,minus) + s_slack(2520,cass_S,plus) + s_slack(2520,cass_S,minus) + s_slack(2520,chic_H,plus)
     
      + s_slack(2520,chic_H,minus) + s_slack(2520,chic_L,plus) + s_slack(2520,chic_L,minus) + s_slack(2520,chic_S,plus) + s_slack(2520,chic_S,minus) + s_slack(2520,coff_H,plus) + s_slack(2520,coff_H,minus) + s_slack(2520,coff_L,plus)
     
      + s_slack(2520,coff_L,minus) + s_slack(2520,cott_L,plus) + s_slack(2520,cott_L,minus) + s_slack(2520,cowp_H,plus) + s_slack(2520,cowp_H,minus) + s_slack(2520,cowp_L,plus) + s_slack(2520,cowp_L,minus) + s_slack(2520,cowp_S,plus)
     
      + s_slack(2520,cowp_S,minus) + s_slack(2520,grou_H,plus) + s_slack(2520,grou_H,minus) + s_slack(2520,grou_L,plus) + s_slack(2520,grou_L,minus) + s_slack(2520,grou_S,plus) + s_slack(2520,grou_S,minus) + s_slack(2520,lent_H,plus)
     
      + s_slack(2520,lent_H,minus) + s_slack(2520,lent_L,plus) + s_slack(2520,lent_L,minus) + s_slack(2520,lent_S,plus) + s_slack(2520,lent_S,minus) + s_slack(2520,maiz_H,plus) + s_slack(2520,maiz_H,minus) + s_slack(2520,maiz_L,plus)
     
      + s_slack(2520,maiz_L,minus) + s_slack(2520,maiz_S,plus) + s_slack(2520,maiz_S,minus) + s_slack(2520,mill_H,plus) + s_slack(2520,mill_H,minus) + s_slack(2520,mill_L,plus) + s_slack(2520,mill_L,minus) + s_slack(2520,mill_S,plus)
     
      + s_slack(2520,mill_S,minus) + s_slack(2520,ofib_L,plus) + s_slack(2520,ofib_L,minus) + s_slack(2520,ooil_L,plus) + s_slack(2520,ooil_L,minus) + s_slack(2520,opul_H,plus) + s_slack(2520,opul_H,minus) + s_slack(2520,opul_L,plus)
     
      + s_slack(2520,opul_L,minus) + s_slack(2520,opul_S,plus) + s_slack(2520,opul_S,minus) + s_slack(2520,pige_H,plus) + s_slack(2520,pige_H,minus) + s_slack(2520,pige_L,plus) + s_slack(2520,pige_L,minus) + s_slack(2520,pige_S,plus)
     
      + s_slack(2520,pige_S,minus) + s_slack(2520,pota_H,plus) + s_slack(2520,pota_H,minus) + s_slack(2520,pota_L,plus) + s_slack(2520,pota_L,minus) + s_slack(2520,pota_S,plus) + s_slack(2520,pota_S,minus) + s_slack(2520,rest_H,plus)
     
      + s_slack(2520,rest_H,minus) + s_slack(2520,rest_L,plus) + s_slack(2520,rest_L,minus) + s_slack(2520,rest_S,plus) + s_slack(2520,rest_S,minus) + s_slack(2520,rice_H,plus) + s_slack(2520,rice_H,minus) + s_slack(2520,rice_L,plus)
     
      + s_slack(2520,rice_L,minus) + s_slack(2520,rice_S,plus) + s_slack(2520,rice_S,minus) + s_slack(2520,sorg_L,plus) + s_slack(2520,sorg_L,minus) + s_slack(2520,sorg_S,plus) + s_slack(2520,sorg_S,minus) + s_slack(2520,soyb_L,plus)
     
      + s_slack(2520,soyb_L,minus) + s_slack(2520,soyb_S,plus) + s_slack(2520,soyb_S,minus) + s_slack(2520,sunf_L,plus) + s_slack(2520,sunf_L,minus) + s_slack(2520,temf_H,plus) + s_slack(2520,temf_H,minus) + s_slack(2520,temf_L,plus)
     
      + s_slack(2520,temf_L,minus) + s_slack(2520,temf_S,plus) + s_slack(2520,temf_S,minus) + s_slack(2520,toba_H,plus) + s_slack(2520,toba_H,minus) + s_slack(2520,toba_L,plus) + s_slack(2520,toba_L,minus) + s_slack(2520,trof_L,plus)
     
      + s_slack(2520,trof_L,minus) + s_slack(2520,trof_S,plus) + s_slack(2520,trof_S,minus) + s_slack(2520,vege_H,plus) + s_slack(2520,vege_H,minus) + s_slack(2520,vege_L,plus) + s_slack(2520,vege_L,minus) + s_slack(2520,vege_S,plus)
     
      + s_slack(2520,vege_S,minus) + s_slack(2521,rice_I,plus) + s_slack(2521,rice_I,minus) + s_slack(2521,sugc_I,plus) + s_slack(2521,sugc_I,minus) + s_slack(2521,whea_I,plus) + s_slack(2521,whea_I,minus) + s_slack(2521,bean_H,plus)
     
      + s_slack(2521,bean_H,minus) + s_slack(2521,bean_L,plus) + s_slack(2521,bean_L,minus) + s_slack(2521,bean_S,plus) + s_slack(2521,bean_S,minus) + s_slack(2521,cass_L,plus) + s_slack(2521,cass_L,minus) + s_slack(2521,cass_S,plus)
     
      + s_slack(2521,cass_S,minus) + s_slack(2521,chic_H,plus) + s_slack(2521,chic_H,minus) + s_slack(2521,chic_L,plus) + s_slack(2521,chic_L,minus) + s_slack(2521,chic_S,plus) + s_slack(2521,chic_S,minus) + s_slack(2521,coff_H,plus)
     
      + s_slack(2521,coff_H,minus) + s_slack(2521,coff_L,plus) + s_slack(2521,coff_L,minus) + s_slack(2521,cott_L,plus) + s_slack(2521,cott_L,minus) + s_slack(2521,cowp_H,plus) + s_slack(2521,cowp_H,minus) + s_slack(2521,cowp_L,plus)
     
      + s_slack(2521,cowp_L,minus) + s_slack(2521,cowp_S,plus) + s_slack(2521,cowp_S,minus) + s_slack(2521,grou_H,plus) + s_slack(2521,grou_H,minus) + s_slack(2521,grou_L,plus) + s_slack(2521,grou_L,minus) + s_slack(2521,grou_S,plus)
     
      + s_slack(2521,grou_S,minus) + s_slack(2521,lent_H,plus) + s_slack(2521,lent_H,minus) + s_slack(2521,lent_L,plus) + s_slack(2521,lent_L,minus) + s_slack(2521,lent_S,plus) + s_slack(2521,lent_S,minus) + s_slack(2521,maiz_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 268
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2521,maiz_H,minus) + s_slack(2521,maiz_L,plus) + s_slack(2521,maiz_L,minus) + s_slack(2521,maiz_S,plus) + s_slack(2521,maiz_S,minus) + s_slack(2521,mill_H,plus) + s_slack(2521,mill_H,minus) + s_slack(2521,mill_L,plus)
     
      + s_slack(2521,mill_L,minus) + s_slack(2521,mill_S,plus) + s_slack(2521,mill_S,minus) + s_slack(2521,ofib_L,plus) + s_slack(2521,ofib_L,minus) + s_slack(2521,ooil_L,plus) + s_slack(2521,ooil_L,minus) + s_slack(2521,opul_H,plus)
     
      + s_slack(2521,opul_H,minus) + s_slack(2521,opul_L,plus) + s_slack(2521,opul_L,minus) + s_slack(2521,opul_S,plus) + s_slack(2521,opul_S,minus) + s_slack(2521,pige_H,plus) + s_slack(2521,pige_H,minus) + s_slack(2521,pige_L,plus)
     
      + s_slack(2521,pige_L,minus) + s_slack(2521,pige_S,plus) + s_slack(2521,pige_S,minus) + s_slack(2521,pota_H,plus) + s_slack(2521,pota_H,minus) + s_slack(2521,pota_L,plus) + s_slack(2521,pota_L,minus) + s_slack(2521,pota_S,plus)
     
      + s_slack(2521,pota_S,minus) + s_slack(2521,rest_H,plus) + s_slack(2521,rest_H,minus) + s_slack(2521,rest_L,plus) + s_slack(2521,rest_L,minus) + s_slack(2521,rest_S,plus) + s_slack(2521,rest_S,minus) + s_slack(2521,rice_H,plus)
     
      + s_slack(2521,rice_H,minus) + s_slack(2521,rice_L,plus) + s_slack(2521,rice_L,minus) + s_slack(2521,rice_S,plus) + s_slack(2521,rice_S,minus) + s_slack(2521,sorg_L,plus) + s_slack(2521,sorg_L,minus) + s_slack(2521,sorg_S,plus)
     
      + s_slack(2521,sorg_S,minus) + s_slack(2521,soyb_L,plus) + s_slack(2521,soyb_L,minus) + s_slack(2521,soyb_S,plus) + s_slack(2521,soyb_S,minus) + s_slack(2521,sunf_L,plus) + s_slack(2521,sunf_L,minus) + s_slack(2521,temf_H,plus)
     
      + s_slack(2521,temf_H,minus) + s_slack(2521,temf_L,plus) + s_slack(2521,temf_L,minus) + s_slack(2521,temf_S,plus) + s_slack(2521,temf_S,minus) + s_slack(2521,toba_H,plus) + s_slack(2521,toba_H,minus) + s_slack(2521,toba_L,plus)
     
      + s_slack(2521,toba_L,minus) + s_slack(2521,trof_L,plus) + s_slack(2521,trof_L,minus) + s_slack(2521,trof_S,plus) + s_slack(2521,trof_S,minus) + s_slack(2521,vege_H,plus) + s_slack(2521,vege_H,minus) + s_slack(2521,vege_L,plus)
     
      + s_slack(2521,vege_L,minus) + s_slack(2521,vege_S,plus) + s_slack(2521,vege_S,minus) + s_slack(2522,rice_I,plus) + s_slack(2522,rice_I,minus) + s_slack(2522,sugc_I,plus) + s_slack(2522,sugc_I,minus) + s_slack(2522,whea_I,plus)
     
      + s_slack(2522,whea_I,minus) + s_slack(2522,bean_H,plus) + s_slack(2522,bean_H,minus) + s_slack(2522,bean_L,plus) + s_slack(2522,bean_L,minus) + s_slack(2522,bean_S,plus) + s_slack(2522,bean_S,minus) + s_slack(2522,cass_L,plus)
     
      + s_slack(2522,cass_L,minus) + s_slack(2522,cass_S,plus) + s_slack(2522,cass_S,minus) + s_slack(2522,chic_H,plus) + s_slack(2522,chic_H,minus) + s_slack(2522,chic_L,plus) + s_slack(2522,chic_L,minus) + s_slack(2522,chic_S,plus)
     
      + s_slack(2522,chic_S,minus) + s_slack(2522,coff_H,plus) + s_slack(2522,coff_H,minus) + s_slack(2522,coff_L,plus) + s_slack(2522,coff_L,minus) + s_slack(2522,cott_L,plus) + s_slack(2522,cott_L,minus) + s_slack(2522,cowp_H,plus)
     
      + s_slack(2522,cowp_H,minus) + s_slack(2522,cowp_L,plus) + s_slack(2522,cowp_L,minus) + s_slack(2522,cowp_S,plus) + s_slack(2522,cowp_S,minus) + s_slack(2522,grou_H,plus) + s_slack(2522,grou_H,minus) + s_slack(2522,grou_L,plus)
     
      + s_slack(2522,grou_L,minus) + s_slack(2522,grou_S,plus) + s_slack(2522,grou_S,minus) + s_slack(2522,lent_H,plus) + s_slack(2522,lent_H,minus) + s_slack(2522,lent_L,plus) + s_slack(2522,lent_L,minus) + s_slack(2522,lent_S,plus)
     
      + s_slack(2522,lent_S,minus) + s_slack(2522,maiz_H,plus) + s_slack(2522,maiz_H,minus) + s_slack(2522,maiz_L,plus) + s_slack(2522,maiz_L,minus) + s_slack(2522,maiz_S,plus) + s_slack(2522,maiz_S,minus) + s_slack(2522,mill_H,plus)
     
      + s_slack(2522,mill_H,minus) + s_slack(2522,mill_L,plus) + s_slack(2522,mill_L,minus) + s_slack(2522,mill_S,plus) + s_slack(2522,mill_S,minus) + s_slack(2522,ofib_L,plus) + s_slack(2522,ofib_L,minus) + s_slack(2522,ooil_L,plus)
     
      + s_slack(2522,ooil_L,minus) + s_slack(2522,opul_H,plus) + s_slack(2522,opul_H,minus) + s_slack(2522,opul_L,plus) + s_slack(2522,opul_L,minus) + s_slack(2522,opul_S,plus) + s_slack(2522,opul_S,minus) + s_slack(2522,pige_H,plus)
     
      + s_slack(2522,pige_H,minus) + s_slack(2522,pige_L,plus) + s_slack(2522,pige_L,minus) + s_slack(2522,pige_S,plus) + s_slack(2522,pige_S,minus) + s_slack(2522,pota_H,plus) + s_slack(2522,pota_H,minus) + s_slack(2522,pota_L,plus)
     
      + s_slack(2522,pota_L,minus) + s_slack(2522,pota_S,plus) + s_slack(2522,pota_S,minus) + s_slack(2522,rest_H,plus) + s_slack(2522,rest_H,minus) + s_slack(2522,rest_L,plus) + s_slack(2522,rest_L,minus) + s_slack(2522,rest_S,plus)
     
      + s_slack(2522,rest_S,minus) + s_slack(2522,rice_H,plus) + s_slack(2522,rice_H,minus) + s_slack(2522,rice_L,plus) + s_slack(2522,rice_L,minus) + s_slack(2522,rice_S,plus) + s_slack(2522,rice_S,minus) + s_slack(2522,sorg_L,plus)
     
      + s_slack(2522,sorg_L,minus) + s_slack(2522,sorg_S,plus) + s_slack(2522,sorg_S,minus) + s_slack(2522,soyb_L,plus) + s_slack(2522,soyb_L,minus) + s_slack(2522,soyb_S,plus) + s_slack(2522,soyb_S,minus) + s_slack(2522,sunf_L,plus)
     
      + s_slack(2522,sunf_L,minus) + s_slack(2522,temf_H,plus) + s_slack(2522,temf_H,minus) + s_slack(2522,temf_L,plus) + s_slack(2522,temf_L,minus) + s_slack(2522,temf_S,plus) + s_slack(2522,temf_S,minus) + s_slack(2522,toba_H,plus)
     
      + s_slack(2522,toba_H,minus) + s_slack(2522,toba_L,plus) + s_slack(2522,toba_L,minus) + s_slack(2522,trof_L,plus) + s_slack(2522,trof_L,minus) + s_slack(2522,trof_S,plus) + s_slack(2522,trof_S,minus) + s_slack(2522,vege_H,plus)
     
      + s_slack(2522,vege_H,minus) + s_slack(2522,vege_L,plus) + s_slack(2522,vege_L,minus) + s_slack(2522,vege_S,plus) + s_slack(2522,vege_S,minus) + s_slack(2523,rice_I,plus) + s_slack(2523,rice_I,minus) + s_slack(2523,sugc_I,plus)
     
      + s_slack(2523,sugc_I,minus) + s_slack(2523,whea_I,plus) + s_slack(2523,whea_I,minus) + s_slack(2523,bean_H,plus) + s_slack(2523,bean_H,minus) + s_slack(2523,bean_L,plus) + s_slack(2523,bean_L,minus) + s_slack(2523,bean_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 269
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2523,bean_S,minus) + s_slack(2523,cass_L,plus) + s_slack(2523,cass_L,minus) + s_slack(2523,cass_S,plus) + s_slack(2523,cass_S,minus) + s_slack(2523,chic_H,plus) + s_slack(2523,chic_H,minus) + s_slack(2523,chic_L,plus)
     
      + s_slack(2523,chic_L,minus) + s_slack(2523,chic_S,plus) + s_slack(2523,chic_S,minus) + s_slack(2523,coff_H,plus) + s_slack(2523,coff_H,minus) + s_slack(2523,coff_L,plus) + s_slack(2523,coff_L,minus) + s_slack(2523,cott_L,plus)
     
      + s_slack(2523,cott_L,minus) + s_slack(2523,cowp_H,plus) + s_slack(2523,cowp_H,minus) + s_slack(2523,cowp_L,plus) + s_slack(2523,cowp_L,minus) + s_slack(2523,cowp_S,plus) + s_slack(2523,cowp_S,minus) + s_slack(2523,grou_H,plus)
     
      + s_slack(2523,grou_H,minus) + s_slack(2523,grou_L,plus) + s_slack(2523,grou_L,minus) + s_slack(2523,grou_S,plus) + s_slack(2523,grou_S,minus) + s_slack(2523,lent_H,plus) + s_slack(2523,lent_H,minus) + s_slack(2523,lent_L,plus)
     
      + s_slack(2523,lent_L,minus) + s_slack(2523,lent_S,plus) + s_slack(2523,lent_S,minus) + s_slack(2523,maiz_H,plus) + s_slack(2523,maiz_H,minus) + s_slack(2523,maiz_L,plus) + s_slack(2523,maiz_L,minus) + s_slack(2523,maiz_S,plus)
     
      + s_slack(2523,maiz_S,minus) + s_slack(2523,mill_H,plus) + s_slack(2523,mill_H,minus) + s_slack(2523,mill_L,plus) + s_slack(2523,mill_L,minus) + s_slack(2523,mill_S,plus) + s_slack(2523,mill_S,minus) + s_slack(2523,ofib_L,plus)
     
      + s_slack(2523,ofib_L,minus) + s_slack(2523,ooil_L,plus) + s_slack(2523,ooil_L,minus) + s_slack(2523,opul_H,plus) + s_slack(2523,opul_H,minus) + s_slack(2523,opul_L,plus) + s_slack(2523,opul_L,minus) + s_slack(2523,opul_S,plus)
     
      + s_slack(2523,opul_S,minus) + s_slack(2523,pige_H,plus) + s_slack(2523,pige_H,minus) + s_slack(2523,pige_L,plus) + s_slack(2523,pige_L,minus) + s_slack(2523,pige_S,plus) + s_slack(2523,pige_S,minus) + s_slack(2523,pota_H,plus)
     
      + s_slack(2523,pota_H,minus) + s_slack(2523,pota_L,plus) + s_slack(2523,pota_L,minus) + s_slack(2523,pota_S,plus) + s_slack(2523,pota_S,minus) + s_slack(2523,rest_H,plus) + s_slack(2523,rest_H,minus) + s_slack(2523,rest_L,plus)
     
      + s_slack(2523,rest_L,minus) + s_slack(2523,rest_S,plus) + s_slack(2523,rest_S,minus) + s_slack(2523,rice_H,plus) + s_slack(2523,rice_H,minus) + s_slack(2523,rice_L,plus) + s_slack(2523,rice_L,minus) + s_slack(2523,rice_S,plus)
     
      + s_slack(2523,rice_S,minus) + s_slack(2523,sorg_L,plus) + s_slack(2523,sorg_L,minus) + s_slack(2523,sorg_S,plus) + s_slack(2523,sorg_S,minus) + s_slack(2523,soyb_L,plus) + s_slack(2523,soyb_L,minus) + s_slack(2523,soyb_S,plus)
     
      + s_slack(2523,soyb_S,minus) + s_slack(2523,sunf_L,plus) + s_slack(2523,sunf_L,minus) + s_slack(2523,temf_H,plus) + s_slack(2523,temf_H,minus) + s_slack(2523,temf_L,plus) + s_slack(2523,temf_L,minus) + s_slack(2523,temf_S,plus)
     
      + s_slack(2523,temf_S,minus) + s_slack(2523,toba_H,plus) + s_slack(2523,toba_H,minus) + s_slack(2523,toba_L,plus) + s_slack(2523,toba_L,minus) + s_slack(2523,trof_L,plus) + s_slack(2523,trof_L,minus) + s_slack(2523,trof_S,plus)
     
      + s_slack(2523,trof_S,minus) + s_slack(2523,vege_H,plus) + s_slack(2523,vege_H,minus) + s_slack(2523,vege_L,plus) + s_slack(2523,vege_L,minus) + s_slack(2523,vege_S,plus) + s_slack(2523,vege_S,minus) + s_slack(2559,rice_I,plus)
     
      + s_slack(2559,rice_I,minus) + s_slack(2559,sugc_I,plus) + s_slack(2559,sugc_I,minus) + s_slack(2559,whea_I,plus) + s_slack(2559,whea_I,minus) + s_slack(2559,bean_H,plus) + s_slack(2559,bean_H,minus) + s_slack(2559,bean_L,plus)
     
      + s_slack(2559,bean_L,minus) + s_slack(2559,bean_S,plus) + s_slack(2559,bean_S,minus) + s_slack(2559,cass_L,plus) + s_slack(2559,cass_L,minus) + s_slack(2559,cass_S,plus) + s_slack(2559,cass_S,minus) + s_slack(2559,chic_H,plus)
     
      + s_slack(2559,chic_H,minus) + s_slack(2559,chic_L,plus) + s_slack(2559,chic_L,minus) + s_slack(2559,chic_S,plus) + s_slack(2559,chic_S,minus) + s_slack(2559,coff_H,plus) + s_slack(2559,coff_H,minus) + s_slack(2559,coff_L,plus)
     
      + s_slack(2559,coff_L,minus) + s_slack(2559,cott_L,plus) + s_slack(2559,cott_L,minus) + s_slack(2559,cowp_H,plus) + s_slack(2559,cowp_H,minus) + s_slack(2559,cowp_L,plus) + s_slack(2559,cowp_L,minus) + s_slack(2559,cowp_S,plus)
     
      + s_slack(2559,cowp_S,minus) + s_slack(2559,grou_H,plus) + s_slack(2559,grou_H,minus) + s_slack(2559,grou_L,plus) + s_slack(2559,grou_L,minus) + s_slack(2559,grou_S,plus) + s_slack(2559,grou_S,minus) + s_slack(2559,lent_H,plus)
     
      + s_slack(2559,lent_H,minus) + s_slack(2559,lent_L,plus) + s_slack(2559,lent_L,minus) + s_slack(2559,lent_S,plus) + s_slack(2559,lent_S,minus) + s_slack(2559,maiz_H,plus) + s_slack(2559,maiz_H,minus) + s_slack(2559,maiz_L,plus)
     
      + s_slack(2559,maiz_L,minus) + s_slack(2559,maiz_S,plus) + s_slack(2559,maiz_S,minus) + s_slack(2559,mill_H,plus) + s_slack(2559,mill_H,minus) + s_slack(2559,mill_L,plus) + s_slack(2559,mill_L,minus) + s_slack(2559,mill_S,plus)
     
      + s_slack(2559,mill_S,minus) + s_slack(2559,ofib_L,plus) + s_slack(2559,ofib_L,minus) + s_slack(2559,ooil_L,plus) + s_slack(2559,ooil_L,minus) + s_slack(2559,opul_H,plus) + s_slack(2559,opul_H,minus) + s_slack(2559,opul_L,plus)
     
      + s_slack(2559,opul_L,minus) + s_slack(2559,opul_S,plus) + s_slack(2559,opul_S,minus) + s_slack(2559,pige_H,plus) + s_slack(2559,pige_H,minus) + s_slack(2559,pige_L,plus) + s_slack(2559,pige_L,minus) + s_slack(2559,pige_S,plus)
     
      + s_slack(2559,pige_S,minus) + s_slack(2559,pota_H,plus) + s_slack(2559,pota_H,minus) + s_slack(2559,pota_L,plus) + s_slack(2559,pota_L,minus) + s_slack(2559,pota_S,plus) + s_slack(2559,pota_S,minus) + s_slack(2559,rest_H,plus)
     
      + s_slack(2559,rest_H,minus) + s_slack(2559,rest_L,plus) + s_slack(2559,rest_L,minus) + s_slack(2559,rest_S,plus) + s_slack(2559,rest_S,minus) + s_slack(2559,rice_H,plus) + s_slack(2559,rice_H,minus) + s_slack(2559,rice_L,plus)
     
      + s_slack(2559,rice_L,minus) + s_slack(2559,rice_S,plus) + s_slack(2559,rice_S,minus) + s_slack(2559,sorg_L,plus) + s_slack(2559,sorg_L,minus) + s_slack(2559,sorg_S,plus) + s_slack(2559,sorg_S,minus) + s_slack(2559,soyb_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 270
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2559,soyb_L,minus) + s_slack(2559,soyb_S,plus) + s_slack(2559,soyb_S,minus) + s_slack(2559,sunf_L,plus) + s_slack(2559,sunf_L,minus) + s_slack(2559,temf_H,plus) + s_slack(2559,temf_H,minus) + s_slack(2559,temf_L,plus)
     
      + s_slack(2559,temf_L,minus) + s_slack(2559,temf_S,plus) + s_slack(2559,temf_S,minus) + s_slack(2559,toba_H,plus) + s_slack(2559,toba_H,minus) + s_slack(2559,toba_L,plus) + s_slack(2559,toba_L,minus) + s_slack(2559,trof_L,plus)
     
      + s_slack(2559,trof_L,minus) + s_slack(2559,trof_S,plus) + s_slack(2559,trof_S,minus) + s_slack(2559,vege_H,plus) + s_slack(2559,vege_H,minus) + s_slack(2559,vege_L,plus) + s_slack(2559,vege_L,minus) + s_slack(2559,vege_S,plus)
     
      + s_slack(2559,vege_S,minus) + s_slack(2560,rice_I,plus) + s_slack(2560,rice_I,minus) + s_slack(2560,sugc_I,plus) + s_slack(2560,sugc_I,minus) + s_slack(2560,whea_I,plus) + s_slack(2560,whea_I,minus) + s_slack(2560,bean_H,plus)
     
      + s_slack(2560,bean_H,minus) + s_slack(2560,bean_L,plus) + s_slack(2560,bean_L,minus) + s_slack(2560,bean_S,plus) + s_slack(2560,bean_S,minus) + s_slack(2560,cass_L,plus) + s_slack(2560,cass_L,minus) + s_slack(2560,cass_S,plus)
     
      + s_slack(2560,cass_S,minus) + s_slack(2560,chic_H,plus) + s_slack(2560,chic_H,minus) + s_slack(2560,chic_L,plus) + s_slack(2560,chic_L,minus) + s_slack(2560,chic_S,plus) + s_slack(2560,chic_S,minus) + s_slack(2560,coff_H,plus)
     
      + s_slack(2560,coff_H,minus) + s_slack(2560,coff_L,plus) + s_slack(2560,coff_L,minus) + s_slack(2560,cott_L,plus) + s_slack(2560,cott_L,minus) + s_slack(2560,cowp_H,plus) + s_slack(2560,cowp_H,minus) + s_slack(2560,cowp_L,plus)
     
      + s_slack(2560,cowp_L,minus) + s_slack(2560,cowp_S,plus) + s_slack(2560,cowp_S,minus) + s_slack(2560,grou_H,plus) + s_slack(2560,grou_H,minus) + s_slack(2560,grou_L,plus) + s_slack(2560,grou_L,minus) + s_slack(2560,grou_S,plus)
     
      + s_slack(2560,grou_S,minus) + s_slack(2560,lent_H,plus) + s_slack(2560,lent_H,minus) + s_slack(2560,lent_L,plus) + s_slack(2560,lent_L,minus) + s_slack(2560,lent_S,plus) + s_slack(2560,lent_S,minus) + s_slack(2560,maiz_H,plus)
     
      + s_slack(2560,maiz_H,minus) + s_slack(2560,maiz_L,plus) + s_slack(2560,maiz_L,minus) + s_slack(2560,maiz_S,plus) + s_slack(2560,maiz_S,minus) + s_slack(2560,mill_H,plus) + s_slack(2560,mill_H,minus) + s_slack(2560,mill_L,plus)
     
      + s_slack(2560,mill_L,minus) + s_slack(2560,mill_S,plus) + s_slack(2560,mill_S,minus) + s_slack(2560,ofib_L,plus) + s_slack(2560,ofib_L,minus) + s_slack(2560,ooil_L,plus) + s_slack(2560,ooil_L,minus) + s_slack(2560,opul_H,plus)
     
      + s_slack(2560,opul_H,minus) + s_slack(2560,opul_L,plus) + s_slack(2560,opul_L,minus) + s_slack(2560,opul_S,plus) + s_slack(2560,opul_S,minus) + s_slack(2560,pige_H,plus) + s_slack(2560,pige_H,minus) + s_slack(2560,pige_L,plus)
     
      + s_slack(2560,pige_L,minus) + s_slack(2560,pige_S,plus) + s_slack(2560,pige_S,minus) + s_slack(2560,pota_H,plus) + s_slack(2560,pota_H,minus) + s_slack(2560,pota_L,plus) + s_slack(2560,pota_L,minus) + s_slack(2560,pota_S,plus)
     
      + s_slack(2560,pota_S,minus) + s_slack(2560,rest_H,plus) + s_slack(2560,rest_H,minus) + s_slack(2560,rest_L,plus) + s_slack(2560,rest_L,minus) + s_slack(2560,rest_S,plus) + s_slack(2560,rest_S,minus) + s_slack(2560,rice_H,plus)
     
      + s_slack(2560,rice_H,minus) + s_slack(2560,rice_L,plus) + s_slack(2560,rice_L,minus) + s_slack(2560,rice_S,plus) + s_slack(2560,rice_S,minus) + s_slack(2560,sorg_L,plus) + s_slack(2560,sorg_L,minus) + s_slack(2560,sorg_S,plus)
     
      + s_slack(2560,sorg_S,minus) + s_slack(2560,soyb_L,plus) + s_slack(2560,soyb_L,minus) + s_slack(2560,soyb_S,plus) + s_slack(2560,soyb_S,minus) + s_slack(2560,sunf_L,plus) + s_slack(2560,sunf_L,minus) + s_slack(2560,temf_H,plus)
     
      + s_slack(2560,temf_H,minus) + s_slack(2560,temf_L,plus) + s_slack(2560,temf_L,minus) + s_slack(2560,temf_S,plus) + s_slack(2560,temf_S,minus) + s_slack(2560,toba_H,plus) + s_slack(2560,toba_H,minus) + s_slack(2560,toba_L,plus)
     
      + s_slack(2560,toba_L,minus) + s_slack(2560,trof_L,plus) + s_slack(2560,trof_L,minus) + s_slack(2560,trof_S,plus) + s_slack(2560,trof_S,minus) + s_slack(2560,vege_H,plus) + s_slack(2560,vege_H,minus) + s_slack(2560,vege_L,plus)
     
      + s_slack(2560,vege_L,minus) + s_slack(2560,vege_S,plus) + s_slack(2560,vege_S,minus) + s_slack(2561,rice_I,plus) + s_slack(2561,rice_I,minus) + s_slack(2561,sugc_I,plus) + s_slack(2561,sugc_I,minus) + s_slack(2561,whea_I,plus)
     
      + s_slack(2561,whea_I,minus) + s_slack(2561,bean_H,plus) + s_slack(2561,bean_H,minus) + s_slack(2561,bean_L,plus) + s_slack(2561,bean_L,minus) + s_slack(2561,bean_S,plus) + s_slack(2561,bean_S,minus) + s_slack(2561,cass_L,plus)
     
      + s_slack(2561,cass_L,minus) + s_slack(2561,cass_S,plus) + s_slack(2561,cass_S,minus) + s_slack(2561,chic_H,plus) + s_slack(2561,chic_H,minus) + s_slack(2561,chic_L,plus) + s_slack(2561,chic_L,minus) + s_slack(2561,chic_S,plus)
     
      + s_slack(2561,chic_S,minus) + s_slack(2561,coff_H,plus) + s_slack(2561,coff_H,minus) + s_slack(2561,coff_L,plus) + s_slack(2561,coff_L,minus) + s_slack(2561,cott_L,plus) + s_slack(2561,cott_L,minus) + s_slack(2561,cowp_H,plus)
     
      + s_slack(2561,cowp_H,minus) + s_slack(2561,cowp_L,plus) + s_slack(2561,cowp_L,minus) + s_slack(2561,cowp_S,plus) + s_slack(2561,cowp_S,minus) + s_slack(2561,grou_H,plus) + s_slack(2561,grou_H,minus) + s_slack(2561,grou_L,plus)
     
      + s_slack(2561,grou_L,minus) + s_slack(2561,grou_S,plus) + s_slack(2561,grou_S,minus) + s_slack(2561,lent_H,plus) + s_slack(2561,lent_H,minus) + s_slack(2561,lent_L,plus) + s_slack(2561,lent_L,minus) + s_slack(2561,lent_S,plus)
     
      + s_slack(2561,lent_S,minus) + s_slack(2561,maiz_H,plus) + s_slack(2561,maiz_H,minus) + s_slack(2561,maiz_L,plus) + s_slack(2561,maiz_L,minus) + s_slack(2561,maiz_S,plus) + s_slack(2561,maiz_S,minus) + s_slack(2561,mill_H,plus)
     
      + s_slack(2561,mill_H,minus) + s_slack(2561,mill_L,plus) + s_slack(2561,mill_L,minus) + s_slack(2561,mill_S,plus) + s_slack(2561,mill_S,minus) + s_slack(2561,ofib_L,plus) + s_slack(2561,ofib_L,minus) + s_slack(2561,ooil_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 271
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2561,ooil_L,minus) + s_slack(2561,opul_H,plus) + s_slack(2561,opul_H,minus) + s_slack(2561,opul_L,plus) + s_slack(2561,opul_L,minus) + s_slack(2561,opul_S,plus) + s_slack(2561,opul_S,minus) + s_slack(2561,pige_H,plus)
     
      + s_slack(2561,pige_H,minus) + s_slack(2561,pige_L,plus) + s_slack(2561,pige_L,minus) + s_slack(2561,pige_S,plus) + s_slack(2561,pige_S,minus) + s_slack(2561,pota_H,plus) + s_slack(2561,pota_H,minus) + s_slack(2561,pota_L,plus)
     
      + s_slack(2561,pota_L,minus) + s_slack(2561,pota_S,plus) + s_slack(2561,pota_S,minus) + s_slack(2561,rest_H,plus) + s_slack(2561,rest_H,minus) + s_slack(2561,rest_L,plus) + s_slack(2561,rest_L,minus) + s_slack(2561,rest_S,plus)
     
      + s_slack(2561,rest_S,minus) + s_slack(2561,rice_H,plus) + s_slack(2561,rice_H,minus) + s_slack(2561,rice_L,plus) + s_slack(2561,rice_L,minus) + s_slack(2561,rice_S,plus) + s_slack(2561,rice_S,minus) + s_slack(2561,sorg_L,plus)
     
      + s_slack(2561,sorg_L,minus) + s_slack(2561,sorg_S,plus) + s_slack(2561,sorg_S,minus) + s_slack(2561,soyb_L,plus) + s_slack(2561,soyb_L,minus) + s_slack(2561,soyb_S,plus) + s_slack(2561,soyb_S,minus) + s_slack(2561,sunf_L,plus)
     
      + s_slack(2561,sunf_L,minus) + s_slack(2561,temf_H,plus) + s_slack(2561,temf_H,minus) + s_slack(2561,temf_L,plus) + s_slack(2561,temf_L,minus) + s_slack(2561,temf_S,plus) + s_slack(2561,temf_S,minus) + s_slack(2561,toba_H,plus)
     
      + s_slack(2561,toba_H,minus) + s_slack(2561,toba_L,plus) + s_slack(2561,toba_L,minus) + s_slack(2561,trof_L,plus) + s_slack(2561,trof_L,minus) + s_slack(2561,trof_S,plus) + s_slack(2561,trof_S,minus) + s_slack(2561,vege_H,plus)
     
      + s_slack(2561,vege_H,minus) + s_slack(2561,vege_L,plus) + s_slack(2561,vege_L,minus) + s_slack(2561,vege_S,plus) + s_slack(2561,vege_S,minus) + s_slack(2562,rice_I,plus) + s_slack(2562,rice_I,minus) + s_slack(2562,sugc_I,plus)
     
      + s_slack(2562,sugc_I,minus) + s_slack(2562,whea_I,plus) + s_slack(2562,whea_I,minus) + s_slack(2562,bean_H,plus) + s_slack(2562,bean_H,minus) + s_slack(2562,bean_L,plus) + s_slack(2562,bean_L,minus) + s_slack(2562,bean_S,plus)
     
      + s_slack(2562,bean_S,minus) + s_slack(2562,cass_L,plus) + s_slack(2562,cass_L,minus) + s_slack(2562,cass_S,plus) + s_slack(2562,cass_S,minus) + s_slack(2562,chic_H,plus) + s_slack(2562,chic_H,minus) + s_slack(2562,chic_L,plus)
     
      + s_slack(2562,chic_L,minus) + s_slack(2562,chic_S,plus) + s_slack(2562,chic_S,minus) + s_slack(2562,coff_H,plus) + s_slack(2562,coff_H,minus) + s_slack(2562,coff_L,plus) + s_slack(2562,coff_L,minus) + s_slack(2562,cott_L,plus)
     
      + s_slack(2562,cott_L,minus) + s_slack(2562,cowp_H,plus) + s_slack(2562,cowp_H,minus) + s_slack(2562,cowp_L,plus) + s_slack(2562,cowp_L,minus) + s_slack(2562,cowp_S,plus) + s_slack(2562,cowp_S,minus) + s_slack(2562,grou_H,plus)
     
      + s_slack(2562,grou_H,minus) + s_slack(2562,grou_L,plus) + s_slack(2562,grou_L,minus) + s_slack(2562,grou_S,plus) + s_slack(2562,grou_S,minus) + s_slack(2562,lent_H,plus) + s_slack(2562,lent_H,minus) + s_slack(2562,lent_L,plus)
     
      + s_slack(2562,lent_L,minus) + s_slack(2562,lent_S,plus) + s_slack(2562,lent_S,minus) + s_slack(2562,maiz_H,plus) + s_slack(2562,maiz_H,minus) + s_slack(2562,maiz_L,plus) + s_slack(2562,maiz_L,minus) + s_slack(2562,maiz_S,plus)
     
      + s_slack(2562,maiz_S,minus) + s_slack(2562,mill_H,plus) + s_slack(2562,mill_H,minus) + s_slack(2562,mill_L,plus) + s_slack(2562,mill_L,minus) + s_slack(2562,mill_S,plus) + s_slack(2562,mill_S,minus) + s_slack(2562,ofib_L,plus)
     
      + s_slack(2562,ofib_L,minus) + s_slack(2562,ooil_L,plus) + s_slack(2562,ooil_L,minus) + s_slack(2562,opul_H,plus) + s_slack(2562,opul_H,minus) + s_slack(2562,opul_L,plus) + s_slack(2562,opul_L,minus) + s_slack(2562,opul_S,plus)
     
      + s_slack(2562,opul_S,minus) + s_slack(2562,pige_H,plus) + s_slack(2562,pige_H,minus) + s_slack(2562,pige_L,plus) + s_slack(2562,pige_L,minus) + s_slack(2562,pige_S,plus) + s_slack(2562,pige_S,minus) + s_slack(2562,pota_H,plus)
     
      + s_slack(2562,pota_H,minus) + s_slack(2562,pota_L,plus) + s_slack(2562,pota_L,minus) + s_slack(2562,pota_S,plus) + s_slack(2562,pota_S,minus) + s_slack(2562,rest_H,plus) + s_slack(2562,rest_H,minus) + s_slack(2562,rest_L,plus)
     
      + s_slack(2562,rest_L,minus) + s_slack(2562,rest_S,plus) + s_slack(2562,rest_S,minus) + s_slack(2562,rice_H,plus) + s_slack(2562,rice_H,minus) + s_slack(2562,rice_L,plus) + s_slack(2562,rice_L,minus) + s_slack(2562,rice_S,plus)
     
      + s_slack(2562,rice_S,minus) + s_slack(2562,sorg_L,plus) + s_slack(2562,sorg_L,minus) + s_slack(2562,sorg_S,plus) + s_slack(2562,sorg_S,minus) + s_slack(2562,soyb_L,plus) + s_slack(2562,soyb_L,minus) + s_slack(2562,soyb_S,plus)
     
      + s_slack(2562,soyb_S,minus) + s_slack(2562,sunf_L,plus) + s_slack(2562,sunf_L,minus) + s_slack(2562,temf_H,plus) + s_slack(2562,temf_H,minus) + s_slack(2562,temf_L,plus) + s_slack(2562,temf_L,minus) + s_slack(2562,temf_S,plus)
     
      + s_slack(2562,temf_S,minus) + s_slack(2562,toba_H,plus) + s_slack(2562,toba_H,minus) + s_slack(2562,toba_L,plus) + s_slack(2562,toba_L,minus) + s_slack(2562,trof_L,plus) + s_slack(2562,trof_L,minus) + s_slack(2562,trof_S,plus)
     
      + s_slack(2562,trof_S,minus) + s_slack(2562,vege_H,plus) + s_slack(2562,vege_H,minus) + s_slack(2562,vege_L,plus) + s_slack(2562,vege_L,minus) + s_slack(2562,vege_S,plus) + s_slack(2562,vege_S,minus) + s_slack(2563,rice_I,plus)
     
      + s_slack(2563,rice_I,minus) + s_slack(2563,sugc_I,plus) + s_slack(2563,sugc_I,minus) + s_slack(2563,whea_I,plus) + s_slack(2563,whea_I,minus) + s_slack(2563,bean_H,plus) + s_slack(2563,bean_H,minus) + s_slack(2563,bean_L,plus)
     
      + s_slack(2563,bean_L,minus) + s_slack(2563,bean_S,plus) + s_slack(2563,bean_S,minus) + s_slack(2563,cass_L,plus) + s_slack(2563,cass_L,minus) + s_slack(2563,cass_S,plus) + s_slack(2563,cass_S,minus) + s_slack(2563,chic_H,plus)
     
      + s_slack(2563,chic_H,minus) + s_slack(2563,chic_L,plus) + s_slack(2563,chic_L,minus) + s_slack(2563,chic_S,plus) + s_slack(2563,chic_S,minus) + s_slack(2563,coff_H,plus) + s_slack(2563,coff_H,minus) + s_slack(2563,coff_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 272
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2563,coff_L,minus) + s_slack(2563,cott_L,plus) + s_slack(2563,cott_L,minus) + s_slack(2563,cowp_H,plus) + s_slack(2563,cowp_H,minus) + s_slack(2563,cowp_L,plus) + s_slack(2563,cowp_L,minus) + s_slack(2563,cowp_S,plus)
     
      + s_slack(2563,cowp_S,minus) + s_slack(2563,grou_H,plus) + s_slack(2563,grou_H,minus) + s_slack(2563,grou_L,plus) + s_slack(2563,grou_L,minus) + s_slack(2563,grou_S,plus) + s_slack(2563,grou_S,minus) + s_slack(2563,lent_H,plus)
     
      + s_slack(2563,lent_H,minus) + s_slack(2563,lent_L,plus) + s_slack(2563,lent_L,minus) + s_slack(2563,lent_S,plus) + s_slack(2563,lent_S,minus) + s_slack(2563,maiz_H,plus) + s_slack(2563,maiz_H,minus) + s_slack(2563,maiz_L,plus)
     
      + s_slack(2563,maiz_L,minus) + s_slack(2563,maiz_S,plus) + s_slack(2563,maiz_S,minus) + s_slack(2563,mill_H,plus) + s_slack(2563,mill_H,minus) + s_slack(2563,mill_L,plus) + s_slack(2563,mill_L,minus) + s_slack(2563,mill_S,plus)
     
      + s_slack(2563,mill_S,minus) + s_slack(2563,ofib_L,plus) + s_slack(2563,ofib_L,minus) + s_slack(2563,ooil_L,plus) + s_slack(2563,ooil_L,minus) + s_slack(2563,opul_H,plus) + s_slack(2563,opul_H,minus) + s_slack(2563,opul_L,plus)
     
      + s_slack(2563,opul_L,minus) + s_slack(2563,opul_S,plus) + s_slack(2563,opul_S,minus) + s_slack(2563,pige_H,plus) + s_slack(2563,pige_H,minus) + s_slack(2563,pige_L,plus) + s_slack(2563,pige_L,minus) + s_slack(2563,pige_S,plus)
     
      + s_slack(2563,pige_S,minus) + s_slack(2563,pota_H,plus) + s_slack(2563,pota_H,minus) + s_slack(2563,pota_L,plus) + s_slack(2563,pota_L,minus) + s_slack(2563,pota_S,plus) + s_slack(2563,pota_S,minus) + s_slack(2563,rest_H,plus)
     
      + s_slack(2563,rest_H,minus) + s_slack(2563,rest_L,plus) + s_slack(2563,rest_L,minus) + s_slack(2563,rest_S,plus) + s_slack(2563,rest_S,minus) + s_slack(2563,rice_H,plus) + s_slack(2563,rice_H,minus) + s_slack(2563,rice_L,plus)
     
      + s_slack(2563,rice_L,minus) + s_slack(2563,rice_S,plus) + s_slack(2563,rice_S,minus) + s_slack(2563,sorg_L,plus) + s_slack(2563,sorg_L,minus) + s_slack(2563,sorg_S,plus) + s_slack(2563,sorg_S,minus) + s_slack(2563,soyb_L,plus)
     
      + s_slack(2563,soyb_L,minus) + s_slack(2563,soyb_S,plus) + s_slack(2563,soyb_S,minus) + s_slack(2563,sunf_L,plus) + s_slack(2563,sunf_L,minus) + s_slack(2563,temf_H,plus) + s_slack(2563,temf_H,minus) + s_slack(2563,temf_L,plus)
     
      + s_slack(2563,temf_L,minus) + s_slack(2563,temf_S,plus) + s_slack(2563,temf_S,minus) + s_slack(2563,toba_H,plus) + s_slack(2563,toba_H,minus) + s_slack(2563,toba_L,plus) + s_slack(2563,toba_L,minus) + s_slack(2563,trof_L,plus)
     
      + s_slack(2563,trof_L,minus) + s_slack(2563,trof_S,plus) + s_slack(2563,trof_S,minus) + s_slack(2563,vege_H,plus) + s_slack(2563,vege_H,minus) + s_slack(2563,vege_L,plus) + s_slack(2563,vege_L,minus) + s_slack(2563,vege_S,plus)
     
      + s_slack(2563,vege_S,minus) + s_slack(2598,rice_I,plus) + s_slack(2598,rice_I,minus) + s_slack(2598,sugc_I,plus) + s_slack(2598,sugc_I,minus) + s_slack(2598,whea_I,plus) + s_slack(2598,whea_I,minus) + s_slack(2598,bean_H,plus)
     
      + s_slack(2598,bean_H,minus) + s_slack(2598,bean_L,plus) + s_slack(2598,bean_L,minus) + s_slack(2598,bean_S,plus) + s_slack(2598,bean_S,minus) + s_slack(2598,cass_L,plus) + s_slack(2598,cass_L,minus) + s_slack(2598,cass_S,plus)
     
      + s_slack(2598,cass_S,minus) + s_slack(2598,chic_H,plus) + s_slack(2598,chic_H,minus) + s_slack(2598,chic_L,plus) + s_slack(2598,chic_L,minus) + s_slack(2598,chic_S,plus) + s_slack(2598,chic_S,minus) + s_slack(2598,coff_H,plus)
     
      + s_slack(2598,coff_H,minus) + s_slack(2598,coff_L,plus) + s_slack(2598,coff_L,minus) + s_slack(2598,cott_L,plus) + s_slack(2598,cott_L,minus) + s_slack(2598,cowp_H,plus) + s_slack(2598,cowp_H,minus) + s_slack(2598,cowp_L,plus)
     
      + s_slack(2598,cowp_L,minus) + s_slack(2598,cowp_S,plus) + s_slack(2598,cowp_S,minus) + s_slack(2598,grou_H,plus) + s_slack(2598,grou_H,minus) + s_slack(2598,grou_L,plus) + s_slack(2598,grou_L,minus) + s_slack(2598,grou_S,plus)
     
      + s_slack(2598,grou_S,minus) + s_slack(2598,lent_H,plus) + s_slack(2598,lent_H,minus) + s_slack(2598,lent_L,plus) + s_slack(2598,lent_L,minus) + s_slack(2598,lent_S,plus) + s_slack(2598,lent_S,minus) + s_slack(2598,maiz_H,plus)
     
      + s_slack(2598,maiz_H,minus) + s_slack(2598,maiz_L,plus) + s_slack(2598,maiz_L,minus) + s_slack(2598,maiz_S,plus) + s_slack(2598,maiz_S,minus) + s_slack(2598,mill_H,plus) + s_slack(2598,mill_H,minus) + s_slack(2598,mill_L,plus)
     
      + s_slack(2598,mill_L,minus) + s_slack(2598,mill_S,plus) + s_slack(2598,mill_S,minus) + s_slack(2598,ofib_L,plus) + s_slack(2598,ofib_L,minus) + s_slack(2598,ooil_L,plus) + s_slack(2598,ooil_L,minus) + s_slack(2598,opul_H,plus)
     
      + s_slack(2598,opul_H,minus) + s_slack(2598,opul_L,plus) + s_slack(2598,opul_L,minus) + s_slack(2598,opul_S,plus) + s_slack(2598,opul_S,minus) + s_slack(2598,pige_H,plus) + s_slack(2598,pige_H,minus) + s_slack(2598,pige_L,plus)
     
      + s_slack(2598,pige_L,minus) + s_slack(2598,pige_S,plus) + s_slack(2598,pige_S,minus) + s_slack(2598,pota_H,plus) + s_slack(2598,pota_H,minus) + s_slack(2598,pota_L,plus) + s_slack(2598,pota_L,minus) + s_slack(2598,pota_S,plus)
     
      + s_slack(2598,pota_S,minus) + s_slack(2598,rest_H,plus) + s_slack(2598,rest_H,minus) + s_slack(2598,rest_L,plus) + s_slack(2598,rest_L,minus) + s_slack(2598,rest_S,plus) + s_slack(2598,rest_S,minus) + s_slack(2598,rice_H,plus)
     
      + s_slack(2598,rice_H,minus) + s_slack(2598,rice_L,plus) + s_slack(2598,rice_L,minus) + s_slack(2598,rice_S,plus) + s_slack(2598,rice_S,minus) + s_slack(2598,sorg_L,plus) + s_slack(2598,sorg_L,minus) + s_slack(2598,sorg_S,plus)
     
      + s_slack(2598,sorg_S,minus) + s_slack(2598,soyb_L,plus) + s_slack(2598,soyb_L,minus) + s_slack(2598,soyb_S,plus) + s_slack(2598,soyb_S,minus) + s_slack(2598,sunf_L,plus) + s_slack(2598,sunf_L,minus) + s_slack(2598,temf_H,plus)
     
      + s_slack(2598,temf_H,minus) + s_slack(2598,temf_L,plus) + s_slack(2598,temf_L,minus) + s_slack(2598,temf_S,plus) + s_slack(2598,temf_S,minus) + s_slack(2598,toba_H,plus) + s_slack(2598,toba_H,minus) + s_slack(2598,toba_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 273
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2598,toba_L,minus) + s_slack(2598,trof_L,plus) + s_slack(2598,trof_L,minus) + s_slack(2598,trof_S,plus) + s_slack(2598,trof_S,minus) + s_slack(2598,vege_H,plus) + s_slack(2598,vege_H,minus) + s_slack(2598,vege_L,plus)
     
      + s_slack(2598,vege_L,minus) + s_slack(2598,vege_S,plus) + s_slack(2598,vege_S,minus) + s_slack(2599,rice_I,plus) + s_slack(2599,rice_I,minus) + s_slack(2599,sugc_I,plus) + s_slack(2599,sugc_I,minus) + s_slack(2599,whea_I,plus)
     
      + s_slack(2599,whea_I,minus) + s_slack(2599,bean_H,plus) + s_slack(2599,bean_H,minus) + s_slack(2599,bean_L,plus) + s_slack(2599,bean_L,minus) + s_slack(2599,bean_S,plus) + s_slack(2599,bean_S,minus) + s_slack(2599,cass_L,plus)
     
      + s_slack(2599,cass_L,minus) + s_slack(2599,cass_S,plus) + s_slack(2599,cass_S,minus) + s_slack(2599,chic_H,plus) + s_slack(2599,chic_H,minus) + s_slack(2599,chic_L,plus) + s_slack(2599,chic_L,minus) + s_slack(2599,chic_S,plus)
     
      + s_slack(2599,chic_S,minus) + s_slack(2599,coff_H,plus) + s_slack(2599,coff_H,minus) + s_slack(2599,coff_L,plus) + s_slack(2599,coff_L,minus) + s_slack(2599,cott_L,plus) + s_slack(2599,cott_L,minus) + s_slack(2599,cowp_H,plus)
     
      + s_slack(2599,cowp_H,minus) + s_slack(2599,cowp_L,plus) + s_slack(2599,cowp_L,minus) + s_slack(2599,cowp_S,plus) + s_slack(2599,cowp_S,minus) + s_slack(2599,grou_H,plus) + s_slack(2599,grou_H,minus) + s_slack(2599,grou_L,plus)
     
      + s_slack(2599,grou_L,minus) + s_slack(2599,grou_S,plus) + s_slack(2599,grou_S,minus) + s_slack(2599,lent_H,plus) + s_slack(2599,lent_H,minus) + s_slack(2599,lent_L,plus) + s_slack(2599,lent_L,minus) + s_slack(2599,lent_S,plus)
     
      + s_slack(2599,lent_S,minus) + s_slack(2599,maiz_H,plus) + s_slack(2599,maiz_H,minus) + s_slack(2599,maiz_L,plus) + s_slack(2599,maiz_L,minus) + s_slack(2599,maiz_S,plus) + s_slack(2599,maiz_S,minus) + s_slack(2599,mill_H,plus)
     
      + s_slack(2599,mill_H,minus) + s_slack(2599,mill_L,plus) + s_slack(2599,mill_L,minus) + s_slack(2599,mill_S,plus) + s_slack(2599,mill_S,minus) + s_slack(2599,ofib_L,plus) + s_slack(2599,ofib_L,minus) + s_slack(2599,ooil_L,plus)
     
      + s_slack(2599,ooil_L,minus) + s_slack(2599,opul_H,plus) + s_slack(2599,opul_H,minus) + s_slack(2599,opul_L,plus) + s_slack(2599,opul_L,minus) + s_slack(2599,opul_S,plus) + s_slack(2599,opul_S,minus) + s_slack(2599,pige_H,plus)
     
      + s_slack(2599,pige_H,minus) + s_slack(2599,pige_L,plus) + s_slack(2599,pige_L,minus) + s_slack(2599,pige_S,plus) + s_slack(2599,pige_S,minus) + s_slack(2599,pota_H,plus) + s_slack(2599,pota_H,minus) + s_slack(2599,pota_L,plus)
     
      + s_slack(2599,pota_L,minus) + s_slack(2599,pota_S,plus) + s_slack(2599,pota_S,minus) + s_slack(2599,rest_H,plus) + s_slack(2599,rest_H,minus) + s_slack(2599,rest_L,plus) + s_slack(2599,rest_L,minus) + s_slack(2599,rest_S,plus)
     
      + s_slack(2599,rest_S,minus) + s_slack(2599,rice_H,plus) + s_slack(2599,rice_H,minus) + s_slack(2599,rice_L,plus) + s_slack(2599,rice_L,minus) + s_slack(2599,rice_S,plus) + s_slack(2599,rice_S,minus) + s_slack(2599,sorg_L,plus)
     
      + s_slack(2599,sorg_L,minus) + s_slack(2599,sorg_S,plus) + s_slack(2599,sorg_S,minus) + s_slack(2599,soyb_L,plus) + s_slack(2599,soyb_L,minus) + s_slack(2599,soyb_S,plus) + s_slack(2599,soyb_S,minus) + s_slack(2599,sunf_L,plus)
     
      + s_slack(2599,sunf_L,minus) + s_slack(2599,temf_H,plus) + s_slack(2599,temf_H,minus) + s_slack(2599,temf_L,plus) + s_slack(2599,temf_L,minus) + s_slack(2599,temf_S,plus) + s_slack(2599,temf_S,minus) + s_slack(2599,toba_H,plus)
     
      + s_slack(2599,toba_H,minus) + s_slack(2599,toba_L,plus) + s_slack(2599,toba_L,minus) + s_slack(2599,trof_L,plus) + s_slack(2599,trof_L,minus) + s_slack(2599,trof_S,plus) + s_slack(2599,trof_S,minus) + s_slack(2599,vege_H,plus)
     
      + s_slack(2599,vege_H,minus) + s_slack(2599,vege_L,plus) + s_slack(2599,vege_L,minus) + s_slack(2599,vege_S,plus) + s_slack(2599,vege_S,minus) + s_slack(2600,rice_I,plus) + s_slack(2600,rice_I,minus) + s_slack(2600,sugc_I,plus)
     
      + s_slack(2600,sugc_I,minus) + s_slack(2600,whea_I,plus) + s_slack(2600,whea_I,minus) + s_slack(2600,bean_H,plus) + s_slack(2600,bean_H,minus) + s_slack(2600,bean_L,plus) + s_slack(2600,bean_L,minus) + s_slack(2600,bean_S,plus)
     
      + s_slack(2600,bean_S,minus) + s_slack(2600,cass_L,plus) + s_slack(2600,cass_L,minus) + s_slack(2600,cass_S,plus) + s_slack(2600,cass_S,minus) + s_slack(2600,chic_H,plus) + s_slack(2600,chic_H,minus) + s_slack(2600,chic_L,plus)
     
      + s_slack(2600,chic_L,minus) + s_slack(2600,chic_S,plus) + s_slack(2600,chic_S,minus) + s_slack(2600,coff_H,plus) + s_slack(2600,coff_H,minus) + s_slack(2600,coff_L,plus) + s_slack(2600,coff_L,minus) + s_slack(2600,cott_L,plus)
     
      + s_slack(2600,cott_L,minus) + s_slack(2600,cowp_H,plus) + s_slack(2600,cowp_H,minus) + s_slack(2600,cowp_L,plus) + s_slack(2600,cowp_L,minus) + s_slack(2600,cowp_S,plus) + s_slack(2600,cowp_S,minus) + s_slack(2600,grou_H,plus)
     
      + s_slack(2600,grou_H,minus) + s_slack(2600,grou_L,plus) + s_slack(2600,grou_L,minus) + s_slack(2600,grou_S,plus) + s_slack(2600,grou_S,minus) + s_slack(2600,lent_H,plus) + s_slack(2600,lent_H,minus) + s_slack(2600,lent_L,plus)
     
      + s_slack(2600,lent_L,minus) + s_slack(2600,lent_S,plus) + s_slack(2600,lent_S,minus) + s_slack(2600,maiz_H,plus) + s_slack(2600,maiz_H,minus) + s_slack(2600,maiz_L,plus) + s_slack(2600,maiz_L,minus) + s_slack(2600,maiz_S,plus)
     
      + s_slack(2600,maiz_S,minus) + s_slack(2600,mill_H,plus) + s_slack(2600,mill_H,minus) + s_slack(2600,mill_L,plus) + s_slack(2600,mill_L,minus) + s_slack(2600,mill_S,plus) + s_slack(2600,mill_S,minus) + s_slack(2600,ofib_L,plus)
     
      + s_slack(2600,ofib_L,minus) + s_slack(2600,ooil_L,plus) + s_slack(2600,ooil_L,minus) + s_slack(2600,opul_H,plus) + s_slack(2600,opul_H,minus) + s_slack(2600,opul_L,plus) + s_slack(2600,opul_L,minus) + s_slack(2600,opul_S,plus)
     
      + s_slack(2600,opul_S,minus) + s_slack(2600,pige_H,plus) + s_slack(2600,pige_H,minus) + s_slack(2600,pige_L,plus) + s_slack(2600,pige_L,minus) + s_slack(2600,pige_S,plus) + s_slack(2600,pige_S,minus) + s_slack(2600,pota_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 274
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2600,pota_H,minus) + s_slack(2600,pota_L,plus) + s_slack(2600,pota_L,minus) + s_slack(2600,pota_S,plus) + s_slack(2600,pota_S,minus) + s_slack(2600,rest_H,plus) + s_slack(2600,rest_H,minus) + s_slack(2600,rest_L,plus)
     
      + s_slack(2600,rest_L,minus) + s_slack(2600,rest_S,plus) + s_slack(2600,rest_S,minus) + s_slack(2600,rice_H,plus) + s_slack(2600,rice_H,minus) + s_slack(2600,rice_L,plus) + s_slack(2600,rice_L,minus) + s_slack(2600,rice_S,plus)
     
      + s_slack(2600,rice_S,minus) + s_slack(2600,sorg_L,plus) + s_slack(2600,sorg_L,minus) + s_slack(2600,sorg_S,plus) + s_slack(2600,sorg_S,minus) + s_slack(2600,soyb_L,plus) + s_slack(2600,soyb_L,minus) + s_slack(2600,soyb_S,plus)
     
      + s_slack(2600,soyb_S,minus) + s_slack(2600,sunf_L,plus) + s_slack(2600,sunf_L,minus) + s_slack(2600,temf_H,plus) + s_slack(2600,temf_H,minus) + s_slack(2600,temf_L,plus) + s_slack(2600,temf_L,minus) + s_slack(2600,temf_S,plus)
     
      + s_slack(2600,temf_S,minus) + s_slack(2600,toba_H,plus) + s_slack(2600,toba_H,minus) + s_slack(2600,toba_L,plus) + s_slack(2600,toba_L,minus) + s_slack(2600,trof_L,plus) + s_slack(2600,trof_L,minus) + s_slack(2600,trof_S,plus)
     
      + s_slack(2600,trof_S,minus) + s_slack(2600,vege_H,plus) + s_slack(2600,vege_H,minus) + s_slack(2600,vege_L,plus) + s_slack(2600,vege_L,minus) + s_slack(2600,vege_S,plus) + s_slack(2600,vege_S,minus) + s_slack(2601,rice_I,plus)
     
      + s_slack(2601,rice_I,minus) + s_slack(2601,sugc_I,plus) + s_slack(2601,sugc_I,minus) + s_slack(2601,whea_I,plus) + s_slack(2601,whea_I,minus) + s_slack(2601,bean_H,plus) + s_slack(2601,bean_H,minus) + s_slack(2601,bean_L,plus)
     
      + s_slack(2601,bean_L,minus) + s_slack(2601,bean_S,plus) + s_slack(2601,bean_S,minus) + s_slack(2601,cass_L,plus) + s_slack(2601,cass_L,minus) + s_slack(2601,cass_S,plus) + s_slack(2601,cass_S,minus) + s_slack(2601,chic_H,plus)
     
      + s_slack(2601,chic_H,minus) + s_slack(2601,chic_L,plus) + s_slack(2601,chic_L,minus) + s_slack(2601,chic_S,plus) + s_slack(2601,chic_S,minus) + s_slack(2601,coff_H,plus) + s_slack(2601,coff_H,minus) + s_slack(2601,coff_L,plus)
     
      + s_slack(2601,coff_L,minus) + s_slack(2601,cott_L,plus) + s_slack(2601,cott_L,minus) + s_slack(2601,cowp_H,plus) + s_slack(2601,cowp_H,minus) + s_slack(2601,cowp_L,plus) + s_slack(2601,cowp_L,minus) + s_slack(2601,cowp_S,plus)
     
      + s_slack(2601,cowp_S,minus) + s_slack(2601,grou_H,plus) + s_slack(2601,grou_H,minus) + s_slack(2601,grou_L,plus) + s_slack(2601,grou_L,minus) + s_slack(2601,grou_S,plus) + s_slack(2601,grou_S,minus) + s_slack(2601,lent_H,plus)
     
      + s_slack(2601,lent_H,minus) + s_slack(2601,lent_L,plus) + s_slack(2601,lent_L,minus) + s_slack(2601,lent_S,plus) + s_slack(2601,lent_S,minus) + s_slack(2601,maiz_H,plus) + s_slack(2601,maiz_H,minus) + s_slack(2601,maiz_L,plus)
     
      + s_slack(2601,maiz_L,minus) + s_slack(2601,maiz_S,plus) + s_slack(2601,maiz_S,minus) + s_slack(2601,mill_H,plus) + s_slack(2601,mill_H,minus) + s_slack(2601,mill_L,plus) + s_slack(2601,mill_L,minus) + s_slack(2601,mill_S,plus)
     
      + s_slack(2601,mill_S,minus) + s_slack(2601,ofib_L,plus) + s_slack(2601,ofib_L,minus) + s_slack(2601,ooil_L,plus) + s_slack(2601,ooil_L,minus) + s_slack(2601,opul_H,plus) + s_slack(2601,opul_H,minus) + s_slack(2601,opul_L,plus)
     
      + s_slack(2601,opul_L,minus) + s_slack(2601,opul_S,plus) + s_slack(2601,opul_S,minus) + s_slack(2601,pige_H,plus) + s_slack(2601,pige_H,minus) + s_slack(2601,pige_L,plus) + s_slack(2601,pige_L,minus) + s_slack(2601,pige_S,plus)
     
      + s_slack(2601,pige_S,minus) + s_slack(2601,pota_H,plus) + s_slack(2601,pota_H,minus) + s_slack(2601,pota_L,plus) + s_slack(2601,pota_L,minus) + s_slack(2601,pota_S,plus) + s_slack(2601,pota_S,minus) + s_slack(2601,rest_H,plus)
     
      + s_slack(2601,rest_H,minus) + s_slack(2601,rest_L,plus) + s_slack(2601,rest_L,minus) + s_slack(2601,rest_S,plus) + s_slack(2601,rest_S,minus) + s_slack(2601,rice_H,plus) + s_slack(2601,rice_H,minus) + s_slack(2601,rice_L,plus)
     
      + s_slack(2601,rice_L,minus) + s_slack(2601,rice_S,plus) + s_slack(2601,rice_S,minus) + s_slack(2601,sorg_L,plus) + s_slack(2601,sorg_L,minus) + s_slack(2601,sorg_S,plus) + s_slack(2601,sorg_S,minus) + s_slack(2601,soyb_L,plus)
     
      + s_slack(2601,soyb_L,minus) + s_slack(2601,soyb_S,plus) + s_slack(2601,soyb_S,minus) + s_slack(2601,sunf_L,plus) + s_slack(2601,sunf_L,minus) + s_slack(2601,temf_H,plus) + s_slack(2601,temf_H,minus) + s_slack(2601,temf_L,plus)
     
      + s_slack(2601,temf_L,minus) + s_slack(2601,temf_S,plus) + s_slack(2601,temf_S,minus) + s_slack(2601,toba_H,plus) + s_slack(2601,toba_H,minus) + s_slack(2601,toba_L,plus) + s_slack(2601,toba_L,minus) + s_slack(2601,trof_L,plus)
     
      + s_slack(2601,trof_L,minus) + s_slack(2601,trof_S,plus) + s_slack(2601,trof_S,minus) + s_slack(2601,vege_H,plus) + s_slack(2601,vege_H,minus) + s_slack(2601,vege_L,plus) + s_slack(2601,vege_L,minus) + s_slack(2601,vege_S,plus)
     
      + s_slack(2601,vege_S,minus) + s_slack(2637,rice_I,plus) + s_slack(2637,rice_I,minus) + s_slack(2637,sugc_I,plus) + s_slack(2637,sugc_I,minus) + s_slack(2637,whea_I,plus) + s_slack(2637,whea_I,minus) + s_slack(2637,bean_H,plus)
     
      + s_slack(2637,bean_H,minus) + s_slack(2637,bean_L,plus) + s_slack(2637,bean_L,minus) + s_slack(2637,bean_S,plus) + s_slack(2637,bean_S,minus) + s_slack(2637,cass_L,plus) + s_slack(2637,cass_L,minus) + s_slack(2637,cass_S,plus)
     
      + s_slack(2637,cass_S,minus) + s_slack(2637,chic_H,plus) + s_slack(2637,chic_H,minus) + s_slack(2637,chic_L,plus) + s_slack(2637,chic_L,minus) + s_slack(2637,chic_S,plus) + s_slack(2637,chic_S,minus) + s_slack(2637,coff_H,plus)
     
      + s_slack(2637,coff_H,minus) + s_slack(2637,coff_L,plus) + s_slack(2637,coff_L,minus) + s_slack(2637,cott_L,plus) + s_slack(2637,cott_L,minus) + s_slack(2637,cowp_H,plus) + s_slack(2637,cowp_H,minus) + s_slack(2637,cowp_L,plus)
     
      + s_slack(2637,cowp_L,minus) + s_slack(2637,cowp_S,plus) + s_slack(2637,cowp_S,minus) + s_slack(2637,grou_H,plus) + s_slack(2637,grou_H,minus) + s_slack(2637,grou_L,plus) + s_slack(2637,grou_L,minus) + s_slack(2637,grou_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 275
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2637,grou_S,minus) + s_slack(2637,lent_H,plus) + s_slack(2637,lent_H,minus) + s_slack(2637,lent_L,plus) + s_slack(2637,lent_L,minus) + s_slack(2637,lent_S,plus) + s_slack(2637,lent_S,minus) + s_slack(2637,maiz_H,plus)
     
      + s_slack(2637,maiz_H,minus) + s_slack(2637,maiz_L,plus) + s_slack(2637,maiz_L,minus) + s_slack(2637,maiz_S,plus) + s_slack(2637,maiz_S,minus) + s_slack(2637,mill_H,plus) + s_slack(2637,mill_H,minus) + s_slack(2637,mill_L,plus)
     
      + s_slack(2637,mill_L,minus) + s_slack(2637,mill_S,plus) + s_slack(2637,mill_S,minus) + s_slack(2637,ofib_L,plus) + s_slack(2637,ofib_L,minus) + s_slack(2637,ooil_L,plus) + s_slack(2637,ooil_L,minus) + s_slack(2637,opul_H,plus)
     
      + s_slack(2637,opul_H,minus) + s_slack(2637,opul_L,plus) + s_slack(2637,opul_L,minus) + s_slack(2637,opul_S,plus) + s_slack(2637,opul_S,minus) + s_slack(2637,pige_H,plus) + s_slack(2637,pige_H,minus) + s_slack(2637,pige_L,plus)
     
      + s_slack(2637,pige_L,minus) + s_slack(2637,pige_S,plus) + s_slack(2637,pige_S,minus) + s_slack(2637,pota_H,plus) + s_slack(2637,pota_H,minus) + s_slack(2637,pota_L,plus) + s_slack(2637,pota_L,minus) + s_slack(2637,pota_S,plus)
     
      + s_slack(2637,pota_S,minus) + s_slack(2637,rest_H,plus) + s_slack(2637,rest_H,minus) + s_slack(2637,rest_L,plus) + s_slack(2637,rest_L,minus) + s_slack(2637,rest_S,plus) + s_slack(2637,rest_S,minus) + s_slack(2637,rice_H,plus)
     
      + s_slack(2637,rice_H,minus) + s_slack(2637,rice_L,plus) + s_slack(2637,rice_L,minus) + s_slack(2637,rice_S,plus) + s_slack(2637,rice_S,minus) + s_slack(2637,sorg_L,plus) + s_slack(2637,sorg_L,minus) + s_slack(2637,sorg_S,plus)
     
      + s_slack(2637,sorg_S,minus) + s_slack(2637,soyb_L,plus) + s_slack(2637,soyb_L,minus) + s_slack(2637,soyb_S,plus) + s_slack(2637,soyb_S,minus) + s_slack(2637,sunf_L,plus) + s_slack(2637,sunf_L,minus) + s_slack(2637,temf_H,plus)
     
      + s_slack(2637,temf_H,minus) + s_slack(2637,temf_L,plus) + s_slack(2637,temf_L,minus) + s_slack(2637,temf_S,plus) + s_slack(2637,temf_S,minus) + s_slack(2637,toba_H,plus) + s_slack(2637,toba_H,minus) + s_slack(2637,toba_L,plus)
     
      + s_slack(2637,toba_L,minus) + s_slack(2637,trof_L,plus) + s_slack(2637,trof_L,minus) + s_slack(2637,trof_S,plus) + s_slack(2637,trof_S,minus) + s_slack(2637,vege_H,plus) + s_slack(2637,vege_H,minus) + s_slack(2637,vege_L,plus)
     
      + s_slack(2637,vege_L,minus) + s_slack(2637,vege_S,plus) + s_slack(2637,vege_S,minus) + s_slack(2638,rice_I,plus) + s_slack(2638,rice_I,minus) + s_slack(2638,sugc_I,plus) + s_slack(2638,sugc_I,minus) + s_slack(2638,whea_I,plus)
     
      + s_slack(2638,whea_I,minus) + s_slack(2638,bean_H,plus) + s_slack(2638,bean_H,minus) + s_slack(2638,bean_L,plus) + s_slack(2638,bean_L,minus) + s_slack(2638,bean_S,plus) + s_slack(2638,bean_S,minus) + s_slack(2638,cass_L,plus)
     
      + s_slack(2638,cass_L,minus) + s_slack(2638,cass_S,plus) + s_slack(2638,cass_S,minus) + s_slack(2638,chic_H,plus) + s_slack(2638,chic_H,minus) + s_slack(2638,chic_L,plus) + s_slack(2638,chic_L,minus) + s_slack(2638,chic_S,plus)
     
      + s_slack(2638,chic_S,minus) + s_slack(2638,coff_H,plus) + s_slack(2638,coff_H,minus) + s_slack(2638,coff_L,plus) + s_slack(2638,coff_L,minus) + s_slack(2638,cott_L,plus) + s_slack(2638,cott_L,minus) + s_slack(2638,cowp_H,plus)
     
      + s_slack(2638,cowp_H,minus) + s_slack(2638,cowp_L,plus) + s_slack(2638,cowp_L,minus) + s_slack(2638,cowp_S,plus) + s_slack(2638,cowp_S,minus) + s_slack(2638,grou_H,plus) + s_slack(2638,grou_H,minus) + s_slack(2638,grou_L,plus)
     
      + s_slack(2638,grou_L,minus) + s_slack(2638,grou_S,plus) + s_slack(2638,grou_S,minus) + s_slack(2638,lent_H,plus) + s_slack(2638,lent_H,minus) + s_slack(2638,lent_L,plus) + s_slack(2638,lent_L,minus) + s_slack(2638,lent_S,plus)
     
      + s_slack(2638,lent_S,minus) + s_slack(2638,maiz_H,plus) + s_slack(2638,maiz_H,minus) + s_slack(2638,maiz_L,plus) + s_slack(2638,maiz_L,minus) + s_slack(2638,maiz_S,plus) + s_slack(2638,maiz_S,minus) + s_slack(2638,mill_H,plus)
     
      + s_slack(2638,mill_H,minus) + s_slack(2638,mill_L,plus) + s_slack(2638,mill_L,minus) + s_slack(2638,mill_S,plus) + s_slack(2638,mill_S,minus) + s_slack(2638,ofib_L,plus) + s_slack(2638,ofib_L,minus) + s_slack(2638,ooil_L,plus)
     
      + s_slack(2638,ooil_L,minus) + s_slack(2638,opul_H,plus) + s_slack(2638,opul_H,minus) + s_slack(2638,opul_L,plus) + s_slack(2638,opul_L,minus) + s_slack(2638,opul_S,plus) + s_slack(2638,opul_S,minus) + s_slack(2638,pige_H,plus)
     
      + s_slack(2638,pige_H,minus) + s_slack(2638,pige_L,plus) + s_slack(2638,pige_L,minus) + s_slack(2638,pige_S,plus) + s_slack(2638,pige_S,minus) + s_slack(2638,pota_H,plus) + s_slack(2638,pota_H,minus) + s_slack(2638,pota_L,plus)
     
      + s_slack(2638,pota_L,minus) + s_slack(2638,pota_S,plus) + s_slack(2638,pota_S,minus) + s_slack(2638,rest_H,plus) + s_slack(2638,rest_H,minus) + s_slack(2638,rest_L,plus) + s_slack(2638,rest_L,minus) + s_slack(2638,rest_S,plus)
     
      + s_slack(2638,rest_S,minus) + s_slack(2638,rice_H,plus) + s_slack(2638,rice_H,minus) + s_slack(2638,rice_L,plus) + s_slack(2638,rice_L,minus) + s_slack(2638,rice_S,plus) + s_slack(2638,rice_S,minus) + s_slack(2638,sorg_L,plus)
     
      + s_slack(2638,sorg_L,minus) + s_slack(2638,sorg_S,plus) + s_slack(2638,sorg_S,minus) + s_slack(2638,soyb_L,plus) + s_slack(2638,soyb_L,minus) + s_slack(2638,soyb_S,plus) + s_slack(2638,soyb_S,minus) + s_slack(2638,sunf_L,plus)
     
      + s_slack(2638,sunf_L,minus) + s_slack(2638,temf_H,plus) + s_slack(2638,temf_H,minus) + s_slack(2638,temf_L,plus) + s_slack(2638,temf_L,minus) + s_slack(2638,temf_S,plus) + s_slack(2638,temf_S,minus) + s_slack(2638,toba_H,plus)
     
      + s_slack(2638,toba_H,minus) + s_slack(2638,toba_L,plus) + s_slack(2638,toba_L,minus) + s_slack(2638,trof_L,plus) + s_slack(2638,trof_L,minus) + s_slack(2638,trof_S,plus) + s_slack(2638,trof_S,minus) + s_slack(2638,vege_H,plus)
     
      + s_slack(2638,vege_H,minus) + s_slack(2638,vege_L,plus) + s_slack(2638,vege_L,minus) + s_slack(2638,vege_S,plus) + s_slack(2638,vege_S,minus) + s_slack(2639,rice_I,plus) + s_slack(2639,rice_I,minus) + s_slack(2639,sugc_I,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 276
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2639,sugc_I,minus) + s_slack(2639,whea_I,plus) + s_slack(2639,whea_I,minus) + s_slack(2639,bean_H,plus) + s_slack(2639,bean_H,minus) + s_slack(2639,bean_L,plus) + s_slack(2639,bean_L,minus) + s_slack(2639,bean_S,plus)
     
      + s_slack(2639,bean_S,minus) + s_slack(2639,cass_L,plus) + s_slack(2639,cass_L,minus) + s_slack(2639,cass_S,plus) + s_slack(2639,cass_S,minus) + s_slack(2639,chic_H,plus) + s_slack(2639,chic_H,minus) + s_slack(2639,chic_L,plus)
     
      + s_slack(2639,chic_L,minus) + s_slack(2639,chic_S,plus) + s_slack(2639,chic_S,minus) + s_slack(2639,coff_H,plus) + s_slack(2639,coff_H,minus) + s_slack(2639,coff_L,plus) + s_slack(2639,coff_L,minus) + s_slack(2639,cott_L,plus)
     
      + s_slack(2639,cott_L,minus) + s_slack(2639,cowp_H,plus) + s_slack(2639,cowp_H,minus) + s_slack(2639,cowp_L,plus) + s_slack(2639,cowp_L,minus) + s_slack(2639,cowp_S,plus) + s_slack(2639,cowp_S,minus) + s_slack(2639,grou_H,plus)
     
      + s_slack(2639,grou_H,minus) + s_slack(2639,grou_L,plus) + s_slack(2639,grou_L,minus) + s_slack(2639,grou_S,plus) + s_slack(2639,grou_S,minus) + s_slack(2639,lent_H,plus) + s_slack(2639,lent_H,minus) + s_slack(2639,lent_L,plus)
     
      + s_slack(2639,lent_L,minus) + s_slack(2639,lent_S,plus) + s_slack(2639,lent_S,minus) + s_slack(2639,maiz_H,plus) + s_slack(2639,maiz_H,minus) + s_slack(2639,maiz_L,plus) + s_slack(2639,maiz_L,minus) + s_slack(2639,maiz_S,plus)
     
      + s_slack(2639,maiz_S,minus) + s_slack(2639,mill_H,plus) + s_slack(2639,mill_H,minus) + s_slack(2639,mill_L,plus) + s_slack(2639,mill_L,minus) + s_slack(2639,mill_S,plus) + s_slack(2639,mill_S,minus) + s_slack(2639,ofib_L,plus)
     
      + s_slack(2639,ofib_L,minus) + s_slack(2639,ooil_L,plus) + s_slack(2639,ooil_L,minus) + s_slack(2639,opul_H,plus) + s_slack(2639,opul_H,minus) + s_slack(2639,opul_L,plus) + s_slack(2639,opul_L,minus) + s_slack(2639,opul_S,plus)
     
      + s_slack(2639,opul_S,minus) + s_slack(2639,pige_H,plus) + s_slack(2639,pige_H,minus) + s_slack(2639,pige_L,plus) + s_slack(2639,pige_L,minus) + s_slack(2639,pige_S,plus) + s_slack(2639,pige_S,minus) + s_slack(2639,pota_H,plus)
     
      + s_slack(2639,pota_H,minus) + s_slack(2639,pota_L,plus) + s_slack(2639,pota_L,minus) + s_slack(2639,pota_S,plus) + s_slack(2639,pota_S,minus) + s_slack(2639,rest_H,plus) + s_slack(2639,rest_H,minus) + s_slack(2639,rest_L,plus)
     
      + s_slack(2639,rest_L,minus) + s_slack(2639,rest_S,plus) + s_slack(2639,rest_S,minus) + s_slack(2639,rice_H,plus) + s_slack(2639,rice_H,minus) + s_slack(2639,rice_L,plus) + s_slack(2639,rice_L,minus) + s_slack(2639,rice_S,plus)
     
      + s_slack(2639,rice_S,minus) + s_slack(2639,sorg_L,plus) + s_slack(2639,sorg_L,minus) + s_slack(2639,sorg_S,plus) + s_slack(2639,sorg_S,minus) + s_slack(2639,soyb_L,plus) + s_slack(2639,soyb_L,minus) + s_slack(2639,soyb_S,plus)
     
      + s_slack(2639,soyb_S,minus) + s_slack(2639,sunf_L,plus) + s_slack(2639,sunf_L,minus) + s_slack(2639,temf_H,plus) + s_slack(2639,temf_H,minus) + s_slack(2639,temf_L,plus) + s_slack(2639,temf_L,minus) + s_slack(2639,temf_S,plus)
     
      + s_slack(2639,temf_S,minus) + s_slack(2639,toba_H,plus) + s_slack(2639,toba_H,minus) + s_slack(2639,toba_L,plus) + s_slack(2639,toba_L,minus) + s_slack(2639,trof_L,plus) + s_slack(2639,trof_L,minus) + s_slack(2639,trof_S,plus)
     
      + s_slack(2639,trof_S,minus) + s_slack(2639,vege_H,plus) + s_slack(2639,vege_H,minus) + s_slack(2639,vege_L,plus) + s_slack(2639,vege_L,minus) + s_slack(2639,vege_S,plus) + s_slack(2639,vege_S,minus) + s_slack(2640,rice_I,plus)
     
      + s_slack(2640,rice_I,minus) + s_slack(2640,sugc_I,plus) + s_slack(2640,sugc_I,minus) + s_slack(2640,whea_I,plus) + s_slack(2640,whea_I,minus) + s_slack(2640,bean_H,plus) + s_slack(2640,bean_H,minus) + s_slack(2640,bean_L,plus)
     
      + s_slack(2640,bean_L,minus) + s_slack(2640,bean_S,plus) + s_slack(2640,bean_S,minus) + s_slack(2640,cass_L,plus) + s_slack(2640,cass_L,minus) + s_slack(2640,cass_S,plus) + s_slack(2640,cass_S,minus) + s_slack(2640,chic_H,plus)
     
      + s_slack(2640,chic_H,minus) + s_slack(2640,chic_L,plus) + s_slack(2640,chic_L,minus) + s_slack(2640,chic_S,plus) + s_slack(2640,chic_S,minus) + s_slack(2640,coff_H,plus) + s_slack(2640,coff_H,minus) + s_slack(2640,coff_L,plus)
     
      + s_slack(2640,coff_L,minus) + s_slack(2640,cott_L,plus) + s_slack(2640,cott_L,minus) + s_slack(2640,cowp_H,plus) + s_slack(2640,cowp_H,minus) + s_slack(2640,cowp_L,plus) + s_slack(2640,cowp_L,minus) + s_slack(2640,cowp_S,plus)
     
      + s_slack(2640,cowp_S,minus) + s_slack(2640,grou_H,plus) + s_slack(2640,grou_H,minus) + s_slack(2640,grou_L,plus) + s_slack(2640,grou_L,minus) + s_slack(2640,grou_S,plus) + s_slack(2640,grou_S,minus) + s_slack(2640,lent_H,plus)
     
      + s_slack(2640,lent_H,minus) + s_slack(2640,lent_L,plus) + s_slack(2640,lent_L,minus) + s_slack(2640,lent_S,plus) + s_slack(2640,lent_S,minus) + s_slack(2640,maiz_H,plus) + s_slack(2640,maiz_H,minus) + s_slack(2640,maiz_L,plus)
     
      + s_slack(2640,maiz_L,minus) + s_slack(2640,maiz_S,plus) + s_slack(2640,maiz_S,minus) + s_slack(2640,mill_H,plus) + s_slack(2640,mill_H,minus) + s_slack(2640,mill_L,plus) + s_slack(2640,mill_L,minus) + s_slack(2640,mill_S,plus)
     
      + s_slack(2640,mill_S,minus) + s_slack(2640,ofib_L,plus) + s_slack(2640,ofib_L,minus) + s_slack(2640,ooil_L,plus) + s_slack(2640,ooil_L,minus) + s_slack(2640,opul_H,plus) + s_slack(2640,opul_H,minus) + s_slack(2640,opul_L,plus)
     
      + s_slack(2640,opul_L,minus) + s_slack(2640,opul_S,plus) + s_slack(2640,opul_S,minus) + s_slack(2640,pige_H,plus) + s_slack(2640,pige_H,minus) + s_slack(2640,pige_L,plus) + s_slack(2640,pige_L,minus) + s_slack(2640,pige_S,plus)
     
      + s_slack(2640,pige_S,minus) + s_slack(2640,pota_H,plus) + s_slack(2640,pota_H,minus) + s_slack(2640,pota_L,plus) + s_slack(2640,pota_L,minus) + s_slack(2640,pota_S,plus) + s_slack(2640,pota_S,minus) + s_slack(2640,rest_H,plus)
     
      + s_slack(2640,rest_H,minus) + s_slack(2640,rest_L,plus) + s_slack(2640,rest_L,minus) + s_slack(2640,rest_S,plus) + s_slack(2640,rest_S,minus) + s_slack(2640,rice_H,plus) + s_slack(2640,rice_H,minus) + s_slack(2640,rice_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 277
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2640,rice_L,minus) + s_slack(2640,rice_S,plus) + s_slack(2640,rice_S,minus) + s_slack(2640,sorg_L,plus) + s_slack(2640,sorg_L,minus) + s_slack(2640,sorg_S,plus) + s_slack(2640,sorg_S,minus) + s_slack(2640,soyb_L,plus)
     
      + s_slack(2640,soyb_L,minus) + s_slack(2640,soyb_S,plus) + s_slack(2640,soyb_S,minus) + s_slack(2640,sunf_L,plus) + s_slack(2640,sunf_L,minus) + s_slack(2640,temf_H,plus) + s_slack(2640,temf_H,minus) + s_slack(2640,temf_L,plus)
     
      + s_slack(2640,temf_L,minus) + s_slack(2640,temf_S,plus) + s_slack(2640,temf_S,minus) + s_slack(2640,toba_H,plus) + s_slack(2640,toba_H,minus) + s_slack(2640,toba_L,plus) + s_slack(2640,toba_L,minus) + s_slack(2640,trof_L,plus)
     
      + s_slack(2640,trof_L,minus) + s_slack(2640,trof_S,plus) + s_slack(2640,trof_S,minus) + s_slack(2640,vege_H,plus) + s_slack(2640,vege_H,minus) + s_slack(2640,vege_L,plus) + s_slack(2640,vege_L,minus) + s_slack(2640,vege_S,plus)
     
      + s_slack(2640,vege_S,minus) + s_slack(2676,rice_I,plus) + s_slack(2676,rice_I,minus) + s_slack(2676,sugc_I,plus) + s_slack(2676,sugc_I,minus) + s_slack(2676,whea_I,plus) + s_slack(2676,whea_I,minus) + s_slack(2676,bean_H,plus)
     
      + s_slack(2676,bean_H,minus) + s_slack(2676,bean_L,plus) + s_slack(2676,bean_L,minus) + s_slack(2676,bean_S,plus) + s_slack(2676,bean_S,minus) + s_slack(2676,cass_L,plus) + s_slack(2676,cass_L,minus) + s_slack(2676,cass_S,plus)
     
      + s_slack(2676,cass_S,minus) + s_slack(2676,chic_H,plus) + s_slack(2676,chic_H,minus) + s_slack(2676,chic_L,plus) + s_slack(2676,chic_L,minus) + s_slack(2676,chic_S,plus) + s_slack(2676,chic_S,minus) + s_slack(2676,coff_H,plus)
     
      + s_slack(2676,coff_H,minus) + s_slack(2676,coff_L,plus) + s_slack(2676,coff_L,minus) + s_slack(2676,cott_L,plus) + s_slack(2676,cott_L,minus) + s_slack(2676,cowp_H,plus) + s_slack(2676,cowp_H,minus) + s_slack(2676,cowp_L,plus)
     
      + s_slack(2676,cowp_L,minus) + s_slack(2676,cowp_S,plus) + s_slack(2676,cowp_S,minus) + s_slack(2676,grou_H,plus) + s_slack(2676,grou_H,minus) + s_slack(2676,grou_L,plus) + s_slack(2676,grou_L,minus) + s_slack(2676,grou_S,plus)
     
      + s_slack(2676,grou_S,minus) + s_slack(2676,lent_H,plus) + s_slack(2676,lent_H,minus) + s_slack(2676,lent_L,plus) + s_slack(2676,lent_L,minus) + s_slack(2676,lent_S,plus) + s_slack(2676,lent_S,minus) + s_slack(2676,maiz_H,plus)
     
      + s_slack(2676,maiz_H,minus) + s_slack(2676,maiz_L,plus) + s_slack(2676,maiz_L,minus) + s_slack(2676,maiz_S,plus) + s_slack(2676,maiz_S,minus) + s_slack(2676,mill_H,plus) + s_slack(2676,mill_H,minus) + s_slack(2676,mill_L,plus)
     
      + s_slack(2676,mill_L,minus) + s_slack(2676,mill_S,plus) + s_slack(2676,mill_S,minus) + s_slack(2676,ofib_L,plus) + s_slack(2676,ofib_L,minus) + s_slack(2676,ooil_L,plus) + s_slack(2676,ooil_L,minus) + s_slack(2676,opul_H,plus)
     
      + s_slack(2676,opul_H,minus) + s_slack(2676,opul_L,plus) + s_slack(2676,opul_L,minus) + s_slack(2676,opul_S,plus) + s_slack(2676,opul_S,minus) + s_slack(2676,pige_H,plus) + s_slack(2676,pige_H,minus) + s_slack(2676,pige_L,plus)
     
      + s_slack(2676,pige_L,minus) + s_slack(2676,pige_S,plus) + s_slack(2676,pige_S,minus) + s_slack(2676,pota_H,plus) + s_slack(2676,pota_H,minus) + s_slack(2676,pota_L,plus) + s_slack(2676,pota_L,minus) + s_slack(2676,pota_S,plus)
     
      + s_slack(2676,pota_S,minus) + s_slack(2676,rest_H,plus) + s_slack(2676,rest_H,minus) + s_slack(2676,rest_L,plus) + s_slack(2676,rest_L,minus) + s_slack(2676,rest_S,plus) + s_slack(2676,rest_S,minus) + s_slack(2676,rice_H,plus)
     
      + s_slack(2676,rice_H,minus) + s_slack(2676,rice_L,plus) + s_slack(2676,rice_L,minus) + s_slack(2676,rice_S,plus) + s_slack(2676,rice_S,minus) + s_slack(2676,sorg_L,plus) + s_slack(2676,sorg_L,minus) + s_slack(2676,sorg_S,plus)
     
      + s_slack(2676,sorg_S,minus) + s_slack(2676,soyb_L,plus) + s_slack(2676,soyb_L,minus) + s_slack(2676,soyb_S,plus) + s_slack(2676,soyb_S,minus) + s_slack(2676,sunf_L,plus) + s_slack(2676,sunf_L,minus) + s_slack(2676,temf_H,plus)
     
      + s_slack(2676,temf_H,minus) + s_slack(2676,temf_L,plus) + s_slack(2676,temf_L,minus) + s_slack(2676,temf_S,plus) + s_slack(2676,temf_S,minus) + s_slack(2676,toba_H,plus) + s_slack(2676,toba_H,minus) + s_slack(2676,toba_L,plus)
     
      + s_slack(2676,toba_L,minus) + s_slack(2676,trof_L,plus) + s_slack(2676,trof_L,minus) + s_slack(2676,trof_S,plus) + s_slack(2676,trof_S,minus) + s_slack(2676,vege_H,plus) + s_slack(2676,vege_H,minus) + s_slack(2676,vege_L,plus)
     
      + s_slack(2676,vege_L,minus) + s_slack(2676,vege_S,plus) + s_slack(2676,vege_S,minus) + s_slack(2677,rice_I,plus) + s_slack(2677,rice_I,minus) + s_slack(2677,sugc_I,plus) + s_slack(2677,sugc_I,minus) + s_slack(2677,whea_I,plus)
     
      + s_slack(2677,whea_I,minus) + s_slack(2677,bean_H,plus) + s_slack(2677,bean_H,minus) + s_slack(2677,bean_L,plus) + s_slack(2677,bean_L,minus) + s_slack(2677,bean_S,plus) + s_slack(2677,bean_S,minus) + s_slack(2677,cass_L,plus)
     
      + s_slack(2677,cass_L,minus) + s_slack(2677,cass_S,plus) + s_slack(2677,cass_S,minus) + s_slack(2677,chic_H,plus) + s_slack(2677,chic_H,minus) + s_slack(2677,chic_L,plus) + s_slack(2677,chic_L,minus) + s_slack(2677,chic_S,plus)
     
      + s_slack(2677,chic_S,minus) + s_slack(2677,coff_H,plus) + s_slack(2677,coff_H,minus) + s_slack(2677,coff_L,plus) + s_slack(2677,coff_L,minus) + s_slack(2677,cott_L,plus) + s_slack(2677,cott_L,minus) + s_slack(2677,cowp_H,plus)
     
      + s_slack(2677,cowp_H,minus) + s_slack(2677,cowp_L,plus) + s_slack(2677,cowp_L,minus) + s_slack(2677,cowp_S,plus) + s_slack(2677,cowp_S,minus) + s_slack(2677,grou_H,plus) + s_slack(2677,grou_H,minus) + s_slack(2677,grou_L,plus)
     
      + s_slack(2677,grou_L,minus) + s_slack(2677,grou_S,plus) + s_slack(2677,grou_S,minus) + s_slack(2677,lent_H,plus) + s_slack(2677,lent_H,minus) + s_slack(2677,lent_L,plus) + s_slack(2677,lent_L,minus) + s_slack(2677,lent_S,plus)
     
      + s_slack(2677,lent_S,minus) + s_slack(2677,maiz_H,plus) + s_slack(2677,maiz_H,minus) + s_slack(2677,maiz_L,plus) + s_slack(2677,maiz_L,minus) + s_slack(2677,maiz_S,plus) + s_slack(2677,maiz_S,minus) + s_slack(2677,mill_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 278
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2677,mill_H,minus) + s_slack(2677,mill_L,plus) + s_slack(2677,mill_L,minus) + s_slack(2677,mill_S,plus) + s_slack(2677,mill_S,minus) + s_slack(2677,ofib_L,plus) + s_slack(2677,ofib_L,minus) + s_slack(2677,ooil_L,plus)
     
      + s_slack(2677,ooil_L,minus) + s_slack(2677,opul_H,plus) + s_slack(2677,opul_H,minus) + s_slack(2677,opul_L,plus) + s_slack(2677,opul_L,minus) + s_slack(2677,opul_S,plus) + s_slack(2677,opul_S,minus) + s_slack(2677,pige_H,plus)
     
      + s_slack(2677,pige_H,minus) + s_slack(2677,pige_L,plus) + s_slack(2677,pige_L,minus) + s_slack(2677,pige_S,plus) + s_slack(2677,pige_S,minus) + s_slack(2677,pota_H,plus) + s_slack(2677,pota_H,minus) + s_slack(2677,pota_L,plus)
     
      + s_slack(2677,pota_L,minus) + s_slack(2677,pota_S,plus) + s_slack(2677,pota_S,minus) + s_slack(2677,rest_H,plus) + s_slack(2677,rest_H,minus) + s_slack(2677,rest_L,plus) + s_slack(2677,rest_L,minus) + s_slack(2677,rest_S,plus)
     
      + s_slack(2677,rest_S,minus) + s_slack(2677,rice_H,plus) + s_slack(2677,rice_H,minus) + s_slack(2677,rice_L,plus) + s_slack(2677,rice_L,minus) + s_slack(2677,rice_S,plus) + s_slack(2677,rice_S,minus) + s_slack(2677,sorg_L,plus)
     
      + s_slack(2677,sorg_L,minus) + s_slack(2677,sorg_S,plus) + s_slack(2677,sorg_S,minus) + s_slack(2677,soyb_L,plus) + s_slack(2677,soyb_L,minus) + s_slack(2677,soyb_S,plus) + s_slack(2677,soyb_S,minus) + s_slack(2677,sunf_L,plus)
     
      + s_slack(2677,sunf_L,minus) + s_slack(2677,temf_H,plus) + s_slack(2677,temf_H,minus) + s_slack(2677,temf_L,plus) + s_slack(2677,temf_L,minus) + s_slack(2677,temf_S,plus) + s_slack(2677,temf_S,minus) + s_slack(2677,toba_H,plus)
     
      + s_slack(2677,toba_H,minus) + s_slack(2677,toba_L,plus) + s_slack(2677,toba_L,minus) + s_slack(2677,trof_L,plus) + s_slack(2677,trof_L,minus) + s_slack(2677,trof_S,plus) + s_slack(2677,trof_S,minus) + s_slack(2677,vege_H,plus)
     
      + s_slack(2677,vege_H,minus) + s_slack(2677,vege_L,plus) + s_slack(2677,vege_L,minus) + s_slack(2677,vege_S,plus) + s_slack(2677,vege_S,minus) + s_slack(2678,rice_I,plus) + s_slack(2678,rice_I,minus) + s_slack(2678,sugc_I,plus)
     
      + s_slack(2678,sugc_I,minus) + s_slack(2678,whea_I,plus) + s_slack(2678,whea_I,minus) + s_slack(2678,bean_H,plus) + s_slack(2678,bean_H,minus) + s_slack(2678,bean_L,plus) + s_slack(2678,bean_L,minus) + s_slack(2678,bean_S,plus)
     
      + s_slack(2678,bean_S,minus) + s_slack(2678,cass_L,plus) + s_slack(2678,cass_L,minus) + s_slack(2678,cass_S,plus) + s_slack(2678,cass_S,minus) + s_slack(2678,chic_H,plus) + s_slack(2678,chic_H,minus) + s_slack(2678,chic_L,plus)
     
      + s_slack(2678,chic_L,minus) + s_slack(2678,chic_S,plus) + s_slack(2678,chic_S,minus) + s_slack(2678,coff_H,plus) + s_slack(2678,coff_H,minus) + s_slack(2678,coff_L,plus) + s_slack(2678,coff_L,minus) + s_slack(2678,cott_L,plus)
     
      + s_slack(2678,cott_L,minus) + s_slack(2678,cowp_H,plus) + s_slack(2678,cowp_H,minus) + s_slack(2678,cowp_L,plus) + s_slack(2678,cowp_L,minus) + s_slack(2678,cowp_S,plus) + s_slack(2678,cowp_S,minus) + s_slack(2678,grou_H,plus)
     
      + s_slack(2678,grou_H,minus) + s_slack(2678,grou_L,plus) + s_slack(2678,grou_L,minus) + s_slack(2678,grou_S,plus) + s_slack(2678,grou_S,minus) + s_slack(2678,lent_H,plus) + s_slack(2678,lent_H,minus) + s_slack(2678,lent_L,plus)
     
      + s_slack(2678,lent_L,minus) + s_slack(2678,lent_S,plus) + s_slack(2678,lent_S,minus) + s_slack(2678,maiz_H,plus) + s_slack(2678,maiz_H,minus) + s_slack(2678,maiz_L,plus) + s_slack(2678,maiz_L,minus) + s_slack(2678,maiz_S,plus)
     
      + s_slack(2678,maiz_S,minus) + s_slack(2678,mill_H,plus) + s_slack(2678,mill_H,minus) + s_slack(2678,mill_L,plus) + s_slack(2678,mill_L,minus) + s_slack(2678,mill_S,plus) + s_slack(2678,mill_S,minus) + s_slack(2678,ofib_L,plus)
     
      + s_slack(2678,ofib_L,minus) + s_slack(2678,ooil_L,plus) + s_slack(2678,ooil_L,minus) + s_slack(2678,opul_H,plus) + s_slack(2678,opul_H,minus) + s_slack(2678,opul_L,plus) + s_slack(2678,opul_L,minus) + s_slack(2678,opul_S,plus)
     
      + s_slack(2678,opul_S,minus) + s_slack(2678,pige_H,plus) + s_slack(2678,pige_H,minus) + s_slack(2678,pige_L,plus) + s_slack(2678,pige_L,minus) + s_slack(2678,pige_S,plus) + s_slack(2678,pige_S,minus) + s_slack(2678,pota_H,plus)
     
      + s_slack(2678,pota_H,minus) + s_slack(2678,pota_L,plus) + s_slack(2678,pota_L,minus) + s_slack(2678,pota_S,plus) + s_slack(2678,pota_S,minus) + s_slack(2678,rest_H,plus) + s_slack(2678,rest_H,minus) + s_slack(2678,rest_L,plus)
     
      + s_slack(2678,rest_L,minus) + s_slack(2678,rest_S,plus) + s_slack(2678,rest_S,minus) + s_slack(2678,rice_H,plus) + s_slack(2678,rice_H,minus) + s_slack(2678,rice_L,plus) + s_slack(2678,rice_L,minus) + s_slack(2678,rice_S,plus)
     
      + s_slack(2678,rice_S,minus) + s_slack(2678,sorg_L,plus) + s_slack(2678,sorg_L,minus) + s_slack(2678,sorg_S,plus) + s_slack(2678,sorg_S,minus) + s_slack(2678,soyb_L,plus) + s_slack(2678,soyb_L,minus) + s_slack(2678,soyb_S,plus)
     
      + s_slack(2678,soyb_S,minus) + s_slack(2678,sunf_L,plus) + s_slack(2678,sunf_L,minus) + s_slack(2678,temf_H,plus) + s_slack(2678,temf_H,minus) + s_slack(2678,temf_L,plus) + s_slack(2678,temf_L,minus) + s_slack(2678,temf_S,plus)
     
      + s_slack(2678,temf_S,minus) + s_slack(2678,toba_H,plus) + s_slack(2678,toba_H,minus) + s_slack(2678,toba_L,plus) + s_slack(2678,toba_L,minus) + s_slack(2678,trof_L,plus) + s_slack(2678,trof_L,minus) + s_slack(2678,trof_S,plus)
     
      + s_slack(2678,trof_S,minus) + s_slack(2678,vege_H,plus) + s_slack(2678,vege_H,minus) + s_slack(2678,vege_L,plus) + s_slack(2678,vege_L,minus) + s_slack(2678,vege_S,plus) + s_slack(2678,vege_S,minus) + s_slack(2679,rice_I,plus)
     
      + s_slack(2679,rice_I,minus) + s_slack(2679,sugc_I,plus) + s_slack(2679,sugc_I,minus) + s_slack(2679,whea_I,plus) + s_slack(2679,whea_I,minus) + s_slack(2679,bean_H,plus) + s_slack(2679,bean_H,minus) + s_slack(2679,bean_L,plus)
     
      + s_slack(2679,bean_L,minus) + s_slack(2679,bean_S,plus) + s_slack(2679,bean_S,minus) + s_slack(2679,cass_L,plus) + s_slack(2679,cass_L,minus) + s_slack(2679,cass_S,plus) + s_slack(2679,cass_S,minus) + s_slack(2679,chic_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 279
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2679,chic_H,minus) + s_slack(2679,chic_L,plus) + s_slack(2679,chic_L,minus) + s_slack(2679,chic_S,plus) + s_slack(2679,chic_S,minus) + s_slack(2679,coff_H,plus) + s_slack(2679,coff_H,minus) + s_slack(2679,coff_L,plus)
     
      + s_slack(2679,coff_L,minus) + s_slack(2679,cott_L,plus) + s_slack(2679,cott_L,minus) + s_slack(2679,cowp_H,plus) + s_slack(2679,cowp_H,minus) + s_slack(2679,cowp_L,plus) + s_slack(2679,cowp_L,minus) + s_slack(2679,cowp_S,plus)
     
      + s_slack(2679,cowp_S,minus) + s_slack(2679,grou_H,plus) + s_slack(2679,grou_H,minus) + s_slack(2679,grou_L,plus) + s_slack(2679,grou_L,minus) + s_slack(2679,grou_S,plus) + s_slack(2679,grou_S,minus) + s_slack(2679,lent_H,plus)
     
      + s_slack(2679,lent_H,minus) + s_slack(2679,lent_L,plus) + s_slack(2679,lent_L,minus) + s_slack(2679,lent_S,plus) + s_slack(2679,lent_S,minus) + s_slack(2679,maiz_H,plus) + s_slack(2679,maiz_H,minus) + s_slack(2679,maiz_L,plus)
     
      + s_slack(2679,maiz_L,minus) + s_slack(2679,maiz_S,plus) + s_slack(2679,maiz_S,minus) + s_slack(2679,mill_H,plus) + s_slack(2679,mill_H,minus) + s_slack(2679,mill_L,plus) + s_slack(2679,mill_L,minus) + s_slack(2679,mill_S,plus)
     
      + s_slack(2679,mill_S,minus) + s_slack(2679,ofib_L,plus) + s_slack(2679,ofib_L,minus) + s_slack(2679,ooil_L,plus) + s_slack(2679,ooil_L,minus) + s_slack(2679,opul_H,plus) + s_slack(2679,opul_H,minus) + s_slack(2679,opul_L,plus)
     
      + s_slack(2679,opul_L,minus) + s_slack(2679,opul_S,plus) + s_slack(2679,opul_S,minus) + s_slack(2679,pige_H,plus) + s_slack(2679,pige_H,minus) + s_slack(2679,pige_L,plus) + s_slack(2679,pige_L,minus) + s_slack(2679,pige_S,plus)
     
      + s_slack(2679,pige_S,minus) + s_slack(2679,pota_H,plus) + s_slack(2679,pota_H,minus) + s_slack(2679,pota_L,plus) + s_slack(2679,pota_L,minus) + s_slack(2679,pota_S,plus) + s_slack(2679,pota_S,minus) + s_slack(2679,rest_H,plus)
     
      + s_slack(2679,rest_H,minus) + s_slack(2679,rest_L,plus) + s_slack(2679,rest_L,minus) + s_slack(2679,rest_S,plus) + s_slack(2679,rest_S,minus) + s_slack(2679,rice_H,plus) + s_slack(2679,rice_H,minus) + s_slack(2679,rice_L,plus)
     
      + s_slack(2679,rice_L,minus) + s_slack(2679,rice_S,plus) + s_slack(2679,rice_S,minus) + s_slack(2679,sorg_L,plus) + s_slack(2679,sorg_L,minus) + s_slack(2679,sorg_S,plus) + s_slack(2679,sorg_S,minus) + s_slack(2679,soyb_L,plus)
     
      + s_slack(2679,soyb_L,minus) + s_slack(2679,soyb_S,plus) + s_slack(2679,soyb_S,minus) + s_slack(2679,sunf_L,plus) + s_slack(2679,sunf_L,minus) + s_slack(2679,temf_H,plus) + s_slack(2679,temf_H,minus) + s_slack(2679,temf_L,plus)
     
      + s_slack(2679,temf_L,minus) + s_slack(2679,temf_S,plus) + s_slack(2679,temf_S,minus) + s_slack(2679,toba_H,plus) + s_slack(2679,toba_H,minus) + s_slack(2679,toba_L,plus) + s_slack(2679,toba_L,minus) + s_slack(2679,trof_L,plus)
     
      + s_slack(2679,trof_L,minus) + s_slack(2679,trof_S,plus) + s_slack(2679,trof_S,minus) + s_slack(2679,vege_H,plus) + s_slack(2679,vege_H,minus) + s_slack(2679,vege_L,plus) + s_slack(2679,vege_L,minus) + s_slack(2679,vege_S,plus)
     
      + s_slack(2679,vege_S,minus) + s_slack(2715,rice_I,plus) + s_slack(2715,rice_I,minus) + s_slack(2715,sugc_I,plus) + s_slack(2715,sugc_I,minus) + s_slack(2715,whea_I,plus) + s_slack(2715,whea_I,minus) + s_slack(2715,bean_H,plus)
     
      + s_slack(2715,bean_H,minus) + s_slack(2715,bean_L,plus) + s_slack(2715,bean_L,minus) + s_slack(2715,bean_S,plus) + s_slack(2715,bean_S,minus) + s_slack(2715,cass_L,plus) + s_slack(2715,cass_L,minus) + s_slack(2715,cass_S,plus)
     
      + s_slack(2715,cass_S,minus) + s_slack(2715,chic_H,plus) + s_slack(2715,chic_H,minus) + s_slack(2715,chic_L,plus) + s_slack(2715,chic_L,minus) + s_slack(2715,chic_S,plus) + s_slack(2715,chic_S,minus) + s_slack(2715,coff_H,plus)
     
      + s_slack(2715,coff_H,minus) + s_slack(2715,coff_L,plus) + s_slack(2715,coff_L,minus) + s_slack(2715,cott_L,plus) + s_slack(2715,cott_L,minus) + s_slack(2715,cowp_H,plus) + s_slack(2715,cowp_H,minus) + s_slack(2715,cowp_L,plus)
     
      + s_slack(2715,cowp_L,minus) + s_slack(2715,cowp_S,plus) + s_slack(2715,cowp_S,minus) + s_slack(2715,grou_H,plus) + s_slack(2715,grou_H,minus) + s_slack(2715,grou_L,plus) + s_slack(2715,grou_L,minus) + s_slack(2715,grou_S,plus)
     
      + s_slack(2715,grou_S,minus) + s_slack(2715,lent_H,plus) + s_slack(2715,lent_H,minus) + s_slack(2715,lent_L,plus) + s_slack(2715,lent_L,minus) + s_slack(2715,lent_S,plus) + s_slack(2715,lent_S,minus) + s_slack(2715,maiz_H,plus)
     
      + s_slack(2715,maiz_H,minus) + s_slack(2715,maiz_L,plus) + s_slack(2715,maiz_L,minus) + s_slack(2715,maiz_S,plus) + s_slack(2715,maiz_S,minus) + s_slack(2715,mill_H,plus) + s_slack(2715,mill_H,minus) + s_slack(2715,mill_L,plus)
     
      + s_slack(2715,mill_L,minus) + s_slack(2715,mill_S,plus) + s_slack(2715,mill_S,minus) + s_slack(2715,ofib_L,plus) + s_slack(2715,ofib_L,minus) + s_slack(2715,ooil_L,plus) + s_slack(2715,ooil_L,minus) + s_slack(2715,opul_H,plus)
     
      + s_slack(2715,opul_H,minus) + s_slack(2715,opul_L,plus) + s_slack(2715,opul_L,minus) + s_slack(2715,opul_S,plus) + s_slack(2715,opul_S,minus) + s_slack(2715,pige_H,plus) + s_slack(2715,pige_H,minus) + s_slack(2715,pige_L,plus)
     
      + s_slack(2715,pige_L,minus) + s_slack(2715,pige_S,plus) + s_slack(2715,pige_S,minus) + s_slack(2715,pota_H,plus) + s_slack(2715,pota_H,minus) + s_slack(2715,pota_L,plus) + s_slack(2715,pota_L,minus) + s_slack(2715,pota_S,plus)
     
      + s_slack(2715,pota_S,minus) + s_slack(2715,rest_H,plus) + s_slack(2715,rest_H,minus) + s_slack(2715,rest_L,plus) + s_slack(2715,rest_L,minus) + s_slack(2715,rest_S,plus) + s_slack(2715,rest_S,minus) + s_slack(2715,rice_H,plus)
     
      + s_slack(2715,rice_H,minus) + s_slack(2715,rice_L,plus) + s_slack(2715,rice_L,minus) + s_slack(2715,rice_S,plus) + s_slack(2715,rice_S,minus) + s_slack(2715,sorg_L,plus) + s_slack(2715,sorg_L,minus) + s_slack(2715,sorg_S,plus)
     
      + s_slack(2715,sorg_S,minus) + s_slack(2715,soyb_L,plus) + s_slack(2715,soyb_L,minus) + s_slack(2715,soyb_S,plus) + s_slack(2715,soyb_S,minus) + s_slack(2715,sunf_L,plus) + s_slack(2715,sunf_L,minus) + s_slack(2715,temf_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 280
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2715,temf_H,minus) + s_slack(2715,temf_L,plus) + s_slack(2715,temf_L,minus) + s_slack(2715,temf_S,plus) + s_slack(2715,temf_S,minus) + s_slack(2715,toba_H,plus) + s_slack(2715,toba_H,minus) + s_slack(2715,toba_L,plus)
     
      + s_slack(2715,toba_L,minus) + s_slack(2715,trof_L,plus) + s_slack(2715,trof_L,minus) + s_slack(2715,trof_S,plus) + s_slack(2715,trof_S,minus) + s_slack(2715,vege_H,plus) + s_slack(2715,vege_H,minus) + s_slack(2715,vege_L,plus)
     
      + s_slack(2715,vege_L,minus) + s_slack(2715,vege_S,plus) + s_slack(2715,vege_S,minus) + s_slack(2716,rice_I,plus) + s_slack(2716,rice_I,minus) + s_slack(2716,sugc_I,plus) + s_slack(2716,sugc_I,minus) + s_slack(2716,whea_I,plus)
     
      + s_slack(2716,whea_I,minus) + s_slack(2716,bean_H,plus) + s_slack(2716,bean_H,minus) + s_slack(2716,bean_L,plus) + s_slack(2716,bean_L,minus) + s_slack(2716,bean_S,plus) + s_slack(2716,bean_S,minus) + s_slack(2716,cass_L,plus)
     
      + s_slack(2716,cass_L,minus) + s_slack(2716,cass_S,plus) + s_slack(2716,cass_S,minus) + s_slack(2716,chic_H,plus) + s_slack(2716,chic_H,minus) + s_slack(2716,chic_L,plus) + s_slack(2716,chic_L,minus) + s_slack(2716,chic_S,plus)
     
      + s_slack(2716,chic_S,minus) + s_slack(2716,coff_H,plus) + s_slack(2716,coff_H,minus) + s_slack(2716,coff_L,plus) + s_slack(2716,coff_L,minus) + s_slack(2716,cott_L,plus) + s_slack(2716,cott_L,minus) + s_slack(2716,cowp_H,plus)
     
      + s_slack(2716,cowp_H,minus) + s_slack(2716,cowp_L,plus) + s_slack(2716,cowp_L,minus) + s_slack(2716,cowp_S,plus) + s_slack(2716,cowp_S,minus) + s_slack(2716,grou_H,plus) + s_slack(2716,grou_H,minus) + s_slack(2716,grou_L,plus)
     
      + s_slack(2716,grou_L,minus) + s_slack(2716,grou_S,plus) + s_slack(2716,grou_S,minus) + s_slack(2716,lent_H,plus) + s_slack(2716,lent_H,minus) + s_slack(2716,lent_L,plus) + s_slack(2716,lent_L,minus) + s_slack(2716,lent_S,plus)
     
      + s_slack(2716,lent_S,minus) + s_slack(2716,maiz_H,plus) + s_slack(2716,maiz_H,minus) + s_slack(2716,maiz_L,plus) + s_slack(2716,maiz_L,minus) + s_slack(2716,maiz_S,plus) + s_slack(2716,maiz_S,minus) + s_slack(2716,mill_H,plus)
     
      + s_slack(2716,mill_H,minus) + s_slack(2716,mill_L,plus) + s_slack(2716,mill_L,minus) + s_slack(2716,mill_S,plus) + s_slack(2716,mill_S,minus) + s_slack(2716,ofib_L,plus) + s_slack(2716,ofib_L,minus) + s_slack(2716,ooil_L,plus)
     
      + s_slack(2716,ooil_L,minus) + s_slack(2716,opul_H,plus) + s_slack(2716,opul_H,minus) + s_slack(2716,opul_L,plus) + s_slack(2716,opul_L,minus) + s_slack(2716,opul_S,plus) + s_slack(2716,opul_S,minus) + s_slack(2716,pige_H,plus)
     
      + s_slack(2716,pige_H,minus) + s_slack(2716,pige_L,plus) + s_slack(2716,pige_L,minus) + s_slack(2716,pige_S,plus) + s_slack(2716,pige_S,minus) + s_slack(2716,pota_H,plus) + s_slack(2716,pota_H,minus) + s_slack(2716,pota_L,plus)
     
      + s_slack(2716,pota_L,minus) + s_slack(2716,pota_S,plus) + s_slack(2716,pota_S,minus) + s_slack(2716,rest_H,plus) + s_slack(2716,rest_H,minus) + s_slack(2716,rest_L,plus) + s_slack(2716,rest_L,minus) + s_slack(2716,rest_S,plus)
     
      + s_slack(2716,rest_S,minus) + s_slack(2716,rice_H,plus) + s_slack(2716,rice_H,minus) + s_slack(2716,rice_L,plus) + s_slack(2716,rice_L,minus) + s_slack(2716,rice_S,plus) + s_slack(2716,rice_S,minus) + s_slack(2716,sorg_L,plus)
     
      + s_slack(2716,sorg_L,minus) + s_slack(2716,sorg_S,plus) + s_slack(2716,sorg_S,minus) + s_slack(2716,soyb_L,plus) + s_slack(2716,soyb_L,minus) + s_slack(2716,soyb_S,plus) + s_slack(2716,soyb_S,minus) + s_slack(2716,sunf_L,plus)
     
      + s_slack(2716,sunf_L,minus) + s_slack(2716,temf_H,plus) + s_slack(2716,temf_H,minus) + s_slack(2716,temf_L,plus) + s_slack(2716,temf_L,minus) + s_slack(2716,temf_S,plus) + s_slack(2716,temf_S,minus) + s_slack(2716,toba_H,plus)
     
      + s_slack(2716,toba_H,minus) + s_slack(2716,toba_L,plus) + s_slack(2716,toba_L,minus) + s_slack(2716,trof_L,plus) + s_slack(2716,trof_L,minus) + s_slack(2716,trof_S,plus) + s_slack(2716,trof_S,minus) + s_slack(2716,vege_H,plus)
     
      + s_slack(2716,vege_H,minus) + s_slack(2716,vege_L,plus) + s_slack(2716,vege_L,minus) + s_slack(2716,vege_S,plus) + s_slack(2716,vege_S,minus) + s_slack(2717,rice_I,plus) + s_slack(2717,rice_I,minus) + s_slack(2717,sugc_I,plus)
     
      + s_slack(2717,sugc_I,minus) + s_slack(2717,whea_I,plus) + s_slack(2717,whea_I,minus) + s_slack(2717,bean_H,plus) + s_slack(2717,bean_H,minus) + s_slack(2717,bean_L,plus) + s_slack(2717,bean_L,minus) + s_slack(2717,bean_S,plus)
     
      + s_slack(2717,bean_S,minus) + s_slack(2717,cass_L,plus) + s_slack(2717,cass_L,minus) + s_slack(2717,cass_S,plus) + s_slack(2717,cass_S,minus) + s_slack(2717,chic_H,plus) + s_slack(2717,chic_H,minus) + s_slack(2717,chic_L,plus)
     
      + s_slack(2717,chic_L,minus) + s_slack(2717,chic_S,plus) + s_slack(2717,chic_S,minus) + s_slack(2717,coff_H,plus) + s_slack(2717,coff_H,minus) + s_slack(2717,coff_L,plus) + s_slack(2717,coff_L,minus) + s_slack(2717,cott_L,plus)
     
      + s_slack(2717,cott_L,minus) + s_slack(2717,cowp_H,plus) + s_slack(2717,cowp_H,minus) + s_slack(2717,cowp_L,plus) + s_slack(2717,cowp_L,minus) + s_slack(2717,cowp_S,plus) + s_slack(2717,cowp_S,minus) + s_slack(2717,grou_H,plus)
     
      + s_slack(2717,grou_H,minus) + s_slack(2717,grou_L,plus) + s_slack(2717,grou_L,minus) + s_slack(2717,grou_S,plus) + s_slack(2717,grou_S,minus) + s_slack(2717,lent_H,plus) + s_slack(2717,lent_H,minus) + s_slack(2717,lent_L,plus)
     
      + s_slack(2717,lent_L,minus) + s_slack(2717,lent_S,plus) + s_slack(2717,lent_S,minus) + s_slack(2717,maiz_H,plus) + s_slack(2717,maiz_H,minus) + s_slack(2717,maiz_L,plus) + s_slack(2717,maiz_L,minus) + s_slack(2717,maiz_S,plus)
     
      + s_slack(2717,maiz_S,minus) + s_slack(2717,mill_H,plus) + s_slack(2717,mill_H,minus) + s_slack(2717,mill_L,plus) + s_slack(2717,mill_L,minus) + s_slack(2717,mill_S,plus) + s_slack(2717,mill_S,minus) + s_slack(2717,ofib_L,plus)
     
      + s_slack(2717,ofib_L,minus) + s_slack(2717,ooil_L,plus) + s_slack(2717,ooil_L,minus) + s_slack(2717,opul_H,plus) + s_slack(2717,opul_H,minus) + s_slack(2717,opul_L,plus) + s_slack(2717,opul_L,minus) + s_slack(2717,opul_S,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 281
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2717,opul_S,minus) + s_slack(2717,pige_H,plus) + s_slack(2717,pige_H,minus) + s_slack(2717,pige_L,plus) + s_slack(2717,pige_L,minus) + s_slack(2717,pige_S,plus) + s_slack(2717,pige_S,minus) + s_slack(2717,pota_H,plus)
     
      + s_slack(2717,pota_H,minus) + s_slack(2717,pota_L,plus) + s_slack(2717,pota_L,minus) + s_slack(2717,pota_S,plus) + s_slack(2717,pota_S,minus) + s_slack(2717,rest_H,plus) + s_slack(2717,rest_H,minus) + s_slack(2717,rest_L,plus)
     
      + s_slack(2717,rest_L,minus) + s_slack(2717,rest_S,plus) + s_slack(2717,rest_S,minus) + s_slack(2717,rice_H,plus) + s_slack(2717,rice_H,minus) + s_slack(2717,rice_L,plus) + s_slack(2717,rice_L,minus) + s_slack(2717,rice_S,plus)
     
      + s_slack(2717,rice_S,minus) + s_slack(2717,sorg_L,plus) + s_slack(2717,sorg_L,minus) + s_slack(2717,sorg_S,plus) + s_slack(2717,sorg_S,minus) + s_slack(2717,soyb_L,plus) + s_slack(2717,soyb_L,minus) + s_slack(2717,soyb_S,plus)
     
      + s_slack(2717,soyb_S,minus) + s_slack(2717,sunf_L,plus) + s_slack(2717,sunf_L,minus) + s_slack(2717,temf_H,plus) + s_slack(2717,temf_H,minus) + s_slack(2717,temf_L,plus) + s_slack(2717,temf_L,minus) + s_slack(2717,temf_S,plus)
     
      + s_slack(2717,temf_S,minus) + s_slack(2717,toba_H,plus) + s_slack(2717,toba_H,minus) + s_slack(2717,toba_L,plus) + s_slack(2717,toba_L,minus) + s_slack(2717,trof_L,plus) + s_slack(2717,trof_L,minus) + s_slack(2717,trof_S,plus)
     
      + s_slack(2717,trof_S,minus) + s_slack(2717,vege_H,plus) + s_slack(2717,vege_H,minus) + s_slack(2717,vege_L,plus) + s_slack(2717,vege_L,minus) + s_slack(2717,vege_S,plus) + s_slack(2717,vege_S,minus) + s_slack(2754,rice_I,plus)
     
      + s_slack(2754,rice_I,minus) + s_slack(2754,sugc_I,plus) + s_slack(2754,sugc_I,minus) + s_slack(2754,whea_I,plus) + s_slack(2754,whea_I,minus) + s_slack(2754,bean_H,plus) + s_slack(2754,bean_H,minus) + s_slack(2754,bean_L,plus)
     
      + s_slack(2754,bean_L,minus) + s_slack(2754,bean_S,plus) + s_slack(2754,bean_S,minus) + s_slack(2754,cass_L,plus) + s_slack(2754,cass_L,minus) + s_slack(2754,cass_S,plus) + s_slack(2754,cass_S,minus) + s_slack(2754,chic_H,plus)
     
      + s_slack(2754,chic_H,minus) + s_slack(2754,chic_L,plus) + s_slack(2754,chic_L,minus) + s_slack(2754,chic_S,plus) + s_slack(2754,chic_S,minus) + s_slack(2754,coff_H,plus) + s_slack(2754,coff_H,minus) + s_slack(2754,coff_L,plus)
     
      + s_slack(2754,coff_L,minus) + s_slack(2754,cott_L,plus) + s_slack(2754,cott_L,minus) + s_slack(2754,cowp_H,plus) + s_slack(2754,cowp_H,minus) + s_slack(2754,cowp_L,plus) + s_slack(2754,cowp_L,minus) + s_slack(2754,cowp_S,plus)
     
      + s_slack(2754,cowp_S,minus) + s_slack(2754,grou_H,plus) + s_slack(2754,grou_H,minus) + s_slack(2754,grou_L,plus) + s_slack(2754,grou_L,minus) + s_slack(2754,grou_S,plus) + s_slack(2754,grou_S,minus) + s_slack(2754,lent_H,plus)
     
      + s_slack(2754,lent_H,minus) + s_slack(2754,lent_L,plus) + s_slack(2754,lent_L,minus) + s_slack(2754,lent_S,plus) + s_slack(2754,lent_S,minus) + s_slack(2754,maiz_H,plus) + s_slack(2754,maiz_H,minus) + s_slack(2754,maiz_L,plus)
     
      + s_slack(2754,maiz_L,minus) + s_slack(2754,maiz_S,plus) + s_slack(2754,maiz_S,minus) + s_slack(2754,mill_H,plus) + s_slack(2754,mill_H,minus) + s_slack(2754,mill_L,plus) + s_slack(2754,mill_L,minus) + s_slack(2754,mill_S,plus)
     
      + s_slack(2754,mill_S,minus) + s_slack(2754,ofib_L,plus) + s_slack(2754,ofib_L,minus) + s_slack(2754,ooil_L,plus) + s_slack(2754,ooil_L,minus) + s_slack(2754,opul_H,plus) + s_slack(2754,opul_H,minus) + s_slack(2754,opul_L,plus)
     
      + s_slack(2754,opul_L,minus) + s_slack(2754,opul_S,plus) + s_slack(2754,opul_S,minus) + s_slack(2754,pige_H,plus) + s_slack(2754,pige_H,minus) + s_slack(2754,pige_L,plus) + s_slack(2754,pige_L,minus) + s_slack(2754,pige_S,plus)
     
      + s_slack(2754,pige_S,minus) + s_slack(2754,pota_H,plus) + s_slack(2754,pota_H,minus) + s_slack(2754,pota_L,plus) + s_slack(2754,pota_L,minus) + s_slack(2754,pota_S,plus) + s_slack(2754,pota_S,minus) + s_slack(2754,rest_H,plus)
     
      + s_slack(2754,rest_H,minus) + s_slack(2754,rest_L,plus) + s_slack(2754,rest_L,minus) + s_slack(2754,rest_S,plus) + s_slack(2754,rest_S,minus) + s_slack(2754,rice_H,plus) + s_slack(2754,rice_H,minus) + s_slack(2754,rice_L,plus)
     
      + s_slack(2754,rice_L,minus) + s_slack(2754,rice_S,plus) + s_slack(2754,rice_S,minus) + s_slack(2754,sorg_L,plus) + s_slack(2754,sorg_L,minus) + s_slack(2754,sorg_S,plus) + s_slack(2754,sorg_S,minus) + s_slack(2754,soyb_L,plus)
     
      + s_slack(2754,soyb_L,minus) + s_slack(2754,soyb_S,plus) + s_slack(2754,soyb_S,minus) + s_slack(2754,sunf_L,plus) + s_slack(2754,sunf_L,minus) + s_slack(2754,temf_H,plus) + s_slack(2754,temf_H,minus) + s_slack(2754,temf_L,plus)
     
      + s_slack(2754,temf_L,minus) + s_slack(2754,temf_S,plus) + s_slack(2754,temf_S,minus) + s_slack(2754,toba_H,plus) + s_slack(2754,toba_H,minus) + s_slack(2754,toba_L,plus) + s_slack(2754,toba_L,minus) + s_slack(2754,trof_L,plus)
     
      + s_slack(2754,trof_L,minus) + s_slack(2754,trof_S,plus) + s_slack(2754,trof_S,minus) + s_slack(2754,vege_H,plus) + s_slack(2754,vege_H,minus) + s_slack(2754,vege_L,plus) + s_slack(2754,vege_L,minus) + s_slack(2754,vege_S,plus)
     
      + s_slack(2754,vege_S,minus) + s_slack(2755,rice_I,plus) + s_slack(2755,rice_I,minus) + s_slack(2755,sugc_I,plus) + s_slack(2755,sugc_I,minus) + s_slack(2755,whea_I,plus) + s_slack(2755,whea_I,minus) + s_slack(2755,bean_H,plus)
     
      + s_slack(2755,bean_H,minus) + s_slack(2755,bean_L,plus) + s_slack(2755,bean_L,minus) + s_slack(2755,bean_S,plus) + s_slack(2755,bean_S,minus) + s_slack(2755,cass_L,plus) + s_slack(2755,cass_L,minus) + s_slack(2755,cass_S,plus)
     
      + s_slack(2755,cass_S,minus) + s_slack(2755,chic_H,plus) + s_slack(2755,chic_H,minus) + s_slack(2755,chic_L,plus) + s_slack(2755,chic_L,minus) + s_slack(2755,chic_S,plus) + s_slack(2755,chic_S,minus) + s_slack(2755,coff_H,plus)
     
      + s_slack(2755,coff_H,minus) + s_slack(2755,coff_L,plus) + s_slack(2755,coff_L,minus) + s_slack(2755,cott_L,plus) + s_slack(2755,cott_L,minus) + s_slack(2755,cowp_H,plus) + s_slack(2755,cowp_H,minus) + s_slack(2755,cowp_L,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 282
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2755,cowp_L,minus) + s_slack(2755,cowp_S,plus) + s_slack(2755,cowp_S,minus) + s_slack(2755,grou_H,plus) + s_slack(2755,grou_H,minus) + s_slack(2755,grou_L,plus) + s_slack(2755,grou_L,minus) + s_slack(2755,grou_S,plus)
     
      + s_slack(2755,grou_S,minus) + s_slack(2755,lent_H,plus) + s_slack(2755,lent_H,minus) + s_slack(2755,lent_L,plus) + s_slack(2755,lent_L,minus) + s_slack(2755,lent_S,plus) + s_slack(2755,lent_S,minus) + s_slack(2755,maiz_H,plus)
     
      + s_slack(2755,maiz_H,minus) + s_slack(2755,maiz_L,plus) + s_slack(2755,maiz_L,minus) + s_slack(2755,maiz_S,plus) + s_slack(2755,maiz_S,minus) + s_slack(2755,mill_H,plus) + s_slack(2755,mill_H,minus) + s_slack(2755,mill_L,plus)
     
      + s_slack(2755,mill_L,minus) + s_slack(2755,mill_S,plus) + s_slack(2755,mill_S,minus) + s_slack(2755,ofib_L,plus) + s_slack(2755,ofib_L,minus) + s_slack(2755,ooil_L,plus) + s_slack(2755,ooil_L,minus) + s_slack(2755,opul_H,plus)
     
      + s_slack(2755,opul_H,minus) + s_slack(2755,opul_L,plus) + s_slack(2755,opul_L,minus) + s_slack(2755,opul_S,plus) + s_slack(2755,opul_S,minus) + s_slack(2755,pige_H,plus) + s_slack(2755,pige_H,minus) + s_slack(2755,pige_L,plus)
     
      + s_slack(2755,pige_L,minus) + s_slack(2755,pige_S,plus) + s_slack(2755,pige_S,minus) + s_slack(2755,pota_H,plus) + s_slack(2755,pota_H,minus) + s_slack(2755,pota_L,plus) + s_slack(2755,pota_L,minus) + s_slack(2755,pota_S,plus)
     
      + s_slack(2755,pota_S,minus) + s_slack(2755,rest_H,plus) + s_slack(2755,rest_H,minus) + s_slack(2755,rest_L,plus) + s_slack(2755,rest_L,minus) + s_slack(2755,rest_S,plus) + s_slack(2755,rest_S,minus) + s_slack(2755,rice_H,plus)
     
      + s_slack(2755,rice_H,minus) + s_slack(2755,rice_L,plus) + s_slack(2755,rice_L,minus) + s_slack(2755,rice_S,plus) + s_slack(2755,rice_S,minus) + s_slack(2755,sorg_L,plus) + s_slack(2755,sorg_L,minus) + s_slack(2755,sorg_S,plus)
     
      + s_slack(2755,sorg_S,minus) + s_slack(2755,soyb_L,plus) + s_slack(2755,soyb_L,minus) + s_slack(2755,soyb_S,plus) + s_slack(2755,soyb_S,minus) + s_slack(2755,sunf_L,plus) + s_slack(2755,sunf_L,minus) + s_slack(2755,temf_H,plus)
     
      + s_slack(2755,temf_H,minus) + s_slack(2755,temf_L,plus) + s_slack(2755,temf_L,minus) + s_slack(2755,temf_S,plus) + s_slack(2755,temf_S,minus) + s_slack(2755,toba_H,plus) + s_slack(2755,toba_H,minus) + s_slack(2755,toba_L,plus)
     
      + s_slack(2755,toba_L,minus) + s_slack(2755,trof_L,plus) + s_slack(2755,trof_L,minus) + s_slack(2755,trof_S,plus) + s_slack(2755,trof_S,minus) + s_slack(2755,vege_H,plus) + s_slack(2755,vege_H,minus) + s_slack(2755,vege_L,plus)
     
      + s_slack(2755,vege_L,minus) + s_slack(2755,vege_S,plus) + s_slack(2755,vege_S,minus) + s_slack(2756,rice_I,plus) + s_slack(2756,rice_I,minus) + s_slack(2756,sugc_I,plus) + s_slack(2756,sugc_I,minus) + s_slack(2756,whea_I,plus)
     
      + s_slack(2756,whea_I,minus) + s_slack(2756,bean_H,plus) + s_slack(2756,bean_H,minus) + s_slack(2756,bean_L,plus) + s_slack(2756,bean_L,minus) + s_slack(2756,bean_S,plus) + s_slack(2756,bean_S,minus) + s_slack(2756,cass_L,plus)
     
      + s_slack(2756,cass_L,minus) + s_slack(2756,cass_S,plus) + s_slack(2756,cass_S,minus) + s_slack(2756,chic_H,plus) + s_slack(2756,chic_H,minus) + s_slack(2756,chic_L,plus) + s_slack(2756,chic_L,minus) + s_slack(2756,chic_S,plus)
     
      + s_slack(2756,chic_S,minus) + s_slack(2756,coff_H,plus) + s_slack(2756,coff_H,minus) + s_slack(2756,coff_L,plus) + s_slack(2756,coff_L,minus) + s_slack(2756,cott_L,plus) + s_slack(2756,cott_L,minus) + s_slack(2756,cowp_H,plus)
     
      + s_slack(2756,cowp_H,minus) + s_slack(2756,cowp_L,plus) + s_slack(2756,cowp_L,minus) + s_slack(2756,cowp_S,plus) + s_slack(2756,cowp_S,minus) + s_slack(2756,grou_H,plus) + s_slack(2756,grou_H,minus) + s_slack(2756,grou_L,plus)
     
      + s_slack(2756,grou_L,minus) + s_slack(2756,grou_S,plus) + s_slack(2756,grou_S,minus) + s_slack(2756,lent_H,plus) + s_slack(2756,lent_H,minus) + s_slack(2756,lent_L,plus) + s_slack(2756,lent_L,minus) + s_slack(2756,lent_S,plus)
     
      + s_slack(2756,lent_S,minus) + s_slack(2756,maiz_H,plus) + s_slack(2756,maiz_H,minus) + s_slack(2756,maiz_L,plus) + s_slack(2756,maiz_L,minus) + s_slack(2756,maiz_S,plus) + s_slack(2756,maiz_S,minus) + s_slack(2756,mill_H,plus)
     
      + s_slack(2756,mill_H,minus) + s_slack(2756,mill_L,plus) + s_slack(2756,mill_L,minus) + s_slack(2756,mill_S,plus) + s_slack(2756,mill_S,minus) + s_slack(2756,ofib_L,plus) + s_slack(2756,ofib_L,minus) + s_slack(2756,ooil_L,plus)
     
      + s_slack(2756,ooil_L,minus) + s_slack(2756,opul_H,plus) + s_slack(2756,opul_H,minus) + s_slack(2756,opul_L,plus) + s_slack(2756,opul_L,minus) + s_slack(2756,opul_S,plus) + s_slack(2756,opul_S,minus) + s_slack(2756,pige_H,plus)
     
      + s_slack(2756,pige_H,minus) + s_slack(2756,pige_L,plus) + s_slack(2756,pige_L,minus) + s_slack(2756,pige_S,plus) + s_slack(2756,pige_S,minus) + s_slack(2756,pota_H,plus) + s_slack(2756,pota_H,minus) + s_slack(2756,pota_L,plus)
     
      + s_slack(2756,pota_L,minus) + s_slack(2756,pota_S,plus) + s_slack(2756,pota_S,minus) + s_slack(2756,rest_H,plus) + s_slack(2756,rest_H,minus) + s_slack(2756,rest_L,plus) + s_slack(2756,rest_L,minus) + s_slack(2756,rest_S,plus)
     
      + s_slack(2756,rest_S,minus) + s_slack(2756,rice_H,plus) + s_slack(2756,rice_H,minus) + s_slack(2756,rice_L,plus) + s_slack(2756,rice_L,minus) + s_slack(2756,rice_S,plus) + s_slack(2756,rice_S,minus) + s_slack(2756,sorg_L,plus)
     
      + s_slack(2756,sorg_L,minus) + s_slack(2756,sorg_S,plus) + s_slack(2756,sorg_S,minus) + s_slack(2756,soyb_L,plus) + s_slack(2756,soyb_L,minus) + s_slack(2756,soyb_S,plus) + s_slack(2756,soyb_S,minus) + s_slack(2756,sunf_L,plus)
     
      + s_slack(2756,sunf_L,minus) + s_slack(2756,temf_H,plus) + s_slack(2756,temf_H,minus) + s_slack(2756,temf_L,plus) + s_slack(2756,temf_L,minus) + s_slack(2756,temf_S,plus) + s_slack(2756,temf_S,minus) + s_slack(2756,toba_H,plus)
     
      + s_slack(2756,toba_H,minus) + s_slack(2756,toba_L,plus) + s_slack(2756,toba_L,minus) + s_slack(2756,trof_L,plus) + s_slack(2756,trof_L,minus) + s_slack(2756,trof_S,plus) + s_slack(2756,trof_S,minus) + s_slack(2756,vege_H,plus)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 283
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     obj_max_score  =E=  objective function: maximize score     
     
      + s_slack(2756,vege_H,minus) + s_slack(2756,vege_L,plus) + s_slack(2756,vege_L,minus) + s_slack(2756,vege_S,plus) + s_slack(2756,vege_S,minus) =E= 0 ; (LHS = 0)
     

---- sum_one  =E=  sum of land allocation shares is 1

sum_one(rice_I)..  0.00306748466257669*alloc(1454,rice_I) + 0.00306748466257669*alloc(1460,rice_I) + 0.00306748466257669*alloc(1461,rice_I) + 0.00306748466257669*alloc(1490,rice_I) + 0.00306748466257669*alloc(1492,rice_I)
     
      + 0.00306748466257669*alloc(1493,rice_I) + 0.00306748466257669*alloc(1500,rice_I) + 0.00306748466257669*alloc(1527,rice_I) + 0.00306748466257669*alloc(1530,rice_I) + 0.00306748466257669*alloc(1531,rice_I) + 0.00306748466257669*alloc(1532,rice_I)
     
      + 0.00306748466257669*alloc(1539,rice_I) + 0.00306748466257669*alloc(1565,rice_I) + 0.00306748466257669*alloc(1569,rice_I) + 0.00306748466257669*alloc(1570,rice_I) + 0.00306748466257669*alloc(1571,rice_I) + 0.00306748466257669*alloc(1572,rice_I)
     
      + 0.00306748466257669*alloc(1578,rice_I) + 0.00306748466257669*alloc(1579,rice_I) + 0.00306748466257669*alloc(1603,rice_I) + 0.00306748466257669*alloc(1604,rice_I) + 0.00306748466257669*alloc(1608,rice_I) + 0.00306748466257669*alloc(1609,rice_I)
     
      + 0.00306748466257669*alloc(1610,rice_I) + 0.00306748466257669*alloc(1611,rice_I) + 0.00306748466257669*alloc(1612,rice_I) + 0.00306748466257669*alloc(1618,rice_I) + 0.00306748466257669*alloc(1647,rice_I) + 0.00306748466257669*alloc(1648,rice_I)
     
      + 0.00306748466257669*alloc(1649,rice_I) + 0.00306748466257669*alloc(1650,rice_I) + 0.00306748466257669*alloc(1651,rice_I) + 0.00306748466257669*alloc(1652,rice_I) + 0.00306748466257669*alloc(1653,rice_I) + 0.00306748466257669*alloc(1654,rice_I)
     
      + 0.00306748466257669*alloc(1657,rice_I) + 0.00306748466257669*alloc(1686,rice_I) + 0.00306748466257669*alloc(1687,rice_I) + 0.00306748466257669*alloc(1688,rice_I) + 0.00306748466257669*alloc(1689,rice_I) + 0.00306748466257669*alloc(1690,rice_I)
     
      + 0.00306748466257669*alloc(1691,rice_I) + 0.00306748466257669*alloc(1692,rice_I) + 0.00306748466257669*alloc(1693,rice_I) + 0.00306748466257669*alloc(1697,rice_I) + 0.00306748466257669*alloc(1725,rice_I) + 0.00306748466257669*alloc(1726,rice_I)
     
      + 0.00306748466257669*alloc(1727,rice_I) + 0.00306748466257669*alloc(1728,rice_I) + 0.00306748466257669*alloc(1729,rice_I) + 0.00306748466257669*alloc(1730,rice_I) + 0.00306748466257669*alloc(1731,rice_I) + 0.00306748466257669*alloc(1732,rice_I)
     
      + 0.00306748466257669*alloc(1735,rice_I) + 0.00306748466257669*alloc(1736,rice_I) + 0.00306748466257669*alloc(1764,rice_I) + 0.00306748466257669*alloc(1765,rice_I) + 0.00306748466257669*alloc(1766,rice_I) + 0.00306748466257669*alloc(1767,rice_I)
     
      + 0.00306748466257669*alloc(1768,rice_I) + 0.00306748466257669*alloc(1769,rice_I) + 0.00306748466257669*alloc(1770,rice_I) + 0.00306748466257669*alloc(1771,rice_I) + 0.00306748466257669*alloc(1774,rice_I) + 0.00306748466257669*alloc(1775,rice_I)
     
      + 0.00306748466257669*alloc(1805,rice_I) + 0.00306748466257669*alloc(1806,rice_I) + 0.00306748466257669*alloc(1807,rice_I) + 0.00306748466257669*alloc(1808,rice_I) + 0.00306748466257669*alloc(1809,rice_I) + 0.00306748466257669*alloc(1810,rice_I)
     
      + 0.00306748466257669*alloc(1811,rice_I) + 0.00306748466257669*alloc(1839,rice_I) + 0.00306748466257669*alloc(1842,rice_I) + 0.00306748466257669*alloc(1845,rice_I) + 0.00306748466257669*alloc(1846,rice_I) + 0.00306748466257669*alloc(1847,rice_I)
     
      + 0.00306748466257669*alloc(1848,rice_I) + 0.00306748466257669*alloc(1849,rice_I) + 0.00306748466257669*alloc(1850,rice_I) + 0.00306748466257669*alloc(1851,rice_I) + 0.00306748466257669*alloc(1853,rice_I) + 0.00306748466257669*alloc(1876,rice_I)
     
      + 0.00306748466257669*alloc(1879,rice_I) + 0.00306748466257669*alloc(1880,rice_I) + 0.00306748466257669*alloc(1881,rice_I) + 0.00306748466257669*alloc(1882,rice_I) + 0.00306748466257669*alloc(1883,rice_I) + 0.00306748466257669*alloc(1884,rice_I)
     
      + 0.00306748466257669*alloc(1885,rice_I) + 0.00306748466257669*alloc(1886,rice_I) + 0.00306748466257669*alloc(1887,rice_I) + 0.00306748466257669*alloc(1888,rice_I) + 0.00306748466257669*alloc(1889,rice_I) + 0.00306748466257669*alloc(1890,rice_I)
     
      + 0.00306748466257669*alloc(1891,rice_I) + 0.00306748466257669*alloc(1915,rice_I) + 0.00306748466257669*alloc(1918,rice_I) + 0.00306748466257669*alloc(1919,rice_I) + 0.00306748466257669*alloc(1920,rice_I) + 0.00306748466257669*alloc(1921,rice_I)
     
      + 0.00306748466257669*alloc(1922,rice_I) + 0.00306748466257669*alloc(1923,rice_I) + 0.00306748466257669*alloc(1924,rice_I) + 0.00306748466257669*alloc(1925,rice_I) + 0.00306748466257669*alloc(1926,rice_I) + 0.00306748466257669*alloc(1927,rice_I)
     
      + 0.00306748466257669*alloc(1928,rice_I) + 0.00306748466257669*alloc(1929,rice_I) + 0.00306748466257669*alloc(1930,rice_I) + 0.00306748466257669*alloc(1931,rice_I) + 0.00306748466257669*alloc(1953,rice_I) + 0.00306748466257669*alloc(1954,rice_I)
     
      + 0.00306748466257669*alloc(1955,rice_I) + 0.00306748466257669*alloc(1956,rice_I) + 0.00306748466257669*alloc(1957,rice_I) + 0.00306748466257669*alloc(1958,rice_I) + 0.00306748466257669*alloc(1959,rice_I) + 0.00306748466257669*alloc(1960,rice_I)
     
      + 0.00306748466257669*alloc(1961,rice_I) + 0.00306748466257669*alloc(1962,rice_I) + 0.00306748466257669*alloc(1963,rice_I) + 0.00306748466257669*alloc(1964,rice_I) + 0.00306748466257669*alloc(1965,rice_I) + 0.00306748466257669*alloc(1966,rice_I)
     
      + 0.00306748466257669*alloc(1967,rice_I) + 0.00306748466257669*alloc(1968,rice_I) + 0.00306748466257669*alloc(1969,rice_I) + 0.00306748466257669*alloc(1970,rice_I) + 0.00306748466257669*alloc(1971,rice_I) + 0.00306748466257669*alloc(1990,rice_I)
     
      + 0.00306748466257669*alloc(1992,rice_I) + 0.00306748466257669*alloc(1993,rice_I) + 0.00306748466257669*alloc(1994,rice_I) + 0.00306748466257669*alloc(1996,rice_I) + 0.00306748466257669*alloc(1997,rice_I) + 0.00306748466257669*alloc(1998,rice_I)
     
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 284
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(1999,rice_I) + 0.00306748466257669*alloc(2000,rice_I) + 0.00306748466257669*alloc(2001,rice_I) + 0.00306748466257669*alloc(2002,rice_I) + 0.00306748466257669*alloc(2003,rice_I) + 0.00306748466257669*alloc(2004,rice_I)
     
      + 0.00306748466257669*alloc(2005,rice_I) + 0.00306748466257669*alloc(2006,rice_I) + 0.00306748466257669*alloc(2007,rice_I) + 0.00306748466257669*alloc(2008,rice_I) + 0.00306748466257669*alloc(2009,rice_I) + 0.00306748466257669*alloc(2010,rice_I)
     
      + 0.00306748466257669*alloc(2011,rice_I) + 0.00306748466257669*alloc(2032,rice_I) + 0.00306748466257669*alloc(2033,rice_I) + 0.00306748466257669*alloc(2034,rice_I) + 0.00306748466257669*alloc(2035,rice_I) + 0.00306748466257669*alloc(2036,rice_I)
     
      + 0.00306748466257669*alloc(2037,rice_I) + 0.00306748466257669*alloc(2038,rice_I) + 0.00306748466257669*alloc(2039,rice_I) + 0.00306748466257669*alloc(2040,rice_I) + 0.00306748466257669*alloc(2041,rice_I) + 0.00306748466257669*alloc(2042,rice_I)
     
      + 0.00306748466257669*alloc(2043,rice_I) + 0.00306748466257669*alloc(2044,rice_I) + 0.00306748466257669*alloc(2045,rice_I) + 0.00306748466257669*alloc(2046,rice_I) + 0.00306748466257669*alloc(2047,rice_I) + 0.00306748466257669*alloc(2049,rice_I)
     
      + 0.00306748466257669*alloc(2050,rice_I) + 0.00306748466257669*alloc(2051,rice_I) + 0.00306748466257669*alloc(2072,rice_I) + 0.00306748466257669*alloc(2073,rice_I) + 0.00306748466257669*alloc(2074,rice_I) + 0.00306748466257669*alloc(2075,rice_I)
     
      + 0.00306748466257669*alloc(2076,rice_I) + 0.00306748466257669*alloc(2077,rice_I) + 0.00306748466257669*alloc(2078,rice_I) + 0.00306748466257669*alloc(2079,rice_I) + 0.00306748466257669*alloc(2080,rice_I) + 0.00306748466257669*alloc(2081,rice_I)
     
      + 0.00306748466257669*alloc(2082,rice_I) + 0.00306748466257669*alloc(2083,rice_I) + 0.00306748466257669*alloc(2084,rice_I) + 0.00306748466257669*alloc(2085,rice_I) + 0.00306748466257669*alloc(2086,rice_I) + 0.00306748466257669*alloc(2088,rice_I)
     
      + 0.00306748466257669*alloc(2089,rice_I) + 0.00306748466257669*alloc(2090,rice_I) + 0.00306748466257669*alloc(2110,rice_I) + 0.00306748466257669*alloc(2111,rice_I) + 0.00306748466257669*alloc(2112,rice_I) + 0.00306748466257669*alloc(2114,rice_I)
     
      + 0.00306748466257669*alloc(2115,rice_I) + 0.00306748466257669*alloc(2116,rice_I) + 0.00306748466257669*alloc(2117,rice_I) + 0.00306748466257669*alloc(2118,rice_I) + 0.00306748466257669*alloc(2119,rice_I) + 0.00306748466257669*alloc(2120,rice_I)
     
      + 0.00306748466257669*alloc(2121,rice_I) + 0.00306748466257669*alloc(2122,rice_I) + 0.00306748466257669*alloc(2123,rice_I) + 0.00306748466257669*alloc(2124,rice_I) + 0.00306748466257669*alloc(2127,rice_I) + 0.00306748466257669*alloc(2150,rice_I)
     
      + 0.00306748466257669*alloc(2151,rice_I) + 0.00306748466257669*alloc(2152,rice_I) + 0.00306748466257669*alloc(2153,rice_I) + 0.00306748466257669*alloc(2154,rice_I) + 0.00306748466257669*alloc(2155,rice_I) + 0.00306748466257669*alloc(2156,rice_I)
     
      + 0.00306748466257669*alloc(2157,rice_I) + 0.00306748466257669*alloc(2158,rice_I) + 0.00306748466257669*alloc(2159,rice_I) + 0.00306748466257669*alloc(2160,rice_I) + 0.00306748466257669*alloc(2161,rice_I) + 0.00306748466257669*alloc(2162,rice_I)
     
      + 0.00306748466257669*alloc(2163,rice_I) + 0.00306748466257669*alloc(2164,rice_I) + 0.00306748466257669*alloc(2165,rice_I) + 0.00306748466257669*alloc(2166,rice_I) + 0.00306748466257669*alloc(2167,rice_I) + 0.00306748466257669*alloc(2189,rice_I)
     
      + 0.00306748466257669*alloc(2193,rice_I) + 0.00306748466257669*alloc(2194,rice_I) + 0.00306748466257669*alloc(2195,rice_I) + 0.00306748466257669*alloc(2196,rice_I) + 0.00306748466257669*alloc(2197,rice_I) + 0.00306748466257669*alloc(2198,rice_I)
     
      + 0.00306748466257669*alloc(2200,rice_I) + 0.00306748466257669*alloc(2201,rice_I) + 0.00306748466257669*alloc(2202,rice_I) + 0.00306748466257669*alloc(2203,rice_I) + 0.00306748466257669*alloc(2204,rice_I) + 0.00306748466257669*alloc(2206,rice_I)
     
      + 0.00306748466257669*alloc(2232,rice_I) + 0.00306748466257669*alloc(2233,rice_I) + 0.00306748466257669*alloc(2234,rice_I) + 0.00306748466257669*alloc(2235,rice_I) + 0.00306748466257669*alloc(2236,rice_I) + 0.00306748466257669*alloc(2237,rice_I)
     
      + 0.00306748466257669*alloc(2238,rice_I) + 0.00306748466257669*alloc(2239,rice_I) + 0.00306748466257669*alloc(2240,rice_I) + 0.00306748466257669*alloc(2241,rice_I) + 0.00306748466257669*alloc(2242,rice_I) + 0.00306748466257669*alloc(2243,rice_I)
     
      + 0.00306748466257669*alloc(2244,rice_I) + 0.00306748466257669*alloc(2271,rice_I) + 0.00306748466257669*alloc(2274,rice_I) + 0.00306748466257669*alloc(2275,rice_I) + 0.00306748466257669*alloc(2276,rice_I) + 0.00306748466257669*alloc(2277,rice_I)
     
      + 0.00306748466257669*alloc(2278,rice_I) + 0.00306748466257669*alloc(2281,rice_I) + 0.00306748466257669*alloc(2282,rice_I) + 0.00306748466257669*alloc(2283,rice_I) + 0.00306748466257669*alloc(2284,rice_I) + 0.00306748466257669*alloc(2313,rice_I)
     
      + 0.00306748466257669*alloc(2314,rice_I) + 0.00306748466257669*alloc(2315,rice_I) + 0.00306748466257669*alloc(2316,rice_I) + 0.00306748466257669*alloc(2317,rice_I) + 0.00306748466257669*alloc(2318,rice_I) + 0.00306748466257669*alloc(2319,rice_I)
     
      + 0.00306748466257669*alloc(2320,rice_I) + 0.00306748466257669*alloc(2321,rice_I) + 0.00306748466257669*alloc(2322,rice_I) + 0.00306748466257669*alloc(2323,rice_I) + 0.00306748466257669*alloc(2324,rice_I) + 0.00306748466257669*alloc(2325,rice_I)
     
      + 0.00306748466257669*alloc(2352,rice_I) + 0.00306748466257669*alloc(2353,rice_I) + 0.00306748466257669*alloc(2354,rice_I) + 0.00306748466257669*alloc(2355,rice_I) + 0.00306748466257669*alloc(2356,rice_I) + 0.00306748466257669*alloc(2357,rice_I)
     
      + 0.00306748466257669*alloc(2358,rice_I) + 0.00306748466257669*alloc(2359,rice_I) + 0.00306748466257669*alloc(2361,rice_I) + 0.00306748466257669*alloc(2362,rice_I) + 0.00306748466257669*alloc(2363,rice_I) + 0.00306748466257669*alloc(2364,rice_I)
     
      + 0.00306748466257669*alloc(2365,rice_I) + 0.00306748466257669*alloc(2393,rice_I) + 0.00306748466257669*alloc(2395,rice_I) + 0.00306748466257669*alloc(2396,rice_I) + 0.00306748466257669*alloc(2401,rice_I) + 0.00306748466257669*alloc(2402,rice_I)
     
      + 0.00306748466257669*alloc(2403,rice_I) + 0.00306748466257669*alloc(2404,rice_I) + 0.00306748466257669*alloc(2441,rice_I) + 0.00306748466257669*alloc(2442,rice_I) + 0.00306748466257669*alloc(2443,rice_I) + 0.00306748466257669*alloc(2481,rice_I)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 285
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(2482,rice_I) + 0.00306748466257669*alloc(2483,rice_I) + 0.00306748466257669*alloc(2520,rice_I) + 0.00306748466257669*alloc(2521,rice_I) + 0.00306748466257669*alloc(2522,rice_I) + 0.00306748466257669*alloc(2523,rice_I)
     
      + 0.00306748466257669*alloc(2559,rice_I) + 0.00306748466257669*alloc(2560,rice_I) + 0.00306748466257669*alloc(2561,rice_I) + 0.00306748466257669*alloc(2562,rice_I) + 0.00306748466257669*alloc(2563,rice_I) + 0.00306748466257669*alloc(2598,rice_I)
     
      + 0.00306748466257669*alloc(2599,rice_I) + 0.00306748466257669*alloc(2600,rice_I) + 0.00306748466257669*alloc(2601,rice_I) + 0.00306748466257669*alloc(2637,rice_I) + 0.00306748466257669*alloc(2638,rice_I) + 0.00306748466257669*alloc(2639,rice_I)
     
      + 0.00306748466257669*alloc(2640,rice_I) + 0.00306748466257669*alloc(2676,rice_I) + 0.00306748466257669*alloc(2677,rice_I) + 0.00306748466257669*alloc(2678,rice_I) + 0.00306748466257669*alloc(2679,rice_I) + 0.00306748466257669*alloc(2715,rice_I)
     
      + 0.00306748466257669*alloc(2716,rice_I) + 0.00306748466257669*alloc(2717,rice_I) + 0.00306748466257669*alloc(2754,rice_I) + 0.00306748466257669*alloc(2755,rice_I) + 0.00306748466257669*alloc(2756,rice_I) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
sum_one(sugc_I)..  0.00306748466257669*alloc(1454,sugc_I) + 0.00306748466257669*alloc(1460,sugc_I) + 0.00306748466257669*alloc(1461,sugc_I) + 0.00306748466257669*alloc(1490,sugc_I) + 0.00306748466257669*alloc(1492,sugc_I)
     
      + 0.00306748466257669*alloc(1493,sugc_I) + 0.00306748466257669*alloc(1500,sugc_I) + 0.00306748466257669*alloc(1527,sugc_I) + 0.00306748466257669*alloc(1530,sugc_I) + 0.00306748466257669*alloc(1531,sugc_I) + 0.00306748466257669*alloc(1532,sugc_I)
     
      + 0.00306748466257669*alloc(1539,sugc_I) + 0.00306748466257669*alloc(1565,sugc_I) + 0.00306748466257669*alloc(1569,sugc_I) + 0.00306748466257669*alloc(1570,sugc_I) + 0.00306748466257669*alloc(1571,sugc_I) + 0.00306748466257669*alloc(1572,sugc_I)
     
      + 0.00306748466257669*alloc(1578,sugc_I) + 0.00306748466257669*alloc(1579,sugc_I) + 0.00306748466257669*alloc(1603,sugc_I) + 0.00306748466257669*alloc(1604,sugc_I) + 0.00306748466257669*alloc(1608,sugc_I) + 0.00306748466257669*alloc(1609,sugc_I)
     
      + 0.00306748466257669*alloc(1610,sugc_I) + 0.00306748466257669*alloc(1611,sugc_I) + 0.00306748466257669*alloc(1612,sugc_I) + 0.00306748466257669*alloc(1618,sugc_I) + 0.00306748466257669*alloc(1647,sugc_I) + 0.00306748466257669*alloc(1648,sugc_I)
     
      + 0.00306748466257669*alloc(1649,sugc_I) + 0.00306748466257669*alloc(1650,sugc_I) + 0.00306748466257669*alloc(1651,sugc_I) + 0.00306748466257669*alloc(1652,sugc_I) + 0.00306748466257669*alloc(1653,sugc_I) + 0.00306748466257669*alloc(1654,sugc_I)
     
      + 0.00306748466257669*alloc(1657,sugc_I) + 0.00306748466257669*alloc(1686,sugc_I) + 0.00306748466257669*alloc(1687,sugc_I) + 0.00306748466257669*alloc(1688,sugc_I) + 0.00306748466257669*alloc(1689,sugc_I) + 0.00306748466257669*alloc(1690,sugc_I)
     
      + 0.00306748466257669*alloc(1691,sugc_I) + 0.00306748466257669*alloc(1692,sugc_I) + 0.00306748466257669*alloc(1693,sugc_I) + 0.00306748466257669*alloc(1697,sugc_I) + 0.00306748466257669*alloc(1725,sugc_I) + 0.00306748466257669*alloc(1726,sugc_I)
     
      + 0.00306748466257669*alloc(1727,sugc_I) + 0.00306748466257669*alloc(1728,sugc_I) + 0.00306748466257669*alloc(1729,sugc_I) + 0.00306748466257669*alloc(1730,sugc_I) + 0.00306748466257669*alloc(1731,sugc_I) + 0.00306748466257669*alloc(1732,sugc_I)
     
      + 0.00306748466257669*alloc(1735,sugc_I) + 0.00306748466257669*alloc(1736,sugc_I) + 0.00306748466257669*alloc(1764,sugc_I) + 0.00306748466257669*alloc(1765,sugc_I) + 0.00306748466257669*alloc(1766,sugc_I) + 0.00306748466257669*alloc(1767,sugc_I)
     
      + 0.00306748466257669*alloc(1768,sugc_I) + 0.00306748466257669*alloc(1769,sugc_I) + 0.00306748466257669*alloc(1770,sugc_I) + 0.00306748466257669*alloc(1771,sugc_I) + 0.00306748466257669*alloc(1774,sugc_I) + 0.00306748466257669*alloc(1775,sugc_I)
     
      + 0.00306748466257669*alloc(1805,sugc_I) + 0.00306748466257669*alloc(1806,sugc_I) + 0.00306748466257669*alloc(1807,sugc_I) + 0.00306748466257669*alloc(1808,sugc_I) + 0.00306748466257669*alloc(1809,sugc_I) + 0.00306748466257669*alloc(1810,sugc_I)
     
      + 0.00306748466257669*alloc(1811,sugc_I) + 0.00306748466257669*alloc(1839,sugc_I) + 0.00306748466257669*alloc(1842,sugc_I) + 0.00306748466257669*alloc(1845,sugc_I) + 0.00306748466257669*alloc(1846,sugc_I) + 0.00306748466257669*alloc(1847,sugc_I)
     
      + 0.00306748466257669*alloc(1848,sugc_I) + 0.00306748466257669*alloc(1849,sugc_I) + 0.00306748466257669*alloc(1850,sugc_I) + 0.00306748466257669*alloc(1851,sugc_I) + 0.00306748466257669*alloc(1853,sugc_I) + 0.00306748466257669*alloc(1876,sugc_I)
     
      + 0.00306748466257669*alloc(1879,sugc_I) + 0.00306748466257669*alloc(1880,sugc_I) + 0.00306748466257669*alloc(1881,sugc_I) + 0.00306748466257669*alloc(1882,sugc_I) + 0.00306748466257669*alloc(1883,sugc_I) + 0.00306748466257669*alloc(1884,sugc_I)
     
      + 0.00306748466257669*alloc(1885,sugc_I) + 0.00306748466257669*alloc(1886,sugc_I) + 0.00306748466257669*alloc(1887,sugc_I) + 0.00306748466257669*alloc(1888,sugc_I) + 0.00306748466257669*alloc(1889,sugc_I) + 0.00306748466257669*alloc(1890,sugc_I)
     
      + 0.00306748466257669*alloc(1891,sugc_I) + 0.00306748466257669*alloc(1915,sugc_I) + 0.00306748466257669*alloc(1918,sugc_I) + 0.00306748466257669*alloc(1919,sugc_I) + 0.00306748466257669*alloc(1920,sugc_I) + 0.00306748466257669*alloc(1921,sugc_I)
     
      + 0.00306748466257669*alloc(1922,sugc_I) + 0.00306748466257669*alloc(1923,sugc_I) + 0.00306748466257669*alloc(1924,sugc_I) + 0.00306748466257669*alloc(1925,sugc_I) + 0.00306748466257669*alloc(1926,sugc_I) + 0.00306748466257669*alloc(1927,sugc_I)
     
      + 0.00306748466257669*alloc(1928,sugc_I) + 0.00306748466257669*alloc(1929,sugc_I) + 0.00306748466257669*alloc(1930,sugc_I) + 0.00306748466257669*alloc(1931,sugc_I) + 0.00306748466257669*alloc(1953,sugc_I) + 0.00306748466257669*alloc(1954,sugc_I)
     
      + 0.00306748466257669*alloc(1955,sugc_I) + 0.00306748466257669*alloc(1956,sugc_I) + 0.00306748466257669*alloc(1957,sugc_I) + 0.00306748466257669*alloc(1958,sugc_I) + 0.00306748466257669*alloc(1959,sugc_I) + 0.00306748466257669*alloc(1960,sugc_I)
     
      + 0.00306748466257669*alloc(1961,sugc_I) + 0.00306748466257669*alloc(1962,sugc_I) + 0.00306748466257669*alloc(1963,sugc_I) + 0.00306748466257669*alloc(1964,sugc_I) + 0.00306748466257669*alloc(1965,sugc_I) + 0.00306748466257669*alloc(1966,sugc_I)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 286
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(1967,sugc_I) + 0.00306748466257669*alloc(1968,sugc_I) + 0.00306748466257669*alloc(1969,sugc_I) + 0.00306748466257669*alloc(1970,sugc_I) + 0.00306748466257669*alloc(1971,sugc_I) + 0.00306748466257669*alloc(1990,sugc_I)
     
      + 0.00306748466257669*alloc(1992,sugc_I) + 0.00306748466257669*alloc(1993,sugc_I) + 0.00306748466257669*alloc(1994,sugc_I) + 0.00306748466257669*alloc(1996,sugc_I) + 0.00306748466257669*alloc(1997,sugc_I) + 0.00306748466257669*alloc(1998,sugc_I)
     
      + 0.00306748466257669*alloc(1999,sugc_I) + 0.00306748466257669*alloc(2000,sugc_I) + 0.00306748466257669*alloc(2001,sugc_I) + 0.00306748466257669*alloc(2002,sugc_I) + 0.00306748466257669*alloc(2003,sugc_I) + 0.00306748466257669*alloc(2004,sugc_I)
     
      + 0.00306748466257669*alloc(2005,sugc_I) + 0.00306748466257669*alloc(2006,sugc_I) + 0.00306748466257669*alloc(2007,sugc_I) + 0.00306748466257669*alloc(2008,sugc_I) + 0.00306748466257669*alloc(2009,sugc_I) + 0.00306748466257669*alloc(2010,sugc_I)
     
      + 0.00306748466257669*alloc(2011,sugc_I) + 0.00306748466257669*alloc(2032,sugc_I) + 0.00306748466257669*alloc(2033,sugc_I) + 0.00306748466257669*alloc(2034,sugc_I) + 0.00306748466257669*alloc(2035,sugc_I) + 0.00306748466257669*alloc(2036,sugc_I)
     
      + 0.00306748466257669*alloc(2037,sugc_I) + 0.00306748466257669*alloc(2038,sugc_I) + 0.00306748466257669*alloc(2039,sugc_I) + 0.00306748466257669*alloc(2040,sugc_I) + 0.00306748466257669*alloc(2041,sugc_I) + 0.00306748466257669*alloc(2042,sugc_I)
     
      + 0.00306748466257669*alloc(2043,sugc_I) + 0.00306748466257669*alloc(2044,sugc_I) + 0.00306748466257669*alloc(2045,sugc_I) + 0.00306748466257669*alloc(2046,sugc_I) + 0.00306748466257669*alloc(2047,sugc_I) + 0.00306748466257669*alloc(2049,sugc_I)
     
      + 0.00306748466257669*alloc(2050,sugc_I) + 0.00306748466257669*alloc(2051,sugc_I) + 0.00306748466257669*alloc(2072,sugc_I) + 0.00306748466257669*alloc(2073,sugc_I) + 0.00306748466257669*alloc(2074,sugc_I) + 0.00306748466257669*alloc(2075,sugc_I)
     
      + 0.00306748466257669*alloc(2076,sugc_I) + 0.00306748466257669*alloc(2077,sugc_I) + 0.00306748466257669*alloc(2078,sugc_I) + 0.00306748466257669*alloc(2079,sugc_I) + 0.00306748466257669*alloc(2080,sugc_I) + 0.00306748466257669*alloc(2081,sugc_I)
     
      + 0.00306748466257669*alloc(2082,sugc_I) + 0.00306748466257669*alloc(2083,sugc_I) + 0.00306748466257669*alloc(2084,sugc_I) + 0.00306748466257669*alloc(2085,sugc_I) + 0.00306748466257669*alloc(2086,sugc_I) + 0.00306748466257669*alloc(2088,sugc_I)
     
      + 0.00306748466257669*alloc(2089,sugc_I) + 0.00306748466257669*alloc(2090,sugc_I) + 0.00306748466257669*alloc(2110,sugc_I) + 0.00306748466257669*alloc(2111,sugc_I) + 0.00306748466257669*alloc(2112,sugc_I) + 0.00306748466257669*alloc(2114,sugc_I)
     
      + 0.00306748466257669*alloc(2115,sugc_I) + 0.00306748466257669*alloc(2116,sugc_I) + 0.00306748466257669*alloc(2117,sugc_I) + 0.00306748466257669*alloc(2118,sugc_I) + 0.00306748466257669*alloc(2119,sugc_I) + 0.00306748466257669*alloc(2120,sugc_I)
     
      + 0.00306748466257669*alloc(2121,sugc_I) + 0.00306748466257669*alloc(2122,sugc_I) + 0.00306748466257669*alloc(2123,sugc_I) + 0.00306748466257669*alloc(2124,sugc_I) + 0.00306748466257669*alloc(2127,sugc_I) + 0.00306748466257669*alloc(2150,sugc_I)
     
      + 0.00306748466257669*alloc(2151,sugc_I) + 0.00306748466257669*alloc(2152,sugc_I) + 0.00306748466257669*alloc(2153,sugc_I) + 0.00306748466257669*alloc(2154,sugc_I) + 0.00306748466257669*alloc(2155,sugc_I) + 0.00306748466257669*alloc(2156,sugc_I)
     
      + 0.00306748466257669*alloc(2157,sugc_I) + 0.00306748466257669*alloc(2158,sugc_I) + 0.00306748466257669*alloc(2159,sugc_I) + 0.00306748466257669*alloc(2160,sugc_I) + 0.00306748466257669*alloc(2161,sugc_I) + 0.00306748466257669*alloc(2162,sugc_I)
     
      + 0.00306748466257669*alloc(2163,sugc_I) + 0.00306748466257669*alloc(2164,sugc_I) + 0.00306748466257669*alloc(2165,sugc_I) + 0.00306748466257669*alloc(2166,sugc_I) + 0.00306748466257669*alloc(2167,sugc_I) + 0.00306748466257669*alloc(2189,sugc_I)
     
      + 0.00306748466257669*alloc(2193,sugc_I) + 0.00306748466257669*alloc(2194,sugc_I) + 0.00306748466257669*alloc(2195,sugc_I) + 0.00306748466257669*alloc(2196,sugc_I) + 0.00306748466257669*alloc(2197,sugc_I) + 0.00306748466257669*alloc(2198,sugc_I)
     
      + 0.00306748466257669*alloc(2200,sugc_I) + 0.00306748466257669*alloc(2201,sugc_I) + 0.00306748466257669*alloc(2202,sugc_I) + 0.00306748466257669*alloc(2203,sugc_I) + 0.00306748466257669*alloc(2204,sugc_I) + 0.00306748466257669*alloc(2206,sugc_I)
     
      + 0.00306748466257669*alloc(2232,sugc_I) + 0.00306748466257669*alloc(2233,sugc_I) + 0.00306748466257669*alloc(2234,sugc_I) + 0.00306748466257669*alloc(2235,sugc_I) + 0.00306748466257669*alloc(2236,sugc_I) + 0.00306748466257669*alloc(2237,sugc_I)
     
      + 0.00306748466257669*alloc(2238,sugc_I) + 0.00306748466257669*alloc(2239,sugc_I) + 0.00306748466257669*alloc(2240,sugc_I) + 0.00306748466257669*alloc(2241,sugc_I) + 0.00306748466257669*alloc(2242,sugc_I) + 0.00306748466257669*alloc(2243,sugc_I)
     
      + 0.00306748466257669*alloc(2244,sugc_I) + 0.00306748466257669*alloc(2271,sugc_I) + 0.00306748466257669*alloc(2274,sugc_I) + 0.00306748466257669*alloc(2275,sugc_I) + 0.00306748466257669*alloc(2276,sugc_I) + 0.00306748466257669*alloc(2277,sugc_I)
     
      + 0.00306748466257669*alloc(2278,sugc_I) + 0.00306748466257669*alloc(2281,sugc_I) + 0.00306748466257669*alloc(2282,sugc_I) + 0.00306748466257669*alloc(2283,sugc_I) + 0.00306748466257669*alloc(2284,sugc_I) + 0.00306748466257669*alloc(2313,sugc_I)
     
      + 0.00306748466257669*alloc(2314,sugc_I) + 0.00306748466257669*alloc(2315,sugc_I) + 0.00306748466257669*alloc(2316,sugc_I) + 0.00306748466257669*alloc(2317,sugc_I) + 0.00306748466257669*alloc(2318,sugc_I) + 0.00306748466257669*alloc(2319,sugc_I)
     
      + 0.00306748466257669*alloc(2320,sugc_I) + 0.00306748466257669*alloc(2321,sugc_I) + 0.00306748466257669*alloc(2322,sugc_I) + 0.00306748466257669*alloc(2323,sugc_I) + 0.00306748466257669*alloc(2324,sugc_I) + 0.00306748466257669*alloc(2325,sugc_I)
     
      + 0.00306748466257669*alloc(2352,sugc_I) + 0.00306748466257669*alloc(2353,sugc_I) + 0.00306748466257669*alloc(2354,sugc_I) + 0.00306748466257669*alloc(2355,sugc_I) + 0.00306748466257669*alloc(2356,sugc_I) + 0.00306748466257669*alloc(2357,sugc_I)
     
      + 0.00306748466257669*alloc(2358,sugc_I) + 0.00306748466257669*alloc(2359,sugc_I) + 0.00306748466257669*alloc(2361,sugc_I) + 0.00306748466257669*alloc(2362,sugc_I) + 0.00306748466257669*alloc(2363,sugc_I) + 0.00306748466257669*alloc(2364,sugc_I)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 287
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(2365,sugc_I) + 0.00306748466257669*alloc(2393,sugc_I) + 0.00306748466257669*alloc(2395,sugc_I) + 0.00306748466257669*alloc(2396,sugc_I) + 0.00306748466257669*alloc(2401,sugc_I) + 0.00306748466257669*alloc(2402,sugc_I)
     
      + 0.00306748466257669*alloc(2403,sugc_I) + 0.00306748466257669*alloc(2404,sugc_I) + 0.00306748466257669*alloc(2441,sugc_I) + 0.00306748466257669*alloc(2442,sugc_I) + 0.00306748466257669*alloc(2443,sugc_I) + 0.00306748466257669*alloc(2481,sugc_I)
     
      + 0.00306748466257669*alloc(2482,sugc_I) + 0.00306748466257669*alloc(2483,sugc_I) + 0.00306748466257669*alloc(2520,sugc_I) + 0.00306748466257669*alloc(2521,sugc_I) + 0.00306748466257669*alloc(2522,sugc_I) + 0.00306748466257669*alloc(2523,sugc_I)
     
      + 0.00306748466257669*alloc(2559,sugc_I) + 0.00306748466257669*alloc(2560,sugc_I) + 0.00306748466257669*alloc(2561,sugc_I) + 0.00306748466257669*alloc(2562,sugc_I) + 0.00306748466257669*alloc(2563,sugc_I) + 0.00306748466257669*alloc(2598,sugc_I)
     
      + 0.00306748466257669*alloc(2599,sugc_I) + 0.00306748466257669*alloc(2600,sugc_I) + 0.00306748466257669*alloc(2601,sugc_I) + 0.00306748466257669*alloc(2637,sugc_I) + 0.00306748466257669*alloc(2638,sugc_I) + 0.00306748466257669*alloc(2639,sugc_I)
     
      + 0.00306748466257669*alloc(2640,sugc_I) + 0.00306748466257669*alloc(2676,sugc_I) + 0.00306748466257669*alloc(2677,sugc_I) + 0.00306748466257669*alloc(2678,sugc_I) + 0.00306748466257669*alloc(2679,sugc_I) + 0.00306748466257669*alloc(2715,sugc_I)
     
      + 0.00306748466257669*alloc(2716,sugc_I) + 0.00306748466257669*alloc(2717,sugc_I) + 0.00306748466257669*alloc(2754,sugc_I) + 0.00306748466257669*alloc(2755,sugc_I) + 0.00306748466257669*alloc(2756,sugc_I) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
sum_one(whea_I)..  0.00306748466257669*alloc(1454,whea_I) + 0.00306748466257669*alloc(1460,whea_I) + 0.00306748466257669*alloc(1461,whea_I) + 0.00306748466257669*alloc(1490,whea_I) + 0.00306748466257669*alloc(1492,whea_I)
     
      + 0.00306748466257669*alloc(1493,whea_I) + 0.00306748466257669*alloc(1500,whea_I) + 0.00306748466257669*alloc(1527,whea_I) + 0.00306748466257669*alloc(1530,whea_I) + 0.00306748466257669*alloc(1531,whea_I) + 0.00306748466257669*alloc(1532,whea_I)
     
      + 0.00306748466257669*alloc(1539,whea_I) + 0.00306748466257669*alloc(1565,whea_I) + 0.00306748466257669*alloc(1569,whea_I) + 0.00306748466257669*alloc(1570,whea_I) + 0.00306748466257669*alloc(1571,whea_I) + 0.00306748466257669*alloc(1572,whea_I)
     
      + 0.00306748466257669*alloc(1578,whea_I) + 0.00306748466257669*alloc(1579,whea_I) + 0.00306748466257669*alloc(1603,whea_I) + 0.00306748466257669*alloc(1604,whea_I) + 0.00306748466257669*alloc(1608,whea_I) + 0.00306748466257669*alloc(1609,whea_I)
     
      + 0.00306748466257669*alloc(1610,whea_I) + 0.00306748466257669*alloc(1611,whea_I) + 0.00306748466257669*alloc(1612,whea_I) + 0.00306748466257669*alloc(1618,whea_I) + 0.00306748466257669*alloc(1647,whea_I) + 0.00306748466257669*alloc(1648,whea_I)
     
      + 0.00306748466257669*alloc(1649,whea_I) + 0.00306748466257669*alloc(1650,whea_I) + 0.00306748466257669*alloc(1651,whea_I) + 0.00306748466257669*alloc(1652,whea_I) + 0.00306748466257669*alloc(1653,whea_I) + 0.00306748466257669*alloc(1654,whea_I)
     
      + 0.00306748466257669*alloc(1657,whea_I) + 0.00306748466257669*alloc(1686,whea_I) + 0.00306748466257669*alloc(1687,whea_I) + 0.00306748466257669*alloc(1688,whea_I) + 0.00306748466257669*alloc(1689,whea_I) + 0.00306748466257669*alloc(1690,whea_I)
     
      + 0.00306748466257669*alloc(1691,whea_I) + 0.00306748466257669*alloc(1692,whea_I) + 0.00306748466257669*alloc(1693,whea_I) + 0.00306748466257669*alloc(1697,whea_I) + 0.00306748466257669*alloc(1725,whea_I) + 0.00306748466257669*alloc(1726,whea_I)
     
      + 0.00306748466257669*alloc(1727,whea_I) + 0.00306748466257669*alloc(1728,whea_I) + 0.00306748466257669*alloc(1729,whea_I) + 0.00306748466257669*alloc(1730,whea_I) + 0.00306748466257669*alloc(1731,whea_I) + 0.00306748466257669*alloc(1732,whea_I)
     
      + 0.00306748466257669*alloc(1735,whea_I) + 0.00306748466257669*alloc(1736,whea_I) + 0.00306748466257669*alloc(1764,whea_I) + 0.00306748466257669*alloc(1765,whea_I) + 0.00306748466257669*alloc(1766,whea_I) + 0.00306748466257669*alloc(1767,whea_I)
     
      + 0.00306748466257669*alloc(1768,whea_I) + 0.00306748466257669*alloc(1769,whea_I) + 0.00306748466257669*alloc(1770,whea_I) + 0.00306748466257669*alloc(1771,whea_I) + 0.00306748466257669*alloc(1774,whea_I) + 0.00306748466257669*alloc(1775,whea_I)
     
      + 0.00306748466257669*alloc(1805,whea_I) + 0.00306748466257669*alloc(1806,whea_I) + 0.00306748466257669*alloc(1807,whea_I) + 0.00306748466257669*alloc(1808,whea_I) + 0.00306748466257669*alloc(1809,whea_I) + 0.00306748466257669*alloc(1810,whea_I)
     
      + 0.00306748466257669*alloc(1811,whea_I) + 0.00306748466257669*alloc(1839,whea_I) + 0.00306748466257669*alloc(1842,whea_I) + 0.00306748466257669*alloc(1845,whea_I) + 0.00306748466257669*alloc(1846,whea_I) + 0.00306748466257669*alloc(1847,whea_I)
     
      + 0.00306748466257669*alloc(1848,whea_I) + 0.00306748466257669*alloc(1849,whea_I) + 0.00306748466257669*alloc(1850,whea_I) + 0.00306748466257669*alloc(1851,whea_I) + 0.00306748466257669*alloc(1853,whea_I) + 0.00306748466257669*alloc(1876,whea_I)
     
      + 0.00306748466257669*alloc(1879,whea_I) + 0.00306748466257669*alloc(1880,whea_I) + 0.00306748466257669*alloc(1881,whea_I) + 0.00306748466257669*alloc(1882,whea_I) + 0.00306748466257669*alloc(1883,whea_I) + 0.00306748466257669*alloc(1884,whea_I)
     
      + 0.00306748466257669*alloc(1885,whea_I) + 0.00306748466257669*alloc(1886,whea_I) + 0.00306748466257669*alloc(1887,whea_I) + 0.00306748466257669*alloc(1888,whea_I) + 0.00306748466257669*alloc(1889,whea_I) + 0.00306748466257669*alloc(1890,whea_I)
     
      + 0.00306748466257669*alloc(1891,whea_I) + 0.00306748466257669*alloc(1915,whea_I) + 0.00306748466257669*alloc(1918,whea_I) + 0.00306748466257669*alloc(1919,whea_I) + 0.00306748466257669*alloc(1920,whea_I) + 0.00306748466257669*alloc(1921,whea_I)
     
      + 0.00306748466257669*alloc(1922,whea_I) + 0.00306748466257669*alloc(1923,whea_I) + 0.00306748466257669*alloc(1924,whea_I) + 0.00306748466257669*alloc(1925,whea_I) + 0.00306748466257669*alloc(1926,whea_I) + 0.00306748466257669*alloc(1927,whea_I)
     
      + 0.00306748466257669*alloc(1928,whea_I) + 0.00306748466257669*alloc(1929,whea_I) + 0.00306748466257669*alloc(1930,whea_I) + 0.00306748466257669*alloc(1931,whea_I) + 0.00306748466257669*alloc(1953,whea_I) + 0.00306748466257669*alloc(1954,whea_I)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 288
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(1955,whea_I) + 0.00306748466257669*alloc(1956,whea_I) + 0.00306748466257669*alloc(1957,whea_I) + 0.00306748466257669*alloc(1958,whea_I) + 0.00306748466257669*alloc(1959,whea_I) + 0.00306748466257669*alloc(1960,whea_I)
     
      + 0.00306748466257669*alloc(1961,whea_I) + 0.00306748466257669*alloc(1962,whea_I) + 0.00306748466257669*alloc(1963,whea_I) + 0.00306748466257669*alloc(1964,whea_I) + 0.00306748466257669*alloc(1965,whea_I) + 0.00306748466257669*alloc(1966,whea_I)
     
      + 0.00306748466257669*alloc(1967,whea_I) + 0.00306748466257669*alloc(1968,whea_I) + 0.00306748466257669*alloc(1969,whea_I) + 0.00306748466257669*alloc(1970,whea_I) + 0.00306748466257669*alloc(1971,whea_I) + 0.00306748466257669*alloc(1990,whea_I)
     
      + 0.00306748466257669*alloc(1992,whea_I) + 0.00306748466257669*alloc(1993,whea_I) + 0.00306748466257669*alloc(1994,whea_I) + 0.00306748466257669*alloc(1996,whea_I) + 0.00306748466257669*alloc(1997,whea_I) + 0.00306748466257669*alloc(1998,whea_I)
     
      + 0.00306748466257669*alloc(1999,whea_I) + 0.00306748466257669*alloc(2000,whea_I) + 0.00306748466257669*alloc(2001,whea_I) + 0.00306748466257669*alloc(2002,whea_I) + 0.00306748466257669*alloc(2003,whea_I) + 0.00306748466257669*alloc(2004,whea_I)
     
      + 0.00306748466257669*alloc(2005,whea_I) + 0.00306748466257669*alloc(2006,whea_I) + 0.00306748466257669*alloc(2007,whea_I) + 0.00306748466257669*alloc(2008,whea_I) + 0.00306748466257669*alloc(2009,whea_I) + 0.00306748466257669*alloc(2010,whea_I)
     
      + 0.00306748466257669*alloc(2011,whea_I) + 0.00306748466257669*alloc(2032,whea_I) + 0.00306748466257669*alloc(2033,whea_I) + 0.00306748466257669*alloc(2034,whea_I) + 0.00306748466257669*alloc(2035,whea_I) + 0.00306748466257669*alloc(2036,whea_I)
     
      + 0.00306748466257669*alloc(2037,whea_I) + 0.00306748466257669*alloc(2038,whea_I) + 0.00306748466257669*alloc(2039,whea_I) + 0.00306748466257669*alloc(2040,whea_I) + 0.00306748466257669*alloc(2041,whea_I) + 0.00306748466257669*alloc(2042,whea_I)
     
      + 0.00306748466257669*alloc(2043,whea_I) + 0.00306748466257669*alloc(2044,whea_I) + 0.00306748466257669*alloc(2045,whea_I) + 0.00306748466257669*alloc(2046,whea_I) + 0.00306748466257669*alloc(2047,whea_I) + 0.00306748466257669*alloc(2049,whea_I)
     
      + 0.00306748466257669*alloc(2050,whea_I) + 0.00306748466257669*alloc(2051,whea_I) + 0.00306748466257669*alloc(2072,whea_I) + 0.00306748466257669*alloc(2073,whea_I) + 0.00306748466257669*alloc(2074,whea_I) + 0.00306748466257669*alloc(2075,whea_I)
     
      + 0.00306748466257669*alloc(2076,whea_I) + 0.00306748466257669*alloc(2077,whea_I) + 0.00306748466257669*alloc(2078,whea_I) + 0.00306748466257669*alloc(2079,whea_I) + 0.00306748466257669*alloc(2080,whea_I) + 0.00306748466257669*alloc(2081,whea_I)
     
      + 0.00306748466257669*alloc(2082,whea_I) + 0.00306748466257669*alloc(2083,whea_I) + 0.00306748466257669*alloc(2084,whea_I) + 0.00306748466257669*alloc(2085,whea_I) + 0.00306748466257669*alloc(2086,whea_I) + 0.00306748466257669*alloc(2088,whea_I)
     
      + 0.00306748466257669*alloc(2089,whea_I) + 0.00306748466257669*alloc(2090,whea_I) + 0.00306748466257669*alloc(2110,whea_I) + 0.00306748466257669*alloc(2111,whea_I) + 0.00306748466257669*alloc(2112,whea_I) + 0.00306748466257669*alloc(2114,whea_I)
     
      + 0.00306748466257669*alloc(2115,whea_I) + 0.00306748466257669*alloc(2116,whea_I) + 0.00306748466257669*alloc(2117,whea_I) + 0.00306748466257669*alloc(2118,whea_I) + 0.00306748466257669*alloc(2119,whea_I) + 0.00306748466257669*alloc(2120,whea_I)
     
      + 0.00306748466257669*alloc(2121,whea_I) + 0.00306748466257669*alloc(2122,whea_I) + 0.00306748466257669*alloc(2123,whea_I) + 0.00306748466257669*alloc(2124,whea_I) + 0.00306748466257669*alloc(2127,whea_I) + 0.00306748466257669*alloc(2150,whea_I)
     
      + 0.00306748466257669*alloc(2151,whea_I) + 0.00306748466257669*alloc(2152,whea_I) + 0.00306748466257669*alloc(2153,whea_I) + 0.00306748466257669*alloc(2154,whea_I) + 0.00306748466257669*alloc(2155,whea_I) + 0.00306748466257669*alloc(2156,whea_I)
     
      + 0.00306748466257669*alloc(2157,whea_I) + 0.00306748466257669*alloc(2158,whea_I) + 0.00306748466257669*alloc(2159,whea_I) + 0.00306748466257669*alloc(2160,whea_I) + 0.00306748466257669*alloc(2161,whea_I) + 0.00306748466257669*alloc(2162,whea_I)
     
      + 0.00306748466257669*alloc(2163,whea_I) + 0.00306748466257669*alloc(2164,whea_I) + 0.00306748466257669*alloc(2165,whea_I) + 0.00306748466257669*alloc(2166,whea_I) + 0.00306748466257669*alloc(2167,whea_I) + 0.00306748466257669*alloc(2189,whea_I)
     
      + 0.00306748466257669*alloc(2193,whea_I) + 0.00306748466257669*alloc(2194,whea_I) + 0.00306748466257669*alloc(2195,whea_I) + 0.00306748466257669*alloc(2196,whea_I) + 0.00306748466257669*alloc(2197,whea_I) + 0.00306748466257669*alloc(2198,whea_I)
     
      + 0.00306748466257669*alloc(2200,whea_I) + 0.00306748466257669*alloc(2201,whea_I) + 0.00306748466257669*alloc(2202,whea_I) + 0.00306748466257669*alloc(2203,whea_I) + 0.00306748466257669*alloc(2204,whea_I) + 0.00306748466257669*alloc(2206,whea_I)
     
      + 0.00306748466257669*alloc(2232,whea_I) + 0.00306748466257669*alloc(2233,whea_I) + 0.00306748466257669*alloc(2234,whea_I) + 0.00306748466257669*alloc(2235,whea_I) + 0.00306748466257669*alloc(2236,whea_I) + 0.00306748466257669*alloc(2237,whea_I)
     
      + 0.00306748466257669*alloc(2238,whea_I) + 0.00306748466257669*alloc(2239,whea_I) + 0.00306748466257669*alloc(2240,whea_I) + 0.00306748466257669*alloc(2241,whea_I) + 0.00306748466257669*alloc(2242,whea_I) + 0.00306748466257669*alloc(2243,whea_I)
     
      + 0.00306748466257669*alloc(2244,whea_I) + 0.00306748466257669*alloc(2271,whea_I) + 0.00306748466257669*alloc(2274,whea_I) + 0.00306748466257669*alloc(2275,whea_I) + 0.00306748466257669*alloc(2276,whea_I) + 0.00306748466257669*alloc(2277,whea_I)
     
      + 0.00306748466257669*alloc(2278,whea_I) + 0.00306748466257669*alloc(2281,whea_I) + 0.00306748466257669*alloc(2282,whea_I) + 0.00306748466257669*alloc(2283,whea_I) + 0.00306748466257669*alloc(2284,whea_I) + 0.00306748466257669*alloc(2313,whea_I)
     
      + 0.00306748466257669*alloc(2314,whea_I) + 0.00306748466257669*alloc(2315,whea_I) + 0.00306748466257669*alloc(2316,whea_I) + 0.00306748466257669*alloc(2317,whea_I) + 0.00306748466257669*alloc(2318,whea_I) + 0.00306748466257669*alloc(2319,whea_I)
     
      + 0.00306748466257669*alloc(2320,whea_I) + 0.00306748466257669*alloc(2321,whea_I) + 0.00306748466257669*alloc(2322,whea_I) + 0.00306748466257669*alloc(2323,whea_I) + 0.00306748466257669*alloc(2324,whea_I) + 0.00306748466257669*alloc(2325,whea_I)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 289
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(2352,whea_I) + 0.00306748466257669*alloc(2353,whea_I) + 0.00306748466257669*alloc(2354,whea_I) + 0.00306748466257669*alloc(2355,whea_I) + 0.00306748466257669*alloc(2356,whea_I) + 0.00306748466257669*alloc(2357,whea_I)
     
      + 0.00306748466257669*alloc(2358,whea_I) + 0.00306748466257669*alloc(2359,whea_I) + 0.00306748466257669*alloc(2361,whea_I) + 0.00306748466257669*alloc(2362,whea_I) + 0.00306748466257669*alloc(2363,whea_I) + 0.00306748466257669*alloc(2364,whea_I)
     
      + 0.00306748466257669*alloc(2365,whea_I) + 0.00306748466257669*alloc(2393,whea_I) + 0.00306748466257669*alloc(2395,whea_I) + 0.00306748466257669*alloc(2396,whea_I) + 0.00306748466257669*alloc(2401,whea_I) + 0.00306748466257669*alloc(2402,whea_I)
     
      + 0.00306748466257669*alloc(2403,whea_I) + 0.00306748466257669*alloc(2404,whea_I) + 0.00306748466257669*alloc(2441,whea_I) + 0.00306748466257669*alloc(2442,whea_I) + 0.00306748466257669*alloc(2443,whea_I) + 0.00306748466257669*alloc(2481,whea_I)
     
      + 0.00306748466257669*alloc(2482,whea_I) + 0.00306748466257669*alloc(2483,whea_I) + 0.00306748466257669*alloc(2520,whea_I) + 0.00306748466257669*alloc(2521,whea_I) + 0.00306748466257669*alloc(2522,whea_I) + 0.00306748466257669*alloc(2523,whea_I)
     
      + 0.00306748466257669*alloc(2559,whea_I) + 0.00306748466257669*alloc(2560,whea_I) + 0.00306748466257669*alloc(2561,whea_I) + 0.00306748466257669*alloc(2562,whea_I) + 0.00306748466257669*alloc(2563,whea_I) + 0.00306748466257669*alloc(2598,whea_I)
     
      + 0.00306748466257669*alloc(2599,whea_I) + 0.00306748466257669*alloc(2600,whea_I) + 0.00306748466257669*alloc(2601,whea_I) + 0.00306748466257669*alloc(2637,whea_I) + 0.00306748466257669*alloc(2638,whea_I) + 0.00306748466257669*alloc(2639,whea_I)
     
      + 0.00306748466257669*alloc(2640,whea_I) + 0.00306748466257669*alloc(2676,whea_I) + 0.00306748466257669*alloc(2677,whea_I) + 0.00306748466257669*alloc(2678,whea_I) + 0.00306748466257669*alloc(2679,whea_I) + 0.00306748466257669*alloc(2715,whea_I)
     
      + 0.00306748466257669*alloc(2716,whea_I) + 0.00306748466257669*alloc(2717,whea_I) + 0.00306748466257669*alloc(2754,whea_I) + 0.00306748466257669*alloc(2755,whea_I) + 0.00306748466257669*alloc(2756,whea_I) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
sum_one(bean_H)..  0.00306748466257669*alloc(1454,bean_H) + 0.00306748466257669*alloc(1460,bean_H) + 0.00306748466257669*alloc(1461,bean_H) + 0.00306748466257669*alloc(1490,bean_H) + 0.00306748466257669*alloc(1492,bean_H)
     
      + 0.00306748466257669*alloc(1493,bean_H) + 0.00306748466257669*alloc(1500,bean_H) + 0.00306748466257669*alloc(1527,bean_H) + 0.00306748466257669*alloc(1530,bean_H) + 0.00306748466257669*alloc(1531,bean_H) + 0.00306748466257669*alloc(1532,bean_H)
     
      + 0.00306748466257669*alloc(1539,bean_H) + 0.00306748466257669*alloc(1565,bean_H) + 0.00306748466257669*alloc(1569,bean_H) + 0.00306748466257669*alloc(1570,bean_H) + 0.00306748466257669*alloc(1571,bean_H) + 0.00306748466257669*alloc(1572,bean_H)
     
      + 0.00306748466257669*alloc(1578,bean_H) + 0.00306748466257669*alloc(1579,bean_H) + 0.00306748466257669*alloc(1603,bean_H) + 0.00306748466257669*alloc(1604,bean_H) + 0.00306748466257669*alloc(1608,bean_H) + 0.00306748466257669*alloc(1609,bean_H)
     
      + 0.00306748466257669*alloc(1610,bean_H) + 0.00306748466257669*alloc(1611,bean_H) + 0.00306748466257669*alloc(1612,bean_H) + 0.00306748466257669*alloc(1618,bean_H) + 0.00306748466257669*alloc(1647,bean_H) + 0.00306748466257669*alloc(1648,bean_H)
     
      + 0.00306748466257669*alloc(1649,bean_H) + 0.00306748466257669*alloc(1650,bean_H) + 0.00306748466257669*alloc(1651,bean_H) + 0.00306748466257669*alloc(1652,bean_H) + 0.00306748466257669*alloc(1653,bean_H) + 0.00306748466257669*alloc(1654,bean_H)
     
      + 0.00306748466257669*alloc(1657,bean_H) + 0.00306748466257669*alloc(1686,bean_H) + 0.00306748466257669*alloc(1687,bean_H) + 0.00306748466257669*alloc(1688,bean_H) + 0.00306748466257669*alloc(1689,bean_H) + 0.00306748466257669*alloc(1690,bean_H)
     
      + 0.00306748466257669*alloc(1691,bean_H) + 0.00306748466257669*alloc(1692,bean_H) + 0.00306748466257669*alloc(1693,bean_H) + 0.00306748466257669*alloc(1697,bean_H) + 0.00306748466257669*alloc(1725,bean_H) + 0.00306748466257669*alloc(1726,bean_H)
     
      + 0.00306748466257669*alloc(1727,bean_H) + 0.00306748466257669*alloc(1728,bean_H) + 0.00306748466257669*alloc(1729,bean_H) + 0.00306748466257669*alloc(1730,bean_H) + 0.00306748466257669*alloc(1731,bean_H) + 0.00306748466257669*alloc(1732,bean_H)
     
      + 0.00306748466257669*alloc(1735,bean_H) + 0.00306748466257669*alloc(1736,bean_H) + 0.00306748466257669*alloc(1764,bean_H) + 0.00306748466257669*alloc(1765,bean_H) + 0.00306748466257669*alloc(1766,bean_H) + 0.00306748466257669*alloc(1767,bean_H)
     
      + 0.00306748466257669*alloc(1768,bean_H) + 0.00306748466257669*alloc(1769,bean_H) + 0.00306748466257669*alloc(1770,bean_H) + 0.00306748466257669*alloc(1771,bean_H) + 0.00306748466257669*alloc(1774,bean_H) + 0.00306748466257669*alloc(1775,bean_H)
     
      + 0.00306748466257669*alloc(1805,bean_H) + 0.00306748466257669*alloc(1806,bean_H) + 0.00306748466257669*alloc(1807,bean_H) + 0.00306748466257669*alloc(1808,bean_H) + 0.00306748466257669*alloc(1809,bean_H) + 0.00306748466257669*alloc(1810,bean_H)
     
      + 0.00306748466257669*alloc(1811,bean_H) + 0.00306748466257669*alloc(1839,bean_H) + 0.00306748466257669*alloc(1842,bean_H) + 0.00306748466257669*alloc(1845,bean_H) + 0.00306748466257669*alloc(1846,bean_H) + 0.00306748466257669*alloc(1847,bean_H)
     
      + 0.00306748466257669*alloc(1848,bean_H) + 0.00306748466257669*alloc(1849,bean_H) + 0.00306748466257669*alloc(1850,bean_H) + 0.00306748466257669*alloc(1851,bean_H) + 0.00306748466257669*alloc(1853,bean_H) + 0.00306748466257669*alloc(1876,bean_H)
     
      + 0.00306748466257669*alloc(1879,bean_H) + 0.00306748466257669*alloc(1880,bean_H) + 0.00306748466257669*alloc(1881,bean_H) + 0.00306748466257669*alloc(1882,bean_H) + 0.00306748466257669*alloc(1883,bean_H) + 0.00306748466257669*alloc(1884,bean_H)
     
      + 0.00306748466257669*alloc(1885,bean_H) + 0.00306748466257669*alloc(1886,bean_H) + 0.00306748466257669*alloc(1887,bean_H) + 0.00306748466257669*alloc(1888,bean_H) + 0.00306748466257669*alloc(1889,bean_H) + 0.00306748466257669*alloc(1890,bean_H)
     
      + 0.00306748466257669*alloc(1891,bean_H) + 0.00306748466257669*alloc(1915,bean_H) + 0.00306748466257669*alloc(1918,bean_H) + 0.00306748466257669*alloc(1919,bean_H) + 0.00306748466257669*alloc(1920,bean_H) + 0.00306748466257669*alloc(1921,bean_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 290
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(1922,bean_H) + 0.00306748466257669*alloc(1923,bean_H) + 0.00306748466257669*alloc(1924,bean_H) + 0.00306748466257669*alloc(1925,bean_H) + 0.00306748466257669*alloc(1926,bean_H) + 0.00306748466257669*alloc(1927,bean_H)
     
      + 0.00306748466257669*alloc(1928,bean_H) + 0.00306748466257669*alloc(1929,bean_H) + 0.00306748466257669*alloc(1930,bean_H) + 0.00306748466257669*alloc(1931,bean_H) + 0.00306748466257669*alloc(1953,bean_H) + 0.00306748466257669*alloc(1954,bean_H)
     
      + 0.00306748466257669*alloc(1955,bean_H) + 0.00306748466257669*alloc(1956,bean_H) + 0.00306748466257669*alloc(1957,bean_H) + 0.00306748466257669*alloc(1958,bean_H) + 0.00306748466257669*alloc(1959,bean_H) + 0.00306748466257669*alloc(1960,bean_H)
     
      + 0.00306748466257669*alloc(1961,bean_H) + 0.00306748466257669*alloc(1962,bean_H) + 0.00306748466257669*alloc(1963,bean_H) + 0.00306748466257669*alloc(1964,bean_H) + 0.00306748466257669*alloc(1965,bean_H) + 0.00306748466257669*alloc(1966,bean_H)
     
      + 0.00306748466257669*alloc(1967,bean_H) + 0.00306748466257669*alloc(1968,bean_H) + 0.00306748466257669*alloc(1969,bean_H) + 0.00306748466257669*alloc(1970,bean_H) + 0.00306748466257669*alloc(1971,bean_H) + 0.00306748466257669*alloc(1990,bean_H)
     
      + 0.00306748466257669*alloc(1992,bean_H) + 0.00306748466257669*alloc(1993,bean_H) + 0.00306748466257669*alloc(1994,bean_H) + 0.00306748466257669*alloc(1996,bean_H) + 0.00306748466257669*alloc(1997,bean_H) + 0.00306748466257669*alloc(1998,bean_H)
     
      + 0.00306748466257669*alloc(1999,bean_H) + 0.00306748466257669*alloc(2000,bean_H) + 0.00306748466257669*alloc(2001,bean_H) + 0.00306748466257669*alloc(2002,bean_H) + 0.00306748466257669*alloc(2003,bean_H) + 0.00306748466257669*alloc(2004,bean_H)
     
      + 0.00306748466257669*alloc(2005,bean_H) + 0.00306748466257669*alloc(2006,bean_H) + 0.00306748466257669*alloc(2007,bean_H) + 0.00306748466257669*alloc(2008,bean_H) + 0.00306748466257669*alloc(2009,bean_H) + 0.00306748466257669*alloc(2010,bean_H)
     
      + 0.00306748466257669*alloc(2011,bean_H) + 0.00306748466257669*alloc(2032,bean_H) + 0.00306748466257669*alloc(2033,bean_H) + 0.00306748466257669*alloc(2034,bean_H) + 0.00306748466257669*alloc(2035,bean_H) + 0.00306748466257669*alloc(2036,bean_H)
     
      + 0.00306748466257669*alloc(2037,bean_H) + 0.00306748466257669*alloc(2038,bean_H) + 0.00306748466257669*alloc(2039,bean_H) + 0.00306748466257669*alloc(2040,bean_H) + 0.00306748466257669*alloc(2041,bean_H) + 0.00306748466257669*alloc(2042,bean_H)
     
      + 0.00306748466257669*alloc(2043,bean_H) + 0.00306748466257669*alloc(2044,bean_H) + 0.00306748466257669*alloc(2045,bean_H) + 0.00306748466257669*alloc(2046,bean_H) + 0.00306748466257669*alloc(2047,bean_H) + 0.00306748466257669*alloc(2049,bean_H)
     
      + 0.00306748466257669*alloc(2050,bean_H) + 0.00306748466257669*alloc(2051,bean_H) + 0.00306748466257669*alloc(2072,bean_H) + 0.00306748466257669*alloc(2073,bean_H) + 0.00306748466257669*alloc(2074,bean_H) + 0.00306748466257669*alloc(2075,bean_H)
     
      + 0.00306748466257669*alloc(2076,bean_H) + 0.00306748466257669*alloc(2077,bean_H) + 0.00306748466257669*alloc(2078,bean_H) + 0.00306748466257669*alloc(2079,bean_H) + 0.00306748466257669*alloc(2080,bean_H) + 0.00306748466257669*alloc(2081,bean_H)
     
      + 0.00306748466257669*alloc(2082,bean_H) + 0.00306748466257669*alloc(2083,bean_H) + 0.00306748466257669*alloc(2084,bean_H) + 0.00306748466257669*alloc(2085,bean_H) + 0.00306748466257669*alloc(2086,bean_H) + 0.00306748466257669*alloc(2088,bean_H)
     
      + 0.00306748466257669*alloc(2089,bean_H) + 0.00306748466257669*alloc(2090,bean_H) + 0.00306748466257669*alloc(2110,bean_H) + 0.00306748466257669*alloc(2111,bean_H) + 0.00306748466257669*alloc(2112,bean_H) + 0.00306748466257669*alloc(2114,bean_H)
     
      + 0.00306748466257669*alloc(2115,bean_H) + 0.00306748466257669*alloc(2116,bean_H) + 0.00306748466257669*alloc(2117,bean_H) + 0.00306748466257669*alloc(2118,bean_H) + 0.00306748466257669*alloc(2119,bean_H) + 0.00306748466257669*alloc(2120,bean_H)
     
      + 0.00306748466257669*alloc(2121,bean_H) + 0.00306748466257669*alloc(2122,bean_H) + 0.00306748466257669*alloc(2123,bean_H) + 0.00306748466257669*alloc(2124,bean_H) + 0.00306748466257669*alloc(2127,bean_H) + 0.00306748466257669*alloc(2150,bean_H)
     
      + 0.00306748466257669*alloc(2151,bean_H) + 0.00306748466257669*alloc(2152,bean_H) + 0.00306748466257669*alloc(2153,bean_H) + 0.00306748466257669*alloc(2154,bean_H) + 0.00306748466257669*alloc(2155,bean_H) + 0.00306748466257669*alloc(2156,bean_H)
     
      + 0.00306748466257669*alloc(2157,bean_H) + 0.00306748466257669*alloc(2158,bean_H) + 0.00306748466257669*alloc(2159,bean_H) + 0.00306748466257669*alloc(2160,bean_H) + 0.00306748466257669*alloc(2161,bean_H) + 0.00306748466257669*alloc(2162,bean_H)
     
      + 0.00306748466257669*alloc(2163,bean_H) + 0.00306748466257669*alloc(2164,bean_H) + 0.00306748466257669*alloc(2165,bean_H) + 0.00306748466257669*alloc(2166,bean_H) + 0.00306748466257669*alloc(2167,bean_H) + 0.00306748466257669*alloc(2189,bean_H)
     
      + 0.00306748466257669*alloc(2193,bean_H) + 0.00306748466257669*alloc(2194,bean_H) + 0.00306748466257669*alloc(2195,bean_H) + 0.00306748466257669*alloc(2196,bean_H) + 0.00306748466257669*alloc(2197,bean_H) + 0.00306748466257669*alloc(2198,bean_H)
     
      + 0.00306748466257669*alloc(2200,bean_H) + 0.00306748466257669*alloc(2201,bean_H) + 0.00306748466257669*alloc(2202,bean_H) + 0.00306748466257669*alloc(2203,bean_H) + 0.00306748466257669*alloc(2204,bean_H) + 0.00306748466257669*alloc(2206,bean_H)
     
      + 0.00306748466257669*alloc(2232,bean_H) + 0.00306748466257669*alloc(2233,bean_H) + 0.00306748466257669*alloc(2234,bean_H) + 0.00306748466257669*alloc(2235,bean_H) + 0.00306748466257669*alloc(2236,bean_H) + 0.00306748466257669*alloc(2237,bean_H)
     
      + 0.00306748466257669*alloc(2238,bean_H) + 0.00306748466257669*alloc(2239,bean_H) + 0.00306748466257669*alloc(2240,bean_H) + 0.00306748466257669*alloc(2241,bean_H) + 0.00306748466257669*alloc(2242,bean_H) + 0.00306748466257669*alloc(2243,bean_H)
     
      + 0.00306748466257669*alloc(2244,bean_H) + 0.00306748466257669*alloc(2271,bean_H) + 0.00306748466257669*alloc(2274,bean_H) + 0.00306748466257669*alloc(2275,bean_H) + 0.00306748466257669*alloc(2276,bean_H) + 0.00306748466257669*alloc(2277,bean_H)
     
      + 0.00306748466257669*alloc(2278,bean_H) + 0.00306748466257669*alloc(2281,bean_H) + 0.00306748466257669*alloc(2282,bean_H) + 0.00306748466257669*alloc(2283,bean_H) + 0.00306748466257669*alloc(2284,bean_H) + 0.00306748466257669*alloc(2313,bean_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 291
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(2314,bean_H) + 0.00306748466257669*alloc(2315,bean_H) + 0.00306748466257669*alloc(2316,bean_H) + 0.00306748466257669*alloc(2317,bean_H) + 0.00306748466257669*alloc(2318,bean_H) + 0.00306748466257669*alloc(2319,bean_H)
     
      + 0.00306748466257669*alloc(2320,bean_H) + 0.00306748466257669*alloc(2321,bean_H) + 0.00306748466257669*alloc(2322,bean_H) + 0.00306748466257669*alloc(2323,bean_H) + 0.00306748466257669*alloc(2324,bean_H) + 0.00306748466257669*alloc(2325,bean_H)
     
      + 0.00306748466257669*alloc(2352,bean_H) + 0.00306748466257669*alloc(2353,bean_H) + 0.00306748466257669*alloc(2354,bean_H) + 0.00306748466257669*alloc(2355,bean_H) + 0.00306748466257669*alloc(2356,bean_H) + 0.00306748466257669*alloc(2357,bean_H)
     
      + 0.00306748466257669*alloc(2358,bean_H) + 0.00306748466257669*alloc(2359,bean_H) + 0.00306748466257669*alloc(2361,bean_H) + 0.00306748466257669*alloc(2362,bean_H) + 0.00306748466257669*alloc(2363,bean_H) + 0.00306748466257669*alloc(2364,bean_H)
     
      + 0.00306748466257669*alloc(2365,bean_H) + 0.00306748466257669*alloc(2393,bean_H) + 0.00306748466257669*alloc(2395,bean_H) + 0.00306748466257669*alloc(2396,bean_H) + 0.00306748466257669*alloc(2401,bean_H) + 0.00306748466257669*alloc(2402,bean_H)
     
      + 0.00306748466257669*alloc(2403,bean_H) + 0.00306748466257669*alloc(2404,bean_H) + 0.00306748466257669*alloc(2441,bean_H) + 0.00306748466257669*alloc(2442,bean_H) + 0.00306748466257669*alloc(2443,bean_H) + 0.00306748466257669*alloc(2481,bean_H)
     
      + 0.00306748466257669*alloc(2482,bean_H) + 0.00306748466257669*alloc(2483,bean_H) + 0.00306748466257669*alloc(2520,bean_H) + 0.00306748466257669*alloc(2521,bean_H) + 0.00306748466257669*alloc(2522,bean_H) + 0.00306748466257669*alloc(2523,bean_H)
     
      + 0.00306748466257669*alloc(2559,bean_H) + 0.00306748466257669*alloc(2560,bean_H) + 0.00306748466257669*alloc(2561,bean_H) + 0.00306748466257669*alloc(2562,bean_H) + 0.00306748466257669*alloc(2563,bean_H) + 0.00306748466257669*alloc(2598,bean_H)
     
      + 0.00306748466257669*alloc(2599,bean_H) + 0.00306748466257669*alloc(2600,bean_H) + 0.00306748466257669*alloc(2601,bean_H) + 0.00306748466257669*alloc(2637,bean_H) + 0.00306748466257669*alloc(2638,bean_H) + 0.00306748466257669*alloc(2639,bean_H)
     
      + 0.00306748466257669*alloc(2640,bean_H) + 0.00306748466257669*alloc(2676,bean_H) + 0.00306748466257669*alloc(2677,bean_H) + 0.00306748466257669*alloc(2678,bean_H) + 0.00306748466257669*alloc(2679,bean_H) + 0.00306748466257669*alloc(2715,bean_H)
     
      + 0.00306748466257669*alloc(2716,bean_H) + 0.00306748466257669*alloc(2717,bean_H) + 0.00306748466257669*alloc(2754,bean_H) + 0.00306748466257669*alloc(2755,bean_H) + 0.00306748466257669*alloc(2756,bean_H) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
sum_one(bean_L)..  0.00306748466257669*alloc(1454,bean_L) + 0.00306748466257669*alloc(1460,bean_L) + 0.00306748466257669*alloc(1461,bean_L) + 0.00306748466257669*alloc(1490,bean_L) + 0.00306748466257669*alloc(1492,bean_L)
     
      + 0.00306748466257669*alloc(1493,bean_L) + 0.00306748466257669*alloc(1500,bean_L) + 0.00306748466257669*alloc(1527,bean_L) + 0.00306748466257669*alloc(1530,bean_L) + 0.00306748466257669*alloc(1531,bean_L) + 0.00306748466257669*alloc(1532,bean_L)
     
      + 0.00306748466257669*alloc(1539,bean_L) + 0.00306748466257669*alloc(1565,bean_L) + 0.00306748466257669*alloc(1569,bean_L) + 0.00306748466257669*alloc(1570,bean_L) + 0.00306748466257669*alloc(1571,bean_L) + 0.00306748466257669*alloc(1572,bean_L)
     
      + 0.00306748466257669*alloc(1578,bean_L) + 0.00306748466257669*alloc(1579,bean_L) + 0.00306748466257669*alloc(1603,bean_L) + 0.00306748466257669*alloc(1604,bean_L) + 0.00306748466257669*alloc(1608,bean_L) + 0.00306748466257669*alloc(1609,bean_L)
     
      + 0.00306748466257669*alloc(1610,bean_L) + 0.00306748466257669*alloc(1611,bean_L) + 0.00306748466257669*alloc(1612,bean_L) + 0.00306748466257669*alloc(1618,bean_L) + 0.00306748466257669*alloc(1647,bean_L) + 0.00306748466257669*alloc(1648,bean_L)
     
      + 0.00306748466257669*alloc(1649,bean_L) + 0.00306748466257669*alloc(1650,bean_L) + 0.00306748466257669*alloc(1651,bean_L) + 0.00306748466257669*alloc(1652,bean_L) + 0.00306748466257669*alloc(1653,bean_L) + 0.00306748466257669*alloc(1654,bean_L)
     
      + 0.00306748466257669*alloc(1657,bean_L) + 0.00306748466257669*alloc(1686,bean_L) + 0.00306748466257669*alloc(1687,bean_L) + 0.00306748466257669*alloc(1688,bean_L) + 0.00306748466257669*alloc(1689,bean_L) + 0.00306748466257669*alloc(1690,bean_L)
     
      + 0.00306748466257669*alloc(1691,bean_L) + 0.00306748466257669*alloc(1692,bean_L) + 0.00306748466257669*alloc(1693,bean_L) + 0.00306748466257669*alloc(1697,bean_L) + 0.00306748466257669*alloc(1725,bean_L) + 0.00306748466257669*alloc(1726,bean_L)
     
      + 0.00306748466257669*alloc(1727,bean_L) + 0.00306748466257669*alloc(1728,bean_L) + 0.00306748466257669*alloc(1729,bean_L) + 0.00306748466257669*alloc(1730,bean_L) + 0.00306748466257669*alloc(1731,bean_L) + 0.00306748466257669*alloc(1732,bean_L)
     
      + 0.00306748466257669*alloc(1735,bean_L) + 0.00306748466257669*alloc(1736,bean_L) + 0.00306748466257669*alloc(1764,bean_L) + 0.00306748466257669*alloc(1765,bean_L) + 0.00306748466257669*alloc(1766,bean_L) + 0.00306748466257669*alloc(1767,bean_L)
     
      + 0.00306748466257669*alloc(1768,bean_L) + 0.00306748466257669*alloc(1769,bean_L) + 0.00306748466257669*alloc(1770,bean_L) + 0.00306748466257669*alloc(1771,bean_L) + 0.00306748466257669*alloc(1774,bean_L) + 0.00306748466257669*alloc(1775,bean_L)
     
      + 0.00306748466257669*alloc(1805,bean_L) + 0.00306748466257669*alloc(1806,bean_L) + 0.00306748466257669*alloc(1807,bean_L) + 0.00306748466257669*alloc(1808,bean_L) + 0.00306748466257669*alloc(1809,bean_L) + 0.00306748466257669*alloc(1810,bean_L)
     
      + 0.00306748466257669*alloc(1811,bean_L) + 0.00306748466257669*alloc(1839,bean_L) + 0.00306748466257669*alloc(1842,bean_L) + 0.00306748466257669*alloc(1845,bean_L) + 0.00306748466257669*alloc(1846,bean_L) + 0.00306748466257669*alloc(1847,bean_L)
     
      + 0.00306748466257669*alloc(1848,bean_L) + 0.00306748466257669*alloc(1849,bean_L) + 0.00306748466257669*alloc(1850,bean_L) + 0.00306748466257669*alloc(1851,bean_L) + 0.00306748466257669*alloc(1853,bean_L) + 0.00306748466257669*alloc(1876,bean_L)
     
      + 0.00306748466257669*alloc(1879,bean_L) + 0.00306748466257669*alloc(1880,bean_L) + 0.00306748466257669*alloc(1881,bean_L) + 0.00306748466257669*alloc(1882,bean_L) + 0.00306748466257669*alloc(1883,bean_L) + 0.00306748466257669*alloc(1884,bean_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 292
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(1885,bean_L) + 0.00306748466257669*alloc(1886,bean_L) + 0.00306748466257669*alloc(1887,bean_L) + 0.00306748466257669*alloc(1888,bean_L) + 0.00306748466257669*alloc(1889,bean_L) + 0.00306748466257669*alloc(1890,bean_L)
     
      + 0.00306748466257669*alloc(1891,bean_L) + 0.00306748466257669*alloc(1915,bean_L) + 0.00306748466257669*alloc(1918,bean_L) + 0.00306748466257669*alloc(1919,bean_L) + 0.00306748466257669*alloc(1920,bean_L) + 0.00306748466257669*alloc(1921,bean_L)
     
      + 0.00306748466257669*alloc(1922,bean_L) + 0.00306748466257669*alloc(1923,bean_L) + 0.00306748466257669*alloc(1924,bean_L) + 0.00306748466257669*alloc(1925,bean_L) + 0.00306748466257669*alloc(1926,bean_L) + 0.00306748466257669*alloc(1927,bean_L)
     
      + 0.00306748466257669*alloc(1928,bean_L) + 0.00306748466257669*alloc(1929,bean_L) + 0.00306748466257669*alloc(1930,bean_L) + 0.00306748466257669*alloc(1931,bean_L) + 0.00306748466257669*alloc(1953,bean_L) + 0.00306748466257669*alloc(1954,bean_L)
     
      + 0.00306748466257669*alloc(1955,bean_L) + 0.00306748466257669*alloc(1956,bean_L) + 0.00306748466257669*alloc(1957,bean_L) + 0.00306748466257669*alloc(1958,bean_L) + 0.00306748466257669*alloc(1959,bean_L) + 0.00306748466257669*alloc(1960,bean_L)
     
      + 0.00306748466257669*alloc(1961,bean_L) + 0.00306748466257669*alloc(1962,bean_L) + 0.00306748466257669*alloc(1963,bean_L) + 0.00306748466257669*alloc(1964,bean_L) + 0.00306748466257669*alloc(1965,bean_L) + 0.00306748466257669*alloc(1966,bean_L)
     
      + 0.00306748466257669*alloc(1967,bean_L) + 0.00306748466257669*alloc(1968,bean_L) + 0.00306748466257669*alloc(1969,bean_L) + 0.00306748466257669*alloc(1970,bean_L) + 0.00306748466257669*alloc(1971,bean_L) + 0.00306748466257669*alloc(1990,bean_L)
     
      + 0.00306748466257669*alloc(1992,bean_L) + 0.00306748466257669*alloc(1993,bean_L) + 0.00306748466257669*alloc(1994,bean_L) + 0.00306748466257669*alloc(1996,bean_L) + 0.00306748466257669*alloc(1997,bean_L) + 0.00306748466257669*alloc(1998,bean_L)
     
      + 0.00306748466257669*alloc(1999,bean_L) + 0.00306748466257669*alloc(2000,bean_L) + 0.00306748466257669*alloc(2001,bean_L) + 0.00306748466257669*alloc(2002,bean_L) + 0.00306748466257669*alloc(2003,bean_L) + 0.00306748466257669*alloc(2004,bean_L)
     
      + 0.00306748466257669*alloc(2005,bean_L) + 0.00306748466257669*alloc(2006,bean_L) + 0.00306748466257669*alloc(2007,bean_L) + 0.00306748466257669*alloc(2008,bean_L) + 0.00306748466257669*alloc(2009,bean_L) + 0.00306748466257669*alloc(2010,bean_L)
     
      + 0.00306748466257669*alloc(2011,bean_L) + 0.00306748466257669*alloc(2032,bean_L) + 0.00306748466257669*alloc(2033,bean_L) + 0.00306748466257669*alloc(2034,bean_L) + 0.00306748466257669*alloc(2035,bean_L) + 0.00306748466257669*alloc(2036,bean_L)
     
      + 0.00306748466257669*alloc(2037,bean_L) + 0.00306748466257669*alloc(2038,bean_L) + 0.00306748466257669*alloc(2039,bean_L) + 0.00306748466257669*alloc(2040,bean_L) + 0.00306748466257669*alloc(2041,bean_L) + 0.00306748466257669*alloc(2042,bean_L)
     
      + 0.00306748466257669*alloc(2043,bean_L) + 0.00306748466257669*alloc(2044,bean_L) + 0.00306748466257669*alloc(2045,bean_L) + 0.00306748466257669*alloc(2046,bean_L) + 0.00306748466257669*alloc(2047,bean_L) + 0.00306748466257669*alloc(2049,bean_L)
     
      + 0.00306748466257669*alloc(2050,bean_L) + 0.00306748466257669*alloc(2051,bean_L) + 0.00306748466257669*alloc(2072,bean_L) + 0.00306748466257669*alloc(2073,bean_L) + 0.00306748466257669*alloc(2074,bean_L) + 0.00306748466257669*alloc(2075,bean_L)
     
      + 0.00306748466257669*alloc(2076,bean_L) + 0.00306748466257669*alloc(2077,bean_L) + 0.00306748466257669*alloc(2078,bean_L) + 0.00306748466257669*alloc(2079,bean_L) + 0.00306748466257669*alloc(2080,bean_L) + 0.00306748466257669*alloc(2081,bean_L)
     
      + 0.00306748466257669*alloc(2082,bean_L) + 0.00306748466257669*alloc(2083,bean_L) + 0.00306748466257669*alloc(2084,bean_L) + 0.00306748466257669*alloc(2085,bean_L) + 0.00306748466257669*alloc(2086,bean_L) + 0.00306748466257669*alloc(2088,bean_L)
     
      + 0.00306748466257669*alloc(2089,bean_L) + 0.00306748466257669*alloc(2090,bean_L) + 0.00306748466257669*alloc(2110,bean_L) + 0.00306748466257669*alloc(2111,bean_L) + 0.00306748466257669*alloc(2112,bean_L) + 0.00306748466257669*alloc(2114,bean_L)
     
      + 0.00306748466257669*alloc(2115,bean_L) + 0.00306748466257669*alloc(2116,bean_L) + 0.00306748466257669*alloc(2117,bean_L) + 0.00306748466257669*alloc(2118,bean_L) + 0.00306748466257669*alloc(2119,bean_L) + 0.00306748466257669*alloc(2120,bean_L)
     
      + 0.00306748466257669*alloc(2121,bean_L) + 0.00306748466257669*alloc(2122,bean_L) + 0.00306748466257669*alloc(2123,bean_L) + 0.00306748466257669*alloc(2124,bean_L) + 0.00306748466257669*alloc(2127,bean_L) + 0.00306748466257669*alloc(2150,bean_L)
     
      + 0.00306748466257669*alloc(2151,bean_L) + 0.00306748466257669*alloc(2152,bean_L) + 0.00306748466257669*alloc(2153,bean_L) + 0.00306748466257669*alloc(2154,bean_L) + 0.00306748466257669*alloc(2155,bean_L) + 0.00306748466257669*alloc(2156,bean_L)
     
      + 0.00306748466257669*alloc(2157,bean_L) + 0.00306748466257669*alloc(2158,bean_L) + 0.00306748466257669*alloc(2159,bean_L) + 0.00306748466257669*alloc(2160,bean_L) + 0.00306748466257669*alloc(2161,bean_L) + 0.00306748466257669*alloc(2162,bean_L)
     
      + 0.00306748466257669*alloc(2163,bean_L) + 0.00306748466257669*alloc(2164,bean_L) + 0.00306748466257669*alloc(2165,bean_L) + 0.00306748466257669*alloc(2166,bean_L) + 0.00306748466257669*alloc(2167,bean_L) + 0.00306748466257669*alloc(2189,bean_L)
     
      + 0.00306748466257669*alloc(2193,bean_L) + 0.00306748466257669*alloc(2194,bean_L) + 0.00306748466257669*alloc(2195,bean_L) + 0.00306748466257669*alloc(2196,bean_L) + 0.00306748466257669*alloc(2197,bean_L) + 0.00306748466257669*alloc(2198,bean_L)
     
      + 0.00306748466257669*alloc(2200,bean_L) + 0.00306748466257669*alloc(2201,bean_L) + 0.00306748466257669*alloc(2202,bean_L) + 0.00306748466257669*alloc(2203,bean_L) + 0.00306748466257669*alloc(2204,bean_L) + 0.00306748466257669*alloc(2206,bean_L)
     
      + 0.00306748466257669*alloc(2232,bean_L) + 0.00306748466257669*alloc(2233,bean_L) + 0.00306748466257669*alloc(2234,bean_L) + 0.00306748466257669*alloc(2235,bean_L) + 0.00306748466257669*alloc(2236,bean_L) + 0.00306748466257669*alloc(2237,bean_L)
     
      + 0.00306748466257669*alloc(2238,bean_L) + 0.00306748466257669*alloc(2239,bean_L) + 0.00306748466257669*alloc(2240,bean_L) + 0.00306748466257669*alloc(2241,bean_L) + 0.00306748466257669*alloc(2242,bean_L) + 0.00306748466257669*alloc(2243,bean_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 293
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     sum_one  =E=  sum of land allocation shares is 1     
     
      + 0.00306748466257669*alloc(2244,bean_L) + 0.00306748466257669*alloc(2271,bean_L) + 0.00306748466257669*alloc(2274,bean_L) + 0.00306748466257669*alloc(2275,bean_L) + 0.00306748466257669*alloc(2276,bean_L) + 0.00306748466257669*alloc(2277,bean_L)
     
      + 0.00306748466257669*alloc(2278,bean_L) + 0.00306748466257669*alloc(2281,bean_L) + 0.00306748466257669*alloc(2282,bean_L) + 0.00306748466257669*alloc(2283,bean_L) + 0.00306748466257669*alloc(2284,bean_L) + 0.00306748466257669*alloc(2313,bean_L)
     
      + 0.00306748466257669*alloc(2314,bean_L) + 0.00306748466257669*alloc(2315,bean_L) + 0.00306748466257669*alloc(2316,bean_L) + 0.00306748466257669*alloc(2317,bean_L) + 0.00306748466257669*alloc(2318,bean_L) + 0.00306748466257669*alloc(2319,bean_L)
     
      + 0.00306748466257669*alloc(2320,bean_L) + 0.00306748466257669*alloc(2321,bean_L) + 0.00306748466257669*alloc(2322,bean_L) + 0.00306748466257669*alloc(2323,bean_L) + 0.00306748466257669*alloc(2324,bean_L) + 0.00306748466257669*alloc(2325,bean_L)
     
      + 0.00306748466257669*alloc(2352,bean_L) + 0.00306748466257669*alloc(2353,bean_L) + 0.00306748466257669*alloc(2354,bean_L) + 0.00306748466257669*alloc(2355,bean_L) + 0.00306748466257669*alloc(2356,bean_L) + 0.00306748466257669*alloc(2357,bean_L)
     
      + 0.00306748466257669*alloc(2358,bean_L) + 0.00306748466257669*alloc(2359,bean_L) + 0.00306748466257669*alloc(2361,bean_L) + 0.00306748466257669*alloc(2362,bean_L) + 0.00306748466257669*alloc(2363,bean_L) + 0.00306748466257669*alloc(2364,bean_L)
     
      + 0.00306748466257669*alloc(2365,bean_L) + 0.00306748466257669*alloc(2393,bean_L) + 0.00306748466257669*alloc(2395,bean_L) + 0.00306748466257669*alloc(2396,bean_L) + 0.00306748466257669*alloc(2401,bean_L) + 0.00306748466257669*alloc(2402,bean_L)
     
      + 0.00306748466257669*alloc(2403,bean_L) + 0.00306748466257669*alloc(2404,bean_L) + 0.00306748466257669*alloc(2441,bean_L) + 0.00306748466257669*alloc(2442,bean_L) + 0.00306748466257669*alloc(2443,bean_L) + 0.00306748466257669*alloc(2481,bean_L)
     
      + 0.00306748466257669*alloc(2482,bean_L) + 0.00306748466257669*alloc(2483,bean_L) + 0.00306748466257669*alloc(2520,bean_L) + 0.00306748466257669*alloc(2521,bean_L) + 0.00306748466257669*alloc(2522,bean_L) + 0.00306748466257669*alloc(2523,bean_L)
     
      + 0.00306748466257669*alloc(2559,bean_L) + 0.00306748466257669*alloc(2560,bean_L) + 0.00306748466257669*alloc(2561,bean_L) + 0.00306748466257669*alloc(2562,bean_L) + 0.00306748466257669*alloc(2563,bean_L) + 0.00306748466257669*alloc(2598,bean_L)
     
      + 0.00306748466257669*alloc(2599,bean_L) + 0.00306748466257669*alloc(2600,bean_L) + 0.00306748466257669*alloc(2601,bean_L) + 0.00306748466257669*alloc(2637,bean_L) + 0.00306748466257669*alloc(2638,bean_L) + 0.00306748466257669*alloc(2639,bean_L)
     
      + 0.00306748466257669*alloc(2640,bean_L) + 0.00306748466257669*alloc(2676,bean_L) + 0.00306748466257669*alloc(2677,bean_L) + 0.00306748466257669*alloc(2678,bean_L) + 0.00306748466257669*alloc(2679,bean_L) + 0.00306748466257669*alloc(2715,bean_L)
     
      + 0.00306748466257669*alloc(2716,bean_L) + 0.00306748466257669*alloc(2717,bean_L) + 0.00306748466257669*alloc(2754,bean_L) + 0.00306748466257669*alloc(2755,bean_L) + 0.00306748466257669*alloc(2756,bean_L) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
REMAINING 56 ENTRIES SKIPPED


---- cl_cover_slack  =L=  land cover constraint with slack

cl_cover_slack(1454)..  11.8772108035596*alloc(1454,rice_I) + 35.7873210633947*alloc(1454,sugc_I) + 0.527489880920669*alloc(1454,whea_I) + 118.142832944145*alloc(1454,bean_H) + 50.6326426903479*alloc(1454,bean_L) + 168.775475634493*alloc(1454,bean_S)
     
      + 133.641595178703*alloc(1454,cass_L) + 81.909364786947*alloc(1454,cass_S) + 47.403736192798*alloc(1454,chic_H) + 54.1756985060548*alloc(1454,chic_L) + 33.8598115662843*alloc(1454,chic_S) + 1.49708011439949*alloc(1454,coff_H)
     
      + 2.78029164102763*alloc(1454,coff_L) + 34.8648478060637*alloc(1454,cott_L) + 26.8736336851039*alloc(1454,cowp_H) + 30.7127242115473*alloc(1454,cowp_L) + 19.1954526322171*alloc(1454,cowp_S) + 117.595300149038*alloc(1454,grou_H)
     
      + 176.392950223557*alloc(1454,grou_L) + 293.988250372596*alloc(1454,grou_S) + 0.79620759061559*alloc(1454,lent_H) + 0.909951532132103*alloc(1454,lent_L) + 0.568719707582565*alloc(1454,lent_S) + 499.596655988432*alloc(1454,maiz_H)
     
      + 249.798327994216*alloc(1454,maiz_L) + 1748.58829595951*alloc(1454,maiz_S) + 3.21156252333663*alloc(1454,mill_H) + 1.60578126166832*alloc(1454,mill_L) + 11.2404688316782*alloc(1454,mill_S) + 0.831850255163139*alloc(1454,ofib_L)
     
      + 1.62381155898828*alloc(1454,ooil_L) + 17.0250842524221*alloc(1454,opul_H) + 19.4572391456252*alloc(1454,opul_L) + 12.1607744660158*alloc(1454,opul_S) + 78.5482456457387*alloc(1454,pige_H) + 89.76942359513*alloc(1454,pige_L)
     
      + 56.1058897469562*alloc(1454,pige_S) + 65.9069663388115*alloc(1454,pota_H) + 131.813932677623*alloc(1454,pota_L) + 131.813932677623*alloc(1454,pota_S) + 6.60609704947163*alloc(1454,rest_H) + 6.60609704947163*alloc(1454,rest_L)
     
      + 3.30304852473582*alloc(1454,rest_S) + 0.690937219520626*alloc(1454,rice_H) + 15.207528201649*alloc(1454,rice_L) + 13.6805569465084*alloc(1454,rice_S) + 2.97450466731154*alloc(1454,sorg_L) + 26.7705420058038*alloc(1454,sorg_S)
     
      + 86.5514765554152*alloc(1454,soyb_L) + 9.61683072837947*alloc(1454,soyb_S) + 5.00628665659508*alloc(1454,sunf_L) + 25.6752855468927*alloc(1454,temf_H) + 25.6752855468927*alloc(1454,temf_L) + 12.8376427734464*alloc(1454,temf_S)
     
      + 116.895476916648*alloc(1454,toba_H) + 217.09159998806*alloc(1454,toba_L) + 2.26327635519604*alloc(1454,trof_L) + 20.3694871967644*alloc(1454,trof_S) + 47.5346005144303*alloc(1454,vege_H) + 23.7673002572152*alloc(1454,vege_L)
     
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 294
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     cl_cover_slack  =L=  land cover constraint with slack     
     
      + 47.5346005144303*alloc(1454,vege_S) - cl_slack(1454) =L= 2024.96850585938 ; (LHS = 0)
     
cl_cover_slack(1460)..  11.8772108035596*alloc(1460,rice_I) + 35.7873210633947*alloc(1460,sugc_I) + 0.527489880920669*alloc(1460,whea_I) + 118.142832944145*alloc(1460,bean_H) + 50.6326426903479*alloc(1460,bean_L) + 168.775475634493*alloc(1460,bean_S)
     
      + 133.641595178703*alloc(1460,cass_L) + 81.909364786947*alloc(1460,cass_S) + 47.403736192798*alloc(1460,chic_H) + 54.1756985060548*alloc(1460,chic_L) + 33.8598115662843*alloc(1460,chic_S) + 1.49708011439949*alloc(1460,coff_H)
     
      + 2.78029164102763*alloc(1460,coff_L) + 34.8648478060637*alloc(1460,cott_L) + 26.8736336851039*alloc(1460,cowp_H) + 30.7127242115473*alloc(1460,cowp_L) + 19.1954526322171*alloc(1460,cowp_S) + 117.595300149038*alloc(1460,grou_H)
     
      + 176.392950223557*alloc(1460,grou_L) + 293.988250372596*alloc(1460,grou_S) + 0.79620759061559*alloc(1460,lent_H) + 0.909951532132103*alloc(1460,lent_L) + 0.568719707582565*alloc(1460,lent_S) + 499.596655988432*alloc(1460,maiz_H)
     
      + 249.798327994216*alloc(1460,maiz_L) + 1748.58829595951*alloc(1460,maiz_S) + 3.21156252333663*alloc(1460,mill_H) + 1.60578126166832*alloc(1460,mill_L) + 11.2404688316782*alloc(1460,mill_S) + 0.831850255163139*alloc(1460,ofib_L)
     
      + 1.62381155898828*alloc(1460,ooil_L) + 17.0250842524221*alloc(1460,opul_H) + 19.4572391456252*alloc(1460,opul_L) + 12.1607744660158*alloc(1460,opul_S) + 78.5482456457387*alloc(1460,pige_H) + 89.76942359513*alloc(1460,pige_L)
     
      + 56.1058897469562*alloc(1460,pige_S) + 65.9069663388115*alloc(1460,pota_H) + 131.813932677623*alloc(1460,pota_L) + 131.813932677623*alloc(1460,pota_S) + 6.60609704947163*alloc(1460,rest_H) + 6.60609704947163*alloc(1460,rest_L)
     
      + 3.30304852473582*alloc(1460,rest_S) + 0.690937219520626*alloc(1460,rice_H) + 15.207528201649*alloc(1460,rice_L) + 13.6805569465084*alloc(1460,rice_S) + 2.97450466731154*alloc(1460,sorg_L) + 26.7705420058038*alloc(1460,sorg_S)
     
      + 86.5514765554152*alloc(1460,soyb_L) + 9.61683072837947*alloc(1460,soyb_S) + 5.00628665659508*alloc(1460,sunf_L) + 25.6752855468927*alloc(1460,temf_H) + 25.6752855468927*alloc(1460,temf_L) + 12.8376427734464*alloc(1460,temf_S)
     
      + 116.895476916648*alloc(1460,toba_H) + 217.09159998806*alloc(1460,toba_L) + 2.26327635519604*alloc(1460,trof_L) + 20.3694871967644*alloc(1460,trof_S) + 47.5346005144303*alloc(1460,vege_H) + 23.7673002572152*alloc(1460,vege_L)
     
      + 47.5346005144303*alloc(1460,vege_S) - cl_slack(1460) =L= 6681.82275390625 ; (LHS = 0)
     
cl_cover_slack(1461)..  11.8772108035596*alloc(1461,rice_I) + 35.7873210633947*alloc(1461,sugc_I) + 0.527489880920669*alloc(1461,whea_I) + 118.142832944145*alloc(1461,bean_H) + 50.6326426903479*alloc(1461,bean_L) + 168.775475634493*alloc(1461,bean_S)
     
      + 133.641595178703*alloc(1461,cass_L) + 81.909364786947*alloc(1461,cass_S) + 47.403736192798*alloc(1461,chic_H) + 54.1756985060548*alloc(1461,chic_L) + 33.8598115662843*alloc(1461,chic_S) + 1.49708011439949*alloc(1461,coff_H)
     
      + 2.78029164102763*alloc(1461,coff_L) + 34.8648478060637*alloc(1461,cott_L) + 26.8736336851039*alloc(1461,cowp_H) + 30.7127242115473*alloc(1461,cowp_L) + 19.1954526322171*alloc(1461,cowp_S) + 117.595300149038*alloc(1461,grou_H)
     
      + 176.392950223557*alloc(1461,grou_L) + 293.988250372596*alloc(1461,grou_S) + 0.79620759061559*alloc(1461,lent_H) + 0.909951532132103*alloc(1461,lent_L) + 0.568719707582565*alloc(1461,lent_S) + 499.596655988432*alloc(1461,maiz_H)
     
      + 249.798327994216*alloc(1461,maiz_L) + 1748.58829595951*alloc(1461,maiz_S) + 3.21156252333663*alloc(1461,mill_H) + 1.60578126166832*alloc(1461,mill_L) + 11.2404688316782*alloc(1461,mill_S) + 0.831850255163139*alloc(1461,ofib_L)
     
      + 1.62381155898828*alloc(1461,ooil_L) + 17.0250842524221*alloc(1461,opul_H) + 19.4572391456252*alloc(1461,opul_L) + 12.1607744660158*alloc(1461,opul_S) + 78.5482456457387*alloc(1461,pige_H) + 89.76942359513*alloc(1461,pige_L)
     
      + 56.1058897469562*alloc(1461,pige_S) + 65.9069663388115*alloc(1461,pota_H) + 131.813932677623*alloc(1461,pota_L) + 131.813932677623*alloc(1461,pota_S) + 6.60609704947163*alloc(1461,rest_H) + 6.60609704947163*alloc(1461,rest_L)
     
      + 3.30304852473582*alloc(1461,rest_S) + 0.690937219520626*alloc(1461,rice_H) + 15.207528201649*alloc(1461,rice_L) + 13.6805569465084*alloc(1461,rice_S) + 2.97450466731154*alloc(1461,sorg_L) + 26.7705420058038*alloc(1461,sorg_S)
     
      + 86.5514765554152*alloc(1461,soyb_L) + 9.61683072837947*alloc(1461,soyb_S) + 5.00628665659508*alloc(1461,sunf_L) + 25.6752855468927*alloc(1461,temf_H) + 25.6752855468927*alloc(1461,temf_L) + 12.8376427734464*alloc(1461,temf_S)
     
      + 116.895476916648*alloc(1461,toba_H) + 217.09159998806*alloc(1461,toba_L) + 2.26327635519604*alloc(1461,trof_L) + 20.3694871967644*alloc(1461,trof_S) + 47.5346005144303*alloc(1461,vege_H) + 23.7673002572152*alloc(1461,vege_L)
     
      + 47.5346005144303*alloc(1461,vege_S) - cl_slack(1461) =L= 8347.9892578125 ; (LHS = 0)
     
cl_cover_slack(1490)..  11.8772108035596*alloc(1490,rice_I) + 35.7873210633947*alloc(1490,sugc_I) + 0.527489880920669*alloc(1490,whea_I) + 118.142832944145*alloc(1490,bean_H) + 50.6326426903479*alloc(1490,bean_L) + 168.775475634493*alloc(1490,bean_S)
     
      + 133.641595178703*alloc(1490,cass_L) + 81.909364786947*alloc(1490,cass_S) + 47.403736192798*alloc(1490,chic_H) + 54.1756985060548*alloc(1490,chic_L) + 33.8598115662843*alloc(1490,chic_S) + 1.49708011439949*alloc(1490,coff_H)
     
      + 2.78029164102763*alloc(1490,coff_L) + 34.8648478060637*alloc(1490,cott_L) + 26.8736336851039*alloc(1490,cowp_H) + 30.7127242115473*alloc(1490,cowp_L) + 19.1954526322171*alloc(1490,cowp_S) + 117.595300149038*alloc(1490,grou_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 295
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     cl_cover_slack  =L=  land cover constraint with slack     
     
      + 176.392950223557*alloc(1490,grou_L) + 293.988250372596*alloc(1490,grou_S) + 0.79620759061559*alloc(1490,lent_H) + 0.909951532132103*alloc(1490,lent_L) + 0.568719707582565*alloc(1490,lent_S) + 499.596655988432*alloc(1490,maiz_H)
     
      + 249.798327994216*alloc(1490,maiz_L) + 1748.58829595951*alloc(1490,maiz_S) + 3.21156252333663*alloc(1490,mill_H) + 1.60578126166832*alloc(1490,mill_L) + 11.2404688316782*alloc(1490,mill_S) + 0.831850255163139*alloc(1490,ofib_L)
     
      + 1.62381155898828*alloc(1490,ooil_L) + 17.0250842524221*alloc(1490,opul_H) + 19.4572391456252*alloc(1490,opul_L) + 12.1607744660158*alloc(1490,opul_S) + 78.5482456457387*alloc(1490,pige_H) + 89.76942359513*alloc(1490,pige_L)
     
      + 56.1058897469562*alloc(1490,pige_S) + 65.9069663388115*alloc(1490,pota_H) + 131.813932677623*alloc(1490,pota_L) + 131.813932677623*alloc(1490,pota_S) + 6.60609704947163*alloc(1490,rest_H) + 6.60609704947163*alloc(1490,rest_L)
     
      + 3.30304852473582*alloc(1490,rest_S) + 0.690937219520626*alloc(1490,rice_H) + 15.207528201649*alloc(1490,rice_L) + 13.6805569465084*alloc(1490,rice_S) + 2.97450466731154*alloc(1490,sorg_L) + 26.7705420058038*alloc(1490,sorg_S)
     
      + 86.5514765554152*alloc(1490,soyb_L) + 9.61683072837947*alloc(1490,soyb_S) + 5.00628665659508*alloc(1490,sunf_L) + 25.6752855468927*alloc(1490,temf_H) + 25.6752855468927*alloc(1490,temf_L) + 12.8376427734464*alloc(1490,temf_S)
     
      + 116.895476916648*alloc(1490,toba_H) + 217.09159998806*alloc(1490,toba_L) + 2.26327635519604*alloc(1490,trof_L) + 20.3694871967644*alloc(1490,trof_S) + 47.5346005144303*alloc(1490,vege_H) + 23.7673002572152*alloc(1490,vege_L)
     
      + 47.5346005144303*alloc(1490,vege_S) - cl_slack(1490) =L= 4987.19970703125 ; (LHS = 0)
     
cl_cover_slack(1492)..  11.8772108035596*alloc(1492,rice_I) + 35.7873210633947*alloc(1492,sugc_I) + 0.527489880920669*alloc(1492,whea_I) + 118.142832944145*alloc(1492,bean_H) + 50.6326426903479*alloc(1492,bean_L) + 168.775475634493*alloc(1492,bean_S)
     
      + 133.641595178703*alloc(1492,cass_L) + 81.909364786947*alloc(1492,cass_S) + 47.403736192798*alloc(1492,chic_H) + 54.1756985060548*alloc(1492,chic_L) + 33.8598115662843*alloc(1492,chic_S) + 1.49708011439949*alloc(1492,coff_H)
     
      + 2.78029164102763*alloc(1492,coff_L) + 34.8648478060637*alloc(1492,cott_L) + 26.8736336851039*alloc(1492,cowp_H) + 30.7127242115473*alloc(1492,cowp_L) + 19.1954526322171*alloc(1492,cowp_S) + 117.595300149038*alloc(1492,grou_H)
     
      + 176.392950223557*alloc(1492,grou_L) + 293.988250372596*alloc(1492,grou_S) + 0.79620759061559*alloc(1492,lent_H) + 0.909951532132103*alloc(1492,lent_L) + 0.568719707582565*alloc(1492,lent_S) + 499.596655988432*alloc(1492,maiz_H)
     
      + 249.798327994216*alloc(1492,maiz_L) + 1748.58829595951*alloc(1492,maiz_S) + 3.21156252333663*alloc(1492,mill_H) + 1.60578126166832*alloc(1492,mill_L) + 11.2404688316782*alloc(1492,mill_S) + 0.831850255163139*alloc(1492,ofib_L)
     
      + 1.62381155898828*alloc(1492,ooil_L) + 17.0250842524221*alloc(1492,opul_H) + 19.4572391456252*alloc(1492,opul_L) + 12.1607744660158*alloc(1492,opul_S) + 78.5482456457387*alloc(1492,pige_H) + 89.76942359513*alloc(1492,pige_L)
     
      + 56.1058897469562*alloc(1492,pige_S) + 65.9069663388115*alloc(1492,pota_H) + 131.813932677623*alloc(1492,pota_L) + 131.813932677623*alloc(1492,pota_S) + 6.60609704947163*alloc(1492,rest_H) + 6.60609704947163*alloc(1492,rest_L)
     
      + 3.30304852473582*alloc(1492,rest_S) + 0.690937219520626*alloc(1492,rice_H) + 15.207528201649*alloc(1492,rice_L) + 13.6805569465084*alloc(1492,rice_S) + 2.97450466731154*alloc(1492,sorg_L) + 26.7705420058038*alloc(1492,sorg_S)
     
      + 86.5514765554152*alloc(1492,soyb_L) + 9.61683072837947*alloc(1492,soyb_S) + 5.00628665659508*alloc(1492,sunf_L) + 25.6752855468927*alloc(1492,temf_H) + 25.6752855468927*alloc(1492,temf_L) + 12.8376427734464*alloc(1492,temf_S)
     
      + 116.895476916648*alloc(1492,toba_H) + 217.09159998806*alloc(1492,toba_L) + 2.26327635519604*alloc(1492,trof_L) + 20.3694871967644*alloc(1492,trof_S) + 47.5346005144303*alloc(1492,vege_H) + 23.7673002572152*alloc(1492,vege_L)
     
      + 47.5346005144303*alloc(1492,vege_S) - cl_slack(1492) =L= 5398.42919921875 ; (LHS = 0)
     
REMAINING 321 ENTRIES SKIPPED


---- adm_stat_slack  =E=  adm statistics constraint with slack

adm_stat_slack(MI02_ART2_coff,coff)..  1.49708011439949*alloc(1454,coff_H) + 2.78029164102763*alloc(1454,coff_L) + 1.49708011439949*alloc(1460,coff_H) + 2.78029164102763*alloc(1460,coff_L) + 1.49708011439949*alloc(1461,coff_H)
     
      + 2.78029164102763*alloc(1461,coff_L) + 1.49708011439949*alloc(1490,coff_H) + 2.78029164102763*alloc(1490,coff_L) + 1.49708011439949*alloc(1492,coff_H) + 2.78029164102763*alloc(1492,coff_L) + 1.49708011439949*alloc(1493,coff_H)
     
      + 2.78029164102763*alloc(1493,coff_L) + 1.49708011439949*alloc(1500,coff_H) + 2.78029164102763*alloc(1500,coff_L) + 1.49708011439949*alloc(1527,coff_H) + 2.78029164102763*alloc(1527,coff_L) + 1.49708011439949*alloc(1530,coff_H)
     
      + 2.78029164102763*alloc(1530,coff_L) + 1.49708011439949*alloc(1531,coff_H) + 2.78029164102763*alloc(1531,coff_L) + 1.49708011439949*alloc(1532,coff_H) + 2.78029164102763*alloc(1532,coff_L) + 1.49708011439949*alloc(1539,coff_H)
     
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 296
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 2.78029164102763*alloc(1539,coff_L) + 1.49708011439949*alloc(1565,coff_H) + 2.78029164102763*alloc(1565,coff_L) + 1.49708011439949*alloc(1569,coff_H) + 2.78029164102763*alloc(1569,coff_L) + 1.49708011439949*alloc(1570,coff_H)
     
      + 2.78029164102763*alloc(1570,coff_L) + 1.49708011439949*alloc(1571,coff_H) + 2.78029164102763*alloc(1571,coff_L) + 1.49708011439949*alloc(1572,coff_H) + 2.78029164102763*alloc(1572,coff_L) + 1.49708011439949*alloc(1578,coff_H)
     
      + 2.78029164102763*alloc(1578,coff_L) + 1.49708011439949*alloc(1579,coff_H) + 2.78029164102763*alloc(1579,coff_L) + 1.49708011439949*alloc(1603,coff_H) + 2.78029164102763*alloc(1603,coff_L) + 1.49708011439949*alloc(1604,coff_H)
     
      + 2.78029164102763*alloc(1604,coff_L) + 1.49708011439949*alloc(1608,coff_H) + 2.78029164102763*alloc(1608,coff_L) + 1.49708011439949*alloc(1609,coff_H) + 2.78029164102763*alloc(1609,coff_L) + 1.49708011439949*alloc(1610,coff_H)
     
      + 2.78029164102763*alloc(1610,coff_L) + 1.49708011439949*alloc(1611,coff_H) + 2.78029164102763*alloc(1611,coff_L) + 1.49708011439949*alloc(1612,coff_H) + 2.78029164102763*alloc(1612,coff_L) + 1.49708011439949*alloc(1618,coff_H)
     
      + 2.78029164102763*alloc(1618,coff_L) + 1.49708011439949*alloc(1647,coff_H) + 2.78029164102763*alloc(1647,coff_L) + 1.49708011439949*alloc(1648,coff_H) + 2.78029164102763*alloc(1648,coff_L) + 1.49708011439949*alloc(1649,coff_H)
     
      + 2.78029164102763*alloc(1649,coff_L) + 1.49708011439949*alloc(1650,coff_H) + 2.78029164102763*alloc(1650,coff_L) + 1.49708011439949*alloc(1651,coff_H) + 2.78029164102763*alloc(1651,coff_L) + 1.49708011439949*alloc(1652,coff_H)
     
      + 2.78029164102763*alloc(1652,coff_L) + 1.49708011439949*alloc(1653,coff_H) + 2.78029164102763*alloc(1653,coff_L) + 1.49708011439949*alloc(1654,coff_H) + 2.78029164102763*alloc(1654,coff_L) + 1.49708011439949*alloc(1657,coff_H)
     
      + 2.78029164102763*alloc(1657,coff_L) + 1.49708011439949*alloc(1686,coff_H) + 2.78029164102763*alloc(1686,coff_L) + 1.49708011439949*alloc(1687,coff_H) + 2.78029164102763*alloc(1687,coff_L) + 1.49708011439949*alloc(1688,coff_H)
     
      + 2.78029164102763*alloc(1688,coff_L) + 1.49708011439949*alloc(1689,coff_H) + 2.78029164102763*alloc(1689,coff_L) + 1.49708011439949*alloc(1690,coff_H) + 2.78029164102763*alloc(1690,coff_L) + 1.49708011439949*alloc(1691,coff_H)
     
      + 2.78029164102763*alloc(1691,coff_L) + 1.49708011439949*alloc(1692,coff_H) + 2.78029164102763*alloc(1692,coff_L) + 1.49708011439949*alloc(1693,coff_H) + 2.78029164102763*alloc(1693,coff_L) + 1.49708011439949*alloc(1697,coff_H)
     
      + 2.78029164102763*alloc(1697,coff_L) + 1.49708011439949*alloc(1725,coff_H) + 2.78029164102763*alloc(1725,coff_L) + 1.49708011439949*alloc(1726,coff_H) + 2.78029164102763*alloc(1726,coff_L) + 1.49708011439949*alloc(1727,coff_H)
     
      + 2.78029164102763*alloc(1727,coff_L) + 1.49708011439949*alloc(1728,coff_H) + 2.78029164102763*alloc(1728,coff_L) + 1.49708011439949*alloc(1729,coff_H) + 2.78029164102763*alloc(1729,coff_L) + 1.49708011439949*alloc(1730,coff_H)
     
      + 2.78029164102763*alloc(1730,coff_L) + 1.49708011439949*alloc(1731,coff_H) + 2.78029164102763*alloc(1731,coff_L) + 1.49708011439949*alloc(1732,coff_H) + 2.78029164102763*alloc(1732,coff_L) + 1.49708011439949*alloc(1735,coff_H)
     
      + 2.78029164102763*alloc(1735,coff_L) + 1.49708011439949*alloc(1736,coff_H) + 2.78029164102763*alloc(1736,coff_L) + 1.49708011439949*alloc(1764,coff_H) + 2.78029164102763*alloc(1764,coff_L) + 1.49708011439949*alloc(1765,coff_H)
     
      + 2.78029164102763*alloc(1765,coff_L) + 1.49708011439949*alloc(1766,coff_H) + 2.78029164102763*alloc(1766,coff_L) + 1.49708011439949*alloc(1767,coff_H) + 2.78029164102763*alloc(1767,coff_L) + 1.49708011439949*alloc(1768,coff_H)
     
      + 2.78029164102763*alloc(1768,coff_L) + 1.49708011439949*alloc(1769,coff_H) + 2.78029164102763*alloc(1769,coff_L) + 1.49708011439949*alloc(1770,coff_H) + 2.78029164102763*alloc(1770,coff_L) + 1.49708011439949*alloc(1771,coff_H)
     
      + 2.78029164102763*alloc(1771,coff_L) + 1.49708011439949*alloc(1774,coff_H) + 2.78029164102763*alloc(1774,coff_L) + 1.49708011439949*alloc(1775,coff_H) + 2.78029164102763*alloc(1775,coff_L) + 1.49708011439949*alloc(1805,coff_H)
     
      + 2.78029164102763*alloc(1805,coff_L) + 1.49708011439949*alloc(1806,coff_H) + 2.78029164102763*alloc(1806,coff_L) + 1.49708011439949*alloc(1807,coff_H) + 2.78029164102763*alloc(1807,coff_L) + 1.49708011439949*alloc(1808,coff_H)
     
      + 2.78029164102763*alloc(1808,coff_L) + 1.49708011439949*alloc(1809,coff_H) + 2.78029164102763*alloc(1809,coff_L) + 1.49708011439949*alloc(1810,coff_H) + 2.78029164102763*alloc(1810,coff_L) + 1.49708011439949*alloc(1811,coff_H)
     
      + 2.78029164102763*alloc(1811,coff_L) + 1.49708011439949*alloc(1839,coff_H) + 2.78029164102763*alloc(1839,coff_L) + 1.49708011439949*alloc(1842,coff_H) + 2.78029164102763*alloc(1842,coff_L) + 1.49708011439949*alloc(1845,coff_H)
     
      + 2.78029164102763*alloc(1845,coff_L) + 1.49708011439949*alloc(1846,coff_H) + 2.78029164102763*alloc(1846,coff_L) + 1.49708011439949*alloc(1847,coff_H) + 2.78029164102763*alloc(1847,coff_L) + 1.49708011439949*alloc(1848,coff_H)
     
      + 2.78029164102763*alloc(1848,coff_L) + 1.49708011439949*alloc(1849,coff_H) + 2.78029164102763*alloc(1849,coff_L) + 1.49708011439949*alloc(1850,coff_H) + 2.78029164102763*alloc(1850,coff_L) + 1.49708011439949*alloc(1851,coff_H)
     
      + 2.78029164102763*alloc(1851,coff_L) + 1.49708011439949*alloc(1853,coff_H) + 2.78029164102763*alloc(1853,coff_L) + 1.49708011439949*alloc(1876,coff_H) + 2.78029164102763*alloc(1876,coff_L) + 1.49708011439949*alloc(1879,coff_H)
     
      + 2.78029164102763*alloc(1879,coff_L) + 1.49708011439949*alloc(1880,coff_H) + 2.78029164102763*alloc(1880,coff_L) + 1.49708011439949*alloc(1881,coff_H) + 2.78029164102763*alloc(1881,coff_L) + 1.49708011439949*alloc(1882,coff_H)
     
      + 2.78029164102763*alloc(1882,coff_L) + 1.49708011439949*alloc(1883,coff_H) + 2.78029164102763*alloc(1883,coff_L) + 1.49708011439949*alloc(1884,coff_H) + 2.78029164102763*alloc(1884,coff_L) + 1.49708011439949*alloc(1885,coff_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 297
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 2.78029164102763*alloc(1885,coff_L) + 1.49708011439949*alloc(1886,coff_H) + 2.78029164102763*alloc(1886,coff_L) + 1.49708011439949*alloc(1887,coff_H) + 2.78029164102763*alloc(1887,coff_L) + 1.49708011439949*alloc(1888,coff_H)
     
      + 2.78029164102763*alloc(1888,coff_L) + 1.49708011439949*alloc(1889,coff_H) + 2.78029164102763*alloc(1889,coff_L) + 1.49708011439949*alloc(1890,coff_H) + 2.78029164102763*alloc(1890,coff_L) + 1.49708011439949*alloc(1891,coff_H)
     
      + 2.78029164102763*alloc(1891,coff_L) + 1.49708011439949*alloc(1915,coff_H) + 2.78029164102763*alloc(1915,coff_L) + 1.49708011439949*alloc(1918,coff_H) + 2.78029164102763*alloc(1918,coff_L) + 1.49708011439949*alloc(1919,coff_H)
     
      + 2.78029164102763*alloc(1919,coff_L) + 1.49708011439949*alloc(1920,coff_H) + 2.78029164102763*alloc(1920,coff_L) + 1.49708011439949*alloc(1921,coff_H) + 2.78029164102763*alloc(1921,coff_L) + 1.49708011439949*alloc(1922,coff_H)
     
      + 2.78029164102763*alloc(1922,coff_L) + 1.49708011439949*alloc(1923,coff_H) + 2.78029164102763*alloc(1923,coff_L) + 1.49708011439949*alloc(1924,coff_H) + 2.78029164102763*alloc(1924,coff_L) + 1.49708011439949*alloc(1925,coff_H)
     
      + 2.78029164102763*alloc(1925,coff_L) + 1.49708011439949*alloc(1926,coff_H) + 2.78029164102763*alloc(1926,coff_L) + 1.49708011439949*alloc(1927,coff_H) + 2.78029164102763*alloc(1927,coff_L) + 1.49708011439949*alloc(1928,coff_H)
     
      + 2.78029164102763*alloc(1928,coff_L) + 1.49708011439949*alloc(1929,coff_H) + 2.78029164102763*alloc(1929,coff_L) + 1.49708011439949*alloc(1930,coff_H) + 2.78029164102763*alloc(1930,coff_L) + 1.49708011439949*alloc(1931,coff_H)
     
      + 2.78029164102763*alloc(1931,coff_L) + 1.49708011439949*alloc(1953,coff_H) + 2.78029164102763*alloc(1953,coff_L) + 1.49708011439949*alloc(1954,coff_H) + 2.78029164102763*alloc(1954,coff_L) + 1.49708011439949*alloc(1955,coff_H)
     
      + 2.78029164102763*alloc(1955,coff_L) + 1.49708011439949*alloc(1956,coff_H) + 2.78029164102763*alloc(1956,coff_L) + 1.49708011439949*alloc(1957,coff_H) + 2.78029164102763*alloc(1957,coff_L) + 1.49708011439949*alloc(1958,coff_H)
     
      + 2.78029164102763*alloc(1958,coff_L) + 1.49708011439949*alloc(1959,coff_H) + 2.78029164102763*alloc(1959,coff_L) + 1.49708011439949*alloc(1960,coff_H) + 2.78029164102763*alloc(1960,coff_L) + 1.49708011439949*alloc(1961,coff_H)
     
      + 2.78029164102763*alloc(1961,coff_L) + 1.49708011439949*alloc(1962,coff_H) + 2.78029164102763*alloc(1962,coff_L) + 1.49708011439949*alloc(1963,coff_H) + 2.78029164102763*alloc(1963,coff_L) + 1.49708011439949*alloc(1964,coff_H)
     
      + 2.78029164102763*alloc(1964,coff_L) + 1.49708011439949*alloc(1965,coff_H) + 2.78029164102763*alloc(1965,coff_L) + 1.49708011439949*alloc(1966,coff_H) + 2.78029164102763*alloc(1966,coff_L) + 1.49708011439949*alloc(1967,coff_H)
     
      + 2.78029164102763*alloc(1967,coff_L) + 1.49708011439949*alloc(1968,coff_H) + 2.78029164102763*alloc(1968,coff_L) + 1.49708011439949*alloc(1969,coff_H) + 2.78029164102763*alloc(1969,coff_L) + 1.49708011439949*alloc(1970,coff_H)
     
      + 2.78029164102763*alloc(1970,coff_L) + 1.49708011439949*alloc(1971,coff_H) + 2.78029164102763*alloc(1971,coff_L) + 1.49708011439949*alloc(1990,coff_H) + 2.78029164102763*alloc(1990,coff_L) + 1.49708011439949*alloc(1992,coff_H)
     
      + 2.78029164102763*alloc(1992,coff_L) + 1.49708011439949*alloc(1993,coff_H) + 2.78029164102763*alloc(1993,coff_L) + 1.49708011439949*alloc(1994,coff_H) + 2.78029164102763*alloc(1994,coff_L) + 1.49708011439949*alloc(1996,coff_H)
     
      + 2.78029164102763*alloc(1996,coff_L) + 1.49708011439949*alloc(1997,coff_H) + 2.78029164102763*alloc(1997,coff_L) + 1.49708011439949*alloc(1998,coff_H) + 2.78029164102763*alloc(1998,coff_L) + 1.49708011439949*alloc(1999,coff_H)
     
      + 2.78029164102763*alloc(1999,coff_L) + 1.49708011439949*alloc(2000,coff_H) + 2.78029164102763*alloc(2000,coff_L) + 1.49708011439949*alloc(2001,coff_H) + 2.78029164102763*alloc(2001,coff_L) + 1.49708011439949*alloc(2002,coff_H)
     
      + 2.78029164102763*alloc(2002,coff_L) + 1.49708011439949*alloc(2003,coff_H) + 2.78029164102763*alloc(2003,coff_L) + 1.49708011439949*alloc(2004,coff_H) + 2.78029164102763*alloc(2004,coff_L) + 1.49708011439949*alloc(2005,coff_H)
     
      + 2.78029164102763*alloc(2005,coff_L) + 1.49708011439949*alloc(2006,coff_H) + 2.78029164102763*alloc(2006,coff_L) + 1.49708011439949*alloc(2007,coff_H) + 2.78029164102763*alloc(2007,coff_L) + 1.49708011439949*alloc(2008,coff_H)
     
      + 2.78029164102763*alloc(2008,coff_L) + 1.49708011439949*alloc(2009,coff_H) + 2.78029164102763*alloc(2009,coff_L) + 1.49708011439949*alloc(2010,coff_H) + 2.78029164102763*alloc(2010,coff_L) + 1.49708011439949*alloc(2011,coff_H)
     
      + 2.78029164102763*alloc(2011,coff_L) + 1.49708011439949*alloc(2032,coff_H) + 2.78029164102763*alloc(2032,coff_L) + 1.49708011439949*alloc(2033,coff_H) + 2.78029164102763*alloc(2033,coff_L) + 1.49708011439949*alloc(2034,coff_H)
     
      + 2.78029164102763*alloc(2034,coff_L) + 1.49708011439949*alloc(2035,coff_H) + 2.78029164102763*alloc(2035,coff_L) + 1.49708011439949*alloc(2036,coff_H) + 2.78029164102763*alloc(2036,coff_L) + 1.49708011439949*alloc(2037,coff_H)
     
      + 2.78029164102763*alloc(2037,coff_L) + 1.49708011439949*alloc(2038,coff_H) + 2.78029164102763*alloc(2038,coff_L) + 1.49708011439949*alloc(2039,coff_H) + 2.78029164102763*alloc(2039,coff_L) + 1.49708011439949*alloc(2040,coff_H)
     
      + 2.78029164102763*alloc(2040,coff_L) + 1.49708011439949*alloc(2041,coff_H) + 2.78029164102763*alloc(2041,coff_L) + 1.49708011439949*alloc(2042,coff_H) + 2.78029164102763*alloc(2042,coff_L) + 1.49708011439949*alloc(2043,coff_H)
     
      + 2.78029164102763*alloc(2043,coff_L) + 1.49708011439949*alloc(2044,coff_H) + 2.78029164102763*alloc(2044,coff_L) + 1.49708011439949*alloc(2045,coff_H) + 2.78029164102763*alloc(2045,coff_L) + 1.49708011439949*alloc(2046,coff_H)
     
      + 2.78029164102763*alloc(2046,coff_L) + 1.49708011439949*alloc(2047,coff_H) + 2.78029164102763*alloc(2047,coff_L) + 1.49708011439949*alloc(2049,coff_H) + 2.78029164102763*alloc(2049,coff_L) + 1.49708011439949*alloc(2050,coff_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 298
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 2.78029164102763*alloc(2050,coff_L) + 1.49708011439949*alloc(2051,coff_H) + 2.78029164102763*alloc(2051,coff_L) + 1.49708011439949*alloc(2072,coff_H) + 2.78029164102763*alloc(2072,coff_L) + 1.49708011439949*alloc(2073,coff_H)
     
      + 2.78029164102763*alloc(2073,coff_L) + 1.49708011439949*alloc(2074,coff_H) + 2.78029164102763*alloc(2074,coff_L) + 1.49708011439949*alloc(2075,coff_H) + 2.78029164102763*alloc(2075,coff_L) + 1.49708011439949*alloc(2076,coff_H)
     
      + 2.78029164102763*alloc(2076,coff_L) + 1.49708011439949*alloc(2077,coff_H) + 2.78029164102763*alloc(2077,coff_L) + 1.49708011439949*alloc(2078,coff_H) + 2.78029164102763*alloc(2078,coff_L) + 1.49708011439949*alloc(2079,coff_H)
     
      + 2.78029164102763*alloc(2079,coff_L) + 1.49708011439949*alloc(2080,coff_H) + 2.78029164102763*alloc(2080,coff_L) + 1.49708011439949*alloc(2081,coff_H) + 2.78029164102763*alloc(2081,coff_L) + 1.49708011439949*alloc(2082,coff_H)
     
      + 2.78029164102763*alloc(2082,coff_L) + 1.49708011439949*alloc(2083,coff_H) + 2.78029164102763*alloc(2083,coff_L) + 1.49708011439949*alloc(2084,coff_H) + 2.78029164102763*alloc(2084,coff_L) + 1.49708011439949*alloc(2085,coff_H)
     
      + 2.78029164102763*alloc(2085,coff_L) + 1.49708011439949*alloc(2086,coff_H) + 2.78029164102763*alloc(2086,coff_L) + 1.49708011439949*alloc(2088,coff_H) + 2.78029164102763*alloc(2088,coff_L) + 1.49708011439949*alloc(2089,coff_H)
     
      + 2.78029164102763*alloc(2089,coff_L) + 1.49708011439949*alloc(2090,coff_H) + 2.78029164102763*alloc(2090,coff_L) + 1.49708011439949*alloc(2110,coff_H) + 2.78029164102763*alloc(2110,coff_L) + 1.49708011439949*alloc(2111,coff_H)
     
      + 2.78029164102763*alloc(2111,coff_L) + 1.49708011439949*alloc(2112,coff_H) + 2.78029164102763*alloc(2112,coff_L) + 1.49708011439949*alloc(2114,coff_H) + 2.78029164102763*alloc(2114,coff_L) + 1.49708011439949*alloc(2115,coff_H)
     
      + 2.78029164102763*alloc(2115,coff_L) + 1.49708011439949*alloc(2116,coff_H) + 2.78029164102763*alloc(2116,coff_L) + 1.49708011439949*alloc(2117,coff_H) + 2.78029164102763*alloc(2117,coff_L) + 1.49708011439949*alloc(2118,coff_H)
     
      + 2.78029164102763*alloc(2118,coff_L) + 1.49708011439949*alloc(2119,coff_H) + 2.78029164102763*alloc(2119,coff_L) + 1.49708011439949*alloc(2120,coff_H) + 2.78029164102763*alloc(2120,coff_L) + 1.49708011439949*alloc(2121,coff_H)
     
      + 2.78029164102763*alloc(2121,coff_L) + 1.49708011439949*alloc(2122,coff_H) + 2.78029164102763*alloc(2122,coff_L) + 1.49708011439949*alloc(2123,coff_H) + 2.78029164102763*alloc(2123,coff_L) + 1.49708011439949*alloc(2124,coff_H)
     
      + 2.78029164102763*alloc(2124,coff_L) + 1.49708011439949*alloc(2127,coff_H) + 2.78029164102763*alloc(2127,coff_L) + 1.49708011439949*alloc(2150,coff_H) + 2.78029164102763*alloc(2150,coff_L) + 1.49708011439949*alloc(2151,coff_H)
     
      + 2.78029164102763*alloc(2151,coff_L) + 1.49708011439949*alloc(2152,coff_H) + 2.78029164102763*alloc(2152,coff_L) + 1.49708011439949*alloc(2153,coff_H) + 2.78029164102763*alloc(2153,coff_L) + 1.49708011439949*alloc(2154,coff_H)
     
      + 2.78029164102763*alloc(2154,coff_L) + 1.49708011439949*alloc(2155,coff_H) + 2.78029164102763*alloc(2155,coff_L) + 1.49708011439949*alloc(2156,coff_H) + 2.78029164102763*alloc(2156,coff_L) + 1.49708011439949*alloc(2157,coff_H)
     
      + 2.78029164102763*alloc(2157,coff_L) + 1.49708011439949*alloc(2158,coff_H) + 2.78029164102763*alloc(2158,coff_L) + 1.49708011439949*alloc(2159,coff_H) + 2.78029164102763*alloc(2159,coff_L) + 1.49708011439949*alloc(2160,coff_H)
     
      + 2.78029164102763*alloc(2160,coff_L) + 1.49708011439949*alloc(2161,coff_H) + 2.78029164102763*alloc(2161,coff_L) + 1.49708011439949*alloc(2162,coff_H) + 2.78029164102763*alloc(2162,coff_L) + 1.49708011439949*alloc(2163,coff_H)
     
      + 2.78029164102763*alloc(2163,coff_L) + 1.49708011439949*alloc(2164,coff_H) + 2.78029164102763*alloc(2164,coff_L) + 1.49708011439949*alloc(2165,coff_H) + 2.78029164102763*alloc(2165,coff_L) + 1.49708011439949*alloc(2166,coff_H)
     
      + 2.78029164102763*alloc(2166,coff_L) + 1.49708011439949*alloc(2167,coff_H) + 2.78029164102763*alloc(2167,coff_L) + 1.49708011439949*alloc(2189,coff_H) + 2.78029164102763*alloc(2189,coff_L) + 1.49708011439949*alloc(2193,coff_H)
     
      + 2.78029164102763*alloc(2193,coff_L) + 1.49708011439949*alloc(2194,coff_H) + 2.78029164102763*alloc(2194,coff_L) + 1.49708011439949*alloc(2195,coff_H) + 2.78029164102763*alloc(2195,coff_L) + 1.49708011439949*alloc(2196,coff_H)
     
      + 2.78029164102763*alloc(2196,coff_L) + 1.49708011439949*alloc(2197,coff_H) + 2.78029164102763*alloc(2197,coff_L) + 1.49708011439949*alloc(2198,coff_H) + 2.78029164102763*alloc(2198,coff_L) + 1.49708011439949*alloc(2200,coff_H)
     
      + 2.78029164102763*alloc(2200,coff_L) + 1.49708011439949*alloc(2201,coff_H) + 2.78029164102763*alloc(2201,coff_L) + 1.49708011439949*alloc(2202,coff_H) + 2.78029164102763*alloc(2202,coff_L) + 1.49708011439949*alloc(2203,coff_H)
     
      + 2.78029164102763*alloc(2203,coff_L) + 1.49708011439949*alloc(2204,coff_H) + 2.78029164102763*alloc(2204,coff_L) + 1.49708011439949*alloc(2206,coff_H) + 2.78029164102763*alloc(2206,coff_L) + 1.49708011439949*alloc(2232,coff_H)
     
      + 2.78029164102763*alloc(2232,coff_L) + 1.49708011439949*alloc(2233,coff_H) + 2.78029164102763*alloc(2233,coff_L) + 1.49708011439949*alloc(2234,coff_H) + 2.78029164102763*alloc(2234,coff_L) + 1.49708011439949*alloc(2235,coff_H)
     
      + 2.78029164102763*alloc(2235,coff_L) + 1.49708011439949*alloc(2236,coff_H) + 2.78029164102763*alloc(2236,coff_L) + 1.49708011439949*alloc(2237,coff_H) + 2.78029164102763*alloc(2237,coff_L) + 1.49708011439949*alloc(2238,coff_H)
     
      + 2.78029164102763*alloc(2238,coff_L) + 1.49708011439949*alloc(2239,coff_H) + 2.78029164102763*alloc(2239,coff_L) + 1.49708011439949*alloc(2240,coff_H) + 2.78029164102763*alloc(2240,coff_L) + 1.49708011439949*alloc(2241,coff_H)
     
      + 2.78029164102763*alloc(2241,coff_L) + 1.49708011439949*alloc(2242,coff_H) + 2.78029164102763*alloc(2242,coff_L) + 1.49708011439949*alloc(2243,coff_H) + 2.78029164102763*alloc(2243,coff_L) + 1.49708011439949*alloc(2244,coff_H)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 299
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 2.78029164102763*alloc(2244,coff_L) + 1.49708011439949*alloc(2271,coff_H) + 2.78029164102763*alloc(2271,coff_L) + 1.49708011439949*alloc(2274,coff_H) + 2.78029164102763*alloc(2274,coff_L) + 1.49708011439949*alloc(2275,coff_H)
     
      + 2.78029164102763*alloc(2275,coff_L) + 1.49708011439949*alloc(2276,coff_H) + 2.78029164102763*alloc(2276,coff_L) + 1.49708011439949*alloc(2277,coff_H) + 2.78029164102763*alloc(2277,coff_L) + 1.49708011439949*alloc(2278,coff_H)
     
      + 2.78029164102763*alloc(2278,coff_L) + 1.49708011439949*alloc(2281,coff_H) + 2.78029164102763*alloc(2281,coff_L) + 1.49708011439949*alloc(2282,coff_H) + 2.78029164102763*alloc(2282,coff_L) + 1.49708011439949*alloc(2283,coff_H)
     
      + 2.78029164102763*alloc(2283,coff_L) + 1.49708011439949*alloc(2284,coff_H) + 2.78029164102763*alloc(2284,coff_L) + 1.49708011439949*alloc(2313,coff_H) + 2.78029164102763*alloc(2313,coff_L) + 1.49708011439949*alloc(2314,coff_H)
     
      + 2.78029164102763*alloc(2314,coff_L) + 1.49708011439949*alloc(2315,coff_H) + 2.78029164102763*alloc(2315,coff_L) + 1.49708011439949*alloc(2316,coff_H) + 2.78029164102763*alloc(2316,coff_L) + 1.49708011439949*alloc(2317,coff_H)
     
      + 2.78029164102763*alloc(2317,coff_L) + 1.49708011439949*alloc(2318,coff_H) + 2.78029164102763*alloc(2318,coff_L) + 1.49708011439949*alloc(2319,coff_H) + 2.78029164102763*alloc(2319,coff_L) + 1.49708011439949*alloc(2320,coff_H)
     
      + 2.78029164102763*alloc(2320,coff_L) + 1.49708011439949*alloc(2321,coff_H) + 2.78029164102763*alloc(2321,coff_L) + 1.49708011439949*alloc(2322,coff_H) + 2.78029164102763*alloc(2322,coff_L) + 1.49708011439949*alloc(2323,coff_H)
     
      + 2.78029164102763*alloc(2323,coff_L) + 1.49708011439949*alloc(2324,coff_H) + 2.78029164102763*alloc(2324,coff_L) + 1.49708011439949*alloc(2325,coff_H) + 2.78029164102763*alloc(2325,coff_L) + 1.49708011439949*alloc(2352,coff_H)
     
      + 2.78029164102763*alloc(2352,coff_L) + 1.49708011439949*alloc(2353,coff_H) + 2.78029164102763*alloc(2353,coff_L) + 1.49708011439949*alloc(2354,coff_H) + 2.78029164102763*alloc(2354,coff_L) + 1.49708011439949*alloc(2355,coff_H)
     
      + 2.78029164102763*alloc(2355,coff_L) + 1.49708011439949*alloc(2356,coff_H) + 2.78029164102763*alloc(2356,coff_L) + 1.49708011439949*alloc(2357,coff_H) + 2.78029164102763*alloc(2357,coff_L) + 1.49708011439949*alloc(2358,coff_H)
     
      + 2.78029164102763*alloc(2358,coff_L) + 1.49708011439949*alloc(2359,coff_H) + 2.78029164102763*alloc(2359,coff_L) + 1.49708011439949*alloc(2361,coff_H) + 2.78029164102763*alloc(2361,coff_L) + 1.49708011439949*alloc(2362,coff_H)
     
      + 2.78029164102763*alloc(2362,coff_L) + 1.49708011439949*alloc(2363,coff_H) + 2.78029164102763*alloc(2363,coff_L) + 1.49708011439949*alloc(2364,coff_H) + 2.78029164102763*alloc(2364,coff_L) + 1.49708011439949*alloc(2365,coff_H)
     
      + 2.78029164102763*alloc(2365,coff_L) + 1.49708011439949*alloc(2393,coff_H) + 2.78029164102763*alloc(2393,coff_L) + 1.49708011439949*alloc(2395,coff_H) + 2.78029164102763*alloc(2395,coff_L) + 1.49708011439949*alloc(2396,coff_H)
     
      + 2.78029164102763*alloc(2396,coff_L) + 1.49708011439949*alloc(2401,coff_H) + 2.78029164102763*alloc(2401,coff_L) + 1.49708011439949*alloc(2402,coff_H) + 2.78029164102763*alloc(2402,coff_L) + 1.49708011439949*alloc(2403,coff_H)
     
      + 2.78029164102763*alloc(2403,coff_L) + 1.49708011439949*alloc(2404,coff_H) + 2.78029164102763*alloc(2404,coff_L) + 1.49708011439949*alloc(2441,coff_H) + 2.78029164102763*alloc(2441,coff_L) + 1.49708011439949*alloc(2442,coff_H)
     
      + 2.78029164102763*alloc(2442,coff_L) + 1.49708011439949*alloc(2443,coff_H) + 2.78029164102763*alloc(2443,coff_L) + 1.49708011439949*alloc(2481,coff_H) + 2.78029164102763*alloc(2481,coff_L) + 1.49708011439949*alloc(2482,coff_H)
     
      + 2.78029164102763*alloc(2482,coff_L) + 1.49708011439949*alloc(2483,coff_H) + 2.78029164102763*alloc(2483,coff_L) + 1.49708011439949*alloc(2520,coff_H) + 2.78029164102763*alloc(2520,coff_L) + 1.49708011439949*alloc(2521,coff_H)
     
      + 2.78029164102763*alloc(2521,coff_L) + 1.49708011439949*alloc(2522,coff_H) + 2.78029164102763*alloc(2522,coff_L) + 1.49708011439949*alloc(2523,coff_H) + 2.78029164102763*alloc(2523,coff_L) + 1.49708011439949*alloc(2559,coff_H)
     
      + 2.78029164102763*alloc(2559,coff_L) + 1.49708011439949*alloc(2560,coff_H) + 2.78029164102763*alloc(2560,coff_L) + 1.49708011439949*alloc(2561,coff_H) + 2.78029164102763*alloc(2561,coff_L) + 1.49708011439949*alloc(2562,coff_H)
     
      + 2.78029164102763*alloc(2562,coff_L) + 1.49708011439949*alloc(2563,coff_H) + 2.78029164102763*alloc(2563,coff_L) + 1.49708011439949*alloc(2598,coff_H) + 2.78029164102763*alloc(2598,coff_L) + 1.49708011439949*alloc(2599,coff_H)
     
      + 2.78029164102763*alloc(2599,coff_L) + 1.49708011439949*alloc(2600,coff_H) + 2.78029164102763*alloc(2600,coff_L) + 1.49708011439949*alloc(2601,coff_H) + 2.78029164102763*alloc(2601,coff_L) + 1.49708011439949*alloc(2637,coff_H)
     
      + 2.78029164102763*alloc(2637,coff_L) + 1.49708011439949*alloc(2638,coff_H) + 2.78029164102763*alloc(2638,coff_L) + 1.49708011439949*alloc(2639,coff_H) + 2.78029164102763*alloc(2639,coff_L) + 1.49708011439949*alloc(2640,coff_H)
     
      + 2.78029164102763*alloc(2640,coff_L) + 1.49708011439949*alloc(2676,coff_H) + 2.78029164102763*alloc(2676,coff_L) + 1.49708011439949*alloc(2677,coff_H) + 2.78029164102763*alloc(2677,coff_L) + 1.49708011439949*alloc(2678,coff_H)
     
      + 2.78029164102763*alloc(2678,coff_L) + 1.49708011439949*alloc(2679,coff_H) + 2.78029164102763*alloc(2679,coff_L) + 1.49708011439949*alloc(2715,coff_H) + 2.78029164102763*alloc(2715,coff_L) + 1.49708011439949*alloc(2716,coff_H)
     
      + 2.78029164102763*alloc(2716,coff_L) + 1.49708011439949*alloc(2717,coff_H) + 2.78029164102763*alloc(2717,coff_L) + 1.49708011439949*alloc(2754,coff_H) + 2.78029164102763*alloc(2754,coff_L) + 1.49708011439949*alloc(2755,coff_H)
     
      + 2.78029164102763*alloc(2755,coff_L) + 1.49708011439949*alloc(2756,coff_H) + 2.78029164102763*alloc(2756,coff_L) - adm_slack(MI02_ART2_coff,coff,plus) + adm_slack(MI02_ART2_coff,coff,minus) =E= 1394.42319226924 ;
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 300
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      (LHS = 0, INFES = 1394.42319226924 ****)
     
adm_stat_slack(MI02_ART2_cott,cott)..  34.8648478060637*alloc(1454,cott_L) + 34.8648478060637*alloc(1460,cott_L) + 34.8648478060637*alloc(1461,cott_L) + 34.8648478060637*alloc(1490,cott_L) + 34.8648478060637*alloc(1492,cott_L)
     
      + 34.8648478060637*alloc(1493,cott_L) + 34.8648478060637*alloc(1500,cott_L) + 34.8648478060637*alloc(1527,cott_L) + 34.8648478060637*alloc(1530,cott_L) + 34.8648478060637*alloc(1531,cott_L) + 34.8648478060637*alloc(1532,cott_L)
     
      + 34.8648478060637*alloc(1539,cott_L) + 34.8648478060637*alloc(1565,cott_L) + 34.8648478060637*alloc(1569,cott_L) + 34.8648478060637*alloc(1570,cott_L) + 34.8648478060637*alloc(1571,cott_L) + 34.8648478060637*alloc(1572,cott_L)
     
      + 34.8648478060637*alloc(1578,cott_L) + 34.8648478060637*alloc(1579,cott_L) + 34.8648478060637*alloc(1603,cott_L) + 34.8648478060637*alloc(1604,cott_L) + 34.8648478060637*alloc(1608,cott_L) + 34.8648478060637*alloc(1609,cott_L)
     
      + 34.8648478060637*alloc(1610,cott_L) + 34.8648478060637*alloc(1611,cott_L) + 34.8648478060637*alloc(1612,cott_L) + 34.8648478060637*alloc(1618,cott_L) + 34.8648478060637*alloc(1647,cott_L) + 34.8648478060637*alloc(1648,cott_L)
     
      + 34.8648478060637*alloc(1649,cott_L) + 34.8648478060637*alloc(1650,cott_L) + 34.8648478060637*alloc(1651,cott_L) + 34.8648478060637*alloc(1652,cott_L) + 34.8648478060637*alloc(1653,cott_L) + 34.8648478060637*alloc(1654,cott_L)
     
      + 34.8648478060637*alloc(1657,cott_L) + 34.8648478060637*alloc(1686,cott_L) + 34.8648478060637*alloc(1687,cott_L) + 34.8648478060637*alloc(1688,cott_L) + 34.8648478060637*alloc(1689,cott_L) + 34.8648478060637*alloc(1690,cott_L)
     
      + 34.8648478060637*alloc(1691,cott_L) + 34.8648478060637*alloc(1692,cott_L) + 34.8648478060637*alloc(1693,cott_L) + 34.8648478060637*alloc(1697,cott_L) + 34.8648478060637*alloc(1725,cott_L) + 34.8648478060637*alloc(1726,cott_L)
     
      + 34.8648478060637*alloc(1727,cott_L) + 34.8648478060637*alloc(1728,cott_L) + 34.8648478060637*alloc(1729,cott_L) + 34.8648478060637*alloc(1730,cott_L) + 34.8648478060637*alloc(1731,cott_L) + 34.8648478060637*alloc(1732,cott_L)
     
      + 34.8648478060637*alloc(1735,cott_L) + 34.8648478060637*alloc(1736,cott_L) + 34.8648478060637*alloc(1764,cott_L) + 34.8648478060637*alloc(1765,cott_L) + 34.8648478060637*alloc(1766,cott_L) + 34.8648478060637*alloc(1767,cott_L)
     
      + 34.8648478060637*alloc(1768,cott_L) + 34.8648478060637*alloc(1769,cott_L) + 34.8648478060637*alloc(1770,cott_L) + 34.8648478060637*alloc(1771,cott_L) + 34.8648478060637*alloc(1774,cott_L) + 34.8648478060637*alloc(1775,cott_L)
     
      + 34.8648478060637*alloc(1805,cott_L) + 34.8648478060637*alloc(1806,cott_L) + 34.8648478060637*alloc(1807,cott_L) + 34.8648478060637*alloc(1808,cott_L) + 34.8648478060637*alloc(1809,cott_L) + 34.8648478060637*alloc(1810,cott_L)
     
      + 34.8648478060637*alloc(1811,cott_L) + 34.8648478060637*alloc(1839,cott_L) + 34.8648478060637*alloc(1842,cott_L) + 34.8648478060637*alloc(1845,cott_L) + 34.8648478060637*alloc(1846,cott_L) + 34.8648478060637*alloc(1847,cott_L)
     
      + 34.8648478060637*alloc(1848,cott_L) + 34.8648478060637*alloc(1849,cott_L) + 34.8648478060637*alloc(1850,cott_L) + 34.8648478060637*alloc(1851,cott_L) + 34.8648478060637*alloc(1853,cott_L) + 34.8648478060637*alloc(1876,cott_L)
     
      + 34.8648478060637*alloc(1879,cott_L) + 34.8648478060637*alloc(1880,cott_L) + 34.8648478060637*alloc(1881,cott_L) + 34.8648478060637*alloc(1882,cott_L) + 34.8648478060637*alloc(1883,cott_L) + 34.8648478060637*alloc(1884,cott_L)
     
      + 34.8648478060637*alloc(1885,cott_L) + 34.8648478060637*alloc(1886,cott_L) + 34.8648478060637*alloc(1887,cott_L) + 34.8648478060637*alloc(1888,cott_L) + 34.8648478060637*alloc(1889,cott_L) + 34.8648478060637*alloc(1890,cott_L)
     
      + 34.8648478060637*alloc(1891,cott_L) + 34.8648478060637*alloc(1915,cott_L) + 34.8648478060637*alloc(1918,cott_L) + 34.8648478060637*alloc(1919,cott_L) + 34.8648478060637*alloc(1920,cott_L) + 34.8648478060637*alloc(1921,cott_L)
     
      + 34.8648478060637*alloc(1922,cott_L) + 34.8648478060637*alloc(1923,cott_L) + 34.8648478060637*alloc(1924,cott_L) + 34.8648478060637*alloc(1925,cott_L) + 34.8648478060637*alloc(1926,cott_L) + 34.8648478060637*alloc(1927,cott_L)
     
      + 34.8648478060637*alloc(1928,cott_L) + 34.8648478060637*alloc(1929,cott_L) + 34.8648478060637*alloc(1930,cott_L) + 34.8648478060637*alloc(1931,cott_L) + 34.8648478060637*alloc(1953,cott_L) + 34.8648478060637*alloc(1954,cott_L)
     
      + 34.8648478060637*alloc(1955,cott_L) + 34.8648478060637*alloc(1956,cott_L) + 34.8648478060637*alloc(1957,cott_L) + 34.8648478060637*alloc(1958,cott_L) + 34.8648478060637*alloc(1959,cott_L) + 34.8648478060637*alloc(1960,cott_L)
     
      + 34.8648478060637*alloc(1961,cott_L) + 34.8648478060637*alloc(1962,cott_L) + 34.8648478060637*alloc(1963,cott_L) + 34.8648478060637*alloc(1964,cott_L) + 34.8648478060637*alloc(1965,cott_L) + 34.8648478060637*alloc(1966,cott_L)
     
      + 34.8648478060637*alloc(1967,cott_L) + 34.8648478060637*alloc(1968,cott_L) + 34.8648478060637*alloc(1969,cott_L) + 34.8648478060637*alloc(1970,cott_L) + 34.8648478060637*alloc(1971,cott_L) + 34.8648478060637*alloc(1990,cott_L)
     
      + 34.8648478060637*alloc(1992,cott_L) + 34.8648478060637*alloc(1993,cott_L) + 34.8648478060637*alloc(1994,cott_L) + 34.8648478060637*alloc(1996,cott_L) + 34.8648478060637*alloc(1997,cott_L) + 34.8648478060637*alloc(1998,cott_L)
     
      + 34.8648478060637*alloc(1999,cott_L) + 34.8648478060637*alloc(2000,cott_L) + 34.8648478060637*alloc(2001,cott_L) + 34.8648478060637*alloc(2002,cott_L) + 34.8648478060637*alloc(2003,cott_L) + 34.8648478060637*alloc(2004,cott_L)
     
      + 34.8648478060637*alloc(2005,cott_L) + 34.8648478060637*alloc(2006,cott_L) + 34.8648478060637*alloc(2007,cott_L) + 34.8648478060637*alloc(2008,cott_L) + 34.8648478060637*alloc(2009,cott_L) + 34.8648478060637*alloc(2010,cott_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 301
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 34.8648478060637*alloc(2011,cott_L) + 34.8648478060637*alloc(2032,cott_L) + 34.8648478060637*alloc(2033,cott_L) + 34.8648478060637*alloc(2034,cott_L) + 34.8648478060637*alloc(2035,cott_L) + 34.8648478060637*alloc(2036,cott_L)
     
      + 34.8648478060637*alloc(2037,cott_L) + 34.8648478060637*alloc(2038,cott_L) + 34.8648478060637*alloc(2039,cott_L) + 34.8648478060637*alloc(2040,cott_L) + 34.8648478060637*alloc(2041,cott_L) + 34.8648478060637*alloc(2042,cott_L)
     
      + 34.8648478060637*alloc(2043,cott_L) + 34.8648478060637*alloc(2044,cott_L) + 34.8648478060637*alloc(2045,cott_L) + 34.8648478060637*alloc(2046,cott_L) + 34.8648478060637*alloc(2047,cott_L) + 34.8648478060637*alloc(2049,cott_L)
     
      + 34.8648478060637*alloc(2050,cott_L) + 34.8648478060637*alloc(2051,cott_L) + 34.8648478060637*alloc(2072,cott_L) + 34.8648478060637*alloc(2073,cott_L) + 34.8648478060637*alloc(2074,cott_L) + 34.8648478060637*alloc(2075,cott_L)
     
      + 34.8648478060637*alloc(2076,cott_L) + 34.8648478060637*alloc(2077,cott_L) + 34.8648478060637*alloc(2078,cott_L) + 34.8648478060637*alloc(2079,cott_L) + 34.8648478060637*alloc(2080,cott_L) + 34.8648478060637*alloc(2081,cott_L)
     
      + 34.8648478060637*alloc(2082,cott_L) + 34.8648478060637*alloc(2083,cott_L) + 34.8648478060637*alloc(2084,cott_L) + 34.8648478060637*alloc(2085,cott_L) + 34.8648478060637*alloc(2086,cott_L) + 34.8648478060637*alloc(2088,cott_L)
     
      + 34.8648478060637*alloc(2089,cott_L) + 34.8648478060637*alloc(2090,cott_L) + 34.8648478060637*alloc(2110,cott_L) + 34.8648478060637*alloc(2111,cott_L) + 34.8648478060637*alloc(2112,cott_L) + 34.8648478060637*alloc(2114,cott_L)
     
      + 34.8648478060637*alloc(2115,cott_L) + 34.8648478060637*alloc(2116,cott_L) + 34.8648478060637*alloc(2117,cott_L) + 34.8648478060637*alloc(2118,cott_L) + 34.8648478060637*alloc(2119,cott_L) + 34.8648478060637*alloc(2120,cott_L)
     
      + 34.8648478060637*alloc(2121,cott_L) + 34.8648478060637*alloc(2122,cott_L) + 34.8648478060637*alloc(2123,cott_L) + 34.8648478060637*alloc(2124,cott_L) + 34.8648478060637*alloc(2127,cott_L) + 34.8648478060637*alloc(2150,cott_L)
     
      + 34.8648478060637*alloc(2151,cott_L) + 34.8648478060637*alloc(2152,cott_L) + 34.8648478060637*alloc(2153,cott_L) + 34.8648478060637*alloc(2154,cott_L) + 34.8648478060637*alloc(2155,cott_L) + 34.8648478060637*alloc(2156,cott_L)
     
      + 34.8648478060637*alloc(2157,cott_L) + 34.8648478060637*alloc(2158,cott_L) + 34.8648478060637*alloc(2159,cott_L) + 34.8648478060637*alloc(2160,cott_L) + 34.8648478060637*alloc(2161,cott_L) + 34.8648478060637*alloc(2162,cott_L)
     
      + 34.8648478060637*alloc(2163,cott_L) + 34.8648478060637*alloc(2164,cott_L) + 34.8648478060637*alloc(2165,cott_L) + 34.8648478060637*alloc(2166,cott_L) + 34.8648478060637*alloc(2167,cott_L) + 34.8648478060637*alloc(2189,cott_L)
     
      + 34.8648478060637*alloc(2193,cott_L) + 34.8648478060637*alloc(2194,cott_L) + 34.8648478060637*alloc(2195,cott_L) + 34.8648478060637*alloc(2196,cott_L) + 34.8648478060637*alloc(2197,cott_L) + 34.8648478060637*alloc(2198,cott_L)
     
      + 34.8648478060637*alloc(2200,cott_L) + 34.8648478060637*alloc(2201,cott_L) + 34.8648478060637*alloc(2202,cott_L) + 34.8648478060637*alloc(2203,cott_L) + 34.8648478060637*alloc(2204,cott_L) + 34.8648478060637*alloc(2206,cott_L)
     
      + 34.8648478060637*alloc(2232,cott_L) + 34.8648478060637*alloc(2233,cott_L) + 34.8648478060637*alloc(2234,cott_L) + 34.8648478060637*alloc(2235,cott_L) + 34.8648478060637*alloc(2236,cott_L) + 34.8648478060637*alloc(2237,cott_L)
     
      + 34.8648478060637*alloc(2238,cott_L) + 34.8648478060637*alloc(2239,cott_L) + 34.8648478060637*alloc(2240,cott_L) + 34.8648478060637*alloc(2241,cott_L) + 34.8648478060637*alloc(2242,cott_L) + 34.8648478060637*alloc(2243,cott_L)
     
      + 34.8648478060637*alloc(2244,cott_L) + 34.8648478060637*alloc(2271,cott_L) + 34.8648478060637*alloc(2274,cott_L) + 34.8648478060637*alloc(2275,cott_L) + 34.8648478060637*alloc(2276,cott_L) + 34.8648478060637*alloc(2277,cott_L)
     
      + 34.8648478060637*alloc(2278,cott_L) + 34.8648478060637*alloc(2281,cott_L) + 34.8648478060637*alloc(2282,cott_L) + 34.8648478060637*alloc(2283,cott_L) + 34.8648478060637*alloc(2284,cott_L) + 34.8648478060637*alloc(2313,cott_L)
     
      + 34.8648478060637*alloc(2314,cott_L) + 34.8648478060637*alloc(2315,cott_L) + 34.8648478060637*alloc(2316,cott_L) + 34.8648478060637*alloc(2317,cott_L) + 34.8648478060637*alloc(2318,cott_L) + 34.8648478060637*alloc(2319,cott_L)
     
      + 34.8648478060637*alloc(2320,cott_L) + 34.8648478060637*alloc(2321,cott_L) + 34.8648478060637*alloc(2322,cott_L) + 34.8648478060637*alloc(2323,cott_L) + 34.8648478060637*alloc(2324,cott_L) + 34.8648478060637*alloc(2325,cott_L)
     
      + 34.8648478060637*alloc(2352,cott_L) + 34.8648478060637*alloc(2353,cott_L) + 34.8648478060637*alloc(2354,cott_L) + 34.8648478060637*alloc(2355,cott_L) + 34.8648478060637*alloc(2356,cott_L) + 34.8648478060637*alloc(2357,cott_L)
     
      + 34.8648478060637*alloc(2358,cott_L) + 34.8648478060637*alloc(2359,cott_L) + 34.8648478060637*alloc(2361,cott_L) + 34.8648478060637*alloc(2362,cott_L) + 34.8648478060637*alloc(2363,cott_L) + 34.8648478060637*alloc(2364,cott_L)
     
      + 34.8648478060637*alloc(2365,cott_L) + 34.8648478060637*alloc(2393,cott_L) + 34.8648478060637*alloc(2395,cott_L) + 34.8648478060637*alloc(2396,cott_L) + 34.8648478060637*alloc(2401,cott_L) + 34.8648478060637*alloc(2402,cott_L)
     
      + 34.8648478060637*alloc(2403,cott_L) + 34.8648478060637*alloc(2404,cott_L) + 34.8648478060637*alloc(2441,cott_L) + 34.8648478060637*alloc(2442,cott_L) + 34.8648478060637*alloc(2443,cott_L) + 34.8648478060637*alloc(2481,cott_L)
     
      + 34.8648478060637*alloc(2482,cott_L) + 34.8648478060637*alloc(2483,cott_L) + 34.8648478060637*alloc(2520,cott_L) + 34.8648478060637*alloc(2521,cott_L) + 34.8648478060637*alloc(2522,cott_L) + 34.8648478060637*alloc(2523,cott_L)
     
      + 34.8648478060637*alloc(2559,cott_L) + 34.8648478060637*alloc(2560,cott_L) + 34.8648478060637*alloc(2561,cott_L) + 34.8648478060637*alloc(2562,cott_L) + 34.8648478060637*alloc(2563,cott_L) + 34.8648478060637*alloc(2598,cott_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 302
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 34.8648478060637*alloc(2599,cott_L) + 34.8648478060637*alloc(2600,cott_L) + 34.8648478060637*alloc(2601,cott_L) + 34.8648478060637*alloc(2637,cott_L) + 34.8648478060637*alloc(2638,cott_L) + 34.8648478060637*alloc(2639,cott_L)
     
      + 34.8648478060637*alloc(2640,cott_L) + 34.8648478060637*alloc(2676,cott_L) + 34.8648478060637*alloc(2677,cott_L) + 34.8648478060637*alloc(2678,cott_L) + 34.8648478060637*alloc(2679,cott_L) + 34.8648478060637*alloc(2715,cott_L)
     
      + 34.8648478060637*alloc(2716,cott_L) + 34.8648478060637*alloc(2717,cott_L) + 34.8648478060637*alloc(2754,cott_L) + 34.8648478060637*alloc(2755,cott_L) + 34.8648478060637*alloc(2756,cott_L) - adm_slack(MI02_ART2_cott,cott,plus)
     
      + adm_slack(MI02_ART2_cott,cott,minus) =E= 11365.9403847768 ; (LHS = 0, INFES = 11365.9403847768 ****)
     
adm_stat_slack(MI02_ART2_mill,mill)..  3.21156252333663*alloc(1454,mill_H) + 1.60578126166832*alloc(1454,mill_L) + 11.2404688316782*alloc(1454,mill_S) + 3.21156252333663*alloc(1460,mill_H) + 1.60578126166832*alloc(1460,mill_L)
     
      + 11.2404688316782*alloc(1460,mill_S) + 3.21156252333663*alloc(1461,mill_H) + 1.60578126166832*alloc(1461,mill_L) + 11.2404688316782*alloc(1461,mill_S) + 3.21156252333663*alloc(1490,mill_H) + 1.60578126166832*alloc(1490,mill_L)
     
      + 11.2404688316782*alloc(1490,mill_S) + 3.21156252333663*alloc(1492,mill_H) + 1.60578126166832*alloc(1492,mill_L) + 11.2404688316782*alloc(1492,mill_S) + 3.21156252333663*alloc(1493,mill_H) + 1.60578126166832*alloc(1493,mill_L)
     
      + 11.2404688316782*alloc(1493,mill_S) + 3.21156252333663*alloc(1500,mill_H) + 1.60578126166832*alloc(1500,mill_L) + 11.2404688316782*alloc(1500,mill_S) + 3.21156252333663*alloc(1527,mill_H) + 1.60578126166832*alloc(1527,mill_L)
     
      + 11.2404688316782*alloc(1527,mill_S) + 3.21156252333663*alloc(1530,mill_H) + 1.60578126166832*alloc(1530,mill_L) + 11.2404688316782*alloc(1530,mill_S) + 3.21156252333663*alloc(1531,mill_H) + 1.60578126166832*alloc(1531,mill_L)
     
      + 11.2404688316782*alloc(1531,mill_S) + 3.21156252333663*alloc(1532,mill_H) + 1.60578126166832*alloc(1532,mill_L) + 11.2404688316782*alloc(1532,mill_S) + 3.21156252333663*alloc(1539,mill_H) + 1.60578126166832*alloc(1539,mill_L)
     
      + 11.2404688316782*alloc(1539,mill_S) + 3.21156252333663*alloc(1565,mill_H) + 1.60578126166832*alloc(1565,mill_L) + 11.2404688316782*alloc(1565,mill_S) + 3.21156252333663*alloc(1569,mill_H) + 1.60578126166832*alloc(1569,mill_L)
     
      + 11.2404688316782*alloc(1569,mill_S) + 3.21156252333663*alloc(1570,mill_H) + 1.60578126166832*alloc(1570,mill_L) + 11.2404688316782*alloc(1570,mill_S) + 3.21156252333663*alloc(1571,mill_H) + 1.60578126166832*alloc(1571,mill_L)
     
      + 11.2404688316782*alloc(1571,mill_S) + 3.21156252333663*alloc(1572,mill_H) + 1.60578126166832*alloc(1572,mill_L) + 11.2404688316782*alloc(1572,mill_S) + 3.21156252333663*alloc(1578,mill_H) + 1.60578126166832*alloc(1578,mill_L)
     
      + 11.2404688316782*alloc(1578,mill_S) + 3.21156252333663*alloc(1579,mill_H) + 1.60578126166832*alloc(1579,mill_L) + 11.2404688316782*alloc(1579,mill_S) + 3.21156252333663*alloc(1603,mill_H) + 1.60578126166832*alloc(1603,mill_L)
     
      + 11.2404688316782*alloc(1603,mill_S) + 3.21156252333663*alloc(1604,mill_H) + 1.60578126166832*alloc(1604,mill_L) + 11.2404688316782*alloc(1604,mill_S) + 3.21156252333663*alloc(1608,mill_H) + 1.60578126166832*alloc(1608,mill_L)
     
      + 11.2404688316782*alloc(1608,mill_S) + 3.21156252333663*alloc(1609,mill_H) + 1.60578126166832*alloc(1609,mill_L) + 11.2404688316782*alloc(1609,mill_S) + 3.21156252333663*alloc(1610,mill_H) + 1.60578126166832*alloc(1610,mill_L)
     
      + 11.2404688316782*alloc(1610,mill_S) + 3.21156252333663*alloc(1611,mill_H) + 1.60578126166832*alloc(1611,mill_L) + 11.2404688316782*alloc(1611,mill_S) + 3.21156252333663*alloc(1612,mill_H) + 1.60578126166832*alloc(1612,mill_L)
     
      + 11.2404688316782*alloc(1612,mill_S) + 3.21156252333663*alloc(1618,mill_H) + 1.60578126166832*alloc(1618,mill_L) + 11.2404688316782*alloc(1618,mill_S) + 3.21156252333663*alloc(1647,mill_H) + 1.60578126166832*alloc(1647,mill_L)
     
      + 11.2404688316782*alloc(1647,mill_S) + 3.21156252333663*alloc(1648,mill_H) + 1.60578126166832*alloc(1648,mill_L) + 11.2404688316782*alloc(1648,mill_S) + 3.21156252333663*alloc(1649,mill_H) + 1.60578126166832*alloc(1649,mill_L)
     
      + 11.2404688316782*alloc(1649,mill_S) + 3.21156252333663*alloc(1650,mill_H) + 1.60578126166832*alloc(1650,mill_L) + 11.2404688316782*alloc(1650,mill_S) + 3.21156252333663*alloc(1651,mill_H) + 1.60578126166832*alloc(1651,mill_L)
     
      + 11.2404688316782*alloc(1651,mill_S) + 3.21156252333663*alloc(1652,mill_H) + 1.60578126166832*alloc(1652,mill_L) + 11.2404688316782*alloc(1652,mill_S) + 3.21156252333663*alloc(1653,mill_H) + 1.60578126166832*alloc(1653,mill_L)
     
      + 11.2404688316782*alloc(1653,mill_S) + 3.21156252333663*alloc(1654,mill_H) + 1.60578126166832*alloc(1654,mill_L) + 11.2404688316782*alloc(1654,mill_S) + 3.21156252333663*alloc(1657,mill_H) + 1.60578126166832*alloc(1657,mill_L)
     
      + 11.2404688316782*alloc(1657,mill_S) + 3.21156252333663*alloc(1686,mill_H) + 1.60578126166832*alloc(1686,mill_L) + 11.2404688316782*alloc(1686,mill_S) + 3.21156252333663*alloc(1687,mill_H) + 1.60578126166832*alloc(1687,mill_L)
     
      + 11.2404688316782*alloc(1687,mill_S) + 3.21156252333663*alloc(1688,mill_H) + 1.60578126166832*alloc(1688,mill_L) + 11.2404688316782*alloc(1688,mill_S) + 3.21156252333663*alloc(1689,mill_H) + 1.60578126166832*alloc(1689,mill_L)
     
      + 11.2404688316782*alloc(1689,mill_S) + 3.21156252333663*alloc(1690,mill_H) + 1.60578126166832*alloc(1690,mill_L) + 11.2404688316782*alloc(1690,mill_S) + 3.21156252333663*alloc(1691,mill_H) + 1.60578126166832*alloc(1691,mill_L)
     
      + 11.2404688316782*alloc(1691,mill_S) + 3.21156252333663*alloc(1692,mill_H) + 1.60578126166832*alloc(1692,mill_L) + 11.2404688316782*alloc(1692,mill_S) + 3.21156252333663*alloc(1693,mill_H) + 1.60578126166832*alloc(1693,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 303
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(1693,mill_S) + 3.21156252333663*alloc(1697,mill_H) + 1.60578126166832*alloc(1697,mill_L) + 11.2404688316782*alloc(1697,mill_S) + 3.21156252333663*alloc(1725,mill_H) + 1.60578126166832*alloc(1725,mill_L)
     
      + 11.2404688316782*alloc(1725,mill_S) + 3.21156252333663*alloc(1726,mill_H) + 1.60578126166832*alloc(1726,mill_L) + 11.2404688316782*alloc(1726,mill_S) + 3.21156252333663*alloc(1727,mill_H) + 1.60578126166832*alloc(1727,mill_L)
     
      + 11.2404688316782*alloc(1727,mill_S) + 3.21156252333663*alloc(1728,mill_H) + 1.60578126166832*alloc(1728,mill_L) + 11.2404688316782*alloc(1728,mill_S) + 3.21156252333663*alloc(1729,mill_H) + 1.60578126166832*alloc(1729,mill_L)
     
      + 11.2404688316782*alloc(1729,mill_S) + 3.21156252333663*alloc(1730,mill_H) + 1.60578126166832*alloc(1730,mill_L) + 11.2404688316782*alloc(1730,mill_S) + 3.21156252333663*alloc(1731,mill_H) + 1.60578126166832*alloc(1731,mill_L)
     
      + 11.2404688316782*alloc(1731,mill_S) + 3.21156252333663*alloc(1732,mill_H) + 1.60578126166832*alloc(1732,mill_L) + 11.2404688316782*alloc(1732,mill_S) + 3.21156252333663*alloc(1735,mill_H) + 1.60578126166832*alloc(1735,mill_L)
     
      + 11.2404688316782*alloc(1735,mill_S) + 3.21156252333663*alloc(1736,mill_H) + 1.60578126166832*alloc(1736,mill_L) + 11.2404688316782*alloc(1736,mill_S) + 3.21156252333663*alloc(1764,mill_H) + 1.60578126166832*alloc(1764,mill_L)
     
      + 11.2404688316782*alloc(1764,mill_S) + 3.21156252333663*alloc(1765,mill_H) + 1.60578126166832*alloc(1765,mill_L) + 11.2404688316782*alloc(1765,mill_S) + 3.21156252333663*alloc(1766,mill_H) + 1.60578126166832*alloc(1766,mill_L)
     
      + 11.2404688316782*alloc(1766,mill_S) + 3.21156252333663*alloc(1767,mill_H) + 1.60578126166832*alloc(1767,mill_L) + 11.2404688316782*alloc(1767,mill_S) + 3.21156252333663*alloc(1768,mill_H) + 1.60578126166832*alloc(1768,mill_L)
     
      + 11.2404688316782*alloc(1768,mill_S) + 3.21156252333663*alloc(1769,mill_H) + 1.60578126166832*alloc(1769,mill_L) + 11.2404688316782*alloc(1769,mill_S) + 3.21156252333663*alloc(1770,mill_H) + 1.60578126166832*alloc(1770,mill_L)
     
      + 11.2404688316782*alloc(1770,mill_S) + 3.21156252333663*alloc(1771,mill_H) + 1.60578126166832*alloc(1771,mill_L) + 11.2404688316782*alloc(1771,mill_S) + 3.21156252333663*alloc(1774,mill_H) + 1.60578126166832*alloc(1774,mill_L)
     
      + 11.2404688316782*alloc(1774,mill_S) + 3.21156252333663*alloc(1775,mill_H) + 1.60578126166832*alloc(1775,mill_L) + 11.2404688316782*alloc(1775,mill_S) + 3.21156252333663*alloc(1805,mill_H) + 1.60578126166832*alloc(1805,mill_L)
     
      + 11.2404688316782*alloc(1805,mill_S) + 3.21156252333663*alloc(1806,mill_H) + 1.60578126166832*alloc(1806,mill_L) + 11.2404688316782*alloc(1806,mill_S) + 3.21156252333663*alloc(1807,mill_H) + 1.60578126166832*alloc(1807,mill_L)
     
      + 11.2404688316782*alloc(1807,mill_S) + 3.21156252333663*alloc(1808,mill_H) + 1.60578126166832*alloc(1808,mill_L) + 11.2404688316782*alloc(1808,mill_S) + 3.21156252333663*alloc(1809,mill_H) + 1.60578126166832*alloc(1809,mill_L)
     
      + 11.2404688316782*alloc(1809,mill_S) + 3.21156252333663*alloc(1810,mill_H) + 1.60578126166832*alloc(1810,mill_L) + 11.2404688316782*alloc(1810,mill_S) + 3.21156252333663*alloc(1811,mill_H) + 1.60578126166832*alloc(1811,mill_L)
     
      + 11.2404688316782*alloc(1811,mill_S) + 3.21156252333663*alloc(1839,mill_H) + 1.60578126166832*alloc(1839,mill_L) + 11.2404688316782*alloc(1839,mill_S) + 3.21156252333663*alloc(1842,mill_H) + 1.60578126166832*alloc(1842,mill_L)
     
      + 11.2404688316782*alloc(1842,mill_S) + 3.21156252333663*alloc(1845,mill_H) + 1.60578126166832*alloc(1845,mill_L) + 11.2404688316782*alloc(1845,mill_S) + 3.21156252333663*alloc(1846,mill_H) + 1.60578126166832*alloc(1846,mill_L)
     
      + 11.2404688316782*alloc(1846,mill_S) + 3.21156252333663*alloc(1847,mill_H) + 1.60578126166832*alloc(1847,mill_L) + 11.2404688316782*alloc(1847,mill_S) + 3.21156252333663*alloc(1848,mill_H) + 1.60578126166832*alloc(1848,mill_L)
     
      + 11.2404688316782*alloc(1848,mill_S) + 3.21156252333663*alloc(1849,mill_H) + 1.60578126166832*alloc(1849,mill_L) + 11.2404688316782*alloc(1849,mill_S) + 3.21156252333663*alloc(1850,mill_H) + 1.60578126166832*alloc(1850,mill_L)
     
      + 11.2404688316782*alloc(1850,mill_S) + 3.21156252333663*alloc(1851,mill_H) + 1.60578126166832*alloc(1851,mill_L) + 11.2404688316782*alloc(1851,mill_S) + 3.21156252333663*alloc(1853,mill_H) + 1.60578126166832*alloc(1853,mill_L)
     
      + 11.2404688316782*alloc(1853,mill_S) + 3.21156252333663*alloc(1876,mill_H) + 1.60578126166832*alloc(1876,mill_L) + 11.2404688316782*alloc(1876,mill_S) + 3.21156252333663*alloc(1879,mill_H) + 1.60578126166832*alloc(1879,mill_L)
     
      + 11.2404688316782*alloc(1879,mill_S) + 3.21156252333663*alloc(1880,mill_H) + 1.60578126166832*alloc(1880,mill_L) + 11.2404688316782*alloc(1880,mill_S) + 3.21156252333663*alloc(1881,mill_H) + 1.60578126166832*alloc(1881,mill_L)
     
      + 11.2404688316782*alloc(1881,mill_S) + 3.21156252333663*alloc(1882,mill_H) + 1.60578126166832*alloc(1882,mill_L) + 11.2404688316782*alloc(1882,mill_S) + 3.21156252333663*alloc(1883,mill_H) + 1.60578126166832*alloc(1883,mill_L)
     
      + 11.2404688316782*alloc(1883,mill_S) + 3.21156252333663*alloc(1884,mill_H) + 1.60578126166832*alloc(1884,mill_L) + 11.2404688316782*alloc(1884,mill_S) + 3.21156252333663*alloc(1885,mill_H) + 1.60578126166832*alloc(1885,mill_L)
     
      + 11.2404688316782*alloc(1885,mill_S) + 3.21156252333663*alloc(1886,mill_H) + 1.60578126166832*alloc(1886,mill_L) + 11.2404688316782*alloc(1886,mill_S) + 3.21156252333663*alloc(1887,mill_H) + 1.60578126166832*alloc(1887,mill_L)
     
      + 11.2404688316782*alloc(1887,mill_S) + 3.21156252333663*alloc(1888,mill_H) + 1.60578126166832*alloc(1888,mill_L) + 11.2404688316782*alloc(1888,mill_S) + 3.21156252333663*alloc(1889,mill_H) + 1.60578126166832*alloc(1889,mill_L)
     
      + 11.2404688316782*alloc(1889,mill_S) + 3.21156252333663*alloc(1890,mill_H) + 1.60578126166832*alloc(1890,mill_L) + 11.2404688316782*alloc(1890,mill_S) + 3.21156252333663*alloc(1891,mill_H) + 1.60578126166832*alloc(1891,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 304
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(1891,mill_S) + 3.21156252333663*alloc(1915,mill_H) + 1.60578126166832*alloc(1915,mill_L) + 11.2404688316782*alloc(1915,mill_S) + 3.21156252333663*alloc(1918,mill_H) + 1.60578126166832*alloc(1918,mill_L)
     
      + 11.2404688316782*alloc(1918,mill_S) + 3.21156252333663*alloc(1919,mill_H) + 1.60578126166832*alloc(1919,mill_L) + 11.2404688316782*alloc(1919,mill_S) + 3.21156252333663*alloc(1920,mill_H) + 1.60578126166832*alloc(1920,mill_L)
     
      + 11.2404688316782*alloc(1920,mill_S) + 3.21156252333663*alloc(1921,mill_H) + 1.60578126166832*alloc(1921,mill_L) + 11.2404688316782*alloc(1921,mill_S) + 3.21156252333663*alloc(1922,mill_H) + 1.60578126166832*alloc(1922,mill_L)
     
      + 11.2404688316782*alloc(1922,mill_S) + 3.21156252333663*alloc(1923,mill_H) + 1.60578126166832*alloc(1923,mill_L) + 11.2404688316782*alloc(1923,mill_S) + 3.21156252333663*alloc(1924,mill_H) + 1.60578126166832*alloc(1924,mill_L)
     
      + 11.2404688316782*alloc(1924,mill_S) + 3.21156252333663*alloc(1925,mill_H) + 1.60578126166832*alloc(1925,mill_L) + 11.2404688316782*alloc(1925,mill_S) + 3.21156252333663*alloc(1926,mill_H) + 1.60578126166832*alloc(1926,mill_L)
     
      + 11.2404688316782*alloc(1926,mill_S) + 3.21156252333663*alloc(1927,mill_H) + 1.60578126166832*alloc(1927,mill_L) + 11.2404688316782*alloc(1927,mill_S) + 3.21156252333663*alloc(1928,mill_H) + 1.60578126166832*alloc(1928,mill_L)
     
      + 11.2404688316782*alloc(1928,mill_S) + 3.21156252333663*alloc(1929,mill_H) + 1.60578126166832*alloc(1929,mill_L) + 11.2404688316782*alloc(1929,mill_S) + 3.21156252333663*alloc(1930,mill_H) + 1.60578126166832*alloc(1930,mill_L)
     
      + 11.2404688316782*alloc(1930,mill_S) + 3.21156252333663*alloc(1931,mill_H) + 1.60578126166832*alloc(1931,mill_L) + 11.2404688316782*alloc(1931,mill_S) + 3.21156252333663*alloc(1953,mill_H) + 1.60578126166832*alloc(1953,mill_L)
     
      + 11.2404688316782*alloc(1953,mill_S) + 3.21156252333663*alloc(1954,mill_H) + 1.60578126166832*alloc(1954,mill_L) + 11.2404688316782*alloc(1954,mill_S) + 3.21156252333663*alloc(1955,mill_H) + 1.60578126166832*alloc(1955,mill_L)
     
      + 11.2404688316782*alloc(1955,mill_S) + 3.21156252333663*alloc(1956,mill_H) + 1.60578126166832*alloc(1956,mill_L) + 11.2404688316782*alloc(1956,mill_S) + 3.21156252333663*alloc(1957,mill_H) + 1.60578126166832*alloc(1957,mill_L)
     
      + 11.2404688316782*alloc(1957,mill_S) + 3.21156252333663*alloc(1958,mill_H) + 1.60578126166832*alloc(1958,mill_L) + 11.2404688316782*alloc(1958,mill_S) + 3.21156252333663*alloc(1959,mill_H) + 1.60578126166832*alloc(1959,mill_L)
     
      + 11.2404688316782*alloc(1959,mill_S) + 3.21156252333663*alloc(1960,mill_H) + 1.60578126166832*alloc(1960,mill_L) + 11.2404688316782*alloc(1960,mill_S) + 3.21156252333663*alloc(1961,mill_H) + 1.60578126166832*alloc(1961,mill_L)
     
      + 11.2404688316782*alloc(1961,mill_S) + 3.21156252333663*alloc(1962,mill_H) + 1.60578126166832*alloc(1962,mill_L) + 11.2404688316782*alloc(1962,mill_S) + 3.21156252333663*alloc(1963,mill_H) + 1.60578126166832*alloc(1963,mill_L)
     
      + 11.2404688316782*alloc(1963,mill_S) + 3.21156252333663*alloc(1964,mill_H) + 1.60578126166832*alloc(1964,mill_L) + 11.2404688316782*alloc(1964,mill_S) + 3.21156252333663*alloc(1965,mill_H) + 1.60578126166832*alloc(1965,mill_L)
     
      + 11.2404688316782*alloc(1965,mill_S) + 3.21156252333663*alloc(1966,mill_H) + 1.60578126166832*alloc(1966,mill_L) + 11.2404688316782*alloc(1966,mill_S) + 3.21156252333663*alloc(1967,mill_H) + 1.60578126166832*alloc(1967,mill_L)
     
      + 11.2404688316782*alloc(1967,mill_S) + 3.21156252333663*alloc(1968,mill_H) + 1.60578126166832*alloc(1968,mill_L) + 11.2404688316782*alloc(1968,mill_S) + 3.21156252333663*alloc(1969,mill_H) + 1.60578126166832*alloc(1969,mill_L)
     
      + 11.2404688316782*alloc(1969,mill_S) + 3.21156252333663*alloc(1970,mill_H) + 1.60578126166832*alloc(1970,mill_L) + 11.2404688316782*alloc(1970,mill_S) + 3.21156252333663*alloc(1971,mill_H) + 1.60578126166832*alloc(1971,mill_L)
     
      + 11.2404688316782*alloc(1971,mill_S) + 3.21156252333663*alloc(1990,mill_H) + 1.60578126166832*alloc(1990,mill_L) + 11.2404688316782*alloc(1990,mill_S) + 3.21156252333663*alloc(1992,mill_H) + 1.60578126166832*alloc(1992,mill_L)
     
      + 11.2404688316782*alloc(1992,mill_S) + 3.21156252333663*alloc(1993,mill_H) + 1.60578126166832*alloc(1993,mill_L) + 11.2404688316782*alloc(1993,mill_S) + 3.21156252333663*alloc(1994,mill_H) + 1.60578126166832*alloc(1994,mill_L)
     
      + 11.2404688316782*alloc(1994,mill_S) + 3.21156252333663*alloc(1996,mill_H) + 1.60578126166832*alloc(1996,mill_L) + 11.2404688316782*alloc(1996,mill_S) + 3.21156252333663*alloc(1997,mill_H) + 1.60578126166832*alloc(1997,mill_L)
     
      + 11.2404688316782*alloc(1997,mill_S) + 3.21156252333663*alloc(1998,mill_H) + 1.60578126166832*alloc(1998,mill_L) + 11.2404688316782*alloc(1998,mill_S) + 3.21156252333663*alloc(1999,mill_H) + 1.60578126166832*alloc(1999,mill_L)
     
      + 11.2404688316782*alloc(1999,mill_S) + 3.21156252333663*alloc(2000,mill_H) + 1.60578126166832*alloc(2000,mill_L) + 11.2404688316782*alloc(2000,mill_S) + 3.21156252333663*alloc(2001,mill_H) + 1.60578126166832*alloc(2001,mill_L)
     
      + 11.2404688316782*alloc(2001,mill_S) + 3.21156252333663*alloc(2002,mill_H) + 1.60578126166832*alloc(2002,mill_L) + 11.2404688316782*alloc(2002,mill_S) + 3.21156252333663*alloc(2003,mill_H) + 1.60578126166832*alloc(2003,mill_L)
     
      + 11.2404688316782*alloc(2003,mill_S) + 3.21156252333663*alloc(2004,mill_H) + 1.60578126166832*alloc(2004,mill_L) + 11.2404688316782*alloc(2004,mill_S) + 3.21156252333663*alloc(2005,mill_H) + 1.60578126166832*alloc(2005,mill_L)
     
      + 11.2404688316782*alloc(2005,mill_S) + 3.21156252333663*alloc(2006,mill_H) + 1.60578126166832*alloc(2006,mill_L) + 11.2404688316782*alloc(2006,mill_S) + 3.21156252333663*alloc(2007,mill_H) + 1.60578126166832*alloc(2007,mill_L)
     
      + 11.2404688316782*alloc(2007,mill_S) + 3.21156252333663*alloc(2008,mill_H) + 1.60578126166832*alloc(2008,mill_L) + 11.2404688316782*alloc(2008,mill_S) + 3.21156252333663*alloc(2009,mill_H) + 1.60578126166832*alloc(2009,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 305
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(2009,mill_S) + 3.21156252333663*alloc(2010,mill_H) + 1.60578126166832*alloc(2010,mill_L) + 11.2404688316782*alloc(2010,mill_S) + 3.21156252333663*alloc(2011,mill_H) + 1.60578126166832*alloc(2011,mill_L)
     
      + 11.2404688316782*alloc(2011,mill_S) + 3.21156252333663*alloc(2032,mill_H) + 1.60578126166832*alloc(2032,mill_L) + 11.2404688316782*alloc(2032,mill_S) + 3.21156252333663*alloc(2033,mill_H) + 1.60578126166832*alloc(2033,mill_L)
     
      + 11.2404688316782*alloc(2033,mill_S) + 3.21156252333663*alloc(2034,mill_H) + 1.60578126166832*alloc(2034,mill_L) + 11.2404688316782*alloc(2034,mill_S) + 3.21156252333663*alloc(2035,mill_H) + 1.60578126166832*alloc(2035,mill_L)
     
      + 11.2404688316782*alloc(2035,mill_S) + 3.21156252333663*alloc(2036,mill_H) + 1.60578126166832*alloc(2036,mill_L) + 11.2404688316782*alloc(2036,mill_S) + 3.21156252333663*alloc(2037,mill_H) + 1.60578126166832*alloc(2037,mill_L)
     
      + 11.2404688316782*alloc(2037,mill_S) + 3.21156252333663*alloc(2038,mill_H) + 1.60578126166832*alloc(2038,mill_L) + 11.2404688316782*alloc(2038,mill_S) + 3.21156252333663*alloc(2039,mill_H) + 1.60578126166832*alloc(2039,mill_L)
     
      + 11.2404688316782*alloc(2039,mill_S) + 3.21156252333663*alloc(2040,mill_H) + 1.60578126166832*alloc(2040,mill_L) + 11.2404688316782*alloc(2040,mill_S) + 3.21156252333663*alloc(2041,mill_H) + 1.60578126166832*alloc(2041,mill_L)
     
      + 11.2404688316782*alloc(2041,mill_S) + 3.21156252333663*alloc(2042,mill_H) + 1.60578126166832*alloc(2042,mill_L) + 11.2404688316782*alloc(2042,mill_S) + 3.21156252333663*alloc(2043,mill_H) + 1.60578126166832*alloc(2043,mill_L)
     
      + 11.2404688316782*alloc(2043,mill_S) + 3.21156252333663*alloc(2044,mill_H) + 1.60578126166832*alloc(2044,mill_L) + 11.2404688316782*alloc(2044,mill_S) + 3.21156252333663*alloc(2045,mill_H) + 1.60578126166832*alloc(2045,mill_L)
     
      + 11.2404688316782*alloc(2045,mill_S) + 3.21156252333663*alloc(2046,mill_H) + 1.60578126166832*alloc(2046,mill_L) + 11.2404688316782*alloc(2046,mill_S) + 3.21156252333663*alloc(2047,mill_H) + 1.60578126166832*alloc(2047,mill_L)
     
      + 11.2404688316782*alloc(2047,mill_S) + 3.21156252333663*alloc(2049,mill_H) + 1.60578126166832*alloc(2049,mill_L) + 11.2404688316782*alloc(2049,mill_S) + 3.21156252333663*alloc(2050,mill_H) + 1.60578126166832*alloc(2050,mill_L)
     
      + 11.2404688316782*alloc(2050,mill_S) + 3.21156252333663*alloc(2051,mill_H) + 1.60578126166832*alloc(2051,mill_L) + 11.2404688316782*alloc(2051,mill_S) + 3.21156252333663*alloc(2072,mill_H) + 1.60578126166832*alloc(2072,mill_L)
     
      + 11.2404688316782*alloc(2072,mill_S) + 3.21156252333663*alloc(2073,mill_H) + 1.60578126166832*alloc(2073,mill_L) + 11.2404688316782*alloc(2073,mill_S) + 3.21156252333663*alloc(2074,mill_H) + 1.60578126166832*alloc(2074,mill_L)
     
      + 11.2404688316782*alloc(2074,mill_S) + 3.21156252333663*alloc(2075,mill_H) + 1.60578126166832*alloc(2075,mill_L) + 11.2404688316782*alloc(2075,mill_S) + 3.21156252333663*alloc(2076,mill_H) + 1.60578126166832*alloc(2076,mill_L)
     
      + 11.2404688316782*alloc(2076,mill_S) + 3.21156252333663*alloc(2077,mill_H) + 1.60578126166832*alloc(2077,mill_L) + 11.2404688316782*alloc(2077,mill_S) + 3.21156252333663*alloc(2078,mill_H) + 1.60578126166832*alloc(2078,mill_L)
     
      + 11.2404688316782*alloc(2078,mill_S) + 3.21156252333663*alloc(2079,mill_H) + 1.60578126166832*alloc(2079,mill_L) + 11.2404688316782*alloc(2079,mill_S) + 3.21156252333663*alloc(2080,mill_H) + 1.60578126166832*alloc(2080,mill_L)
     
      + 11.2404688316782*alloc(2080,mill_S) + 3.21156252333663*alloc(2081,mill_H) + 1.60578126166832*alloc(2081,mill_L) + 11.2404688316782*alloc(2081,mill_S) + 3.21156252333663*alloc(2082,mill_H) + 1.60578126166832*alloc(2082,mill_L)
     
      + 11.2404688316782*alloc(2082,mill_S) + 3.21156252333663*alloc(2083,mill_H) + 1.60578126166832*alloc(2083,mill_L) + 11.2404688316782*alloc(2083,mill_S) + 3.21156252333663*alloc(2084,mill_H) + 1.60578126166832*alloc(2084,mill_L)
     
      + 11.2404688316782*alloc(2084,mill_S) + 3.21156252333663*alloc(2085,mill_H) + 1.60578126166832*alloc(2085,mill_L) + 11.2404688316782*alloc(2085,mill_S) + 3.21156252333663*alloc(2086,mill_H) + 1.60578126166832*alloc(2086,mill_L)
     
      + 11.2404688316782*alloc(2086,mill_S) + 3.21156252333663*alloc(2088,mill_H) + 1.60578126166832*alloc(2088,mill_L) + 11.2404688316782*alloc(2088,mill_S) + 3.21156252333663*alloc(2089,mill_H) + 1.60578126166832*alloc(2089,mill_L)
     
      + 11.2404688316782*alloc(2089,mill_S) + 3.21156252333663*alloc(2090,mill_H) + 1.60578126166832*alloc(2090,mill_L) + 11.2404688316782*alloc(2090,mill_S) + 3.21156252333663*alloc(2110,mill_H) + 1.60578126166832*alloc(2110,mill_L)
     
      + 11.2404688316782*alloc(2110,mill_S) + 3.21156252333663*alloc(2111,mill_H) + 1.60578126166832*alloc(2111,mill_L) + 11.2404688316782*alloc(2111,mill_S) + 3.21156252333663*alloc(2112,mill_H) + 1.60578126166832*alloc(2112,mill_L)
     
      + 11.2404688316782*alloc(2112,mill_S) + 3.21156252333663*alloc(2114,mill_H) + 1.60578126166832*alloc(2114,mill_L) + 11.2404688316782*alloc(2114,mill_S) + 3.21156252333663*alloc(2115,mill_H) + 1.60578126166832*alloc(2115,mill_L)
     
      + 11.2404688316782*alloc(2115,mill_S) + 3.21156252333663*alloc(2116,mill_H) + 1.60578126166832*alloc(2116,mill_L) + 11.2404688316782*alloc(2116,mill_S) + 3.21156252333663*alloc(2117,mill_H) + 1.60578126166832*alloc(2117,mill_L)
     
      + 11.2404688316782*alloc(2117,mill_S) + 3.21156252333663*alloc(2118,mill_H) + 1.60578126166832*alloc(2118,mill_L) + 11.2404688316782*alloc(2118,mill_S) + 3.21156252333663*alloc(2119,mill_H) + 1.60578126166832*alloc(2119,mill_L)
     
      + 11.2404688316782*alloc(2119,mill_S) + 3.21156252333663*alloc(2120,mill_H) + 1.60578126166832*alloc(2120,mill_L) + 11.2404688316782*alloc(2120,mill_S) + 3.21156252333663*alloc(2121,mill_H) + 1.60578126166832*alloc(2121,mill_L)
     
      + 11.2404688316782*alloc(2121,mill_S) + 3.21156252333663*alloc(2122,mill_H) + 1.60578126166832*alloc(2122,mill_L) + 11.2404688316782*alloc(2122,mill_S) + 3.21156252333663*alloc(2123,mill_H) + 1.60578126166832*alloc(2123,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 306
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(2123,mill_S) + 3.21156252333663*alloc(2124,mill_H) + 1.60578126166832*alloc(2124,mill_L) + 11.2404688316782*alloc(2124,mill_S) + 3.21156252333663*alloc(2127,mill_H) + 1.60578126166832*alloc(2127,mill_L)
     
      + 11.2404688316782*alloc(2127,mill_S) + 3.21156252333663*alloc(2150,mill_H) + 1.60578126166832*alloc(2150,mill_L) + 11.2404688316782*alloc(2150,mill_S) + 3.21156252333663*alloc(2151,mill_H) + 1.60578126166832*alloc(2151,mill_L)
     
      + 11.2404688316782*alloc(2151,mill_S) + 3.21156252333663*alloc(2152,mill_H) + 1.60578126166832*alloc(2152,mill_L) + 11.2404688316782*alloc(2152,mill_S) + 3.21156252333663*alloc(2153,mill_H) + 1.60578126166832*alloc(2153,mill_L)
     
      + 11.2404688316782*alloc(2153,mill_S) + 3.21156252333663*alloc(2154,mill_H) + 1.60578126166832*alloc(2154,mill_L) + 11.2404688316782*alloc(2154,mill_S) + 3.21156252333663*alloc(2155,mill_H) + 1.60578126166832*alloc(2155,mill_L)
     
      + 11.2404688316782*alloc(2155,mill_S) + 3.21156252333663*alloc(2156,mill_H) + 1.60578126166832*alloc(2156,mill_L) + 11.2404688316782*alloc(2156,mill_S) + 3.21156252333663*alloc(2157,mill_H) + 1.60578126166832*alloc(2157,mill_L)
     
      + 11.2404688316782*alloc(2157,mill_S) + 3.21156252333663*alloc(2158,mill_H) + 1.60578126166832*alloc(2158,mill_L) + 11.2404688316782*alloc(2158,mill_S) + 3.21156252333663*alloc(2159,mill_H) + 1.60578126166832*alloc(2159,mill_L)
     
      + 11.2404688316782*alloc(2159,mill_S) + 3.21156252333663*alloc(2160,mill_H) + 1.60578126166832*alloc(2160,mill_L) + 11.2404688316782*alloc(2160,mill_S) + 3.21156252333663*alloc(2161,mill_H) + 1.60578126166832*alloc(2161,mill_L)
     
      + 11.2404688316782*alloc(2161,mill_S) + 3.21156252333663*alloc(2162,mill_H) + 1.60578126166832*alloc(2162,mill_L) + 11.2404688316782*alloc(2162,mill_S) + 3.21156252333663*alloc(2163,mill_H) + 1.60578126166832*alloc(2163,mill_L)
     
      + 11.2404688316782*alloc(2163,mill_S) + 3.21156252333663*alloc(2164,mill_H) + 1.60578126166832*alloc(2164,mill_L) + 11.2404688316782*alloc(2164,mill_S) + 3.21156252333663*alloc(2165,mill_H) + 1.60578126166832*alloc(2165,mill_L)
     
      + 11.2404688316782*alloc(2165,mill_S) + 3.21156252333663*alloc(2166,mill_H) + 1.60578126166832*alloc(2166,mill_L) + 11.2404688316782*alloc(2166,mill_S) + 3.21156252333663*alloc(2167,mill_H) + 1.60578126166832*alloc(2167,mill_L)
     
      + 11.2404688316782*alloc(2167,mill_S) + 3.21156252333663*alloc(2189,mill_H) + 1.60578126166832*alloc(2189,mill_L) + 11.2404688316782*alloc(2189,mill_S) + 3.21156252333663*alloc(2193,mill_H) + 1.60578126166832*alloc(2193,mill_L)
     
      + 11.2404688316782*alloc(2193,mill_S) + 3.21156252333663*alloc(2194,mill_H) + 1.60578126166832*alloc(2194,mill_L) + 11.2404688316782*alloc(2194,mill_S) + 3.21156252333663*alloc(2195,mill_H) + 1.60578126166832*alloc(2195,mill_L)
     
      + 11.2404688316782*alloc(2195,mill_S) + 3.21156252333663*alloc(2196,mill_H) + 1.60578126166832*alloc(2196,mill_L) + 11.2404688316782*alloc(2196,mill_S) + 3.21156252333663*alloc(2197,mill_H) + 1.60578126166832*alloc(2197,mill_L)
     
      + 11.2404688316782*alloc(2197,mill_S) + 3.21156252333663*alloc(2198,mill_H) + 1.60578126166832*alloc(2198,mill_L) + 11.2404688316782*alloc(2198,mill_S) + 3.21156252333663*alloc(2200,mill_H) + 1.60578126166832*alloc(2200,mill_L)
     
      + 11.2404688316782*alloc(2200,mill_S) + 3.21156252333663*alloc(2201,mill_H) + 1.60578126166832*alloc(2201,mill_L) + 11.2404688316782*alloc(2201,mill_S) + 3.21156252333663*alloc(2202,mill_H) + 1.60578126166832*alloc(2202,mill_L)
     
      + 11.2404688316782*alloc(2202,mill_S) + 3.21156252333663*alloc(2203,mill_H) + 1.60578126166832*alloc(2203,mill_L) + 11.2404688316782*alloc(2203,mill_S) + 3.21156252333663*alloc(2204,mill_H) + 1.60578126166832*alloc(2204,mill_L)
     
      + 11.2404688316782*alloc(2204,mill_S) + 3.21156252333663*alloc(2206,mill_H) + 1.60578126166832*alloc(2206,mill_L) + 11.2404688316782*alloc(2206,mill_S) + 3.21156252333663*alloc(2232,mill_H) + 1.60578126166832*alloc(2232,mill_L)
     
      + 11.2404688316782*alloc(2232,mill_S) + 3.21156252333663*alloc(2233,mill_H) + 1.60578126166832*alloc(2233,mill_L) + 11.2404688316782*alloc(2233,mill_S) + 3.21156252333663*alloc(2234,mill_H) + 1.60578126166832*alloc(2234,mill_L)
     
      + 11.2404688316782*alloc(2234,mill_S) + 3.21156252333663*alloc(2235,mill_H) + 1.60578126166832*alloc(2235,mill_L) + 11.2404688316782*alloc(2235,mill_S) + 3.21156252333663*alloc(2236,mill_H) + 1.60578126166832*alloc(2236,mill_L)
     
      + 11.2404688316782*alloc(2236,mill_S) + 3.21156252333663*alloc(2237,mill_H) + 1.60578126166832*alloc(2237,mill_L) + 11.2404688316782*alloc(2237,mill_S) + 3.21156252333663*alloc(2238,mill_H) + 1.60578126166832*alloc(2238,mill_L)
     
      + 11.2404688316782*alloc(2238,mill_S) + 3.21156252333663*alloc(2239,mill_H) + 1.60578126166832*alloc(2239,mill_L) + 11.2404688316782*alloc(2239,mill_S) + 3.21156252333663*alloc(2240,mill_H) + 1.60578126166832*alloc(2240,mill_L)
     
      + 11.2404688316782*alloc(2240,mill_S) + 3.21156252333663*alloc(2241,mill_H) + 1.60578126166832*alloc(2241,mill_L) + 11.2404688316782*alloc(2241,mill_S) + 3.21156252333663*alloc(2242,mill_H) + 1.60578126166832*alloc(2242,mill_L)
     
      + 11.2404688316782*alloc(2242,mill_S) + 3.21156252333663*alloc(2243,mill_H) + 1.60578126166832*alloc(2243,mill_L) + 11.2404688316782*alloc(2243,mill_S) + 3.21156252333663*alloc(2244,mill_H) + 1.60578126166832*alloc(2244,mill_L)
     
      + 11.2404688316782*alloc(2244,mill_S) + 3.21156252333663*alloc(2271,mill_H) + 1.60578126166832*alloc(2271,mill_L) + 11.2404688316782*alloc(2271,mill_S) + 3.21156252333663*alloc(2274,mill_H) + 1.60578126166832*alloc(2274,mill_L)
     
      + 11.2404688316782*alloc(2274,mill_S) + 3.21156252333663*alloc(2275,mill_H) + 1.60578126166832*alloc(2275,mill_L) + 11.2404688316782*alloc(2275,mill_S) + 3.21156252333663*alloc(2276,mill_H) + 1.60578126166832*alloc(2276,mill_L)
     
      + 11.2404688316782*alloc(2276,mill_S) + 3.21156252333663*alloc(2277,mill_H) + 1.60578126166832*alloc(2277,mill_L) + 11.2404688316782*alloc(2277,mill_S) + 3.21156252333663*alloc(2278,mill_H) + 1.60578126166832*alloc(2278,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 307
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(2278,mill_S) + 3.21156252333663*alloc(2281,mill_H) + 1.60578126166832*alloc(2281,mill_L) + 11.2404688316782*alloc(2281,mill_S) + 3.21156252333663*alloc(2282,mill_H) + 1.60578126166832*alloc(2282,mill_L)
     
      + 11.2404688316782*alloc(2282,mill_S) + 3.21156252333663*alloc(2283,mill_H) + 1.60578126166832*alloc(2283,mill_L) + 11.2404688316782*alloc(2283,mill_S) + 3.21156252333663*alloc(2284,mill_H) + 1.60578126166832*alloc(2284,mill_L)
     
      + 11.2404688316782*alloc(2284,mill_S) + 3.21156252333663*alloc(2313,mill_H) + 1.60578126166832*alloc(2313,mill_L) + 11.2404688316782*alloc(2313,mill_S) + 3.21156252333663*alloc(2314,mill_H) + 1.60578126166832*alloc(2314,mill_L)
     
      + 11.2404688316782*alloc(2314,mill_S) + 3.21156252333663*alloc(2315,mill_H) + 1.60578126166832*alloc(2315,mill_L) + 11.2404688316782*alloc(2315,mill_S) + 3.21156252333663*alloc(2316,mill_H) + 1.60578126166832*alloc(2316,mill_L)
     
      + 11.2404688316782*alloc(2316,mill_S) + 3.21156252333663*alloc(2317,mill_H) + 1.60578126166832*alloc(2317,mill_L) + 11.2404688316782*alloc(2317,mill_S) + 3.21156252333663*alloc(2318,mill_H) + 1.60578126166832*alloc(2318,mill_L)
     
      + 11.2404688316782*alloc(2318,mill_S) + 3.21156252333663*alloc(2319,mill_H) + 1.60578126166832*alloc(2319,mill_L) + 11.2404688316782*alloc(2319,mill_S) + 3.21156252333663*alloc(2320,mill_H) + 1.60578126166832*alloc(2320,mill_L)
     
      + 11.2404688316782*alloc(2320,mill_S) + 3.21156252333663*alloc(2321,mill_H) + 1.60578126166832*alloc(2321,mill_L) + 11.2404688316782*alloc(2321,mill_S) + 3.21156252333663*alloc(2322,mill_H) + 1.60578126166832*alloc(2322,mill_L)
     
      + 11.2404688316782*alloc(2322,mill_S) + 3.21156252333663*alloc(2323,mill_H) + 1.60578126166832*alloc(2323,mill_L) + 11.2404688316782*alloc(2323,mill_S) + 3.21156252333663*alloc(2324,mill_H) + 1.60578126166832*alloc(2324,mill_L)
     
      + 11.2404688316782*alloc(2324,mill_S) + 3.21156252333663*alloc(2325,mill_H) + 1.60578126166832*alloc(2325,mill_L) + 11.2404688316782*alloc(2325,mill_S) + 3.21156252333663*alloc(2352,mill_H) + 1.60578126166832*alloc(2352,mill_L)
     
      + 11.2404688316782*alloc(2352,mill_S) + 3.21156252333663*alloc(2353,mill_H) + 1.60578126166832*alloc(2353,mill_L) + 11.2404688316782*alloc(2353,mill_S) + 3.21156252333663*alloc(2354,mill_H) + 1.60578126166832*alloc(2354,mill_L)
     
      + 11.2404688316782*alloc(2354,mill_S) + 3.21156252333663*alloc(2355,mill_H) + 1.60578126166832*alloc(2355,mill_L) + 11.2404688316782*alloc(2355,mill_S) + 3.21156252333663*alloc(2356,mill_H) + 1.60578126166832*alloc(2356,mill_L)
     
      + 11.2404688316782*alloc(2356,mill_S) + 3.21156252333663*alloc(2357,mill_H) + 1.60578126166832*alloc(2357,mill_L) + 11.2404688316782*alloc(2357,mill_S) + 3.21156252333663*alloc(2358,mill_H) + 1.60578126166832*alloc(2358,mill_L)
     
      + 11.2404688316782*alloc(2358,mill_S) + 3.21156252333663*alloc(2359,mill_H) + 1.60578126166832*alloc(2359,mill_L) + 11.2404688316782*alloc(2359,mill_S) + 3.21156252333663*alloc(2361,mill_H) + 1.60578126166832*alloc(2361,mill_L)
     
      + 11.2404688316782*alloc(2361,mill_S) + 3.21156252333663*alloc(2362,mill_H) + 1.60578126166832*alloc(2362,mill_L) + 11.2404688316782*alloc(2362,mill_S) + 3.21156252333663*alloc(2363,mill_H) + 1.60578126166832*alloc(2363,mill_L)
     
      + 11.2404688316782*alloc(2363,mill_S) + 3.21156252333663*alloc(2364,mill_H) + 1.60578126166832*alloc(2364,mill_L) + 11.2404688316782*alloc(2364,mill_S) + 3.21156252333663*alloc(2365,mill_H) + 1.60578126166832*alloc(2365,mill_L)
     
      + 11.2404688316782*alloc(2365,mill_S) + 3.21156252333663*alloc(2393,mill_H) + 1.60578126166832*alloc(2393,mill_L) + 11.2404688316782*alloc(2393,mill_S) + 3.21156252333663*alloc(2395,mill_H) + 1.60578126166832*alloc(2395,mill_L)
     
      + 11.2404688316782*alloc(2395,mill_S) + 3.21156252333663*alloc(2396,mill_H) + 1.60578126166832*alloc(2396,mill_L) + 11.2404688316782*alloc(2396,mill_S) + 3.21156252333663*alloc(2401,mill_H) + 1.60578126166832*alloc(2401,mill_L)
     
      + 11.2404688316782*alloc(2401,mill_S) + 3.21156252333663*alloc(2402,mill_H) + 1.60578126166832*alloc(2402,mill_L) + 11.2404688316782*alloc(2402,mill_S) + 3.21156252333663*alloc(2403,mill_H) + 1.60578126166832*alloc(2403,mill_L)
     
      + 11.2404688316782*alloc(2403,mill_S) + 3.21156252333663*alloc(2404,mill_H) + 1.60578126166832*alloc(2404,mill_L) + 11.2404688316782*alloc(2404,mill_S) + 3.21156252333663*alloc(2441,mill_H) + 1.60578126166832*alloc(2441,mill_L)
     
      + 11.2404688316782*alloc(2441,mill_S) + 3.21156252333663*alloc(2442,mill_H) + 1.60578126166832*alloc(2442,mill_L) + 11.2404688316782*alloc(2442,mill_S) + 3.21156252333663*alloc(2443,mill_H) + 1.60578126166832*alloc(2443,mill_L)
     
      + 11.2404688316782*alloc(2443,mill_S) + 3.21156252333663*alloc(2481,mill_H) + 1.60578126166832*alloc(2481,mill_L) + 11.2404688316782*alloc(2481,mill_S) + 3.21156252333663*alloc(2482,mill_H) + 1.60578126166832*alloc(2482,mill_L)
     
      + 11.2404688316782*alloc(2482,mill_S) + 3.21156252333663*alloc(2483,mill_H) + 1.60578126166832*alloc(2483,mill_L) + 11.2404688316782*alloc(2483,mill_S) + 3.21156252333663*alloc(2520,mill_H) + 1.60578126166832*alloc(2520,mill_L)
     
      + 11.2404688316782*alloc(2520,mill_S) + 3.21156252333663*alloc(2521,mill_H) + 1.60578126166832*alloc(2521,mill_L) + 11.2404688316782*alloc(2521,mill_S) + 3.21156252333663*alloc(2522,mill_H) + 1.60578126166832*alloc(2522,mill_L)
     
      + 11.2404688316782*alloc(2522,mill_S) + 3.21156252333663*alloc(2523,mill_H) + 1.60578126166832*alloc(2523,mill_L) + 11.2404688316782*alloc(2523,mill_S) + 3.21156252333663*alloc(2559,mill_H) + 1.60578126166832*alloc(2559,mill_L)
     
      + 11.2404688316782*alloc(2559,mill_S) + 3.21156252333663*alloc(2560,mill_H) + 1.60578126166832*alloc(2560,mill_L) + 11.2404688316782*alloc(2560,mill_S) + 3.21156252333663*alloc(2561,mill_H) + 1.60578126166832*alloc(2561,mill_L)
     
      + 11.2404688316782*alloc(2561,mill_S) + 3.21156252333663*alloc(2562,mill_H) + 1.60578126166832*alloc(2562,mill_L) + 11.2404688316782*alloc(2562,mill_S) + 3.21156252333663*alloc(2563,mill_H) + 1.60578126166832*alloc(2563,mill_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 308
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 11.2404688316782*alloc(2563,mill_S) + 3.21156252333663*alloc(2598,mill_H) + 1.60578126166832*alloc(2598,mill_L) + 11.2404688316782*alloc(2598,mill_S) + 3.21156252333663*alloc(2599,mill_H) + 1.60578126166832*alloc(2599,mill_L)
     
      + 11.2404688316782*alloc(2599,mill_S) + 3.21156252333663*alloc(2600,mill_H) + 1.60578126166832*alloc(2600,mill_L) + 11.2404688316782*alloc(2600,mill_S) + 3.21156252333663*alloc(2601,mill_H) + 1.60578126166832*alloc(2601,mill_L)
     
      + 11.2404688316782*alloc(2601,mill_S) + 3.21156252333663*alloc(2637,mill_H) + 1.60578126166832*alloc(2637,mill_L) + 11.2404688316782*alloc(2637,mill_S) + 3.21156252333663*alloc(2638,mill_H) + 1.60578126166832*alloc(2638,mill_L)
     
      + 11.2404688316782*alloc(2638,mill_S) + 3.21156252333663*alloc(2639,mill_H) + 1.60578126166832*alloc(2639,mill_L) + 11.2404688316782*alloc(2639,mill_S) + 3.21156252333663*alloc(2640,mill_H) + 1.60578126166832*alloc(2640,mill_L)
     
      + 11.2404688316782*alloc(2640,mill_S) + 3.21156252333663*alloc(2676,mill_H) + 1.60578126166832*alloc(2676,mill_L) + 11.2404688316782*alloc(2676,mill_S) + 3.21156252333663*alloc(2677,mill_H) + 1.60578126166832*alloc(2677,mill_L)
     
      + 11.2404688316782*alloc(2677,mill_S) + 3.21156252333663*alloc(2678,mill_H) + 1.60578126166832*alloc(2678,mill_L) + 11.2404688316782*alloc(2678,mill_S) + 3.21156252333663*alloc(2679,mill_H) + 1.60578126166832*alloc(2679,mill_L)
     
      + 11.2404688316782*alloc(2679,mill_S) + 3.21156252333663*alloc(2715,mill_H) + 1.60578126166832*alloc(2715,mill_L) + 11.2404688316782*alloc(2715,mill_S) + 3.21156252333663*alloc(2716,mill_H) + 1.60578126166832*alloc(2716,mill_L)
     
      + 11.2404688316782*alloc(2716,mill_S) + 3.21156252333663*alloc(2717,mill_H) + 1.60578126166832*alloc(2717,mill_L) + 11.2404688316782*alloc(2717,mill_S) + 3.21156252333663*alloc(2754,mill_H) + 1.60578126166832*alloc(2754,mill_L)
     
      + 11.2404688316782*alloc(2754,mill_S) + 3.21156252333663*alloc(2755,mill_H) + 1.60578126166832*alloc(2755,mill_L) + 11.2404688316782*alloc(2755,mill_S) + 3.21156252333663*alloc(2756,mill_H) + 1.60578126166832*alloc(2756,mill_L)
     
      + 11.2404688316782*alloc(2756,mill_S) - adm_slack(MI02_ART2_mill,mill,plus) + adm_slack(MI02_ART2_mill,mill,minus) =E= 5234.84691303871 ; (LHS = 0, INFES = 5234.84691303871 ****)
     
adm_stat_slack(MI02_ART2_ofib,ofib)..  0.831850255163139*alloc(1454,ofib_L) + 0.831850255163139*alloc(1460,ofib_L) + 0.831850255163139*alloc(1461,ofib_L) + 0.831850255163139*alloc(1490,ofib_L) + 0.831850255163139*alloc(1492,ofib_L)
     
      + 0.831850255163139*alloc(1493,ofib_L) + 0.831850255163139*alloc(1500,ofib_L) + 0.831850255163139*alloc(1527,ofib_L) + 0.831850255163139*alloc(1530,ofib_L) + 0.831850255163139*alloc(1531,ofib_L) + 0.831850255163139*alloc(1532,ofib_L)
     
      + 0.831850255163139*alloc(1539,ofib_L) + 0.831850255163139*alloc(1565,ofib_L) + 0.831850255163139*alloc(1569,ofib_L) + 0.831850255163139*alloc(1570,ofib_L) + 0.831850255163139*alloc(1571,ofib_L) + 0.831850255163139*alloc(1572,ofib_L)
     
      + 0.831850255163139*alloc(1578,ofib_L) + 0.831850255163139*alloc(1579,ofib_L) + 0.831850255163139*alloc(1603,ofib_L) + 0.831850255163139*alloc(1604,ofib_L) + 0.831850255163139*alloc(1608,ofib_L) + 0.831850255163139*alloc(1609,ofib_L)
     
      + 0.831850255163139*alloc(1610,ofib_L) + 0.831850255163139*alloc(1611,ofib_L) + 0.831850255163139*alloc(1612,ofib_L) + 0.831850255163139*alloc(1618,ofib_L) + 0.831850255163139*alloc(1647,ofib_L) + 0.831850255163139*alloc(1648,ofib_L)
     
      + 0.831850255163139*alloc(1649,ofib_L) + 0.831850255163139*alloc(1650,ofib_L) + 0.831850255163139*alloc(1651,ofib_L) + 0.831850255163139*alloc(1652,ofib_L) + 0.831850255163139*alloc(1653,ofib_L) + 0.831850255163139*alloc(1654,ofib_L)
     
      + 0.831850255163139*alloc(1657,ofib_L) + 0.831850255163139*alloc(1686,ofib_L) + 0.831850255163139*alloc(1687,ofib_L) + 0.831850255163139*alloc(1688,ofib_L) + 0.831850255163139*alloc(1689,ofib_L) + 0.831850255163139*alloc(1690,ofib_L)
     
      + 0.831850255163139*alloc(1691,ofib_L) + 0.831850255163139*alloc(1692,ofib_L) + 0.831850255163139*alloc(1693,ofib_L) + 0.831850255163139*alloc(1697,ofib_L) + 0.831850255163139*alloc(1725,ofib_L) + 0.831850255163139*alloc(1726,ofib_L)
     
      + 0.831850255163139*alloc(1727,ofib_L) + 0.831850255163139*alloc(1728,ofib_L) + 0.831850255163139*alloc(1729,ofib_L) + 0.831850255163139*alloc(1730,ofib_L) + 0.831850255163139*alloc(1731,ofib_L) + 0.831850255163139*alloc(1732,ofib_L)
     
      + 0.831850255163139*alloc(1735,ofib_L) + 0.831850255163139*alloc(1736,ofib_L) + 0.831850255163139*alloc(1764,ofib_L) + 0.831850255163139*alloc(1765,ofib_L) + 0.831850255163139*alloc(1766,ofib_L) + 0.831850255163139*alloc(1767,ofib_L)
     
      + 0.831850255163139*alloc(1768,ofib_L) + 0.831850255163139*alloc(1769,ofib_L) + 0.831850255163139*alloc(1770,ofib_L) + 0.831850255163139*alloc(1771,ofib_L) + 0.831850255163139*alloc(1774,ofib_L) + 0.831850255163139*alloc(1775,ofib_L)
     
      + 0.831850255163139*alloc(1805,ofib_L) + 0.831850255163139*alloc(1806,ofib_L) + 0.831850255163139*alloc(1807,ofib_L) + 0.831850255163139*alloc(1808,ofib_L) + 0.831850255163139*alloc(1809,ofib_L) + 0.831850255163139*alloc(1810,ofib_L)
     
      + 0.831850255163139*alloc(1811,ofib_L) + 0.831850255163139*alloc(1839,ofib_L) + 0.831850255163139*alloc(1842,ofib_L) + 0.831850255163139*alloc(1845,ofib_L) + 0.831850255163139*alloc(1846,ofib_L) + 0.831850255163139*alloc(1847,ofib_L)
     
      + 0.831850255163139*alloc(1848,ofib_L) + 0.831850255163139*alloc(1849,ofib_L) + 0.831850255163139*alloc(1850,ofib_L) + 0.831850255163139*alloc(1851,ofib_L) + 0.831850255163139*alloc(1853,ofib_L) + 0.831850255163139*alloc(1876,ofib_L)
     
      + 0.831850255163139*alloc(1879,ofib_L) + 0.831850255163139*alloc(1880,ofib_L) + 0.831850255163139*alloc(1881,ofib_L) + 0.831850255163139*alloc(1882,ofib_L) + 0.831850255163139*alloc(1883,ofib_L) + 0.831850255163139*alloc(1884,ofib_L)
     
      + 0.831850255163139*alloc(1885,ofib_L) + 0.831850255163139*alloc(1886,ofib_L) + 0.831850255163139*alloc(1887,ofib_L) + 0.831850255163139*alloc(1888,ofib_L) + 0.831850255163139*alloc(1889,ofib_L) + 0.831850255163139*alloc(1890,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 309
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 0.831850255163139*alloc(1891,ofib_L) + 0.831850255163139*alloc(1915,ofib_L) + 0.831850255163139*alloc(1918,ofib_L) + 0.831850255163139*alloc(1919,ofib_L) + 0.831850255163139*alloc(1920,ofib_L) + 0.831850255163139*alloc(1921,ofib_L)
     
      + 0.831850255163139*alloc(1922,ofib_L) + 0.831850255163139*alloc(1923,ofib_L) + 0.831850255163139*alloc(1924,ofib_L) + 0.831850255163139*alloc(1925,ofib_L) + 0.831850255163139*alloc(1926,ofib_L) + 0.831850255163139*alloc(1927,ofib_L)
     
      + 0.831850255163139*alloc(1928,ofib_L) + 0.831850255163139*alloc(1929,ofib_L) + 0.831850255163139*alloc(1930,ofib_L) + 0.831850255163139*alloc(1931,ofib_L) + 0.831850255163139*alloc(1953,ofib_L) + 0.831850255163139*alloc(1954,ofib_L)
     
      + 0.831850255163139*alloc(1955,ofib_L) + 0.831850255163139*alloc(1956,ofib_L) + 0.831850255163139*alloc(1957,ofib_L) + 0.831850255163139*alloc(1958,ofib_L) + 0.831850255163139*alloc(1959,ofib_L) + 0.831850255163139*alloc(1960,ofib_L)
     
      + 0.831850255163139*alloc(1961,ofib_L) + 0.831850255163139*alloc(1962,ofib_L) + 0.831850255163139*alloc(1963,ofib_L) + 0.831850255163139*alloc(1964,ofib_L) + 0.831850255163139*alloc(1965,ofib_L) + 0.831850255163139*alloc(1966,ofib_L)
     
      + 0.831850255163139*alloc(1967,ofib_L) + 0.831850255163139*alloc(1968,ofib_L) + 0.831850255163139*alloc(1969,ofib_L) + 0.831850255163139*alloc(1970,ofib_L) + 0.831850255163139*alloc(1971,ofib_L) + 0.831850255163139*alloc(1990,ofib_L)
     
      + 0.831850255163139*alloc(1992,ofib_L) + 0.831850255163139*alloc(1993,ofib_L) + 0.831850255163139*alloc(1994,ofib_L) + 0.831850255163139*alloc(1996,ofib_L) + 0.831850255163139*alloc(1997,ofib_L) + 0.831850255163139*alloc(1998,ofib_L)
     
      + 0.831850255163139*alloc(1999,ofib_L) + 0.831850255163139*alloc(2000,ofib_L) + 0.831850255163139*alloc(2001,ofib_L) + 0.831850255163139*alloc(2002,ofib_L) + 0.831850255163139*alloc(2003,ofib_L) + 0.831850255163139*alloc(2004,ofib_L)
     
      + 0.831850255163139*alloc(2005,ofib_L) + 0.831850255163139*alloc(2006,ofib_L) + 0.831850255163139*alloc(2007,ofib_L) + 0.831850255163139*alloc(2008,ofib_L) + 0.831850255163139*alloc(2009,ofib_L) + 0.831850255163139*alloc(2010,ofib_L)
     
      + 0.831850255163139*alloc(2011,ofib_L) + 0.831850255163139*alloc(2032,ofib_L) + 0.831850255163139*alloc(2033,ofib_L) + 0.831850255163139*alloc(2034,ofib_L) + 0.831850255163139*alloc(2035,ofib_L) + 0.831850255163139*alloc(2036,ofib_L)
     
      + 0.831850255163139*alloc(2037,ofib_L) + 0.831850255163139*alloc(2038,ofib_L) + 0.831850255163139*alloc(2039,ofib_L) + 0.831850255163139*alloc(2040,ofib_L) + 0.831850255163139*alloc(2041,ofib_L) + 0.831850255163139*alloc(2042,ofib_L)
     
      + 0.831850255163139*alloc(2043,ofib_L) + 0.831850255163139*alloc(2044,ofib_L) + 0.831850255163139*alloc(2045,ofib_L) + 0.831850255163139*alloc(2046,ofib_L) + 0.831850255163139*alloc(2047,ofib_L) + 0.831850255163139*alloc(2049,ofib_L)
     
      + 0.831850255163139*alloc(2050,ofib_L) + 0.831850255163139*alloc(2051,ofib_L) + 0.831850255163139*alloc(2072,ofib_L) + 0.831850255163139*alloc(2073,ofib_L) + 0.831850255163139*alloc(2074,ofib_L) + 0.831850255163139*alloc(2075,ofib_L)
     
      + 0.831850255163139*alloc(2076,ofib_L) + 0.831850255163139*alloc(2077,ofib_L) + 0.831850255163139*alloc(2078,ofib_L) + 0.831850255163139*alloc(2079,ofib_L) + 0.831850255163139*alloc(2080,ofib_L) + 0.831850255163139*alloc(2081,ofib_L)
     
      + 0.831850255163139*alloc(2082,ofib_L) + 0.831850255163139*alloc(2083,ofib_L) + 0.831850255163139*alloc(2084,ofib_L) + 0.831850255163139*alloc(2085,ofib_L) + 0.831850255163139*alloc(2086,ofib_L) + 0.831850255163139*alloc(2088,ofib_L)
     
      + 0.831850255163139*alloc(2089,ofib_L) + 0.831850255163139*alloc(2090,ofib_L) + 0.831850255163139*alloc(2110,ofib_L) + 0.831850255163139*alloc(2111,ofib_L) + 0.831850255163139*alloc(2112,ofib_L) + 0.831850255163139*alloc(2114,ofib_L)
     
      + 0.831850255163139*alloc(2115,ofib_L) + 0.831850255163139*alloc(2116,ofib_L) + 0.831850255163139*alloc(2117,ofib_L) + 0.831850255163139*alloc(2118,ofib_L) + 0.831850255163139*alloc(2119,ofib_L) + 0.831850255163139*alloc(2120,ofib_L)
     
      + 0.831850255163139*alloc(2121,ofib_L) + 0.831850255163139*alloc(2122,ofib_L) + 0.831850255163139*alloc(2123,ofib_L) + 0.831850255163139*alloc(2124,ofib_L) + 0.831850255163139*alloc(2127,ofib_L) + 0.831850255163139*alloc(2150,ofib_L)
     
      + 0.831850255163139*alloc(2151,ofib_L) + 0.831850255163139*alloc(2152,ofib_L) + 0.831850255163139*alloc(2153,ofib_L) + 0.831850255163139*alloc(2154,ofib_L) + 0.831850255163139*alloc(2155,ofib_L) + 0.831850255163139*alloc(2156,ofib_L)
     
      + 0.831850255163139*alloc(2157,ofib_L) + 0.831850255163139*alloc(2158,ofib_L) + 0.831850255163139*alloc(2159,ofib_L) + 0.831850255163139*alloc(2160,ofib_L) + 0.831850255163139*alloc(2161,ofib_L) + 0.831850255163139*alloc(2162,ofib_L)
     
      + 0.831850255163139*alloc(2163,ofib_L) + 0.831850255163139*alloc(2164,ofib_L) + 0.831850255163139*alloc(2165,ofib_L) + 0.831850255163139*alloc(2166,ofib_L) + 0.831850255163139*alloc(2167,ofib_L) + 0.831850255163139*alloc(2189,ofib_L)
     
      + 0.831850255163139*alloc(2193,ofib_L) + 0.831850255163139*alloc(2194,ofib_L) + 0.831850255163139*alloc(2195,ofib_L) + 0.831850255163139*alloc(2196,ofib_L) + 0.831850255163139*alloc(2197,ofib_L) + 0.831850255163139*alloc(2198,ofib_L)
     
      + 0.831850255163139*alloc(2200,ofib_L) + 0.831850255163139*alloc(2201,ofib_L) + 0.831850255163139*alloc(2202,ofib_L) + 0.831850255163139*alloc(2203,ofib_L) + 0.831850255163139*alloc(2204,ofib_L) + 0.831850255163139*alloc(2206,ofib_L)
     
      + 0.831850255163139*alloc(2232,ofib_L) + 0.831850255163139*alloc(2233,ofib_L) + 0.831850255163139*alloc(2234,ofib_L) + 0.831850255163139*alloc(2235,ofib_L) + 0.831850255163139*alloc(2236,ofib_L) + 0.831850255163139*alloc(2237,ofib_L)
     
      + 0.831850255163139*alloc(2238,ofib_L) + 0.831850255163139*alloc(2239,ofib_L) + 0.831850255163139*alloc(2240,ofib_L) + 0.831850255163139*alloc(2241,ofib_L) + 0.831850255163139*alloc(2242,ofib_L) + 0.831850255163139*alloc(2243,ofib_L)
     
      + 0.831850255163139*alloc(2244,ofib_L) + 0.831850255163139*alloc(2271,ofib_L) + 0.831850255163139*alloc(2274,ofib_L) + 0.831850255163139*alloc(2275,ofib_L) + 0.831850255163139*alloc(2276,ofib_L) + 0.831850255163139*alloc(2277,ofib_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 310
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 0.831850255163139*alloc(2278,ofib_L) + 0.831850255163139*alloc(2281,ofib_L) + 0.831850255163139*alloc(2282,ofib_L) + 0.831850255163139*alloc(2283,ofib_L) + 0.831850255163139*alloc(2284,ofib_L) + 0.831850255163139*alloc(2313,ofib_L)
     
      + 0.831850255163139*alloc(2314,ofib_L) + 0.831850255163139*alloc(2315,ofib_L) + 0.831850255163139*alloc(2316,ofib_L) + 0.831850255163139*alloc(2317,ofib_L) + 0.831850255163139*alloc(2318,ofib_L) + 0.831850255163139*alloc(2319,ofib_L)
     
      + 0.831850255163139*alloc(2320,ofib_L) + 0.831850255163139*alloc(2321,ofib_L) + 0.831850255163139*alloc(2322,ofib_L) + 0.831850255163139*alloc(2323,ofib_L) + 0.831850255163139*alloc(2324,ofib_L) + 0.831850255163139*alloc(2325,ofib_L)
     
      + 0.831850255163139*alloc(2352,ofib_L) + 0.831850255163139*alloc(2353,ofib_L) + 0.831850255163139*alloc(2354,ofib_L) + 0.831850255163139*alloc(2355,ofib_L) + 0.831850255163139*alloc(2356,ofib_L) + 0.831850255163139*alloc(2357,ofib_L)
     
      + 0.831850255163139*alloc(2358,ofib_L) + 0.831850255163139*alloc(2359,ofib_L) + 0.831850255163139*alloc(2361,ofib_L) + 0.831850255163139*alloc(2362,ofib_L) + 0.831850255163139*alloc(2363,ofib_L) + 0.831850255163139*alloc(2364,ofib_L)
     
      + 0.831850255163139*alloc(2365,ofib_L) + 0.831850255163139*alloc(2393,ofib_L) + 0.831850255163139*alloc(2395,ofib_L) + 0.831850255163139*alloc(2396,ofib_L) + 0.831850255163139*alloc(2401,ofib_L) + 0.831850255163139*alloc(2402,ofib_L)
     
      + 0.831850255163139*alloc(2403,ofib_L) + 0.831850255163139*alloc(2404,ofib_L) + 0.831850255163139*alloc(2441,ofib_L) + 0.831850255163139*alloc(2442,ofib_L) + 0.831850255163139*alloc(2443,ofib_L) + 0.831850255163139*alloc(2481,ofib_L)
     
      + 0.831850255163139*alloc(2482,ofib_L) + 0.831850255163139*alloc(2483,ofib_L) + 0.831850255163139*alloc(2520,ofib_L) + 0.831850255163139*alloc(2521,ofib_L) + 0.831850255163139*alloc(2522,ofib_L) + 0.831850255163139*alloc(2523,ofib_L)
     
      + 0.831850255163139*alloc(2559,ofib_L) + 0.831850255163139*alloc(2560,ofib_L) + 0.831850255163139*alloc(2561,ofib_L) + 0.831850255163139*alloc(2562,ofib_L) + 0.831850255163139*alloc(2563,ofib_L) + 0.831850255163139*alloc(2598,ofib_L)
     
      + 0.831850255163139*alloc(2599,ofib_L) + 0.831850255163139*alloc(2600,ofib_L) + 0.831850255163139*alloc(2601,ofib_L) + 0.831850255163139*alloc(2637,ofib_L) + 0.831850255163139*alloc(2638,ofib_L) + 0.831850255163139*alloc(2639,ofib_L)
     
      + 0.831850255163139*alloc(2640,ofib_L) + 0.831850255163139*alloc(2676,ofib_L) + 0.831850255163139*alloc(2677,ofib_L) + 0.831850255163139*alloc(2678,ofib_L) + 0.831850255163139*alloc(2679,ofib_L) + 0.831850255163139*alloc(2715,ofib_L)
     
      + 0.831850255163139*alloc(2716,ofib_L) + 0.831850255163139*alloc(2717,ofib_L) + 0.831850255163139*alloc(2754,ofib_L) + 0.831850255163139*alloc(2755,ofib_L) + 0.831850255163139*alloc(2756,ofib_L) - adm_slack(MI02_ART2_ofib,ofib,plus)
     
      + adm_slack(MI02_ART2_ofib,ofib,minus) =E= 271.183183183183 ; (LHS = 0, INFES = 271.183183183183 ****)
     
adm_stat_slack(MI02_ART2_ooil,ooil)..  1.62381155898828*alloc(1454,ooil_L) + 1.62381155898828*alloc(1460,ooil_L) + 1.62381155898828*alloc(1461,ooil_L) + 1.62381155898828*alloc(1490,ooil_L) + 1.62381155898828*alloc(1492,ooil_L)
     
      + 1.62381155898828*alloc(1493,ooil_L) + 1.62381155898828*alloc(1500,ooil_L) + 1.62381155898828*alloc(1527,ooil_L) + 1.62381155898828*alloc(1530,ooil_L) + 1.62381155898828*alloc(1531,ooil_L) + 1.62381155898828*alloc(1532,ooil_L)
     
      + 1.62381155898828*alloc(1539,ooil_L) + 1.62381155898828*alloc(1565,ooil_L) + 1.62381155898828*alloc(1569,ooil_L) + 1.62381155898828*alloc(1570,ooil_L) + 1.62381155898828*alloc(1571,ooil_L) + 1.62381155898828*alloc(1572,ooil_L)
     
      + 1.62381155898828*alloc(1578,ooil_L) + 1.62381155898828*alloc(1579,ooil_L) + 1.62381155898828*alloc(1603,ooil_L) + 1.62381155898828*alloc(1604,ooil_L) + 1.62381155898828*alloc(1608,ooil_L) + 1.62381155898828*alloc(1609,ooil_L)
     
      + 1.62381155898828*alloc(1610,ooil_L) + 1.62381155898828*alloc(1611,ooil_L) + 1.62381155898828*alloc(1612,ooil_L) + 1.62381155898828*alloc(1618,ooil_L) + 1.62381155898828*alloc(1647,ooil_L) + 1.62381155898828*alloc(1648,ooil_L)
     
      + 1.62381155898828*alloc(1649,ooil_L) + 1.62381155898828*alloc(1650,ooil_L) + 1.62381155898828*alloc(1651,ooil_L) + 1.62381155898828*alloc(1652,ooil_L) + 1.62381155898828*alloc(1653,ooil_L) + 1.62381155898828*alloc(1654,ooil_L)
     
      + 1.62381155898828*alloc(1657,ooil_L) + 1.62381155898828*alloc(1686,ooil_L) + 1.62381155898828*alloc(1687,ooil_L) + 1.62381155898828*alloc(1688,ooil_L) + 1.62381155898828*alloc(1689,ooil_L) + 1.62381155898828*alloc(1690,ooil_L)
     
      + 1.62381155898828*alloc(1691,ooil_L) + 1.62381155898828*alloc(1692,ooil_L) + 1.62381155898828*alloc(1693,ooil_L) + 1.62381155898828*alloc(1697,ooil_L) + 1.62381155898828*alloc(1725,ooil_L) + 1.62381155898828*alloc(1726,ooil_L)
     
      + 1.62381155898828*alloc(1727,ooil_L) + 1.62381155898828*alloc(1728,ooil_L) + 1.62381155898828*alloc(1729,ooil_L) + 1.62381155898828*alloc(1730,ooil_L) + 1.62381155898828*alloc(1731,ooil_L) + 1.62381155898828*alloc(1732,ooil_L)
     
      + 1.62381155898828*alloc(1735,ooil_L) + 1.62381155898828*alloc(1736,ooil_L) + 1.62381155898828*alloc(1764,ooil_L) + 1.62381155898828*alloc(1765,ooil_L) + 1.62381155898828*alloc(1766,ooil_L) + 1.62381155898828*alloc(1767,ooil_L)
     
      + 1.62381155898828*alloc(1768,ooil_L) + 1.62381155898828*alloc(1769,ooil_L) + 1.62381155898828*alloc(1770,ooil_L) + 1.62381155898828*alloc(1771,ooil_L) + 1.62381155898828*alloc(1774,ooil_L) + 1.62381155898828*alloc(1775,ooil_L)
     
      + 1.62381155898828*alloc(1805,ooil_L) + 1.62381155898828*alloc(1806,ooil_L) + 1.62381155898828*alloc(1807,ooil_L) + 1.62381155898828*alloc(1808,ooil_L) + 1.62381155898828*alloc(1809,ooil_L) + 1.62381155898828*alloc(1810,ooil_L)
     
      + 1.62381155898828*alloc(1811,ooil_L) + 1.62381155898828*alloc(1839,ooil_L) + 1.62381155898828*alloc(1842,ooil_L) + 1.62381155898828*alloc(1845,ooil_L) + 1.62381155898828*alloc(1846,ooil_L) + 1.62381155898828*alloc(1847,ooil_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 311
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 1.62381155898828*alloc(1848,ooil_L) + 1.62381155898828*alloc(1849,ooil_L) + 1.62381155898828*alloc(1850,ooil_L) + 1.62381155898828*alloc(1851,ooil_L) + 1.62381155898828*alloc(1853,ooil_L) + 1.62381155898828*alloc(1876,ooil_L)
     
      + 1.62381155898828*alloc(1879,ooil_L) + 1.62381155898828*alloc(1880,ooil_L) + 1.62381155898828*alloc(1881,ooil_L) + 1.62381155898828*alloc(1882,ooil_L) + 1.62381155898828*alloc(1883,ooil_L) + 1.62381155898828*alloc(1884,ooil_L)
     
      + 1.62381155898828*alloc(1885,ooil_L) + 1.62381155898828*alloc(1886,ooil_L) + 1.62381155898828*alloc(1887,ooil_L) + 1.62381155898828*alloc(1888,ooil_L) + 1.62381155898828*alloc(1889,ooil_L) + 1.62381155898828*alloc(1890,ooil_L)
     
      + 1.62381155898828*alloc(1891,ooil_L) + 1.62381155898828*alloc(1915,ooil_L) + 1.62381155898828*alloc(1918,ooil_L) + 1.62381155898828*alloc(1919,ooil_L) + 1.62381155898828*alloc(1920,ooil_L) + 1.62381155898828*alloc(1921,ooil_L)
     
      + 1.62381155898828*alloc(1922,ooil_L) + 1.62381155898828*alloc(1923,ooil_L) + 1.62381155898828*alloc(1924,ooil_L) + 1.62381155898828*alloc(1925,ooil_L) + 1.62381155898828*alloc(1926,ooil_L) + 1.62381155898828*alloc(1927,ooil_L)
     
      + 1.62381155898828*alloc(1928,ooil_L) + 1.62381155898828*alloc(1929,ooil_L) + 1.62381155898828*alloc(1930,ooil_L) + 1.62381155898828*alloc(1931,ooil_L) + 1.62381155898828*alloc(1953,ooil_L) + 1.62381155898828*alloc(1954,ooil_L)
     
      + 1.62381155898828*alloc(1955,ooil_L) + 1.62381155898828*alloc(1956,ooil_L) + 1.62381155898828*alloc(1957,ooil_L) + 1.62381155898828*alloc(1958,ooil_L) + 1.62381155898828*alloc(1959,ooil_L) + 1.62381155898828*alloc(1960,ooil_L)
     
      + 1.62381155898828*alloc(1961,ooil_L) + 1.62381155898828*alloc(1962,ooil_L) + 1.62381155898828*alloc(1963,ooil_L) + 1.62381155898828*alloc(1964,ooil_L) + 1.62381155898828*alloc(1965,ooil_L) + 1.62381155898828*alloc(1966,ooil_L)
     
      + 1.62381155898828*alloc(1967,ooil_L) + 1.62381155898828*alloc(1968,ooil_L) + 1.62381155898828*alloc(1969,ooil_L) + 1.62381155898828*alloc(1970,ooil_L) + 1.62381155898828*alloc(1971,ooil_L) + 1.62381155898828*alloc(1990,ooil_L)
     
      + 1.62381155898828*alloc(1992,ooil_L) + 1.62381155898828*alloc(1993,ooil_L) + 1.62381155898828*alloc(1994,ooil_L) + 1.62381155898828*alloc(1996,ooil_L) + 1.62381155898828*alloc(1997,ooil_L) + 1.62381155898828*alloc(1998,ooil_L)
     
      + 1.62381155898828*alloc(1999,ooil_L) + 1.62381155898828*alloc(2000,ooil_L) + 1.62381155898828*alloc(2001,ooil_L) + 1.62381155898828*alloc(2002,ooil_L) + 1.62381155898828*alloc(2003,ooil_L) + 1.62381155898828*alloc(2004,ooil_L)
     
      + 1.62381155898828*alloc(2005,ooil_L) + 1.62381155898828*alloc(2006,ooil_L) + 1.62381155898828*alloc(2007,ooil_L) + 1.62381155898828*alloc(2008,ooil_L) + 1.62381155898828*alloc(2009,ooil_L) + 1.62381155898828*alloc(2010,ooil_L)
     
      + 1.62381155898828*alloc(2011,ooil_L) + 1.62381155898828*alloc(2032,ooil_L) + 1.62381155898828*alloc(2033,ooil_L) + 1.62381155898828*alloc(2034,ooil_L) + 1.62381155898828*alloc(2035,ooil_L) + 1.62381155898828*alloc(2036,ooil_L)
     
      + 1.62381155898828*alloc(2037,ooil_L) + 1.62381155898828*alloc(2038,ooil_L) + 1.62381155898828*alloc(2039,ooil_L) + 1.62381155898828*alloc(2040,ooil_L) + 1.62381155898828*alloc(2041,ooil_L) + 1.62381155898828*alloc(2042,ooil_L)
     
      + 1.62381155898828*alloc(2043,ooil_L) + 1.62381155898828*alloc(2044,ooil_L) + 1.62381155898828*alloc(2045,ooil_L) + 1.62381155898828*alloc(2046,ooil_L) + 1.62381155898828*alloc(2047,ooil_L) + 1.62381155898828*alloc(2049,ooil_L)
     
      + 1.62381155898828*alloc(2050,ooil_L) + 1.62381155898828*alloc(2051,ooil_L) + 1.62381155898828*alloc(2072,ooil_L) + 1.62381155898828*alloc(2073,ooil_L) + 1.62381155898828*alloc(2074,ooil_L) + 1.62381155898828*alloc(2075,ooil_L)
     
      + 1.62381155898828*alloc(2076,ooil_L) + 1.62381155898828*alloc(2077,ooil_L) + 1.62381155898828*alloc(2078,ooil_L) + 1.62381155898828*alloc(2079,ooil_L) + 1.62381155898828*alloc(2080,ooil_L) + 1.62381155898828*alloc(2081,ooil_L)
     
      + 1.62381155898828*alloc(2082,ooil_L) + 1.62381155898828*alloc(2083,ooil_L) + 1.62381155898828*alloc(2084,ooil_L) + 1.62381155898828*alloc(2085,ooil_L) + 1.62381155898828*alloc(2086,ooil_L) + 1.62381155898828*alloc(2088,ooil_L)
     
      + 1.62381155898828*alloc(2089,ooil_L) + 1.62381155898828*alloc(2090,ooil_L) + 1.62381155898828*alloc(2110,ooil_L) + 1.62381155898828*alloc(2111,ooil_L) + 1.62381155898828*alloc(2112,ooil_L) + 1.62381155898828*alloc(2114,ooil_L)
     
      + 1.62381155898828*alloc(2115,ooil_L) + 1.62381155898828*alloc(2116,ooil_L) + 1.62381155898828*alloc(2117,ooil_L) + 1.62381155898828*alloc(2118,ooil_L) + 1.62381155898828*alloc(2119,ooil_L) + 1.62381155898828*alloc(2120,ooil_L)
     
      + 1.62381155898828*alloc(2121,ooil_L) + 1.62381155898828*alloc(2122,ooil_L) + 1.62381155898828*alloc(2123,ooil_L) + 1.62381155898828*alloc(2124,ooil_L) + 1.62381155898828*alloc(2127,ooil_L) + 1.62381155898828*alloc(2150,ooil_L)
     
      + 1.62381155898828*alloc(2151,ooil_L) + 1.62381155898828*alloc(2152,ooil_L) + 1.62381155898828*alloc(2153,ooil_L) + 1.62381155898828*alloc(2154,ooil_L) + 1.62381155898828*alloc(2155,ooil_L) + 1.62381155898828*alloc(2156,ooil_L)
     
      + 1.62381155898828*alloc(2157,ooil_L) + 1.62381155898828*alloc(2158,ooil_L) + 1.62381155898828*alloc(2159,ooil_L) + 1.62381155898828*alloc(2160,ooil_L) + 1.62381155898828*alloc(2161,ooil_L) + 1.62381155898828*alloc(2162,ooil_L)
     
      + 1.62381155898828*alloc(2163,ooil_L) + 1.62381155898828*alloc(2164,ooil_L) + 1.62381155898828*alloc(2165,ooil_L) + 1.62381155898828*alloc(2166,ooil_L) + 1.62381155898828*alloc(2167,ooil_L) + 1.62381155898828*alloc(2189,ooil_L)
     
      + 1.62381155898828*alloc(2193,ooil_L) + 1.62381155898828*alloc(2194,ooil_L) + 1.62381155898828*alloc(2195,ooil_L) + 1.62381155898828*alloc(2196,ooil_L) + 1.62381155898828*alloc(2197,ooil_L) + 1.62381155898828*alloc(2198,ooil_L)
     
      + 1.62381155898828*alloc(2200,ooil_L) + 1.62381155898828*alloc(2201,ooil_L) + 1.62381155898828*alloc(2202,ooil_L) + 1.62381155898828*alloc(2203,ooil_L) + 1.62381155898828*alloc(2204,ooil_L) + 1.62381155898828*alloc(2206,ooil_L)
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 312
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


     adm_stat_slack  =E=  adm statistics constraint with slack     
     
      + 1.62381155898828*alloc(2232,ooil_L) + 1.62381155898828*alloc(2233,ooil_L) + 1.62381155898828*alloc(2234,ooil_L) + 1.62381155898828*alloc(2235,ooil_L) + 1.62381155898828*alloc(2236,ooil_L) + 1.62381155898828*alloc(2237,ooil_L)
     
      + 1.62381155898828*alloc(2238,ooil_L) + 1.62381155898828*alloc(2239,ooil_L) + 1.62381155898828*alloc(2240,ooil_L) + 1.62381155898828*alloc(2241,ooil_L) + 1.62381155898828*alloc(2242,ooil_L) + 1.62381155898828*alloc(2243,ooil_L)
     
      + 1.62381155898828*alloc(2244,ooil_L) + 1.62381155898828*alloc(2271,ooil_L) + 1.62381155898828*alloc(2274,ooil_L) + 1.62381155898828*alloc(2275,ooil_L) + 1.62381155898828*alloc(2276,ooil_L) + 1.62381155898828*alloc(2277,ooil_L)
     
      + 1.62381155898828*alloc(2278,ooil_L) + 1.62381155898828*alloc(2281,ooil_L) + 1.62381155898828*alloc(2282,ooil_L) + 1.62381155898828*alloc(2283,ooil_L) + 1.62381155898828*alloc(2284,ooil_L) + 1.62381155898828*alloc(2313,ooil_L)
     
      + 1.62381155898828*alloc(2314,ooil_L) + 1.62381155898828*alloc(2315,ooil_L) + 1.62381155898828*alloc(2316,ooil_L) + 1.62381155898828*alloc(2317,ooil_L) + 1.62381155898828*alloc(2318,ooil_L) + 1.62381155898828*alloc(2319,ooil_L)
     
      + 1.62381155898828*alloc(2320,ooil_L) + 1.62381155898828*alloc(2321,ooil_L) + 1.62381155898828*alloc(2322,ooil_L) + 1.62381155898828*alloc(2323,ooil_L) + 1.62381155898828*alloc(2324,ooil_L) + 1.62381155898828*alloc(2325,ooil_L)
     
      + 1.62381155898828*alloc(2352,ooil_L) + 1.62381155898828*alloc(2353,ooil_L) + 1.62381155898828*alloc(2354,ooil_L) + 1.62381155898828*alloc(2355,ooil_L) + 1.62381155898828*alloc(2356,ooil_L) + 1.62381155898828*alloc(2357,ooil_L)
     
      + 1.62381155898828*alloc(2358,ooil_L) + 1.62381155898828*alloc(2359,ooil_L) + 1.62381155898828*alloc(2361,ooil_L) + 1.62381155898828*alloc(2362,ooil_L) + 1.62381155898828*alloc(2363,ooil_L) + 1.62381155898828*alloc(2364,ooil_L)
     
      + 1.62381155898828*alloc(2365,ooil_L) + 1.62381155898828*alloc(2393,ooil_L) + 1.62381155898828*alloc(2395,ooil_L) + 1.62381155898828*alloc(2396,ooil_L) + 1.62381155898828*alloc(2401,ooil_L) + 1.62381155898828*alloc(2402,ooil_L)
     
      + 1.62381155898828*alloc(2403,ooil_L) + 1.62381155898828*alloc(2404,ooil_L) + 1.62381155898828*alloc(2441,ooil_L) + 1.62381155898828*alloc(2442,ooil_L) + 1.62381155898828*alloc(2443,ooil_L) + 1.62381155898828*alloc(2481,ooil_L)
     
      + 1.62381155898828*alloc(2482,ooil_L) + 1.62381155898828*alloc(2483,ooil_L) + 1.62381155898828*alloc(2520,ooil_L) + 1.62381155898828*alloc(2521,ooil_L) + 1.62381155898828*alloc(2522,ooil_L) + 1.62381155898828*alloc(2523,ooil_L)
     
      + 1.62381155898828*alloc(2559,ooil_L) + 1.62381155898828*alloc(2560,ooil_L) + 1.62381155898828*alloc(2561,ooil_L) + 1.62381155898828*alloc(2562,ooil_L) + 1.62381155898828*alloc(2563,ooil_L) + 1.62381155898828*alloc(2598,ooil_L)
     
      + 1.62381155898828*alloc(2599,ooil_L) + 1.62381155898828*alloc(2600,ooil_L) + 1.62381155898828*alloc(2601,ooil_L) + 1.62381155898828*alloc(2637,ooil_L) + 1.62381155898828*alloc(2638,ooil_L) + 1.62381155898828*alloc(2639,ooil_L)
     
      + 1.62381155898828*alloc(2640,ooil_L) + 1.62381155898828*alloc(2676,ooil_L) + 1.62381155898828*alloc(2677,ooil_L) + 1.62381155898828*alloc(2678,ooil_L) + 1.62381155898828*alloc(2679,ooil_L) + 1.62381155898828*alloc(2715,ooil_L)
     
      + 1.62381155898828*alloc(2716,ooil_L) + 1.62381155898828*alloc(2717,ooil_L) + 1.62381155898828*alloc(2754,ooil_L) + 1.62381155898828*alloc(2755,ooil_L) + 1.62381155898828*alloc(2756,ooil_L) - adm_slack(MI02_ART2_ooil,ooil,plus)
     
      + adm_slack(MI02_ART2_ooil,ooil,minus) =E= 529.362568230179 ; (LHS = 0, INFES = 529.362568230179 ****)
     
REMAINING 116 ENTRIES SKIPPED


---- ir_cover_slack  =L=  irrigated crops constraint with slack

ir_cover_slack(1454)..  11.8772108035596*alloc(1454,rice_I) + 35.7873210633947*alloc(1454,sugc_I) + 0.527489880920669*alloc(1454,whea_I) - ir_slack(1454) =L= 0 ; (LHS = 0)
     
ir_cover_slack(1460)..  11.8772108035596*alloc(1460,rice_I) + 35.7873210633947*alloc(1460,sugc_I) + 0.527489880920669*alloc(1460,whea_I) - ir_slack(1460) =L= 0 ; (LHS = 0)
     
ir_cover_slack(1461)..  11.8772108035596*alloc(1461,rice_I) + 35.7873210633947*alloc(1461,sugc_I) + 0.527489880920669*alloc(1461,whea_I) - ir_slack(1461) =L= 8347.9892578125 ; (LHS = 0)
     
ir_cover_slack(1490)..  11.8772108035596*alloc(1490,rice_I) + 35.7873210633947*alloc(1490,sugc_I) + 0.527489880920669*alloc(1490,whea_I) - ir_slack(1490) =L= 0 ; (LHS = 0)
     
ir_cover_slack(1492)..  11.8772108035596*alloc(1492,rice_I) + 35.7873210633947*alloc(1492,sugc_I) + 0.527489880920669*alloc(1492,whea_I) - ir_slack(1492) =L= 0 ; (LHS = 0)
     
REMAINING 321 ENTRIES SKIPPED

GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 313
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE max_score Using LP From line 225


---- s_alloc_slack  =E=  allocate subsistence share proportional to rural population

s_alloc_slack(1454,bean_S)..  alloc(1454,bean_S) - 15.066068146103*s_slack(1454,bean_S,plus) + 15.066068146103*s_slack(1454,bean_S,minus) =E= 1.4541918318771 ; (LHS = 0, INFES = 1.4541918318771 ****)
     
s_alloc_slack(1454,cass_S)..  alloc(1454,cass_S) - 31.043859562508*s_slack(1454,cass_S,plus) + 31.043859562508*s_slack(1454,cass_S,minus) =E= 1.4541918318771 ; (LHS = 0, INFES = 1.4541918318771 ****)
     
s_alloc_slack(1454,chic_S)..  alloc(1454,chic_S) - 83.223145033299*s_slack(1454,chic_S,plus) + 83.223145033299*s_slack(1454,chic_S,minus) =E= 1.61154001504669 ; (LHS = 0, INFES = 1.61154001504669 ****)
     
s_alloc_slack(1454,cowp_S)..  alloc(1454,cowp_S) - 132.467979058358*s_slack(1454,cowp_S,plus) + 132.467979058358*s_slack(1454,cowp_S,minus) =E= 1.4541918318771 ; (LHS = 0, INFES = 1.4541918318771 ****)
     
s_alloc_slack(1454,grou_S)..  alloc(1454,grou_S) - 8.66751147951882*s_slack(1454,grou_S,plus) + 8.66751147951882*s_slack(1454,grou_S,minus) =E= 1.4572592878702 ; (LHS = 0, INFES = 1.4572592878702 ****)
     
REMAINING 5853 ENTRIES SKIPPED

GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 314
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE max_score Using LP From line 225


---- alloc  allocation of crop j to plot i

alloc(1454,rice_I)
                (.LO, .L, .UP, .M = 0, 0, 170.491922670304, 0)
        0.0031  sum_one(rice_I)
       11.8772  cl_cover_slack(1454)
       11.8772  adm_stat_slack(MI02003,rice)
       11.8772  ir_cover_slack(1454)

alloc(1454,sugc_I)
                (.LO, .L, .UP, .M = 0, 0, 56.5834056780134, 0)
        0.0031  sum_one(sugc_I)
       35.7873  cl_cover_slack(1454)
       35.7873  ir_cover_slack(1454)

alloc(1454,whea_I)
                (.LO, .L, .UP, .M = 0, 0, 326, 0)
        0.0031  sum_one(whea_I)
        0.5275  cl_cover_slack(1454)
        0.5275  adm_stat_slack(MI02_ART2_whea,whea)
        0.5275  ir_cover_slack(1454)

alloc(1454,bean_H)
                (.LO, .L, .UP, .M = 0, 0, 17.1400029557166, 0)
       -0.0278  obj_max_score
        0.0031  sum_one(bean_H)
      118.1428  cl_cover_slack(1454)
      118.1428  adm_stat_slack(MI02003,bean)

alloc(1454,bean_L)
                (.LO, .L, .UP, .M = 0, 0, 39.9933402300053, 0)
       -0.0691  obj_max_score
        0.0031  sum_one(bean_L)
       50.6326  cl_cover_slack(1454)
       50.6326  adm_stat_slack(MI02003,bean)

REMAINING 19637 ENTRIES SKIPPED

---- adm_slack  slack variable for adm area

adm_slack(MI02_ART2_coff,coff,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       71.7142  obj_max_score
       -1       adm_stat_slack(MI02_ART2_coff,coff)

adm_slack(MI02_ART2_coff,coff,minus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       71.7142  obj_max_score
        1       adm_stat_slack(MI02_ART2_coff,coff)

adm_slack(MI02_ART2_cott,cott,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        8.7982  obj_max_score
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 315
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE max_score Using LP From line 225


     adm_slack  slack variable for adm area

       -1       adm_stat_slack(MI02_ART2_cott,cott)

adm_slack(MI02_ART2_cott,cott,minus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        8.7982  obj_max_score
        1       adm_stat_slack(MI02_ART2_cott,cott)

adm_slack(MI02_ART2_mill,mill,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       19.1028  obj_max_score
       -1       adm_stat_slack(MI02_ART2_mill,mill)

REMAINING 237 ENTRIES SKIPPED

---- sum_score  weighted sum of score

sum_score
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_max_score


---- cl_slack  slack for land cover

cl_slack(1454)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       cl_cover_slack(1454)

cl_slack(1460)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       cl_cover_slack(1460)

cl_slack(1461)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       cl_cover_slack(1461)

cl_slack(1490)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       cl_cover_slack(1490)

cl_slack(1492)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       cl_cover_slack(1492)

REMAINING 321 ENTRIES SKIPPED
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 316
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE max_score Using LP From line 225


---- ir_slack  slack for ir_area

ir_slack(1454)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       ir_cover_slack(1454)

ir_slack(1460)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       ir_cover_slack(1460)

ir_slack(1461)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       ir_cover_slack(1461)

ir_slack(1490)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       ir_cover_slack(1490)

ir_slack(1492)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
  1000000       obj_max_score
       -1       ir_cover_slack(1492)

REMAINING 321 ENTRIES SKIPPED

---- s_slack  slack for subsistence allocation

s_slack(1454,rice_I,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       obj_max_score

s_slack(1454,rice_I,minus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       obj_max_score

s_slack(1454,sugc_I,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       obj_max_score

s_slack(1454,sugc_I,minus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       obj_max_score

s_slack(1454,whea_I,plus)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       obj_max_score

REMAINING 39767 ENTRIES SKIPPED
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 317
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE max_score Using LP From line 225


MODEL STATISTICS

BLOCKS OF EQUATIONS           6     SINGLE EQUATIONS        6,693
BLOCKS OF VARIABLES           6     SINGLE VARIABLES       60,309
NON ZERO ELEMENTS       130,009


GENERATION TIME      =        0.265 SECONDS     18 MB  24.6.1 r55820 WEX-WEI


EXECUTION TIME       =        0.280 SECONDS     18 MB  24.6.1 r55820 WEX-WEI
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 318
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE max_score Using LP From line 225


               S O L V E      S U M M A R Y

     MODEL   max_score           OBJECTIVE  sum_score
     TYPE    LP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX               FROM LINE  225

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             2444.8616

 RESOURCE USAGE, LIMIT          0.624    900000.000
 ITERATION COUNT, LIMIT      8009    2000000000

IBM ILOG CPLEX   24.6.1 r55820 Released Jan 18, 2016 WEI x86 64bit/MS Windows 
--- GAMS/Cplex Link licensed for continuous and discrete problems.
Cplex 12.6.3.0

Space for names approximately 2.06 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.55sec (det. 419.42 ticks)
Optimal solution found.
Objective :        2444.861636



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.6.1  r55820 Released Jan 18, 2016 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/03/20 10:55:31 Page 319
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    230 PARAMETER sum_score_l          =     2444.862  sum of weighted score

----    273 PARAMETER sum_all_slack_l      =     2059.832  sum of all_slack

----    274 PARAMETER sum_s_slack_l        =     2059.832  sum of s_slack

----    275 PARAMETER sum_ir_slack_l       =        0.000  sum of ir_slack

----    276 PARAMETER sum_cl_slack_l       =        0.000  sum of cl_slack

----    277 PARAMETER sum_adm_slack_l      =        0.000  sum of adm_slack


EXECUTION TIME       =        0.032 SECONDS     10 MB  24.6.1 r55820 WEX-WEI


USER: Small MUD - 5 User License                     S180619:0523AO-GEN
      IIASA, Information and Communication Technologies Dep.      DC216
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      D:\R\library\3.6.3\mapspam2globiom\gams\max_score.gms
Output     D:\Github\mapspam2globiom\max_score.lst
